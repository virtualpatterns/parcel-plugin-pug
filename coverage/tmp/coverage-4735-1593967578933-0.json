{"result":[{"scriptId":"6","url":"internal/per_context/primordials.js","functions":[{"functionName":"uncurryThis","ranges":[{"startOffset":1000,"endOffset":1096,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1093,"count":18101}],"isBlockCoverage":true}]},{"scriptId":"9","url":"internal/bootstrap/loaders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10110,"count":1}],"isBlockCoverage":true},{"functionName":"binding","ranges":[{"startOffset":3556,"endOffset":3953,"count":0}],"isBlockCoverage":false},{"functionName":"_linkedBinding","ranges":[{"startOffset":3983,"endOffset":4191,"count":0}],"isBlockCoverage":false},{"functionName":"internalBinding","ranges":[{"startOffset":4371,"endOffset":4618,"count":1345},{"startOffset":4473,"endOffset":4598,"count":47}],"isBlockCoverage":true},{"functionName":"getOwn","ranges":[{"startOffset":4763,"endOffset":4917,"count":9142},{"startOffset":4899,"endOffset":4914,"count":0}],"isBlockCoverage":true},{"functionName":"<static_fields_initializer>","ranges":[{"startOffset":5284,"endOffset":5355,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5319,"endOffset":5353,"count":221}],"isBlockCoverage":true},{"functionName":"NativeModule","ranges":[{"startOffset":5360,"endOffset":6096,"count":221}],"isBlockCoverage":true},{"functionName":"exposeInternals","ranges":[{"startOffset":6246,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":6483,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":6547,"endOffset":6663,"count":5034},{"startOffset":6631,"endOffset":6658,"count":270}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":6735,"endOffset":7413,"count":270},{"startOffset":6798,"endOffset":6990,"count":0},{"startOffset":7054,"endOffset":7335,"count":22},{"startOffset":7297,"endOffset":7301,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":7417,"endOffset":7968,"count":270},{"startOffset":7455,"endOffset":7474,"count":248},{"startOffset":7474,"endOffset":7967,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7695,"endOffset":7808,"count":22}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":8264,"endOffset":8608,"count":292},{"startOffset":8383,"endOffset":8598,"count":9142},{"startOffset":8460,"endOffset":8469,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":8612,"endOffset":9166,"count":897},{"startOffset":8661,"endOffset":8676,"count":135},{"startOffset":8678,"endOffset":8712,"count":768},{"startOffset":8712,"endOffset":8835,"count":129},{"startOffset":8835,"endOffset":8870,"count":0},{"startOffset":8871,"endOffset":8892,"count":129},{"startOffset":9046,"endOffset":9165,"count":129}],"isBlockCoverage":true},{"functionName":"nativeModuleRequire","ranges":[{"startOffset":9364,"endOffset":9735,"count":633},{"startOffset":9422,"endOffset":9453,"count":6},{"startOffset":9453,"endOffset":9637,"count":627},{"startOffset":9637,"endOffset":9692,"count":0},{"startOffset":9692,"endOffset":9734,"count":627}],"isBlockCoverage":true},{"functionName":"requireWithFallbackInDeps","ranges":[{"startOffset":9851,"endOffset":10023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"10","url":"internal/bootstrap/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12521,"count":1}],"isBlockCoverage":true},{"functionName":"process.openStdin","ranges":[{"startOffset":3322,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6083,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6347,"endOffset":6519,"count":0}],"isBlockCoverage":false},{"functionName":"setupPrepareStackTrace","ranges":[{"startOffset":9306,"endOffset":9892,"count":1}],"isBlockCoverage":true},{"functionName":"setupProcessObject","ranges":[{"startOffset":9894,"endOffset":10481,"count":1}],"isBlockCoverage":true},{"functionName":"setupGlobalProxy","ranges":[{"startOffset":10483,"endOffset":10660,"count":1}],"isBlockCoverage":true},{"functionName":"setupBuffer","ranges":[{"startOffset":10662,"endOffset":11098,"count":1}],"isBlockCoverage":true},{"functionName":"createGlobalConsole","ranges":[{"startOffset":11100,"endOffset":11781,"count":1}],"isBlockCoverage":true},{"functionName":"exposeNamespace","ranges":[{"startOffset":11833,"endOffset":12031,"count":1}],"isBlockCoverage":true},{"functionName":"exposeInterface","ranges":[{"startOffset":12083,"endOffset":12281,"count":4}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":12341,"endOffset":12520,"count":7}],"isBlockCoverage":true}]},{"scriptId":"11","url":"internal/errors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52962,"count":1}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":1407,"endOffset":2119,"count":69},{"startOffset":1584,"endOffset":1700,"count":0},{"startOffset":1849,"endOffset":2118,"count":0}],"isBlockCoverage":true},{"functionName":"maybeOverridePrepareStackTrace","ranges":[{"startOffset":2161,"endOffset":2867,"count":69},{"startOffset":2495,"endOffset":2866,"count":0}],"isBlockCoverage":true},{"functionName":"lazyInternalUtil","ranges":[{"startOffset":2957,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInternalUtilInspect","ranges":[{"startOffset":3117,"endOffset":3279,"count":2},{"startOffset":3182,"endOffset":3247,"count":1}],"isBlockCoverage":true},{"functionName":"lazyBuffer","ranges":[{"startOffset":3293,"endOffset":3402,"count":0}],"isBlockCoverage":false},{"functionName":"SystemError","ranges":[{"startOffset":3904,"endOffset":6442,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":6446,"endOffset":6521,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"makeSystemErrorWithCode","ranges":[{"startOffset":6718,"endOffset":6863,"count":3}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6809,"endOffset":6856,"count":0}],"isBlockCoverage":false},{"functionName":"makeNodeErrorWithCode","ranges":[{"startOffset":6865,"endOffset":7620,"count":231}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":6953,"endOffset":7534,"count":13},{"startOffset":7043,"endOffset":7252,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":7540,"endOffset":7613,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":7692,"endOffset":8103,"count":27}],"isBlockCoverage":true},{"functionName":"hidden","ranges":[{"startOffset":7732,"endOffset":8100,"count":19814},{"startOffset":7896,"endOffset":7960,"count":14189},{"startOffset":8044,"endOffset":8090,"count":14189}],"isBlockCoverage":true},{"functionName":"addCodeToName","ranges":[{"startOffset":8105,"endOffset":8775,"count":13},{"startOffset":8203,"endOffset":8312,"count":0},{"startOffset":8597,"endOffset":8741,"count":0}],"isBlockCoverage":true},{"functionName":"E","ranges":[{"startOffset":8887,"endOffset":9395,"count":231},{"startOffset":9129,"endOffset":9174,"count":3},{"startOffset":9174,"endOffset":9228,"count":228},{"startOffset":9263,"endOffset":9373,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9290,"endOffset":9367,"count":3}],"isBlockCoverage":true},{"functionName":"getMessage","ranges":[{"startOffset":9397,"endOffset":10201,"count":13},{"startOffset":9498,"endOffset":9534,"count":1},{"startOffset":9569,"endOffset":9825,"count":11},{"startOffset":9825,"endOffset":9878,"count":2},{"startOffset":9878,"endOffset":9883,"count":0},{"startOffset":10105,"endOffset":10116,"count":0},{"startOffset":10116,"endOffset":10200,"count":2}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":10219,"endOffset":10323,"count":10},{"startOffset":10257,"endOffset":10301,"count":1}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":10380,"endOffset":10550,"count":10},{"startOffset":10458,"endOffset":10511,"count":1}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":10843,"endOffset":12093,"count":10},{"startOffset":10920,"endOffset":10938,"count":0},{"startOffset":11132,"endOffset":11201,"count":0},{"startOffset":11741,"endOffset":11863,"count":30},{"startOffset":11789,"endOffset":11807,"count":20},{"startOffset":11809,"endOffset":11832,"count":10},{"startOffset":11832,"endOffset":11863,"count":20},{"startOffset":11935,"endOffset":11961,"count":0}],"isBlockCoverage":true},{"functionName":"uvExceptionWithHostPort","ranges":[{"startOffset":12406,"endOffset":13365,"count":0}],"isBlockCoverage":false},{"functionName":"errnoException","ranges":[{"startOffset":13544,"endOffset":14303,"count":0}],"isBlockCoverage":false},{"functionName":"exceptionWithHostPort","ranges":[{"startOffset":14656,"endOffset":15926,"count":0}],"isBlockCoverage":false},{"functionName":"dnsException","ranges":[{"startOffset":16090,"endOffset":17659,"count":0}],"isBlockCoverage":false},{"functionName":"connResetException","ranges":[{"startOffset":17661,"endOffset":17816,"count":0}],"isBlockCoverage":false},{"functionName":"isStackOverflowError","ranges":[{"startOffset":18106,"endOffset":18484,"count":0}],"isBlockCoverage":false},{"functionName":"addNumericalSeparator","ranges":[{"startOffset":18565,"endOffset":18801,"count":0}],"isBlockCoverage":false},{"functionName":"beforeInspector","ranges":[{"startOffset":19080,"endOffset":19471,"count":0}],"isBlockCoverage":false},{"functionName":"afterInspector","ranges":[{"startOffset":19475,"endOffset":19940,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21707,"endOffset":21871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24840,"endOffset":24955,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25165,"endOffset":25259,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27484,"endOffset":27712,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29445,"endOffset":29663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31205,"endOffset":31505,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31547,"endOffset":31691,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":31734,"endOffset":34939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34980,"endOffset":35236,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":35628,"endOffset":35791,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36453,"endOffset":36957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":36998,"endOffset":37079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37242,"endOffset":37437,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37481,"endOffset":38864,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39242,"endOffset":39406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39459,"endOffset":39790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":39834,"endOffset":40141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":40511,"endOffset":40586,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40630,"endOffset":40918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":41246,"endOffset":41677,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":42327,"endOffset":42850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43115,"endOffset":43216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":43918,"endOffset":44616,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":44666,"endOffset":45066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":45099,"endOffset":45999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":46451,"endOffset":46710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":48060,"endOffset":48229,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":50127,"endOffset":50258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52019,"endOffset":52117,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":52311,"endOffset":52567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"12","url":"internal/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12301,"count":1}],"isBlockCoverage":false},{"functionName":"removeColors","ranges":[{"startOffset":975,"endOffset":1044,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":1046,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"deprecate","ranges":[{"startOffset":1581,"endOffset":2678,"count":45},{"startOffset":1655,"endOffset":1675,"count":0},{"startOffset":1735,"endOffset":1790,"count":0},{"startOffset":2432,"endOffset":2654,"count":35}],"isBlockCoverage":true},{"functionName":"deprecated","ranges":[{"startOffset":1816,"endOffset":2290,"count":0}],"isBlockCoverage":false},{"functionName":"decorateErrorStack","ranges":[{"startOffset":2680,"endOffset":3019,"count":0}],"isBlockCoverage":false},{"functionName":"assertCrypto","ranges":[{"startOffset":3021,"endOffset":3095,"count":4},{"startOffset":3067,"endOffset":3093,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeEncoding","ranges":[{"startOffset":3274,"endOffset":3405,"count":11956},{"startOffset":3344,"endOffset":3362,"count":10079},{"startOffset":3364,"endOffset":3378,"count":1877},{"startOffset":3378,"endOffset":3404,"count":10079}],"isBlockCoverage":true},{"functionName":"slowCases","ranges":[{"startOffset":3407,"endOffset":4987,"count":10079},{"startOffset":3461,"endOffset":3705,"count":0},{"startOffset":3710,"endOffset":3830,"count":0},{"startOffset":3835,"endOffset":4239,"count":0},{"startOffset":4280,"endOffset":4296,"count":0},{"startOffset":4345,"endOffset":4361,"count":0},{"startOffset":4390,"endOffset":4406,"count":0},{"startOffset":4455,"endOffset":4471,"count":0},{"startOffset":4536,"endOffset":4552,"count":0},{"startOffset":4601,"endOffset":4617,"count":0},{"startOffset":4635,"endOffset":4779,"count":0},{"startOffset":4784,"endOffset":4931,"count":0},{"startOffset":4936,"endOffset":4981,"count":0}],"isBlockCoverage":true},{"functionName":"emitExperimentalWarning","ranges":[{"startOffset":4989,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"filterDuplicateStrings","ranges":[{"startOffset":5279,"endOffset":5587,"count":0}],"isBlockCoverage":false},{"functionName":"cachedResult","ranges":[{"startOffset":5589,"endOffset":5732,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5640,"endOffset":5729,"count":0}],"isBlockCoverage":false},{"functionName":"createClassWrapper","ranges":[{"startOffset":5997,"endOffset":6362,"count":0}],"isBlockCoverage":false},{"functionName":"getSignalsToNamesMapping","ranges":[{"startOffset":6391,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"convertToValidSignal","ranges":[{"startOffset":6671,"endOffset":6978,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorOf","ranges":[{"startOffset":6980,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7328,"endOffset":7457,"count":0}],"isBlockCoverage":false},{"functionName":"promisify","ranges":[{"startOffset":7602,"endOffset":9073,"count":4},{"startOffset":7675,"endOffset":7740,"count":0},{"startOffset":7784,"endOffset":8105,"count":0}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":8305,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":9168,"endOffset":9490,"count":0}],"isBlockCoverage":false},{"functionName":"spliceOne","ranges":[{"startOffset":9631,"endOffset":9758,"count":0}],"isBlockCoverage":false},{"functionName":"isInsideNodeModules","ranges":[{"startOffset":9840,"endOffset":11012,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":11014,"endOffset":11172,"count":0}],"isBlockCoverage":false},{"functionName":"sleep","ranges":[{"startOffset":11195,"endOffset":11410,"count":0}],"isBlockCoverage":false}]},{"scriptId":"13","url":"events.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21414,"count":1}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":1823,"endOffset":1892,"count":25}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2203,"endOffset":2259,"count":13}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2263,"endOffset":2497,"count":0}],"isBlockCoverage":false},{"functionName":"checkListener","ranges":[{"startOffset":3050,"endOffset":3200,"count":99},{"startOffset":3123,"endOffset":3198,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3289,"endOffset":3337,"count":20}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3346,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":3647,"endOffset":4377,"count":25},{"startOffset":3698,"endOffset":3758,"count":2},{"startOffset":3760,"endOffset":3831,"count":23},{"startOffset":3902,"endOffset":3927,"count":6},{"startOffset":3929,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"addCatch","ranges":[{"startOffset":4380,"endOffset":4939,"count":10},{"startOffset":4467,"endOffset":4886,"count":0},{"startOffset":4891,"endOffset":4937,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4668,"endOffset":4878,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionOrErr","ranges":[{"startOffset":4941,"endOffset":5599,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":5770,"endOffset":5969,"count":1},{"startOffset":5856,"endOffset":5926,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":5972,"endOffset":6121,"count":7},{"startOffset":6090,"endOffset":6120,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxListeners","ranges":[{"startOffset":6164,"endOffset":6227,"count":0}],"isBlockCoverage":false},{"functionName":"identicalSequenceRange","ranges":[{"startOffset":6355,"endOffset":6931,"count":0}],"isBlockCoverage":false},{"functionName":"enhanceStackTrace","ranges":[{"startOffset":6933,"endOffset":7539,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":7571,"endOffset":9917,"count":59},{"startOffset":7716,"endOffset":7754,"count":0},{"startOffset":7762,"endOffset":7796,"count":0},{"startOffset":7820,"endOffset":7849,"count":0},{"startOffset":7855,"endOffset":7892,"count":0},{"startOffset":7964,"endOffset":8954,"count":0},{"startOffset":9022,"endOffset":9035,"count":19},{"startOffset":9035,"endOffset":9074,"count":40},{"startOffset":9074,"endOffset":9363,"count":26},{"startOffset":9290,"endOffset":9308,"count":10},{"startOffset":9310,"endOffset":9359,"count":10},{"startOffset":9363,"endOffset":9899,"count":14},{"startOffset":9485,"endOffset":9895,"count":28},{"startOffset":9816,"endOffset":9834,"count":0},{"startOffset":9836,"endOffset":9889,"count":0},{"startOffset":9899,"endOffset":9916,"count":40}],"isBlockCoverage":true},{"functionName":"_addListener","ranges":[{"startOffset":9920,"endOffset":11975,"count":64},{"startOffset":10100,"endOffset":10184,"count":0},{"startOffset":10369,"endOffset":10649,"count":11},{"startOffset":10446,"endOffset":10465,"count":1},{"startOffset":10466,"endOffset":10476,"count":10},{"startOffset":10714,"endOffset":10852,"count":57},{"startOffset":10852,"endOffset":11955,"count":7},{"startOffset":11011,"endOffset":11033,"count":0},{"startOffset":11116,"endOffset":11220,"count":0},{"startOffset":11324,"endOffset":11343,"count":0},{"startOffset":11345,"endOffset":11951,"count":0}],"isBlockCoverage":true},{"functionName":"addListener","ranges":[{"startOffset":12014,"endOffset":12106,"count":62}],"isBlockCoverage":true},{"functionName":"prependListener","ranges":[{"startOffset":12219,"endOffset":12322,"count":2}],"isBlockCoverage":true},{"functionName":"onceWrapper","ranges":[{"startOffset":12325,"endOffset":12589,"count":15},{"startOffset":12488,"endOffset":12527,"count":0}],"isBlockCoverage":true},{"functionName":"_onceWrap","ranges":[{"startOffset":12591,"endOffset":12832,"count":15}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":12864,"endOffset":12990,"count":15}],"isBlockCoverage":true},{"functionName":"prependOnceListener","ranges":[{"startOffset":13042,"endOffset":13212,"count":0}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":13334,"endOffset":14726,"count":20},{"startOffset":13512,"endOffset":13524,"count":0},{"startOffset":13597,"endOffset":13609,"count":0},{"startOffset":13639,"endOffset":13668,"count":4},{"startOffset":13670,"endOffset":13930,"count":16},{"startOffset":13721,"endOffset":13755,"count":4},{"startOffset":13755,"endOffset":13922,"count":12},{"startOffset":13851,"endOffset":13912,"count":2},{"startOffset":13899,"endOffset":13910,"count":1},{"startOffset":13930,"endOffset":14700,"count":4},{"startOffset":14049,"endOffset":14237,"count":8},{"startOffset":14086,"endOffset":14118,"count":4},{"startOffset":14120,"endOffset":14227,"count":4},{"startOffset":14275,"endOffset":14287,"count":0},{"startOffset":14340,"endOffset":14501,"count":0},{"startOffset":14628,"endOffset":14692,"count":0}],"isBlockCoverage":true},{"functionName":"removeAllListeners","ranges":[{"startOffset":14846,"endOffset":16172,"count":0}],"isBlockCoverage":false},{"functionName":"_listeners","ranges":[{"startOffset":16175,"endOffset":16589,"count":0}],"isBlockCoverage":false},{"functionName":"listeners","ranges":[{"startOffset":16626,"endOffset":16693,"count":0}],"isBlockCoverage":false},{"functionName":"rawListeners","ranges":[{"startOffset":16734,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter.listenerCount","ranges":[{"startOffset":16837,"endOffset":17005,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":17062,"endOffset":17352,"count":0}],"isBlockCoverage":false},{"functionName":"eventNames","ranges":[{"startOffset":17390,"endOffset":17483,"count":0}],"isBlockCoverage":false},{"functionName":"arrayClone","ranges":[{"startOffset":17486,"endOffset":17613,"count":14},{"startOffset":17579,"endOffset":17596,"count":28}],"isBlockCoverage":true},{"functionName":"unwrapListeners","ranges":[{"startOffset":17615,"endOffset":17784,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":17786,"endOffset":18950,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19028,"endOffset":19049,"count":0}],"isBlockCoverage":false},{"functionName":"createIterResult","ranges":[{"startOffset":19064,"endOffset":19132,"count":0}],"isBlockCoverage":false},{"functionName":"on","ranges":[{"startOffset":19134,"endOffset":21413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"14","url":"internal/util/inspect.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":68381,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2592,"endOffset":2628,"count":60}],"isBlockCoverage":true},{"functionName":"isUndetectableObject","ranges":[{"startOffset":2719,"endOffset":2769,"count":0}],"isBlockCoverage":false},{"functionName":"getUserOptions","ranges":[{"startOffset":5748,"endOffset":6183,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":6478,"endOffset":8395,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8487,"endOffset":8532,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8536,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"defineColorAlias","ranges":[{"startOffset":10480,"endOffset":10722,"count":12}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10575,"endOffset":10615,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10621,"endOffset":10667,"count":0}],"isBlockCoverage":false},{"functionName":"addQuotes","ranges":[{"startOffset":11732,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":11909,"endOffset":11941,"count":0}],"isBlockCoverage":false},{"functionName":"strEscape","ranges":[{"startOffset":12054,"endOffset":13680,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeWithColor","ranges":[{"startOffset":13682,"endOffset":13917,"count":0}],"isBlockCoverage":false},{"functionName":"stylizeNoColor","ranges":[{"startOffset":13919,"endOffset":13965,"count":0}],"isBlockCoverage":false},{"functionName":"getEmptyFormatArray","ranges":[{"startOffset":14044,"endOffset":14091,"count":0}],"isBlockCoverage":false},{"functionName":"getConstructorName","ranges":[{"startOffset":14093,"endOffset":15306,"count":0}],"isBlockCoverage":false},{"functionName":"addPrototypeProperties","ranges":[{"startOffset":15493,"endOffset":17330,"count":0}],"isBlockCoverage":false},{"functionName":"getPrefix","ranges":[{"startOffset":17332,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"getKeys","ranges":[{"startOffset":17736,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"getCtxStyle","ranges":[{"startOffset":18680,"endOffset":18943,"count":0}],"isBlockCoverage":false},{"functionName":"formatProxy","ranges":[{"startOffset":18945,"endOffset":19394,"count":0}],"isBlockCoverage":false},{"functionName":"findTypedConstructor","ranges":[{"startOffset":19396,"endOffset":19919,"count":0}],"isBlockCoverage":false},{"functionName":"formatValue","ranges":[{"startOffset":20101,"endOffset":22507,"count":0}],"isBlockCoverage":false},{"functionName":"formatRaw","ranges":[{"startOffset":22509,"endOffset":32865,"count":0}],"isBlockCoverage":false},{"functionName":"getIteratorBraces","ranges":[{"startOffset":32867,"endOffset":33049,"count":0}],"isBlockCoverage":false},{"functionName":"getBoxedBase","ranges":[{"startOffset":33051,"endOffset":34225,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionBase","ranges":[{"startOffset":34227,"endOffset":34823,"count":0}],"isBlockCoverage":false},{"functionName":"formatError","ranges":[{"startOffset":34825,"endOffset":37946,"count":0}],"isBlockCoverage":false},{"functionName":"groupArrayElements","ranges":[{"startOffset":37948,"endOffset":42199,"count":0}],"isBlockCoverage":false},{"functionName":"handleMaxCallStackSize","ranges":[{"startOffset":42201,"endOffset":42553,"count":0}],"isBlockCoverage":false},{"functionName":"formatNumber","ranges":[{"startOffset":42555,"endOffset":42732,"count":0}],"isBlockCoverage":false},{"functionName":"formatBigInt","ranges":[{"startOffset":42734,"endOffset":42806,"count":0}],"isBlockCoverage":false},{"functionName":"formatPrimitive","ranges":[{"startOffset":42808,"endOffset":43991,"count":0}],"isBlockCoverage":false},{"functionName":"formatNamespaceObject","ranges":[{"startOffset":43993,"endOffset":45141,"count":0}],"isBlockCoverage":false},{"functionName":"formatSpecialArray","ranges":[{"startOffset":45188,"endOffset":46395,"count":0}],"isBlockCoverage":false},{"functionName":"formatArrayBuffer","ranges":[{"startOffset":46397,"endOffset":46997,"count":0}],"isBlockCoverage":false},{"functionName":"formatArray","ranges":[{"startOffset":46999,"endOffset":47593,"count":0}],"isBlockCoverage":false},{"functionName":"formatTypedArray","ranges":[{"startOffset":47595,"endOffset":48611,"count":0}],"isBlockCoverage":false},{"functionName":"formatSet","ranges":[{"startOffset":48613,"endOffset":48845,"count":0}],"isBlockCoverage":false},{"functionName":"formatMap","ranges":[{"startOffset":48847,"endOffset":49145,"count":0}],"isBlockCoverage":false},{"functionName":"formatSetIterInner","ranges":[{"startOffset":49147,"endOffset":49960,"count":0}],"isBlockCoverage":false},{"functionName":"formatMapIterInner","ranges":[{"startOffset":49962,"endOffset":51284,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakCollection","ranges":[{"startOffset":51286,"endOffset":51378,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakSet","ranges":[{"startOffset":51380,"endOffset":51537,"count":0}],"isBlockCoverage":false},{"functionName":"formatWeakMap","ranges":[{"startOffset":51539,"endOffset":51696,"count":0}],"isBlockCoverage":false},{"functionName":"formatIterator","ranges":[{"startOffset":51698,"endOffset":52089,"count":0}],"isBlockCoverage":false},{"functionName":"formatPromise","ranges":[{"startOffset":52091,"endOffset":52556,"count":0}],"isBlockCoverage":false},{"functionName":"formatProperty","ranges":[{"startOffset":52558,"endOffset":54824,"count":0}],"isBlockCoverage":false},{"functionName":"isBelowBreakLength","ranges":[{"startOffset":54826,"endOffset":55768,"count":0}],"isBlockCoverage":false},{"functionName":"reduceToSingleString","ranges":[{"startOffset":55770,"endOffset":58520,"count":0}],"isBlockCoverage":false},{"functionName":"hasBuiltInToString","ranges":[{"startOffset":58522,"endOffset":59541,"count":0}],"isBlockCoverage":false},{"functionName":"firstErrorLine","ranges":[{"startOffset":59566,"endOffset":59605,"count":0}],"isBlockCoverage":false},{"functionName":"tryStringify","ranges":[{"startOffset":59635,"endOffset":60104,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":60106,"endOffset":60190,"count":2}],"isBlockCoverage":true},{"functionName":"formatWithOptions","ranges":[{"startOffset":60192,"endOffset":60470,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithOptionsInternal","ranges":[{"startOffset":60472,"endOffset":64166,"count":2},{"startOffset":60668,"endOffset":60695,"count":0},{"startOffset":60782,"endOffset":63824,"count":82},{"startOffset":60822,"endOffset":63818,"count":2},{"startOffset":61063,"endOffset":61145,"count":0},{"startOffset":61184,"endOffset":61242,"count":0},{"startOffset":61280,"endOffset":61324,"count":0},{"startOffset":61325,"endOffset":61381,"count":0},{"startOffset":61443,"endOffset":61658,"count":0},{"startOffset":61692,"endOffset":61778,"count":0},{"startOffset":61791,"endOffset":62160,"count":0},{"startOffset":62173,"endOffset":62269,"count":0},{"startOffset":62282,"endOffset":62509,"count":0},{"startOffset":62522,"endOffset":62913,"count":0},{"startOffset":62926,"endOffset":63208,"count":0},{"startOffset":63221,"endOffset":63307,"count":0},{"startOffset":63320,"endOffset":63436,"count":0},{"startOffset":63449,"endOffset":63533,"count":0},{"startOffset":63703,"endOffset":63810,"count":0},{"startOffset":63997,"endOffset":64150,"count":0}],"isBlockCoverage":true},{"functionName":"prepareStringForGetStringWidth","ranges":[{"startOffset":64168,"endOffset":64347,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":64776,"endOffset":65306,"count":0}],"isBlockCoverage":false},{"functionName":"getStringWidth","ranges":[{"startOffset":65421,"endOffset":65797,"count":0}],"isBlockCoverage":false},{"functionName":"isFullWidthCodePoint","ranges":[{"startOffset":65965,"endOffset":67573,"count":0}],"isBlockCoverage":false},{"functionName":"isZeroWidthCodePoint","ranges":[{"startOffset":67607,"endOffset":68081,"count":0}],"isBlockCoverage":false},{"functionName":"stripVTControlCharacters","ranges":[{"startOffset":68171,"endOffset":68245,"count":0}],"isBlockCoverage":false}]},{"scriptId":"15","url":"internal/util/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1893,"count":1}],"isBlockCoverage":false},{"functionName":"isTypedArray","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"isUint8Array","ranges":[{"startOffset":496,"endOffset":590,"count":4182}],"isBlockCoverage":true},{"functionName":"isUint8ClampedArray","ranges":[{"startOffset":592,"endOffset":700,"count":0}],"isBlockCoverage":false},{"functionName":"isUint16Array","ranges":[{"startOffset":702,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"isUint32Array","ranges":[{"startOffset":800,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"isInt8Array","ranges":[{"startOffset":898,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"isInt16Array","ranges":[{"startOffset":992,"endOffset":1086,"count":0}],"isBlockCoverage":false},{"functionName":"isInt32Array","ranges":[{"startOffset":1088,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat32Array","ranges":[{"startOffset":1184,"endOffset":1282,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat64Array","ranges":[{"startOffset":1284,"endOffset":1382,"count":0}],"isBlockCoverage":false},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1384,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"isBigUint64Array","ranges":[{"startOffset":1486,"endOffset":1588,"count":10}],"isBlockCoverage":true}]},{"scriptId":"16","url":"internal/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":false},{"functionName":"lazyError","ranges":[{"startOffset":26,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":1642},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true},{"functionName":"fail","ranges":[{"startOffset":309,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"17","url":"buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35605,"count":1}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":3918,"endOffset":4054,"count":570}],"isBlockCoverage":true},{"functionName":"createPool","ranges":[{"startOffset":4056,"endOffset":4258,"count":187}],"isBlockCoverage":true},{"functionName":"alignPool","ranges":[{"startOffset":4274,"endOffset":4396,"count":1185},{"startOffset":4348,"endOffset":4394,"count":1017}],"isBlockCoverage":true},{"functionName":"showFlaggedDeprecation","ranges":[{"startOffset":4700,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"toInteger","ranges":[{"startOffset":5382,"endOffset":5600,"count":0}],"isBlockCoverage":false},{"functionName":"_copy","ranges":[{"startOffset":5602,"endOffset":6867,"count":0}],"isBlockCoverage":false},{"functionName":"_copyActual","ranges":[{"startOffset":6869,"endOffset":7471,"count":298},{"startOffset":7010,"endOffset":7064,"count":0},{"startOffset":7226,"endOffset":7241,"count":0},{"startOffset":7268,"endOffset":7283,"count":0},{"startOffset":7343,"endOffset":7419,"count":0}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":8047,"endOffset":8380,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8473,"endOffset":8501,"count":0}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8758,"endOffset":9722,"count":24},{"startOffset":8844,"endOffset":8887,"count":16},{"startOffset":8887,"endOffset":8938,"count":8},{"startOffset":8940,"endOffset":9577,"count":8},{"startOffset":8981,"endOffset":9037,"count":6},{"startOffset":9037,"endOffset":9091,"count":2},{"startOffset":9117,"endOffset":9145,"count":2},{"startOffset":9146,"endOffset":9217,"count":0},{"startOffset":9219,"endOffset":9280,"count":0},{"startOffset":9280,"endOffset":9341,"count":2},{"startOffset":9341,"endOffset":9573,"count":0},{"startOffset":9577,"endOffset":9721,"count":0}],"isBlockCoverage":true},{"functionName":"of","ranges":[{"startOffset":10093,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10534,"endOffset":10755,"count":1560},{"startOffset":10578,"endOffset":10643,"count":0},{"startOffset":10686,"endOffset":10753,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10858,"endOffset":11103,"count":8},{"startOffset":10942,"endOffset":10955,"count":0},{"startOffset":10956,"endOffset":10967,"count":0},{"startOffset":10969,"endOffset":11070,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11282,"endOffset":11357,"count":1543}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11598,"endOffset":11687,"count":9}],"isBlockCoverage":true},{"functionName":"SlowBuffer","ranges":[{"startOffset":11783,"endOffset":11873,"count":0}],"isBlockCoverage":false},{"functionName":"allocate","ranges":[{"startOffset":11988,"endOffset":12320,"count":1543},{"startOffset":12031,"endOffset":12065,"count":0},{"startOffset":12104,"endOffset":12283,"count":1169},{"startOffset":12152,"endOffset":12165,"count":185},{"startOffset":12283,"endOffset":12319,"count":374}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12322,"endOffset":12868,"count":16},{"startOffset":12448,"endOffset":12497,"count":2},{"startOffset":12497,"endOffset":12543,"count":14},{"startOffset":12543,"endOffset":12556,"count":1},{"startOffset":12556,"endOffset":12689,"count":14},{"startOffset":12689,"endOffset":12815,"count":0},{"startOffset":12815,"endOffset":12867,"count":14}],"isBlockCoverage":true},{"functionName":"fromString","ranges":[{"startOffset":12870,"endOffset":13323,"count":16},{"startOffset":12956,"endOffset":12980,"count":13},{"startOffset":12982,"endOffset":13101,"count":3},{"startOffset":13019,"endOffset":13043,"count":0},{"startOffset":13101,"endOffset":13283,"count":13},{"startOffset":13178,"endOffset":13219,"count":0},{"startOffset":13255,"endOffset":13279,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":13325,"endOffset":14022,"count":6},{"startOffset":13469,"endOffset":13565,"count":0},{"startOffset":13642,"endOffset":13687,"count":0},{"startOffset":13746,"endOffset":13969,"count":0}],"isBlockCoverage":true},{"functionName":"fromArrayLike","ranges":[{"startOffset":14024,"endOffset":14398,"count":2},{"startOffset":14081,"endOffset":14105,"count":0},{"startOffset":14204,"endOffset":14217,"count":0},{"startOffset":14366,"endOffset":14397,"count":0}],"isBlockCoverage":true},{"functionName":"fromObject","ranges":[{"startOffset":14400,"endOffset":14706,"count":2},{"startOffset":14458,"endOffset":14489,"count":0},{"startOffset":14533,"endOffset":14571,"count":0},{"startOffset":14606,"endOffset":14661,"count":0},{"startOffset":14663,"endOffset":14704,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":14745,"endOffset":14799,"count":2420}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":14819,"endOffset":15144,"count":0}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":15167,"endOffset":15318,"count":1574}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":15384,"endOffset":16591,"count":2},{"startOffset":15452,"endOffset":15516,"count":0},{"startOffset":15547,"endOffset":15738,"count":1},{"startOffset":15657,"endOffset":15734,"count":298},{"startOffset":15738,"endOffset":15789,"count":0},{"startOffset":15789,"endOffset":15887,"count":1},{"startOffset":15887,"endOffset":16235,"count":298},{"startOffset":15942,"endOffset":16174,"count":0},{"startOffset":16235,"endOffset":16326,"count":1},{"startOffset":16326,"endOffset":16571,"count":0},{"startOffset":16571,"endOffset":16590,"count":1}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16594,"endOffset":16830,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":16965,"endOffset":17029,"count":9}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":17042,"endOffset":17088,"count":1547}],"isBlockCoverage":true},{"functionName":"indexOf","ranges":[{"startOffset":17103,"endOffset":17199,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17292,"endOffset":17321,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17334,"endOffset":17398,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17411,"endOffset":17457,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17472,"endOffset":17571,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":17670,"endOffset":17699,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":17712,"endOffset":17776,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":17789,"endOffset":17835,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":17850,"endOffset":17949,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18045,"endOffset":18070,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18083,"endOffset":18149,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":18162,"endOffset":18210,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18225,"endOffset":18323,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18416,"endOffset":18441,"count":5}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18454,"endOffset":18519,"count":5}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":18532,"endOffset":18579,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":18594,"endOffset":18806,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":18902,"endOffset":18953,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18966,"endOffset":19032,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19045,"endOffset":19093,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19108,"endOffset":19322,"count":0}],"isBlockCoverage":false},{"functionName":"byteLength","ranges":[{"startOffset":19409,"endOffset":19440,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":19453,"endOffset":19516,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":19529,"endOffset":19574,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":19589,"endOffset":19797,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingOps","ranges":[{"startOffset":19805,"endOffset":21360,"count":1560},{"startOffset":19892,"endOffset":20177,"count":1555},{"startOffset":19955,"endOffset":20177,"count":0},{"startOffset":20182,"endOffset":20587,"count":5},{"startOffset":20222,"endOffset":20246,"count":0},{"startOffset":20304,"endOffset":20587,"count":0},{"startOffset":20592,"endOffset":20722,"count":0},{"startOffset":20727,"endOffset":20859,"count":0},{"startOffset":20864,"endOffset":21231,"count":0},{"startOffset":21236,"endOffset":21354,"count":0}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":21362,"endOffset":22019,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22159,"endOffset":22253,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":22331,"endOffset":22429,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":22461,"endOffset":22594,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":22875,"endOffset":23454,"count":1552},{"startOffset":22947,"endOffset":22995,"count":3},{"startOffset":22995,"endOffset":23047,"count":1549},{"startOffset":23047,"endOffset":23057,"count":0},{"startOffset":23057,"endOffset":23120,"count":1549},{"startOffset":23087,"endOffset":23097,"count":0},{"startOffset":23120,"endOffset":23146,"count":1549},{"startOffset":23146,"endOffset":23158,"count":0},{"startOffset":23164,"endOffset":23174,"count":1549},{"startOffset":23174,"endOffset":23195,"count":0},{"startOffset":23195,"endOffset":23221,"count":1549},{"startOffset":23221,"endOffset":23231,"count":2},{"startOffset":23231,"endOffset":23267,"count":1547},{"startOffset":23267,"endOffset":23301,"count":0},{"startOffset":23301,"endOffset":23372,"count":1547},{"startOffset":23372,"endOffset":23413,"count":0},{"startOffset":23413,"endOffset":23453,"count":1547}],"isBlockCoverage":true},{"functionName":"equals","ranges":[{"startOffset":23483,"endOffset":23837,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":23965,"endOffset":24960,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":25056,"endOffset":26207,"count":0}],"isBlockCoverage":false},{"functionName":"bidirectionalIndexOf","ranges":[{"startOffset":26635,"endOffset":27942,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":27971,"endOffset":28088,"count":0}],"isBlockCoverage":false},{"functionName":"lastIndexOf","ranges":[{"startOffset":28122,"endOffset":28244,"count":0}],"isBlockCoverage":false},{"functionName":"includes","ranges":[{"startOffset":28275,"endOffset":28380,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":28558,"endOffset":28657,"count":0}],"isBlockCoverage":false},{"functionName":"_fill","ranges":[{"startOffset":28660,"endOffset":30570,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":30597,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":31639,"endOffset":31873,"count":0}],"isBlockCoverage":false},{"functionName":"adjustOffset","ranges":[{"startOffset":31876,"endOffset":32310,"count":1},{"startOffset":32116,"endOffset":32135,"count":0},{"startOffset":32154,"endOffset":32217,"count":0},{"startOffset":32265,"endOffset":32298,"count":0},{"startOffset":32299,"endOffset":32307,"count":0}],"isBlockCoverage":true},{"functionName":"slice","ranges":[{"startOffset":32337,"endOffset":32637,"count":1},{"startOffset":32467,"endOffset":32497,"count":0},{"startOffset":32557,"endOffset":32560,"count":0}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":32640,"endOffset":32711,"count":0}],"isBlockCoverage":false},{"functionName":"swap16","ranges":[{"startOffset":32739,"endOffset":33143,"count":0}],"isBlockCoverage":false},{"functionName":"swap32","ranges":[{"startOffset":33172,"endOffset":33616,"count":0}],"isBlockCoverage":false},{"functionName":"swap64","ranges":[{"startOffset":33645,"endOffset":34153,"count":0}],"isBlockCoverage":false},{"functionName":"transcode","ranges":[{"startOffset":34466,"endOffset":35206,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35518,"endOffset":35553,"count":2}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":35559,"endOffset":35596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"18","url":"internal/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6360,"count":1}],"isBlockCoverage":false},{"functionName":"isInt32","ranges":[{"startOffset":526,"endOffset":585,"count":3698}],"isBlockCoverage":true},{"functionName":"isUint32","ranges":[{"startOffset":587,"endOffset":649,"count":3136}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1271,"endOffset":1746,"count":1555},{"startOffset":1334,"endOffset":1354,"count":1},{"startOffset":1356,"endOffset":1377,"count":1},{"startOffset":1377,"endOffset":1425,"count":1554},{"startOffset":1425,"endOffset":1745,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1791,"endOffset":2172,"count":1551},{"startOffset":1911,"endOffset":1965,"count":0},{"startOffset":2005,"endOffset":2059,"count":0},{"startOffset":2102,"endOffset":2168,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2218,"endOffset":2799,"count":3698},{"startOffset":2380,"endOffset":2678,"count":0},{"startOffset":2715,"endOffset":2795,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2843,"endOffset":3353,"count":0}],"isBlockCoverage":false},{"functionName":"validateString","ranges":[{"startOffset":3357,"endOffset":3489,"count":58781},{"startOffset":3433,"endOffset":3487,"count":0}],"isBlockCoverage":true},{"functionName":"validateNumber","ranges":[{"startOffset":3491,"endOffset":3623,"count":4},{"startOffset":3567,"endOffset":3621,"count":0}],"isBlockCoverage":true},{"functionName":"validateBoolean","ranges":[{"startOffset":3625,"endOffset":3760,"count":596},{"startOffset":3703,"endOffset":3758,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3804,"endOffset":4029,"count":298},{"startOffset":3957,"endOffset":4025,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4071,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"validateSignalName","ranges":[{"startOffset":4362,"endOffset":4783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4824,"endOffset":5054,"count":1542},{"startOffset":4889,"endOffset":5052,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":5058,"endOffset":5392,"count":10377},{"startOffset":5226,"endOffset":5245,"count":0},{"startOffset":5247,"endOffset":5390,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":5536,"endOffset":5910,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5953,"endOffset":6054,"count":5},{"startOffset":6011,"endOffset":6052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"19","url":"internal/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28412,"count":1}],"isBlockCoverage":false},{"functionName":"checkBounds","ranges":[{"startOffset":982,"endOffset":1198,"count":1},{"startOffset":1145,"endOffset":1196,"count":0}],"isBlockCoverage":true},{"functionName":"checkInt","ranges":[{"startOffset":1200,"endOffset":1818,"count":1},{"startOffset":1296,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"boundsError","ranges":[{"startOffset":1820,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64LE","ranges":[{"startOffset":2243,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"readBigUInt64BE","ranges":[{"startOffset":2744,"endOffset":3243,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64LE","ranges":[{"startOffset":3245,"endOffset":3746,"count":0}],"isBlockCoverage":false},{"functionName":"readBigInt64BE","ranges":[{"startOffset":3748,"endOffset":4243,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntLE","ranges":[{"startOffset":4245,"endOffset":4797,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48LE","ranges":[{"startOffset":4799,"endOffset":5182,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40LE","ranges":[{"startOffset":5184,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32LE","ranges":[{"startOffset":5542,"endOffset":5868,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt24LE","ranges":[{"startOffset":5870,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16LE","ranges":[{"startOffset":6160,"endOffset":6420,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt8","ranges":[{"startOffset":6422,"endOffset":6602,"count":0}],"isBlockCoverage":false},{"functionName":"readUIntBE","ranges":[{"startOffset":6604,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt48BE","ranges":[{"startOffset":7158,"endOffset":7541,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt40BE","ranges":[{"startOffset":7543,"endOffset":7899,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt32BE","ranges":[{"startOffset":7901,"endOffset":8227,"count":3},{"startOffset":8089,"endOffset":8126,"count":0}],"isBlockCoverage":true},{"functionName":"readUInt24BE","ranges":[{"startOffset":8229,"endOffset":8517,"count":0}],"isBlockCoverage":false},{"functionName":"readUInt16BE","ranges":[{"startOffset":8519,"endOffset":8779,"count":0}],"isBlockCoverage":false},{"functionName":"readIntLE","ranges":[{"startOffset":8781,"endOffset":9326,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48LE","ranges":[{"startOffset":9328,"endOffset":9759,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40LE","ranges":[{"startOffset":9761,"endOffset":10148,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32LE","ranges":[{"startOffset":10150,"endOffset":10485,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24LE","ranges":[{"startOffset":10487,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16LE","ranges":[{"startOffset":10821,"endOffset":11127,"count":0}],"isBlockCoverage":false},{"functionName":"readInt8","ranges":[{"startOffset":11129,"endOffset":11337,"count":0}],"isBlockCoverage":false},{"functionName":"readIntBE","ranges":[{"startOffset":11339,"endOffset":11884,"count":0}],"isBlockCoverage":false},{"functionName":"readInt48BE","ranges":[{"startOffset":11886,"endOffset":12315,"count":0}],"isBlockCoverage":false},{"functionName":"readInt40BE","ranges":[{"startOffset":12317,"endOffset":12705,"count":0}],"isBlockCoverage":false},{"functionName":"readInt32BE","ranges":[{"startOffset":12707,"endOffset":13042,"count":0}],"isBlockCoverage":false},{"functionName":"readInt24BE","ranges":[{"startOffset":13044,"endOffset":13376,"count":0}],"isBlockCoverage":false},{"functionName":"readInt16BE","ranges":[{"startOffset":13378,"endOffset":13684,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatBackwards","ranges":[{"startOffset":13701,"endOffset":14106,"count":0}],"isBlockCoverage":false},{"functionName":"readFloatForwards","ranges":[{"startOffset":14108,"endOffset":14512,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleBackwards","ranges":[{"startOffset":14514,"endOffset":15084,"count":0}],"isBlockCoverage":false},{"functionName":"readDoubleForwards","ranges":[{"startOffset":15086,"endOffset":15655,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64LE","ranges":[{"startOffset":15676,"endOffset":16158,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64LE","ranges":[{"startOffset":16160,"endOffset":16282,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigU_Int64BE","ranges":[{"startOffset":16284,"endOffset":16782,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigUInt64BE","ranges":[{"startOffset":16784,"endOffset":16906,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64LE","ranges":[{"startOffset":16908,"endOffset":17052,"count":0}],"isBlockCoverage":false},{"functionName":"writeBigInt64BE","ranges":[{"startOffset":17054,"endOffset":17198,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntLE","ranges":[{"startOffset":17200,"endOffset":17809,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48LE","ranges":[{"startOffset":17811,"endOffset":18224,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40LE","ranges":[{"startOffset":18226,"endOffset":18605,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32LE","ranges":[{"startOffset":18607,"endOffset":18914,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32LE","ranges":[{"startOffset":18916,"endOffset":19022,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24LE","ranges":[{"startOffset":19024,"endOffset":19283,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16LE","ranges":[{"startOffset":19285,"endOffset":19481,"count":1}],"isBlockCoverage":true},{"functionName":"writeUInt16LE","ranges":[{"startOffset":19483,"endOffset":19585,"count":1}],"isBlockCoverage":true},{"functionName":"writeU_Int8","ranges":[{"startOffset":19587,"endOffset":19999,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt8","ranges":[{"startOffset":20001,"endOffset":20095,"count":0}],"isBlockCoverage":false},{"functionName":"writeUIntBE","ranges":[{"startOffset":20097,"endOffset":20706,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int48BE","ranges":[{"startOffset":20708,"endOffset":21129,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int40BE","ranges":[{"startOffset":21131,"endOffset":21493,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int32BE","ranges":[{"startOffset":21495,"endOffset":21810,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt32BE","ranges":[{"startOffset":21812,"endOffset":21918,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int24BE","ranges":[{"startOffset":21920,"endOffset":22185,"count":0}],"isBlockCoverage":false},{"functionName":"writeU_Int16BE","ranges":[{"startOffset":22187,"endOffset":22383,"count":0}],"isBlockCoverage":false},{"functionName":"writeUInt16BE","ranges":[{"startOffset":22385,"endOffset":22487,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntLE","ranges":[{"startOffset":22489,"endOffset":23151,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32LE","ranges":[{"startOffset":23153,"endOffset":23268,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16LE","ranges":[{"startOffset":23270,"endOffset":23377,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt8","ranges":[{"startOffset":23379,"endOffset":23476,"count":0}],"isBlockCoverage":false},{"functionName":"writeIntBE","ranges":[{"startOffset":23478,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt32BE","ranges":[{"startOffset":24142,"endOffset":24257,"count":0}],"isBlockCoverage":false},{"functionName":"writeInt16BE","ranges":[{"startOffset":24259,"endOffset":24366,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleForwards","ranges":[{"startOffset":24385,"endOffset":24851,"count":0}],"isBlockCoverage":false},{"functionName":"writeDoubleBackwards","ranges":[{"startOffset":24853,"endOffset":25320,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatForwards","ranges":[{"startOffset":25322,"endOffset":25623,"count":0}],"isBlockCoverage":false},{"functionName":"writeFloatBackwards","ranges":[{"startOffset":25625,"endOffset":25927,"count":0}],"isBlockCoverage":false},{"functionName":"addBufferPrototypeMethods","ranges":[{"startOffset":25969,"endOffset":28346,"count":1},{"startOffset":27372,"endOffset":27392,"count":0},{"startOffset":27446,"endOffset":27465,"count":0},{"startOffset":27521,"endOffset":27542,"count":0},{"startOffset":27598,"endOffset":27618,"count":0},{"startOffset":27675,"endOffset":27696,"count":0},{"startOffset":27752,"endOffset":27772,"count":0},{"startOffset":27830,"endOffset":27852,"count":0},{"startOffset":27910,"endOffset":27931,"count":0}],"isBlockCoverage":true}]},{"scriptId":"20","url":"internal/process/per_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10567,"count":1}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":765,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"wrapProcessMethods","ranges":[{"startOffset":931,"endOffset":6672,"count":1}],"isBlockCoverage":true},{"functionName":"_rawDebug","ranges":[{"startOffset":1142,"endOffset":1224,"count":0}],"isBlockCoverage":false},{"functionName":"cpuUsage","ranges":[{"startOffset":1435,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"previousValueIsValid","ranges":[{"startOffset":3147,"endOffset":3284,"count":0}],"isBlockCoverage":false},{"functionName":"hrtime","ranges":[{"startOffset":3508,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"hrtimeBigInt","ranges":[{"startOffset":4298,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"memoryUsage","ranges":[{"startOffset":4437,"endOffset":4663,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4667,"endOffset":5105,"count":1},{"startOffset":4723,"endOffset":4747,"count":0}],"isBlockCoverage":true},{"functionName":"kill","ranges":[{"startOffset":5109,"endOffset":5754,"count":0}],"isBlockCoverage":false},{"functionName":"resourceUsage","ranges":[{"startOffset":5805,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"buildAllowedFlags","ranges":[{"startOffset":6883,"endOffset":9943,"count":0}],"isBlockCoverage":false},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":10133,"endOffset":10463,"count":1},{"startOffset":10213,"endOffset":10388,"count":0},{"startOffset":10420,"endOffset":10461,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"internal/async_hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17496,"count":1}],"isBlockCoverage":false},{"functionName":"executionAsyncResource","ranges":[{"startOffset":4917,"endOffset":5124,"count":0}],"isBlockCoverage":false},{"functionName":"fatalError","ranges":[{"startOffset":5185,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"emitInitNative","ranges":[{"startOffset":5806,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"emitHook","ranges":[{"startOffset":6955,"endOffset":7905,"count":0}],"isBlockCoverage":false},{"functionName":"emitHookFactory","ranges":[{"startOffset":7907,"endOffset":8167,"count":4}],"isBlockCoverage":true},{"functionName":"getHookArrays","ranges":[{"startOffset":8196,"endOffset":8686,"count":0}],"isBlockCoverage":false},{"functionName":"storeActiveHooks","ranges":[{"startOffset":8689,"endOffset":8976,"count":0}],"isBlockCoverage":false},{"functionName":"copyHooks","ranges":[{"startOffset":8978,"endOffset":9243,"count":0}],"isBlockCoverage":false},{"functionName":"restoreActiveHooks","ranges":[{"startOffset":9358,"endOffset":9563,"count":0}],"isBlockCoverage":false},{"functionName":"trackPromise","ranges":[{"startOffset":9565,"endOffset":9922,"count":0}],"isBlockCoverage":false},{"functionName":"fastPromiseHook","ranges":[{"startOffset":9924,"endOffset":11060,"count":0}],"isBlockCoverage":false},{"functionName":"enableHooks","ranges":[{"startOffset":11091,"endOffset":11151,"count":0}],"isBlockCoverage":false},{"functionName":"updatePromiseHookMode","ranges":[{"startOffset":11179,"endOffset":11470,"count":0}],"isBlockCoverage":false},{"functionName":"disableHooks","ranges":[{"startOffset":11472,"endOffset":11747,"count":0}],"isBlockCoverage":false},{"functionName":"disablePromiseHookIfNecessary","ranges":[{"startOffset":11749,"endOffset":11875,"count":0}],"isBlockCoverage":false},{"functionName":"newAsyncId","ranges":[{"startOffset":12076,"endOffset":12146,"count":40}],"isBlockCoverage":true},{"functionName":"getOrSetAsyncId","ranges":[{"startOffset":12148,"endOffset":12338,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":12521,"endOffset":12811,"count":40},{"startOffset":12777,"endOffset":12810,"count":0}],"isBlockCoverage":true},{"functionName":"clearDefaultTriggerAsyncId","ranges":[{"startOffset":12814,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"defaultTriggerAsyncIdScope","ranges":[{"startOffset":12906,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"hasHooks","ranges":[{"startOffset":13383,"endOffset":13446,"count":188}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":13448,"endOffset":13507,"count":36}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":13509,"endOffset":13564,"count":40}],"isBlockCoverage":true},{"functionName":"afterHooksExist","ranges":[{"startOffset":13566,"endOffset":13623,"count":0}],"isBlockCoverage":false},{"functionName":"destroyHooksExist","ranges":[{"startOffset":13625,"endOffset":13686,"count":40}],"isBlockCoverage":true},{"functionName":"emitInitScript","ranges":[{"startOffset":13689,"endOffset":14097,"count":0}],"isBlockCoverage":false},{"functionName":"emitBeforeScript","ranges":[{"startOffset":14100,"endOffset":14276,"count":36},{"startOffset":14248,"endOffset":14274,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":14279,"endOffset":14399,"count":36},{"startOffset":14343,"endOffset":14368,"count":0}],"isBlockCoverage":true},{"functionName":"emitDestroyScript","ranges":[{"startOffset":14402,"endOffset":14612,"count":0}],"isBlockCoverage":false},{"functionName":"clearAsyncIdStack","ranges":[{"startOffset":14703,"endOffset":14929,"count":0}],"isBlockCoverage":false},{"functionName":"hasAsyncIdStack","ranges":[{"startOffset":14932,"endOffset":14995,"count":0}],"isBlockCoverage":false},{"functionName":"pushAsyncContext","ranges":[{"startOffset":15061,"endOffset":15641,"count":36},{"startOffset":15233,"endOffset":15293,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":15706,"endOffset":16317,"count":36},{"startOffset":15822,"endOffset":15835,"count":0},{"startOffset":15914,"endOffset":16020,"count":0}],"isBlockCoverage":true},{"functionName":"executionAsyncId","ranges":[{"startOffset":16320,"endOffset":16396,"count":0}],"isBlockCoverage":false},{"functionName":"triggerAsyncId","ranges":[{"startOffset":16398,"endOffset":16470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"22","url":"internal/process/task_queues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4828,"count":1}],"isBlockCoverage":false},{"functionName":"hasTickScheduled","ranges":[{"startOffset":1023,"endOffset":1098,"count":0}],"isBlockCoverage":false},{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1100,"endOffset":1186,"count":53},{"startOffset":1176,"endOffset":1179,"count":30},{"startOffset":1180,"endOffset":1183,"count":23}],"isBlockCoverage":true},{"functionName":"runNextTicks","ranges":[{"startOffset":1288,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1486,"endOffset":2454,"count":24},{"startOffset":1542,"endOffset":2334,"count":26},{"startOffset":1577,"endOffset":2309,"count":35},{"startOffset":1778,"endOffset":1811,"count":11},{"startOffset":1811,"endOffset":2185,"count":24},{"startOffset":1898,"endOffset":1931,"count":12},{"startOffset":1944,"endOffset":1986,"count":4},{"startOffset":1999,"endOffset":2050,"count":8},{"startOffset":2063,"endOffset":2123,"count":0},{"startOffset":2136,"endOffset":2163,"count":0},{"startOffset":2247,"endOffset":2268,"count":0},{"startOffset":2334,"endOffset":2388,"count":23}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2598,"endOffset":3513,"count":35},{"startOffset":2670,"endOffset":2711,"count":0},{"startOffset":2741,"endOffset":2748,"count":0},{"startOffset":2796,"endOffset":2810,"count":11},{"startOffset":2815,"endOffset":2852,"count":12},{"startOffset":2857,"endOffset":2908,"count":4},{"startOffset":2913,"endOffset":2978,"count":8},{"startOffset":2983,"endOffset":3126,"count":0},{"startOffset":3155,"endOffset":3181,"count":30},{"startOffset":3425,"endOffset":3485,"count":0}],"isBlockCoverage":true},{"functionName":"createMicrotaskResource","ranges":[{"startOffset":3603,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"runMicrotask","ranges":[{"startOffset":3851,"endOffset":4211,"count":0}],"isBlockCoverage":false},{"functionName":"queueMicrotask","ranges":[{"startOffset":4213,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"setupTaskQueue","ranges":[{"startOffset":4549,"endOffset":4806,"count":1}],"isBlockCoverage":true}]},{"scriptId":"23","url":"internal/process/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8383,"count":1}],"isBlockCoverage":false},{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":1462,"endOffset":1552,"count":23},{"startOffset":1542,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"hasRejectionToWarn","ranges":[{"startOffset":1554,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"getUnhandledRejectionsMode","ranges":[{"startOffset":1635,"endOffset":2026,"count":0}],"isBlockCoverage":false},{"functionName":"promiseRejectHandler","ranges":[{"startOffset":2028,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"resolveError","ranges":[{"startOffset":2599,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"unhandledRejection","ranges":[{"startOffset":2851,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"handledRejection","ranges":[{"startOffset":3147,"endOffset":3963,"count":0}],"isBlockCoverage":false},{"functionName":"emitUnhandledRejectionWarning","ranges":[{"startOffset":4035,"endOffset":4931,"count":0}],"isBlockCoverage":false},{"functionName":"emitDeprecationWarning","ranges":[{"startOffset":4964,"endOffset":5249,"count":0}],"isBlockCoverage":false},{"functionName":"processPromiseRejections","ranges":[{"startOffset":5422,"endOffset":7284,"count":23},{"startOffset":5580,"endOffset":5746,"count":0},{"startOffset":5811,"endOffset":7188,"count":0}],"isBlockCoverage":true},{"functionName":"getErrorWithoutStack","ranges":[{"startOffset":7286,"endOffset":7704,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnhandledRejectionError","ranges":[{"startOffset":7706,"endOffset":8176,"count":0}],"isBlockCoverage":false},{"functionName":"listenForRejections","ranges":[{"startOffset":8178,"endOffset":8262,"count":1}],"isBlockCoverage":true}]},{"scriptId":"24","url":"internal/fixed_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4184,"count":1}],"isBlockCoverage":false},{"functionName":"FixedCircularBuffer","ranges":[{"startOffset":2959,"endOffset":3073,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":121}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":35}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":35}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":61},{"startOffset":3388,"endOffset":3400,"count":26},{"startOffset":3400,"endOffset":3509,"count":35}],"isBlockCoverage":true},{"functionName":"FixedQueue","ranges":[{"startOffset":3552,"endOffset":3626,"count":1}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":60}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":35},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4180,"count":61},{"startOffset":4041,"endOffset":4062,"count":56},{"startOffset":4064,"endOffset":4159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"25","url":"internal/console/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1798,"count":1}],"isBlockCoverage":false}]},{"scriptId":"26","url":"internal/console/constructor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18359,"count":1}],"isBlockCoverage":false},{"functionName":"Console","ranges":[{"startOffset":2172,"endOffset":4254,"count":1},{"startOffset":2437,"endOffset":2480,"count":0},{"startOffset":2537,"endOffset":2649,"count":0},{"startOffset":2854,"endOffset":2912,"count":0},{"startOffset":2966,"endOffset":3024,"count":0},{"startOffset":3063,"endOffset":3086,"count":0},{"startOffset":3092,"endOffset":3148,"count":0},{"startOffset":3188,"endOffset":3297,"count":0},{"startOffset":3340,"endOffset":3366,"count":0},{"startOffset":3368,"endOffset":3611,"count":0},{"startOffset":3651,"endOffset":3763,"count":0},{"startOffset":3896,"endOffset":4140,"count":19}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":4463,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":4607,"endOffset":4793,"count":1}],"isBlockCoverage":true},{"functionName":"Console.<computed>","ranges":[{"startOffset":4958,"endOffset":5454,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5112,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5203,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5315,"endOffset":5402,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5410,"endOffset":5440,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":5494,"endOffset":6460,"count":2}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":6541,"endOffset":7430,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6609,"endOffset":7427,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":7469,"endOffset":8744,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":8869,"endOffset":9299,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":9340,"endOffset":9456,"count":0}],"isBlockCoverage":false},{"functionName":"Console.<computed>","ranges":[{"startOffset":9497,"endOffset":9613,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":9643,"endOffset":9730,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":9736,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"dir","ranges":[{"startOffset":9830,"endOffset":10015,"count":0}],"isBlockCoverage":false},{"functionName":"time","ranges":[{"startOffset":10020,"endOffset":10378,"count":0}],"isBlockCoverage":false},{"functionName":"timeEnd","ranges":[{"startOffset":10383,"endOffset":10672,"count":0}],"isBlockCoverage":false},{"functionName":"timeLog","ranges":[{"startOffset":10677,"endOffset":10915,"count":0}],"isBlockCoverage":false},{"functionName":"trace","ranges":[{"startOffset":10927,"endOffset":11167,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":11172,"endOffset":11390,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":11451,"endOffset":11881,"count":0}],"isBlockCoverage":false},{"functionName":"count","ranges":[{"startOffset":11942,"endOffset":12398,"count":0}],"isBlockCoverage":false},{"functionName":"countReset","ranges":[{"startOffset":12464,"endOffset":12752,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":12757,"endOffset":12903,"count":0}],"isBlockCoverage":false},{"functionName":"groupEnd","ranges":[{"startOffset":12908,"endOffset":13050,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":13099,"endOffset":16391,"count":0}],"isBlockCoverage":false},{"functionName":"timeLogImpl","ranges":[{"startOffset":16432,"endOffset":16928,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":16930,"endOffset":16991,"count":0}],"isBlockCoverage":false},{"functionName":"formatTime","ranges":[{"startOffset":16993,"endOffset":17673,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":17807,"endOffset":17863,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":17866,"endOffset":17884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"27","url":"internal/util/inspector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2103,"count":1}],"isBlockCoverage":false},{"functionName":"sendInspectorCommand","ranges":[{"startOffset":68,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"installConsoleExtensions","ranges":[{"startOffset":484,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConsole","ranges":[{"startOffset":1117,"endOffset":1819,"count":1},{"startOffset":1275,"endOffset":1817,"count":23},{"startOffset":1490,"endOffset":1695,"count":19},{"startOffset":1695,"endOffset":1813,"count":4}],"isBlockCoverage":true},{"functionName":"get consoleFromVM","ranges":[{"startOffset":1991,"endOffset":2042,"count":0}],"isBlockCoverage":false},{"functionName":"set consoleFromVM","ranges":[{"startOffset":2046,"endOffset":2099,"count":1}],"isBlockCoverage":true}]},{"scriptId":"28","url":"internal/url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40597,"count":1}],"isBlockCoverage":false},{"functionName":"toUSVString","ranges":[{"startOffset":2176,"endOffset":2472,"count":0}],"isBlockCoverage":false},{"functionName":"serializeTupleOrigin","ranges":[{"startOffset":2684,"endOffset":2802,"count":0}],"isBlockCoverage":false},{"functionName":"URLContext","ranges":[{"startOffset":3206,"endOffset":3429,"count":3938}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":3719,"endOffset":6082,"count":3927},{"startOffset":3834,"endOffset":6020,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6086,"endOffset":7156,"count":0}],"isBlockCoverage":false},{"functionName":"onParseComplete","ranges":[{"startOffset":7160,"endOffset":7853,"count":3927},{"startOffset":7415,"endOffset":7425,"count":0},{"startOffset":7488,"endOffset":7498,"count":0},{"startOffset":7579,"endOffset":7583,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":7855,"endOffset":7930,"count":11}],"isBlockCoverage":true},{"functionName":"onParseProtocolComplete","ranges":[{"startOffset":7932,"endOffset":8277,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostnameComplete","ranges":[{"startOffset":8279,"endOffset":8625,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePortComplete","ranges":[{"startOffset":8627,"endOffset":8789,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHostComplete","ranges":[{"startOffset":8791,"endOffset":9097,"count":0}],"isBlockCoverage":false},{"functionName":"onParsePathComplete","ranges":[{"startOffset":9099,"endOffset":9593,"count":2684},{"startOffset":9365,"endOffset":9433,"count":0}],"isBlockCoverage":true},{"functionName":"onParseSearchComplete","ranges":[{"startOffset":9595,"endOffset":9763,"count":0}],"isBlockCoverage":false},{"functionName":"onParseHashComplete","ranges":[{"startOffset":9765,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"URL","ranges":[{"startOffset":9951,"endOffset":10279,"count":3938},{"startOffset":10086,"endOffset":10138,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10283,"endOffset":10364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10368,"endOffset":10461,"count":9333}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10536,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10740,"endOffset":11673,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":11842,"endOffset":13033,"count":2703},{"startOffset":11927,"endOffset":11988,"count":0},{"startOffset":12398,"endOffset":12559,"count":0},{"startOffset":12591,"endOffset":12633,"count":0},{"startOffset":12692,"endOffset":12714,"count":0},{"startOffset":12722,"endOffset":12786,"count":0},{"startOffset":12898,"endOffset":12921,"count":0},{"startOffset":12983,"endOffset":13009,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":13307,"endOffset":13366,"count":1536}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13432,"endOffset":13477,"count":1167}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":13483,"endOffset":13663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13744,"endOffset":14372,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14442,"endOffset":14490,"count":1186}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":14496,"endOffset":14865,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14935,"endOffset":14985,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":14991,"endOffset":15389,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15459,"endOffset":15509,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":15515,"endOffset":15913,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15979,"endOffset":16135,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":16141,"endOffset":16432,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16502,"endOffset":16554,"count":3889}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":16560,"endOffset":16859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16925,"endOffset":17025,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":17031,"endOffset":17348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17418,"endOffset":17613,"count":6649},{"startOffset":17497,"endOffset":17516,"count":0},{"startOffset":17558,"endOffset":17568,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":17619,"endOffset":17838,"count":2684},{"startOffset":17729,"endOffset":17736,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":17906,"endOffset":18045,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18051,"endOffset":18543,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18630,"endOffset":18676,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18742,"endOffset":18893,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":18899,"endOffset":19317,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":19463,"endOffset":19520,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":19530,"endOffset":19835,"count":0}],"isBlockCoverage":false},{"functionName":"initSearchParams","ranges":[{"startOffset":19837,"endOffset":19977,"count":3927},{"startOffset":19934,"endOffset":19976,"count":0}],"isBlockCoverage":true},{"functionName":"parseParams","ranges":[{"startOffset":20086,"endOffset":22387,"count":0}],"isBlockCoverage":false},{"functionName":"serializeParams","ranges":[{"startOffset":23351,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":23966,"endOffset":24654,"count":2},{"startOffset":24304,"endOffset":24450,"count":13},{"startOffset":24505,"endOffset":24652,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":24674,"endOffset":25304,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":25371,"endOffset":25758,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":25763,"endOffset":26262,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26267,"endOffset":26701,"count":0}],"isBlockCoverage":false},{"functionName":"getAll","ranges":[{"startOffset":26706,"endOffset":27174,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":27179,"endOffset":27607,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27612,"endOffset":28638,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":28643,"endOffset":29820,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":29983,"endOffset":30192,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":30197,"endOffset":30769,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":30824,"endOffset":31024,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":31029,"endOffset":31233,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":31366,"endOffset":31566,"count":0}],"isBlockCoverage":false},{"functionName":"createSearchParamsIterator","ranges":[{"startOffset":31846,"endOffset":32049,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":32273,"endOffset":33026,"count":0}],"isBlockCoverage":false},{"functionName":"defineIDLClass","ranges":[{"startOffset":33030,"endOffset":34244,"count":0}],"isBlockCoverage":false},{"functionName":"domainToASCII","ranges":[{"startOffset":34250,"endOffset":34425,"count":0}],"isBlockCoverage":false},{"functionName":"domainToUnicode","ranges":[{"startOffset":34427,"endOffset":34606,"count":0}],"isBlockCoverage":false},{"functionName":"urlToOptions","ranges":[{"startOffset":34749,"endOffset":35292,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLWin32","ranges":[{"startOffset":35328,"endOffset":36721,"count":0}],"isBlockCoverage":false},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":36723,"endOffset":37227,"count":1186},{"startOffset":36786,"endOffset":36842,"count":0},{"startOffset":36920,"endOffset":37186,"count":148216},{"startOffset":36951,"endOffset":37182,"count":1186},{"startOffset":37061,"endOffset":37176,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":37229,"endOffset":37576,"count":1186},{"startOffset":37296,"endOffset":37317,"count":1167},{"startOffset":37317,"endOffset":37419,"count":19},{"startOffset":37355,"endOffset":37419,"count":0},{"startOffset":37457,"endOffset":37498,"count":0},{"startOffset":37518,"endOffset":37545,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":38335,"endOffset":39300,"count":2684},{"startOffset":38586,"endOffset":38647,"count":2665},{"startOffset":38607,"endOffset":38646,"count":0},{"startOffset":38649,"endOffset":38700,"count":19},{"startOffset":38706,"endOffset":38722,"count":19},{"startOffset":38794,"endOffset":38843,"count":0},{"startOffset":38942,"endOffset":38993,"count":0},{"startOffset":39029,"endOffset":39078,"count":0},{"startOffset":39114,"endOffset":39170,"count":0},{"startOffset":39206,"endOffset":39251,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":39302,"endOffset":39455,"count":3905},{"startOffset":39404,"endOffset":39452,"count":19}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":39457,"endOffset":39602,"count":3886},{"startOffset":39561,"endOffset":39601,"count":0}],"isBlockCoverage":true},{"functionName":"constructUrl","ranges":[{"startOffset":39604,"endOffset":40304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"internal/querystring.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2800,"count":1}],"isBlockCoverage":false},{"functionName":"encodeStr","ranges":[{"startOffset":1190,"endOffset":2738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"30","url":"internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1452,"count":1}],"isBlockCoverage":false}]},{"scriptId":"31","url":"path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":41803,"count":1}],"isBlockCoverage":false},{"functionName":"isPathSeparator","ranges":[{"startOffset":1492,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1598,"endOffset":1675,"count":2609247}],"isBlockCoverage":true},{"functionName":"isWindowsDeviceRoot","ranges":[{"startOffset":1677,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeString","ranges":[{"startOffset":1910,"endOffset":3714,"count":21045},{"startOffset":2127,"endOffset":3698,"count":2609075},{"startOffset":2160,"endOffset":2186,"count":2588030},{"startOffset":2186,"endOffset":2277,"count":21045},{"startOffset":2229,"endOffset":2235,"count":20873},{"startOffset":2235,"endOffset":2277,"count":172},{"startOffset":2277,"endOffset":2310,"count":2588202},{"startOffset":2310,"endOffset":3599,"count":256815},{"startOffset":2342,"endOffset":2355,"count":235737},{"startOffset":2357,"endOffset":2382,"count":22144},{"startOffset":2382,"endOffset":3556,"count":234671},{"startOffset":2404,"endOffset":3343,"count":308},{"startOffset":2460,"endOffset":2518,"count":17},{"startOffset":2519,"endOffset":2577,"count":0},{"startOffset":2715,"endOffset":2791,"count":0},{"startOffset":3024,"endOffset":3193,"count":0},{"startOffset":3203,"endOffset":3335,"count":0},{"startOffset":3343,"endOffset":3556,"count":234363},{"startOffset":3389,"endOffset":3442,"count":213318},{"startOffset":3442,"endOffset":3501,"count":21045},{"startOffset":3556,"endOffset":3599,"count":256507},{"startOffset":3599,"endOffset":3694,"count":2331387},{"startOffset":3627,"endOffset":3641,"count":17948},{"startOffset":3643,"endOffset":3664,"count":1764},{"startOffset":3664,"endOffset":3694,"count":2329623}],"isBlockCoverage":true},{"functionName":"_format","ranges":[{"startOffset":3716,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":4195,"endOffset":8598,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":8603,"endOffset":11354,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolute","ranges":[{"startOffset":11359,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":11732,"endOffset":13788,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":14002,"endOffset":17476,"count":0}],"isBlockCoverage":false},{"functionName":"toNamespacedPath","ranges":[{"startOffset":17481,"endOffset":18509,"count":0}],"isBlockCoverage":false},{"functionName":"dirname","ranges":[{"startOffset":18514,"endOffset":20842,"count":0}],"isBlockCoverage":false},{"functionName":"basename","ranges":[{"startOffset":20847,"endOffset":23482,"count":0}],"isBlockCoverage":false},{"functionName":"extname","ranges":[{"startOffset":23487,"endOffset":25496,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":25538,"endOffset":30004,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":30123,"endOffset":31019,"count":20873},{"startOffset":30246,"endOffset":30266,"count":56247},{"startOffset":30273,"endOffset":30573,"count":35376},{"startOffset":30301,"endOffset":30310,"count":35374},{"startOffset":30311,"endOffset":30326,"count":2},{"startOffset":30423,"endOffset":30450,"count":0},{"startOffset":30958,"endOffset":31008,"count":0},{"startOffset":31009,"endOffset":31014,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":31024,"endOffset":31599,"count":172},{"startOffset":31110,"endOffset":31121,"count":0},{"startOffset":31411,"endOffset":31505,"count":0},{"startOffset":31539,"endOffset":31551,"count":0},{"startOffset":31575,"endOffset":31587,"count":170},{"startOffset":31588,"endOffset":31594,"count":2}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":31604,"endOffset":31733,"count":3552}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":31738,"endOffset":32152,"count":172},{"startOffset":31787,"endOffset":31798,"count":0},{"startOffset":31857,"endOffset":32064,"count":349},{"startOffset":31947,"endOffset":32058,"count":347},{"startOffset":31993,"endOffset":32006,"count":172},{"startOffset":32006,"endOffset":32050,"count":175},{"startOffset":32101,"endOffset":32112,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":32157,"endOffset":34367,"count":14},{"startOffset":32270,"endOffset":32280,"count":2},{"startOffset":32280,"endOffset":32407,"count":12},{"startOffset":32407,"endOffset":32417,"count":0},{"startOffset":32417,"endOffset":32680,"count":12},{"startOffset":32680,"endOffset":32689,"count":11},{"startOffset":32690,"endOffset":32697,"count":1},{"startOffset":32771,"endOffset":32974,"count":1145},{"startOffset":32887,"endOffset":32893,"count":1},{"startOffset":32893,"endOffset":32968,"count":1144},{"startOffset":32950,"endOffset":32968,"count":100},{"startOffset":32974,"endOffset":32997,"count":12},{"startOffset":32997,"endOffset":33883,"count":11},{"startOffset":33274,"endOffset":33440,"count":0},{"startOffset":33448,"endOffset":33877,"count":0},{"startOffset":33883,"endOffset":34061,"count":1},{"startOffset":34061,"endOffset":34196,"count":7},{"startOffset":34087,"endOffset":34131,"count":6},{"startOffset":34133,"endOffset":34190,"count":1},{"startOffset":34174,"endOffset":34181,"count":0},{"startOffset":34196,"endOffset":34366,"count":1}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":34372,"endOffset":34448,"count":17236}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":34453,"endOffset":35081,"count":7192},{"startOffset":34536,"endOffset":34547,"count":0},{"startOffset":34705,"endOffset":34942,"count":86945},{"startOffset":34760,"endOffset":34844,"count":7187},{"startOffset":34844,"endOffset":34936,"count":79758},{"startOffset":34970,"endOffset":34997,"count":5},{"startOffset":34991,"endOffset":34996,"count":0},{"startOffset":34997,"endOffset":35026,"count":7187},{"startOffset":35034,"endOffset":35046,"count":0},{"startOffset":35046,"endOffset":35080,"count":7187}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":35086,"endOffset":37406,"count":1646},{"startOffset":35141,"endOffset":35168,"count":6},{"startOffset":35297,"endOffset":35314,"count":6},{"startOffset":35315,"endOffset":35343,"count":6},{"startOffset":35345,"endOffset":36812,"count":6},{"startOffset":35379,"endOffset":35389,"count":0},{"startOffset":35507,"endOffset":36657,"count":84},{"startOffset":35591,"endOffset":35829,"count":4},{"startOffset":35829,"endOffset":36649,"count":80},{"startOffset":35876,"endOffset":36105,"count":6},{"startOffset":36133,"endOffset":36639,"count":18},{"startOffset":36272,"endOffset":36424,"count":6},{"startOffset":36438,"endOffset":36627,"count":0},{"startOffset":36692,"endOffset":36715,"count":0},{"startOffset":36751,"endOffset":36769,"count":0},{"startOffset":36812,"endOffset":36860,"count":1640},{"startOffset":36860,"endOffset":37329,"count":19871},{"startOffset":36915,"endOffset":37139,"count":1640},{"startOffset":37139,"endOffset":37323,"count":18231},{"startOffset":37161,"endOffset":37323,"count":1640},{"startOffset":37329,"endOffset":37357,"count":1640},{"startOffset":37357,"endOffset":37367,"count":0},{"startOffset":37367,"endOffset":37405,"count":1640}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":37411,"endOffset":39069,"count":30},{"startOffset":37744,"endOffset":38690,"count":341},{"startOffset":37824,"endOffset":38070,"count":26},{"startOffset":38044,"endOffset":38070,"count":0},{"startOffset":38070,"endOffset":38093,"count":315},{"startOffset":38093,"endOffset":38250,"count":30},{"startOffset":38250,"endOffset":38280,"count":315},{"startOffset":38280,"endOffset":38480,"count":30},{"startOffset":38409,"endOffset":38472,"count":0},{"startOffset":38480,"endOffset":38684,"count":285},{"startOffset":38507,"endOffset":38684,"count":209},{"startOffset":38929,"endOffset":38961,"count":0},{"startOffset":38962,"endOffset":39000,"count":0},{"startOffset":39003,"endOffset":39027,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":39110,"endOffset":41464,"count":18},{"startOffset":39260,"endOffset":39271,"count":0},{"startOffset":39419,"endOffset":39449,"count":0},{"startOffset":39769,"endOffset":40715,"count":139},{"startOffset":39849,"endOffset":40095,"count":18},{"startOffset":40069,"endOffset":40095,"count":0},{"startOffset":40095,"endOffset":40118,"count":121},{"startOffset":40118,"endOffset":40275,"count":18},{"startOffset":40275,"endOffset":40305,"count":121},{"startOffset":40305,"endOffset":40505,"count":3},{"startOffset":40434,"endOffset":40497,"count":0},{"startOffset":40505,"endOffset":40709,"count":118},{"startOffset":40532,"endOffset":40709,"count":18},{"startOffset":40775,"endOffset":40788,"count":0},{"startOffset":40789,"endOffset":40792,"count":0},{"startOffset":40832,"endOffset":40929,"count":3},{"startOffset":40930,"endOffset":41105,"count":3},{"startOffset":41031,"endOffset":41064,"count":0},{"startOffset":41065,"endOffset":41104,"count":0},{"startOffset":41107,"endOffset":41170,"count":15},{"startOffset":41170,"endOffset":41321,"count":3},{"startOffset":41397,"endOffset":41443,"count":0}],"isBlockCoverage":true}]},{"scriptId":"32","url":"internal/encoding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15913,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBuffer","ranges":[{"startOffset":929,"endOffset":1038,"count":0}],"isBlockCoverage":false},{"functionName":"validateEncoder","ranges":[{"startOffset":1040,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"validateDecoder","ranges":[{"startOffset":1167,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgument","ranges":[{"startOffset":1294,"endOffset":1461,"count":0}],"isBlockCoverage":false},{"functionName":"trimAsciiWhitespace","ranges":[{"startOffset":8202,"endOffset":8684,"count":0}],"isBlockCoverage":false},{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8686,"endOffset":8865,"count":0}],"isBlockCoverage":false},{"functionName":"TextEncoder","ranges":[{"startOffset":8936,"endOffset":8982,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":8986,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":9057,"endOffset":9149,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInto","ranges":[{"startOffset":9153,"endOffset":9463,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9467,"endOffset":9862,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderICU","ranges":[{"startOffset":10233,"endOffset":11894,"count":1}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10371,"endOffset":11098,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":11105,"endOffset":11865,"count":0}],"isBlockCoverage":false},{"functionName":"makeTextDecoderJS","ranges":[{"startOffset":11896,"endOffset":14437,"count":0}],"isBlockCoverage":false},{"functionName":"get encoding","ranges":[{"startOffset":14572,"endOffset":14659,"count":0}],"isBlockCoverage":false},{"functionName":"get fatal","ranges":[{"startOffset":14668,"endOffset":14801,"count":0}],"isBlockCoverage":false},{"functionName":"get ignoreBOM","ranges":[{"startOffset":14810,"endOffset":14972,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectGetOwnPropertyDescriptors","ranges":[{"startOffset":14981,"endOffset":15611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"33","url":"timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8169,"count":1}],"isBlockCoverage":false},{"functionName":"unenroll","ranges":[{"startOffset":2014,"endOffset":3119,"count":4},{"startOffset":2067,"endOffset":2074,"count":0},{"startOffset":2192,"endOffset":2230,"count":0},{"startOffset":2236,"endOffset":2271,"count":0},{"startOffset":2846,"endOffset":2988,"count":1}],"isBlockCoverage":true},{"functionName":"enroll","ranges":[{"startOffset":3326,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":3611,"endOffset":4256,"count":4},{"startOffset":3766,"endOffset":3773,"count":0},{"startOffset":3803,"endOffset":3844,"count":0},{"startOffset":3849,"endOffset":3896,"count":0},{"startOffset":3901,"endOffset":4122,"count":0}],"isBlockCoverage":true},{"functionName":"setTimeout.<computed>","ranges":[{"startOffset":4288,"endOffset":4521,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":4524,"endOffset":4645,"count":5},{"startOffset":4567,"endOffset":4586,"count":4},{"startOffset":4588,"endOffset":4643,"count":4}],"isBlockCoverage":true},{"functionName":"setInterval","ranges":[{"startOffset":4647,"endOffset":5294,"count":0}],"isBlockCoverage":false},{"functionName":"clearInterval","ranges":[{"startOffset":5296,"endOffset":5594,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.close","ranges":[{"startOffset":5622,"endOffset":5673,"count":0}],"isBlockCoverage":false},{"functionName":"Immediate","ranges":[{"startOffset":5714,"endOffset":6036,"count":1}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":6040,"endOffset":6213,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":6217,"endOffset":6393,"count":0}],"isBlockCoverage":false},{"functionName":"hasRef","ranges":[{"startOffset":6397,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"setImmediate","ranges":[{"startOffset":6443,"endOffset":6984,"count":1},{"startOffset":6618,"endOffset":6659,"count":0},{"startOffset":6664,"endOffset":6711,"count":0},{"startOffset":6716,"endOffset":6937,"count":0}],"isBlockCoverage":true},{"functionName":"setImmediate.<computed>","ranges":[{"startOffset":7018,"endOffset":7105,"count":0}],"isBlockCoverage":false},{"functionName":"clearImmediate","ranges":[{"startOffset":7108,"endOffset":7530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"34","url":"internal/linkedlist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1112,"count":1}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":15,"endOffset":88,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":118,"endOffset":210,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":245,"endOffset":472,"count":8}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":528,"endOffset":980,"count":4},{"startOffset":579,"endOffset":596,"count":0}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":982,"endOffset":1042,"count":4}],"isBlockCoverage":true}]},{"scriptId":"35","url":"internal/timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17591,"count":1}],"isBlockCoverage":false},{"functionName":"initAsyncResource","ranges":[{"startOffset":5271,"endOffset":5549,"count":5},{"startOffset":5497,"endOffset":5547,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout","ranges":[{"startOffset":5634,"endOffset":6600,"count":4},{"startOffset":5783,"endOffset":6119,"count":0},{"startOffset":6456,"endOffset":6463,"count":0}],"isBlockCoverage":true},{"functionName":"Timeout.<computed>","ranges":[{"startOffset":6713,"endOffset":6884,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.refresh","ranges":[{"startOffset":6915,"endOffset":7013,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.unref","ranges":[{"startOffset":7042,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.ref","ranges":[{"startOffset":7197,"endOffset":7325,"count":0}],"isBlockCoverage":false},{"functionName":"Timeout.hasRef","ranges":[{"startOffset":7355,"endOffset":7392,"count":0}],"isBlockCoverage":false},{"functionName":"TimersList","ranges":[{"startOffset":7395,"endOffset":7695,"count":1}],"isBlockCoverage":true},{"functionName":"TimersList.<computed>","ranges":[{"startOffset":7811,"endOffset":7982,"count":0}],"isBlockCoverage":false},{"functionName":"ImmediateList","ranges":[{"startOffset":8040,"endOffset":8108,"count":2}],"isBlockCoverage":true},{"functionName":"ImmediateList.append","ranges":[{"startOffset":8269,"endOffset":8436,"count":1},{"startOffset":8312,"endOffset":8381,"count":0}],"isBlockCoverage":true},{"functionName":"ImmediateList.remove","ranges":[{"startOffset":8614,"endOffset":8969,"count":0}],"isBlockCoverage":false},{"functionName":"incRefCount","ranges":[{"startOffset":8972,"endOffset":9048,"count":4},{"startOffset":9025,"endOffset":9046,"count":1}],"isBlockCoverage":true},{"functionName":"decRefCount","ranges":[{"startOffset":9050,"endOffset":9127,"count":4},{"startOffset":9103,"endOffset":9125,"count":1}],"isBlockCoverage":true},{"functionName":"active","ranges":[{"startOffset":9210,"endOffset":9264,"count":0}],"isBlockCoverage":false},{"functionName":"unrefActive","ranges":[{"startOffset":9411,"endOffset":9471,"count":0}],"isBlockCoverage":false},{"functionName":"insertGuarded","ranges":[{"startOffset":9692,"endOffset":10208,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":10210,"endOffset":10861,"count":4},{"startOffset":10533,"endOffset":10834,"count":1}],"isBlockCoverage":true},{"functionName":"setUnrefTimeout","ranges":[{"startOffset":10863,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"getTimerDuration","ranges":[{"startOffset":11236,"endOffset":11758,"count":0}],"isBlockCoverage":false},{"functionName":"compareTimersLists","ranges":[{"startOffset":11760,"endOffset":11965,"count":0}],"isBlockCoverage":false},{"functionName":"setPosition","ranges":[{"startOffset":11967,"endOffset":12038,"count":1}],"isBlockCoverage":true},{"functionName":"getTimerCallbacks","ranges":[{"startOffset":12040,"endOffset":17137,"count":1}],"isBlockCoverage":true},{"functionName":"processImmediate","ranges":[{"startOffset":12352,"endOffset":14153,"count":1},{"startOffset":12431,"endOffset":12455,"count":0},{"startOffset":12892,"endOffset":12907,"count":0},{"startOffset":13224,"endOffset":13320,"count":0},{"startOffset":13750,"endOffset":13806,"count":0},{"startOffset":13908,"endOffset":13929,"count":0},{"startOffset":14080,"endOffset":14109,"count":0}],"isBlockCoverage":true},{"functionName":"processTimers","ranges":[{"startOffset":14158,"endOffset":14632,"count":0}],"isBlockCoverage":false},{"functionName":"listOnTimeout","ranges":[{"startOffset":14636,"endOffset":17078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"36","url":"internal/priority_queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2924,"count":1}],"isBlockCoverage":false},{"functionName":"PriorityQueue","ranges":[{"startOffset":570,"endOffset":811,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":815,"endOffset":855,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":859,"endOffset":1044,"count":1},{"startOffset":995,"endOffset":1012,"count":0}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":1048,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"percolateDown","ranges":[{"startOffset":1091,"endOffset":1759,"count":0}],"isBlockCoverage":false},{"functionName":"percolateUp","ranges":[{"startOffset":1763,"endOffset":2254,"count":1},{"startOffset":1941,"endOffset":2163,"count":0}],"isBlockCoverage":true},{"functionName":"removeAt","ranges":[{"startOffset":2258,"endOffset":2591,"count":1},{"startOffset":2418,"endOffset":2432,"count":0},{"startOffset":2434,"endOffset":2587,"count":0}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":2595,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":2765,"endOffset":2920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"37","url":"internal/util/debuglog.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2184,"count":1}],"isBlockCoverage":false},{"functionName":"initializeDebugEnv","ranges":[{"startOffset":362,"endOffset":634,"count":1},{"startOffset":433,"endOffset":632,"count":0}],"isBlockCoverage":true},{"functionName":"emitWarningIfNeeded","ranges":[{"startOffset":708,"endOffset":1033,"count":0}],"isBlockCoverage":false},{"functionName":"debuglogImpl","ranges":[{"startOffset":1035,"endOffset":1618,"count":7},{"startOffset":1124,"endOffset":1594,"count":5},{"startOffset":1159,"endOffset":1551,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1244,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":1838,"endOffset":2127,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1885,"endOffset":2124,"count":10445},{"startOffset":1934,"endOffset":2074,"count":7},{"startOffset":2105,"endOffset":2120,"count":0}],"isBlockCoverage":true}]},{"scriptId":"38","url":"internal/process/execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7002,"count":1}],"isBlockCoverage":false},{"functionName":"tryGetCwd","ranges":[{"startOffset":587,"endOffset":917,"count":1},{"startOffset":648,"endOffset":915,"count":0}],"isBlockCoverage":true},{"functionName":"evalModule","ranges":[{"startOffset":919,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"evalScript","ranges":[{"startOffset":1445,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"setUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3080,"endOffset":3549,"count":0}],"isBlockCoverage":false},{"functionName":"hasUncaughtExceptionCaptureCallback","ranges":[{"startOffset":3551,"endOffset":3652,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3654,"endOffset":3672,"count":0}],"isBlockCoverage":false},{"functionName":"createOnGlobalUncaughtException","ranges":[{"startOffset":4215,"endOffset":6576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4484,"endOffset":6573,"count":0}],"isBlockCoverage":false},{"functionName":"readStdin","ranges":[{"startOffset":6578,"endOffset":6783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"39","url":"internal/process/warning.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4592,"count":1}],"isBlockCoverage":false},{"functionName":"lazyOption","ranges":[{"startOffset":228,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"writeOut","ranges":[{"startOffset":639,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"writeToFile","ranges":[{"startOffset":763,"endOffset":1147,"count":0}],"isBlockCoverage":false},{"functionName":"doEmitWarning","ranges":[{"startOffset":1149,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"onWarning","ranges":[{"startOffset":1259,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarning","ranges":[{"startOffset":2560,"endOffset":3704,"count":0}],"isBlockCoverage":false},{"functionName":"emitWarningSync","ranges":[{"startOffset":3706,"endOffset":3800,"count":0}],"isBlockCoverage":false},{"functionName":"createWarningObject","ranges":[{"startOffset":3802,"endOffset":4521,"count":0}],"isBlockCoverage":false}]},{"scriptId":"40","url":"internal/bootstrap/switches/is_main_thread.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6255,"count":1}],"isBlockCoverage":true},{"functionName":"defineStream","ranges":[{"startOffset":428,"endOffset":575,"count":3}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1136,"endOffset":2703,"count":2},{"startOffset":1288,"endOffset":1414,"count":0},{"startOffset":1420,"endOffset":1606,"count":0},{"startOffset":1941,"endOffset":2161,"count":0},{"startOffset":2337,"endOffset":2582,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2525,"endOffset":2572,"count":0}],"isBlockCoverage":false},{"functionName":"dummyDestroy","ranges":[{"startOffset":2705,"endOffset":3088,"count":0}],"isBlockCoverage":false},{"functionName":"getStdout","ranges":[{"startOffset":3126,"endOffset":3457,"count":2},{"startOffset":3163,"endOffset":3376,"count":1},{"startOffset":3376,"endOffset":3438,"count":0},{"startOffset":3438,"endOffset":3456,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3405,"endOffset":3432,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":3459,"endOffset":3790,"count":8},{"startOffset":3496,"endOffset":3510,"count":7},{"startOffset":3510,"endOffset":3709,"count":1},{"startOffset":3709,"endOffset":3771,"count":0},{"startOffset":3771,"endOffset":3789,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3738,"endOffset":3765,"count":0}],"isBlockCoverage":false},{"functionName":"getStdin","ranges":[{"startOffset":3792,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"rawMethods.resetStdioForTesting","ranges":[{"startOffset":6174,"endOffset":6253,"count":0}],"isBlockCoverage":false}]},{"scriptId":"41","url":"internal/process/signal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1124,"count":1}],"isBlockCoverage":false},{"functionName":"isSignal","ranges":[{"startOffset":205,"endOffset":301,"count":11}],"isBlockCoverage":true},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":365,"endOffset":853,"count":11},{"startOffset":426,"endOffset":451,"count":0},{"startOffset":453,"endOffset":851,"count":0}],"isBlockCoverage":true},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":855,"endOffset":1050,"count":2},{"startOffset":957,"endOffset":993,"count":0},{"startOffset":995,"endOffset":1048,"count":0}],"isBlockCoverage":true}]},{"scriptId":"42","url":"internal/bootstrap/switches/does_own_process_state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3480,"count":1}],"isBlockCoverage":true},{"functionName":"wrapPosixCredentialSetters","ranges":[{"startOffset":817,"endOffset":2914,"count":1}],"isBlockCoverage":true},{"functionName":"initgroups","ranges":[{"startOffset":1278,"endOffset":1695,"count":0}],"isBlockCoverage":false},{"functionName":"setgroups","ranges":[{"startOffset":1699,"endOffset":2179,"count":0}],"isBlockCoverage":false},{"functionName":"wrapIdSetter","ranges":[{"startOffset":2183,"endOffset":2465,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2232,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"validateId","ranges":[{"startOffset":2469,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedChdir","ranges":[{"startOffset":3065,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedUmask","ranges":[{"startOffset":3238,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"wrappedCwd","ranges":[{"startOffset":3376,"endOffset":3479,"count":14},{"startOffset":3428,"endOffset":3457,"count":1}],"isBlockCoverage":true}]},{"scriptId":"43","url":"internal/main/run_main_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true}]},{"scriptId":"44","url":"internal/bootstrap/pre_execution.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14739,"count":1}],"isBlockCoverage":true},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":301,"endOffset":2428,"count":1},{"startOffset":1039,"endOffset":1261,"count":0}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":2430,"endOffset":3958,"count":1}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":3960,"endOffset":4217,"count":13},{"startOffset":4081,"endOffset":4215,"count":2}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":4219,"endOffset":4448,"count":1},{"startOffset":4358,"endOffset":4401,"count":0},{"startOffset":4403,"endOffset":4446,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":4560,"endOffset":5237,"count":1},{"startOffset":5030,"endOffset":5207,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":5239,"endOffset":5464,"count":1},{"startOffset":5341,"endOffset":5463,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":5466,"endOffset":5690,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5648,"endOffset":5682,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":5692,"endOffset":5924,"count":1},{"startOffset":5843,"endOffset":5922,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":5986,"endOffset":6121,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":6123,"endOffset":6430,"count":1},{"startOffset":6258,"endOffset":6429,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6390,"endOffset":6426,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":6432,"endOffset":6691,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":6693,"endOffset":7274,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":7469,"endOffset":9990,"count":1},{"startOffset":8180,"endOffset":8482,"count":16},{"startOffset":8225,"endOffset":8457,"count":0},{"startOffset":8799,"endOffset":8972,"count":0},{"startOffset":9000,"endOffset":9394,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9643,"endOffset":9679,"count":2536}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9685,"endOffset":9727,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9853,"endOffset":9888,"count":317}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":9894,"endOffset":9935,"count":0}],"isBlockCoverage":false},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":9992,"endOffset":10551,"count":1},{"startOffset":10388,"endOffset":10397,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":10553,"endOffset":10823,"count":1},{"startOffset":10640,"endOffset":10821,"count":0}],"isBlockCoverage":true},{"functionName":"initializePolicy","ranges":[{"startOffset":10825,"endOffset":12636,"count":1},{"startOffset":10951,"endOffset":12634,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":12638,"endOffset":12867,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":12869,"endOffset":13155,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":13157,"endOffset":13782,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":13784,"endOffset":14041,"count":1},{"startOffset":13869,"endOffset":14039,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":14043,"endOffset":14390,"count":1},{"startOffset":14237,"endOffset":14388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"45","url":"internal/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":841,"count":1}],"isBlockCoverage":false},{"functionName":"getOptionValue","ranges":[{"startOffset":147,"endOffset":286,"count":1221},{"startOffset":234,"endOffset":261,"count":1},{"startOffset":261,"endOffset":285,"count":1220}],"isBlockCoverage":true},{"functionName":"getAllowUnauthorized","ranges":[{"startOffset":288,"endOffset":753,"count":0}],"isBlockCoverage":false}]},{"scriptId":"46","url":"internal/inspector_async_hook.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1964,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":71,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1251,"endOffset":1832,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1834,"endOffset":1920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"47","url":"internal/source_map/source_map_cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8194,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":305,"endOffset":483,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":1262,"endOffset":2509,"count":1167},{"startOffset":1375,"endOffset":1449,"count":1},{"startOffset":1487,"endOffset":1512,"count":0},{"startOffset":1515,"endOffset":1522,"count":0},{"startOffset":1647,"endOffset":1785,"count":0},{"startOffset":1889,"endOffset":2507,"count":11},{"startOffset":1983,"endOffset":1989,"count":8},{"startOffset":1990,"endOffset":2021,"count":3},{"startOffset":2071,"endOffset":2126,"count":1},{"startOffset":2278,"endOffset":2503,"count":0}],"isBlockCoverage":true},{"functionName":"dataFromUrl","ranges":[{"startOffset":2511,"endOffset":3043,"count":11},{"startOffset":2647,"endOffset":2721,"count":0},{"startOffset":2728,"endOffset":2808,"count":0}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":3233,"endOffset":3541,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3498,"endOffset":3537,"count":14554}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":3543,"endOffset":3814,"count":11},{"startOffset":3756,"endOffset":3812,"count":3}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":3908,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":4728,"endOffset":5178,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4803,"endOffset":5035,"count":41}],"isBlockCoverage":true},{"functionName":"rekeySourceMap","ranges":[{"startOffset":5247,"endOffset":5442,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":5880,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":6488,"endOffset":7143,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":7361,"endOffset":8086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"48","url":"fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55597,"count":1}],"isBlockCoverage":false},{"functionName":"showTruncateDeprecation","ranges":[{"startOffset":3543,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":3832,"endOffset":3948,"count":137},{"startOffset":3907,"endOffset":3947,"count":0}],"isBlockCoverage":true},{"functionName":"makeCallback","ranges":[{"startOffset":4151,"endOffset":4294,"count":105},{"startOffset":4211,"endOffset":4256,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4267,"endOffset":4291,"count":105}],"isBlockCoverage":true},{"functionName":"makeStatsCallback","ranges":[{"startOffset":4475,"endOffset":4690,"count":4},{"startOffset":4540,"endOffset":4585,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4596,"endOffset":4687,"count":4},{"startOffset":4627,"endOffset":4642,"count":0}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":4716,"endOffset":4910,"count":34619}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":4912,"endOffset":5246,"count":98},{"startOffset":4986,"endOffset":5029,"count":0}],"isBlockCoverage":true},{"functionName":"accessSync","ranges":[{"startOffset":5248,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"exists","ranges":[{"startOffset":5488,"endOffset":5726,"count":98},{"startOffset":5685,"endOffset":5724,"count":0}],"isBlockCoverage":true},{"functionName":"suppressedCallback","ranges":[{"startOffset":5552,"endOffset":5624,"count":98},{"startOffset":5604,"endOffset":5611,"count":97},{"startOffset":5612,"endOffset":5618,"count":1}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":5799,"endOffset":5877,"count":0}],"isBlockCoverage":false},{"functionName":"existsSync","ranges":[{"startOffset":6294,"endOffset":6824,"count":39},{"startOffset":6369,"endOffset":6398,"count":0},{"startOffset":6706,"endOffset":6732,"count":0},{"startOffset":6734,"endOffset":6787,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterOpen","ranges":[{"startOffset":6826,"endOffset":7106,"count":33},{"startOffset":6908,"endOffset":6952,"count":24},{"startOffset":6952,"endOffset":7105,"count":9}],"isBlockCoverage":true},{"functionName":"readFileAfterStat","ranges":[{"startOffset":7108,"endOffset":7609,"count":9},{"startOffset":7197,"endOffset":7223,"count":0},{"startOffset":7293,"endOffset":7296,"count":0},{"startOffset":7326,"endOffset":7405,"count":0},{"startOffset":7435,"endOffset":7470,"count":0},{"startOffset":7541,"endOffset":7589,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":7611,"endOffset":8401,"count":33},{"startOffset":7692,"endOffset":7702,"count":3},{"startOffset":7781,"endOffset":7840,"count":1},{"startOffset":8094,"endOffset":8192,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":8117,"endOffset":8174,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":8403,"endOffset":8633,"count":1542},{"startOffset":8546,"endOffset":8558,"count":0},{"startOffset":8560,"endOffset":8615,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":8635,"endOffset":8946,"count":1541},{"startOffset":8753,"endOffset":8805,"count":0},{"startOffset":8892,"endOffset":8904,"count":0},{"startOffset":8906,"endOffset":8923,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":8948,"endOffset":9203,"count":1542},{"startOffset":9146,"endOffset":9158,"count":0},{"startOffset":9160,"endOffset":9177,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":9205,"endOffset":10588,"count":1546},{"startOffset":9374,"endOffset":9380,"count":0},{"startOffset":9509,"endOffset":9519,"count":1542},{"startOffset":9520,"endOffset":9523,"count":0},{"startOffset":9653,"endOffset":9676,"count":1},{"startOffset":9676,"endOffset":9737,"count":1541},{"startOffset":9737,"endOffset":9775,"count":1542},{"startOffset":9775,"endOffset":9928,"count":1541},{"startOffset":9928,"endOffset":10282,"count":1},{"startOffset":10164,"endOffset":10223,"count":0},{"startOffset":10282,"endOffset":10342,"count":1542},{"startOffset":10342,"endOffset":10438,"count":1},{"startOffset":10438,"endOffset":10500,"count":1541},{"startOffset":10460,"endOffset":10500,"count":0},{"startOffset":10500,"endOffset":10526,"count":1542},{"startOffset":10526,"endOffset":10569,"count":1541},{"startOffset":10569,"endOffset":10587,"count":1542}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":10590,"endOffset":10756,"count":2}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":10758,"endOffset":10901,"count":1545}],"isBlockCoverage":true},{"functionName":"open","ranges":[{"startOffset":10903,"endOffset":11480,"count":2},{"startOffset":11009,"endOffset":11071,"count":0},{"startOffset":11109,"endOffset":11153,"count":0}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":11483,"endOffset":11879,"count":1549}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":11986,"endOffset":13484,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":13753,"endOffset":14668,"count":1542},{"startOffset":13871,"endOffset":14020,"count":0},{"startOffset":14071,"endOffset":14092,"count":0},{"startOffset":14180,"endOffset":14199,"count":0},{"startOffset":14232,"endOffset":14362,"count":0}],"isBlockCoverage":true},{"functionName":"readv","ranges":[{"startOffset":14670,"endOffset":15101,"count":0}],"isBlockCoverage":false},{"functionName":"readvSync","ranges":[{"startOffset":15103,"endOffset":15413,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15559,"endOffset":16819,"count":6},{"startOffset":15881,"endOffset":15892,"count":0},{"startOffset":15893,"endOffset":15902,"count":0},{"startOffset":15903,"endOffset":15912,"count":0},{"startOffset":15971,"endOffset":15996,"count":0},{"startOffset":16093,"endOffset":16125,"count":0},{"startOffset":16399,"endOffset":16818,"count":0}],"isBlockCoverage":true},{"functionName":"wrapper","ranges":[{"startOffset":15626,"endOffset":15775,"count":6},{"startOffset":15757,"endOffset":15761,"count":0}],"isBlockCoverage":true},{"functionName":"writeSync","ranges":[{"startOffset":17096,"endOffset":17962,"count":3},{"startOffset":17331,"endOffset":17356,"count":0},{"startOffset":17453,"endOffset":17489,"count":0},{"startOffset":17680,"endOffset":17912,"count":0}],"isBlockCoverage":true},{"functionName":"writev","ranges":[{"startOffset":18023,"endOffset":18452,"count":0}],"isBlockCoverage":false},{"functionName":"writevSync","ranges":[{"startOffset":18581,"endOffset":18894,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":18896,"endOffset":19277,"count":0}],"isBlockCoverage":false},{"functionName":"renameSync","ranges":[{"startOffset":19279,"endOffset":19626,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":19628,"endOffset":20246,"count":0}],"isBlockCoverage":false},{"functionName":"truncateSync","ranges":[{"startOffset":20248,"endOffset":20651,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":20653,"endOffset":20969,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncateSync","ranges":[{"startOffset":20971,"endOffset":21191,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadRimraf","ranges":[{"startOffset":21194,"endOffset":21313,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":21315,"endOffset":21784,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":21786,"endOffset":22144,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":22146,"endOffset":22320,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasyncSync","ranges":[{"startOffset":22322,"endOffset":22472,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":22474,"endOffset":22640,"count":0}],"isBlockCoverage":false},{"functionName":"fsyncSync","ranges":[{"startOffset":22642,"endOffset":22784,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":22786,"endOffset":23567,"count":3},{"startOffset":22910,"endOffset":22939,"count":0},{"startOffset":22977,"endOffset":23007,"count":0},{"startOffset":23034,"endOffset":23199,"count":0},{"startOffset":23313,"endOffset":23387,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirSync","ranges":[{"startOffset":23569,"endOffset":24341,"count":1},{"startOffset":23684,"endOffset":23714,"count":0},{"startOffset":23741,"endOffset":23906,"count":0},{"startOffset":23982,"endOffset":24056,"count":0},{"startOffset":24315,"endOffset":24339,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":24343,"endOffset":24924,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSync","ranges":[{"startOffset":24926,"endOffset":25352,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":25354,"endOffset":25669,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":25671,"endOffset":26045,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":26047,"endOffset":26419,"count":4}],"isBlockCoverage":true},{"functionName":"fstatSync","ranges":[{"startOffset":26421,"endOffset":26663,"count":0}],"isBlockCoverage":false},{"functionName":"lstatSync","ranges":[{"startOffset":26665,"endOffset":26975,"count":1}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":26977,"endOffset":27284,"count":10}],"isBlockCoverage":true},{"functionName":"readlink","ranges":[{"startOffset":27286,"endOffset":27634,"count":0}],"isBlockCoverage":false},{"functionName":"readlinkSync","ranges":[{"startOffset":27636,"endOffset":27967,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":27969,"endOffset":29436,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkSync","ranges":[{"startOffset":29438,"endOffset":30095,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":30097,"endOffset":30498,"count":0}],"isBlockCoverage":false},{"functionName":"linkSync","ranges":[{"startOffset":30500,"endOffset":30949,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":30951,"endOffset":31178,"count":0}],"isBlockCoverage":false},{"functionName":"unlinkSync","ranges":[{"startOffset":31180,"endOffset":31366,"count":1}],"isBlockCoverage":true},{"functionName":"fchmod","ranges":[{"startOffset":31368,"endOffset":31610,"count":0}],"isBlockCoverage":false},{"functionName":"fchmodSync","ranges":[{"startOffset":31612,"endOffset":31806,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":31808,"endOffset":32245,"count":0}],"isBlockCoverage":false},{"functionName":"lchmodSync","ranges":[{"startOffset":32247,"endOffset":32569,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":32572,"endOffset":32848,"count":0}],"isBlockCoverage":false},{"functionName":"chmodSync","ranges":[{"startOffset":32850,"endOffset":33085,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":33087,"endOffset":33428,"count":0}],"isBlockCoverage":false},{"functionName":"lchownSync","ranges":[{"startOffset":33430,"endOffset":33730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":33732,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"fchownSync","ranges":[{"startOffset":34017,"endOffset":34276,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":34278,"endOffset":34618,"count":0}],"isBlockCoverage":false},{"functionName":"chownSync","ranges":[{"startOffset":34620,"endOffset":34918,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":34920,"endOffset":35261,"count":0}],"isBlockCoverage":false},{"functionName":"utimesSync","ranges":[{"startOffset":35263,"endOffset":35545,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":35547,"endOffset":35831,"count":0}],"isBlockCoverage":false},{"functionName":"futimesSync","ranges":[{"startOffset":35833,"endOffset":36093,"count":0}],"isBlockCoverage":false},{"functionName":"writeAll","ranges":[{"startOffset":36095,"endOffset":36745,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":36747,"endOffset":37466,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":37468,"endOffset":38170,"count":3},{"startOffset":37626,"endOffset":37743,"count":2},{"startOffset":37728,"endOffset":37737,"count":1},{"startOffset":37773,"endOffset":37779,"count":0},{"startOffset":37864,"endOffset":37870,"count":0}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":38172,"endOffset":38612,"count":0}],"isBlockCoverage":false},{"functionName":"appendFileSync","ranges":[{"startOffset":38614,"endOffset":38993,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":38995,"endOffset":39887,"count":0}],"isBlockCoverage":false},{"functionName":"watchFile","ranges":[{"startOffset":39923,"endOffset":41036,"count":0}],"isBlockCoverage":false},{"functionName":"unwatchFile","ranges":[{"startOffset":41038,"endOffset":41726,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":41942,"endOffset":42008,"count":0}],"isBlockCoverage":false},{"functionName":"splitRoot","ranges":[{"startOffset":42033,"endOffset":42211,"count":1539},{"startOffset":42100,"endOffset":42191,"count":3078},{"startOffset":42162,"endOffset":42185,"count":1539},{"startOffset":42191,"endOffset":42210,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":42216,"endOffset":42503,"count":1539},{"startOffset":42301,"endOffset":42331,"count":0},{"startOffset":42351,"endOffset":42502,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":42626,"endOffset":42869,"count":0}],"isBlockCoverage":false},{"functionName":"nextPart","ranges":[{"startOffset":42893,"endOffset":42946,"count":17703}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":42988,"endOffset":46924,"count":2143},{"startOffset":43044,"endOffset":43063,"count":0},{"startOffset":43171,"endOffset":43189,"count":0},{"startOffset":43358,"endOffset":43393,"count":604},{"startOffset":43393,"endOffset":43964,"count":1539},{"startOffset":43964,"endOffset":43983,"count":0},{"startOffset":43985,"endOffset":44160,"count":0},{"startOffset":44160,"endOffset":44297,"count":1539},{"startOffset":44297,"endOffset":46841,"count":17703},{"startOffset":44409,"endOffset":44524,"count":1539},{"startOffset":44524,"endOffset":44650,"count":16164},{"startOffset":44773,"endOffset":44910,"count":15365},{"startOffset":44864,"endOffset":44888,"count":0},{"startOffset":44910,"endOffset":44990,"count":2338},{"startOffset":45021,"endOffset":45070,"count":0},{"startOffset":45070,"endOffset":46355,"count":2338},{"startOffset":45524,"endOffset":46349,"count":0},{"startOffset":46355,"endOffset":46650,"count":0},{"startOffset":46652,"endOffset":46837,"count":0},{"startOffset":46841,"endOffset":46923,"count":1539}],"isBlockCoverage":true},{"functionName":"realpathSync.native","ranges":[{"startOffset":46949,"endOffset":47188,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":47192,"endOffset":50621,"count":0}],"isBlockCoverage":false},{"functionName":"realpath.native","ranges":[{"startOffset":50642,"endOffset":50912,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":50915,"endOffset":51386,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtempSync","ranges":[{"startOffset":51389,"endOffset":51863,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":51866,"endOffset":52396,"count":0}],"isBlockCoverage":false},{"functionName":"copyFileSync","ranges":[{"startOffset":52399,"endOffset":52771,"count":0}],"isBlockCoverage":false},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":52773,"endOffset":52967,"count":199},{"startOffset":52821,"endOffset":52965,"count":1}],"isBlockCoverage":true},{"functionName":"createReadStream","ranges":[{"startOffset":52969,"endOffset":53074,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":53076,"endOffset":53183,"count":2}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":54364,"endOffset":54432,"count":50}],"isBlockCoverage":true},{"functionName":"set ReadStream","ranges":[{"startOffset":54437,"endOffset":54484,"count":0}],"isBlockCoverage":false},{"functionName":"get WriteStream","ranges":[{"startOffset":54489,"endOffset":54559,"count":49}],"isBlockCoverage":true},{"functionName":"set WriteStream","ranges":[{"startOffset":54564,"endOffset":54613,"count":0}],"isBlockCoverage":false},{"functionName":"get FileReadStream","ranges":[{"startOffset":54751,"endOffset":54827,"count":49}],"isBlockCoverage":true},{"functionName":"set FileReadStream","ranges":[{"startOffset":54832,"endOffset":54887,"count":0}],"isBlockCoverage":false},{"functionName":"get FileWriteStream","ranges":[{"startOffset":54892,"endOffset":54970,"count":49}],"isBlockCoverage":true},{"functionName":"set FileWriteStream","ranges":[{"startOffset":54975,"endOffset":55032,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":55463,"endOffset":55588,"count":49},{"startOffset":55508,"endOffset":55559,"count":1}],"isBlockCoverage":true}]},{"scriptId":"49","url":"internal/fs/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18817,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadFs","ranges":[{"startOffset":2265,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"assertEncoding","ranges":[{"startOffset":2346,"endOffset":2493,"count":3718},{"startOffset":2397,"endOffset":2428,"count":1574},{"startOffset":2430,"endOffset":2491,"count":0}],"isBlockCoverage":true},{"functionName":"Dirent","ranges":[{"startOffset":2512,"endOffset":2587,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":2591,"endOffset":2652,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":2656,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockDevice","ranges":[{"startOffset":2717,"endOffset":2782,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterDevice","ranges":[{"startOffset":2786,"endOffset":2854,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolicLink","ranges":[{"startOffset":2858,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"isFIFO","ranges":[{"startOffset":2927,"endOffset":2984,"count":0}],"isBlockCoverage":false},{"functionName":"isSocket","ranges":[{"startOffset":2988,"endOffset":3049,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats","ranges":[{"startOffset":3094,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"DirentFromStats.<computed>","ranges":[{"startOffset":3318,"endOffset":3367,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":3372,"endOffset":3500,"count":2},{"startOffset":3455,"endOffset":3481,"count":0}],"isBlockCoverage":true},{"functionName":"getDirents","ranges":[{"startOffset":3502,"endOffset":4464,"count":0}],"isBlockCoverage":false},{"functionName":"getDirent","ranges":[{"startOffset":4466,"endOffset":5080,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":5082,"endOffset":5622,"count":3727},{"startOffset":5177,"endOffset":5215,"count":3721},{"startOffset":5217,"endOffset":5249,"count":9},{"startOffset":5249,"endOffset":5286,"count":3718},{"startOffset":5286,"endOffset":5404,"count":1574},{"startOffset":5404,"endOffset":5526,"count":2144},{"startOffset":5443,"endOffset":5526,"count":0},{"startOffset":5526,"endOffset":5621,"count":3718}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":5624,"endOffset":6261,"count":6990},{"startOffset":5694,"endOffset":5883,"count":10},{"startOffset":5883,"endOffset":5915,"count":6980},{"startOffset":5915,"endOffset":6259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6402,"endOffset":6955,"count":3884},{"startOffset":6632,"endOffset":6652,"count":0},{"startOffset":6706,"endOffset":6754,"count":0},{"startOffset":6773,"endOffset":6954,"count":0}],"isBlockCoverage":true},{"functionName":"preprocessSymlinkDestination","ranges":[{"startOffset":6959,"endOffset":7469,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase","ranges":[{"startOffset":7502,"endOffset":7809,"count":10}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":7845,"endOffset":7902,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":7934,"endOffset":7991,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isBlockDevice","ranges":[{"startOffset":8030,"endOffset":8087,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isCharacterDevice","ranges":[{"startOffset":8130,"endOffset":8187,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSymbolicLink","ranges":[{"startOffset":8227,"endOffset":8284,"count":1}],"isBlockCoverage":true},{"functionName":"StatsBase.isFIFO","ranges":[{"startOffset":8316,"endOffset":8373,"count":0}],"isBlockCoverage":false},{"functionName":"StatsBase.isSocket","ranges":[{"startOffset":8407,"endOffset":8465,"count":0}],"isBlockCoverage":false},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":8590,"endOffset":8672,"count":40}],"isBlockCoverage":true},{"functionName":"nsFromTimeSpecBigInt","ranges":[{"startOffset":8674,"endOffset":8757,"count":0}],"isBlockCoverage":false},{"functionName":"dateFromMs","ranges":[{"startOffset":9106,"endOffset":9170,"count":40}],"isBlockCoverage":true},{"functionName":"BigIntStats","ranges":[{"startOffset":9172,"endOffset":9908,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntStats._checkModeProperty","ranges":[{"startOffset":10066,"endOffset":10312,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":10315,"endOffset":10832,"count":10}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":11173,"endOffset":11403,"count":7},{"startOffset":11210,"endOffset":11288,"count":0},{"startOffset":11290,"endOffset":11357,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":11406,"endOffset":12484,"count":10},{"startOffset":11487,"endOffset":12012,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":12486,"endOffset":13694,"count":1584},{"startOffset":12551,"endOffset":12574,"count":0},{"startOffset":12597,"endOffset":12623,"count":33},{"startOffset":12623,"endOffset":12648,"count":1551},{"startOffset":12648,"endOffset":12675,"count":1546},{"startOffset":12680,"endOffset":12691,"count":0},{"startOffset":12713,"endOffset":12750,"count":0},{"startOffset":12755,"endOffset":12781,"count":0},{"startOffset":12786,"endOffset":12798,"count":0},{"startOffset":12820,"endOffset":12856,"count":0},{"startOffset":12862,"endOffset":12909,"count":4},{"startOffset":12914,"endOffset":12925,"count":1},{"startOffset":12947,"endOffset":13004,"count":1},{"startOffset":13010,"endOffset":13056,"count":0},{"startOffset":13061,"endOffset":13072,"count":0},{"startOffset":13094,"endOffset":13149,"count":0},{"startOffset":13155,"endOffset":13203,"count":0},{"startOffset":13208,"endOffset":13219,"count":0},{"startOffset":13241,"endOffset":13299,"count":0},{"startOffset":13304,"endOffset":13315,"count":0},{"startOffset":13337,"endOffset":13395,"count":0},{"startOffset":13401,"endOffset":13448,"count":0},{"startOffset":13453,"endOffset":13464,"count":0},{"startOffset":13486,"endOffset":13542,"count":0},{"startOffset":13547,"endOffset":13558,"count":0},{"startOffset":13580,"endOffset":13636,"count":0},{"startOffset":13640,"endOffset":13693,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13740,"endOffset":14100,"count":0}],"isBlockCoverage":false},{"functionName":"toUnixTimestamp","ranges":[{"startOffset":14162,"endOffset":14605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14659,"endOffset":15038,"count":1542},{"startOffset":14715,"endOffset":14782,"count":0},{"startOffset":14803,"endOffset":14870,"count":0},{"startOffset":14911,"endOffset":15034,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15096,"endOffset":15370,"count":9},{"startOffset":15159,"endOffset":15238,"count":0},{"startOffset":15278,"endOffset":15366,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15412,"endOffset":15682,"count":3884},{"startOffset":15474,"endOffset":15496,"count":0},{"startOffset":15498,"endOffset":15584,"count":0},{"startOffset":15660,"endOffset":15680,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15727,"endOffset":15862,"count":1741}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15910,"endOffset":16241,"count":0}],"isBlockCoverage":false},{"functionName":"warnOnNonPortableTemplate","ranges":[{"startOffset":16282,"endOffset":16740,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16877,"endOffset":17380,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17421,"endOffset":17999,"count":98},{"startOffset":17548,"endOffset":17645,"count":0},{"startOffset":17708,"endOffset":17729,"count":0},{"startOffset":17812,"endOffset":17998,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18062,"endOffset":18245,"count":2},{"startOffset":18116,"endOffset":18243,"count":0}],"isBlockCoverage":true}]},{"scriptId":"50","url":"internal/fs/dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6531,"count":1}],"isBlockCoverage":false},{"functionName":"Dir","ranges":[{"startOffset":1092,"endOffset":1864,"count":0}],"isBlockCoverage":false},{"functionName":"get path","ranges":[{"startOffset":1868,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":1915,"endOffset":1982,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1986,"endOffset":3358,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":3362,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4122,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"closeSync","ranges":[{"startOffset":4686,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":5067,"endOffset":5330,"count":0}],"isBlockCoverage":false},{"functionName":"opendir","ranges":[{"startOffset":5491,"endOffset":6116,"count":0}],"isBlockCoverage":false},{"functionName":"opendirSync","ranges":[{"startOffset":6118,"endOffset":6475,"count":0}],"isBlockCoverage":false}]},{"scriptId":"51","url":"internal/modules/cjs/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4937,"count":1}],"isBlockCoverage":false},{"functionName":"loadNativeModule","ranges":[{"startOffset":540,"endOffset":746,"count":1768},{"startOffset":644,"endOffset":744,"count":270}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":995,"endOffset":2840,"count":1167},{"startOffset":1109,"endOffset":2232,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1209,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":2254,"endOffset":2316,"count":2627}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2325,"endOffset":2471,"count":56}],"isBlockCoverage":true},{"functionName":"paths","ranges":[{"startOffset":2505,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3025,"endOffset":3151,"count":32},{"startOffset":3094,"endOffset":3131,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":3153,"endOffset":4618,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":4620,"endOffset":4808,"count":1167},{"startOffset":4773,"endOffset":4807,"count":0}],"isBlockCoverage":true}]},{"scriptId":"52","url":"url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29915,"count":1}],"isBlockCoverage":false},{"functionName":"Url","ranges":[{"startOffset":1837,"endOffset":2113,"count":2}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":3791,"endOffset":4005,"count":2},{"startOffset":3879,"endOffset":3890,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4029,"endOffset":13457,"count":2},{"startOffset":4480,"endOffset":5669,"count":14},{"startOffset":4929,"endOffset":4997,"count":2},{"startOffset":4955,"endOffset":4964,"count":0},{"startOffset":4997,"endOffset":5144,"count":12},{"startOffset":5013,"endOffset":5087,"count":0},{"startOffset":5103,"endOffset":5144,"count":0},{"startOffset":5266,"endOffset":5307,"count":0},{"startOffset":5340,"endOffset":5405,"count":0},{"startOffset":5414,"endOffset":5580,"count":0},{"startOffset":5594,"endOffset":5665,"count":0},{"startOffset":5912,"endOffset":5960,"count":0},{"startOffset":5968,"endOffset":6021,"count":0},{"startOffset":6027,"endOffset":6357,"count":0},{"startOffset":6388,"endOffset":6399,"count":1},{"startOffset":6401,"endOffset":7044,"count":1},{"startOffset":6504,"endOffset":7040,"count":0},{"startOffset":7119,"endOffset":7253,"count":0},{"startOffset":7511,"endOffset":7519,"count":1},{"startOffset":7520,"endOffset":7545,"count":1},{"startOffset":7547,"endOffset":7796,"count":1},{"startOffset":7681,"endOffset":7728,"count":0},{"startOffset":7730,"endOffset":7792,"count":0},{"startOffset":7866,"endOffset":7896,"count":0},{"startOffset":7900,"endOffset":11545,"count":0},{"startOffset":11927,"endOffset":12161,"count":14},{"startOffset":11994,"endOffset":12066,"count":0},{"startOffset":12104,"endOffset":12125,"count":0},{"startOffset":12127,"endOffset":12157,"count":0},{"startOffset":12189,"endOffset":12602,"count":0},{"startOffset":12630,"endOffset":12757,"count":0},{"startOffset":12807,"endOffset":12851,"count":0},{"startOffset":12887,"endOffset":12900,"count":0},{"startOffset":12993,"endOffset":13067,"count":0},{"startOffset":13106,"endOffset":13128,"count":0},{"startOffset":13129,"endOffset":13146,"count":0},{"startOffset":13148,"endOffset":13178,"count":0},{"startOffset":13229,"endOffset":13243,"count":0},{"startOffset":13275,"endOffset":13280,"count":0}],"isBlockCoverage":true},{"functionName":"getHostname","ranges":[{"startOffset":13460,"endOffset":14185,"count":0}],"isBlockCoverage":false},{"functionName":"autoEscapeStr","ranges":[{"startOffset":15241,"endOffset":15947,"count":2},{"startOffset":15358,"endOffset":15724,"count":14},{"startOffset":15509,"endOffset":15720,"count":0},{"startOffset":15799,"endOffset":15946,"count":0}],"isBlockCoverage":true},{"functionName":"urlFormat","ranges":[{"startOffset":15993,"endOffset":16703,"count":1},{"startOffset":16253,"endOffset":16295,"count":0},{"startOffset":16358,"endOffset":16480,"count":0},{"startOffset":16519,"endOffset":16672,"count":0}],"isBlockCoverage":true},{"functionName":"format","ranges":[{"startOffset":17395,"endOffset":19811,"count":3},{"startOffset":17457,"endOffset":17531,"count":0},{"startOffset":17602,"endOffset":17607,"count":0},{"startOffset":17692,"endOffset":17726,"count":0},{"startOffset":17751,"endOffset":17935,"count":0},{"startOffset":17963,"endOffset":17996,"count":0},{"startOffset":17998,"endOffset":18123,"count":0},{"startOffset":18162,"endOffset":18178,"count":0},{"startOffset":18203,"endOffset":18253,"count":0},{"startOffset":18266,"endOffset":18282,"count":0},{"startOffset":18371,"endOffset":18777,"count":28},{"startOffset":18417,"endOffset":18584,"count":0},{"startOffset":18591,"endOffset":18767,"count":0},{"startOffset":18797,"endOffset":18934,"count":0},{"startOffset":19099,"endOffset":19554,"count":0},{"startOffset":19608,"endOffset":19643,"count":0},{"startOffset":19649,"endOffset":19667,"count":0},{"startOffset":19681,"endOffset":19727,"count":0},{"startOffset":19733,"endOffset":19755,"count":0}],"isBlockCoverage":true},{"functionName":"urlResolve","ranges":[{"startOffset":19814,"endOffset":19913,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":19939,"endOffset":20040,"count":0}],"isBlockCoverage":false},{"functionName":"urlResolveObject","ranges":[{"startOffset":20043,"endOffset":20186,"count":0}],"isBlockCoverage":false},{"functionName":"resolveObject","ranges":[{"startOffset":20218,"endOffset":29337,"count":0}],"isBlockCoverage":false},{"functionName":"parseHost","ranges":[{"startOffset":29366,"endOffset":29639,"count":0}],"isBlockCoverage":false}]},{"scriptId":"53","url":"internal/idna.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":false}]},{"scriptId":"54","url":"internal/process/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2957,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":298,"endOffset":811,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":815,"endOffset":1057,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":1061,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":1116,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":1208,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1261,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1353,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1404,"endOffset":1481,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1485,"endOffset":1530,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1534,"endOffset":1671,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1675,"endOffset":1747,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1751,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1939,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":2007,"endOffset":2234,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":2238,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":2328,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2531,"endOffset":2702,"count":1},{"startOffset":2597,"endOffset":2700,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2704,"endOffset":2828,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2830,"endOffset":2904,"count":0}],"isBlockCoverage":false}]},{"scriptId":"55","url":"child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18659,"count":1}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":2144,"endOffset":3829,"count":4},{"startOffset":2539,"endOffset":2555,"count":0},{"startOffset":2659,"endOffset":2742,"count":0},{"startOffset":2851,"endOffset":2870,"count":0},{"startOffset":2909,"endOffset":2933,"count":0},{"startOffset":2935,"endOffset":3157,"count":0},{"startOffset":3247,"endOffset":3314,"count":0},{"startOffset":3543,"endOffset":3551,"count":0},{"startOffset":3582,"endOffset":3692,"count":0}],"isBlockCoverage":true},{"functionName":"_forkChild","ranges":[{"startOffset":3831,"endOffset":4320,"count":1}],"isBlockCoverage":true},{"functionName":"onNewListener","ranges":[{"startOffset":4059,"endOffset":4168,"count":8},{"startOffset":4117,"endOffset":4141,"count":7},{"startOffset":4143,"endOffset":4164,"count":1}],"isBlockCoverage":true},{"functionName":"onRemoveListener","ranges":[{"startOffset":4202,"endOffset":4316,"count":2},{"startOffset":4289,"endOffset":4312,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":4322,"endOffset":4730,"count":1},{"startOffset":4416,"endOffset":4470,"count":0},{"startOffset":4624,"endOffset":4639,"count":0}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":4733,"endOffset":4980,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":5016,"endOffset":5444,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5037,"endOffset":5441,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":5561,"endOffset":10415,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":10539,"endOffset":14778,"count":5},{"startOffset":10657,"endOffset":10722,"count":0},{"startOffset":10750,"endOffset":10781,"count":4},{"startOffset":10781,"endOffset":10972,"count":1},{"startOffset":10805,"endOffset":10825,"count":0},{"startOffset":10861,"endOffset":10926,"count":0},{"startOffset":11007,"endOffset":11020,"count":0},{"startOffset":11085,"endOffset":11146,"count":0},{"startOffset":11209,"endOffset":11249,"count":4},{"startOffset":11251,"endOffset":11330,"count":0},{"startOffset":11399,"endOffset":11445,"count":0},{"startOffset":11447,"endOffset":11572,"count":0},{"startOffset":11635,"endOffset":11659,"count":0},{"startOffset":11661,"endOffset":11739,"count":0},{"startOffset":11802,"endOffset":11826,"count":0},{"startOffset":11828,"endOffset":11906,"count":0},{"startOffset":12017,"endOffset":12059,"count":0},{"startOffset":12061,"endOffset":12192,"count":0},{"startOffset":12255,"endOffset":12297,"count":0},{"startOffset":12299,"endOffset":12382,"count":0},{"startOffset":12457,"endOffset":12506,"count":0},{"startOffset":12508,"endOffset":12639,"count":0},{"startOffset":12778,"endOffset":12832,"count":0},{"startOffset":12834,"endOffset":13018,"count":0},{"startOffset":13041,"endOffset":13804,"count":1},{"startOffset":13178,"endOffset":13565,"count":0},{"startOffset":13626,"endOffset":13647,"count":0},{"startOffset":13703,"endOffset":13727,"count":0},{"startOffset":13847,"endOffset":13885,"count":0},{"startOffset":13948,"endOffset":13962,"count":1},{"startOffset":14227,"endOffset":14232,"count":1},{"startOffset":14255,"endOffset":14317,"count":1},{"startOffset":14394,"endOffset":14504,"count":1193}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":14781,"endOffset":14983,"count":4}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":14985,"endOffset":16471,"count":1},{"startOffset":15525,"endOffset":15625,"count":0},{"startOffset":15754,"endOffset":16425,"count":3},{"startOffset":15841,"endOffset":16421,"count":0}],"isBlockCoverage":true},{"functionName":"checkExecSyncError","ranges":[{"startOffset":16474,"endOffset":16903,"count":1},{"startOffset":16548,"endOffset":16574,"count":0},{"startOffset":16602,"endOffset":16842,"count":0},{"startOffset":16854,"endOffset":16887,"count":0}],"isBlockCoverage":true},{"functionName":"execFileSync","ranges":[{"startOffset":16906,"endOffset":17316,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":17319,"endOffset":17695,"count":1},{"startOffset":17551,"endOffset":17584,"count":0},{"startOffset":17661,"endOffset":17671,"count":0}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":17698,"endOffset":17886,"count":1},{"startOffset":17756,"endOffset":17802,"count":0},{"startOffset":17804,"endOffset":17884,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":17889,"endOffset":18162,"count":1},{"startOffset":18008,"endOffset":18160,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":18165,"endOffset":18528,"count":1},{"startOffset":18279,"endOffset":18329,"count":0},{"startOffset":18359,"endOffset":18526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"56","url":"internal/child_process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30671,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2102,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2168,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2283,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2357,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2527,"endOffset":4081,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4088,"endOffset":4834,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":4841,"endOffset":5296,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5360,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5426,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5544,"endOffset":5664,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5671,"endOffset":5830,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":5839,"endOffset":6186,"count":5},{"startOffset":5931,"endOffset":5945,"count":0},{"startOffset":5950,"endOffset":6004,"count":1},{"startOffset":6009,"endOffset":6054,"count":4},{"startOffset":6059,"endOffset":6122,"count":0},{"startOffset":6143,"endOffset":6165,"count":4}],"isBlockCoverage":true},{"functionName":"ChildProcess","ranges":[{"startOffset":6188,"endOffset":7533,"count":4}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":6511,"endOffset":7530,"count":4},{"startOffset":6559,"endOffset":6602,"count":0},{"startOffset":6669,"endOffset":6704,"count":0},{"startOffset":6780,"endOffset":7057,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":7656,"endOffset":8134,"count":4},{"startOffset":7746,"endOffset":7753,"count":0},{"startOffset":7796,"endOffset":8132,"count":16},{"startOffset":8037,"endOffset":8056,"count":0},{"startOffset":8057,"endOffset":8082,"count":0},{"startOffset":8107,"endOffset":8132,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8137,"endOffset":8248,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8251,"endOffset":8480,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8482,"endOffset":8595,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8629,"endOffset":12585,"count":4},{"startOffset":8718,"endOffset":8789,"count":0},{"startOffset":8869,"endOffset":8878,"count":0},{"startOffset":9057,"endOffset":9098,"count":0},{"startOffset":9099,"endOffset":9144,"count":0},{"startOffset":9146,"endOffset":9272,"count":0},{"startOffset":9460,"endOffset":9482,"count":0},{"startOffset":9529,"endOffset":9695,"count":0},{"startOffset":9986,"endOffset":10132,"count":0},{"startOffset":10378,"endOffset":10635,"count":0},{"startOffset":10650,"endOffset":10937,"count":0},{"startOffset":11008,"endOffset":12019,"count":16},{"startOffset":11073,"endOffset":11082,"count":0},{"startOffset":11104,"endOffset":11155,"count":4},{"startOffset":11155,"endOffset":11376,"count":12},{"startOffset":11376,"endOffset":11638,"count":0},{"startOffset":11638,"endOffset":11663,"count":12},{"startOffset":11663,"endOffset":12015,"count":0},{"startOffset":12087,"endOffset":12108,"count":0},{"startOffset":12184,"endOffset":12205,"count":0},{"startOffset":12281,"endOffset":12302,"count":0},{"startOffset":12373,"endOffset":12445,"count":16},{"startOffset":12426,"endOffset":12443,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11954,"endOffset":11999,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12589,"endOffset":12650,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12683,"endOffset":13348,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13381,"endOffset":13435,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13470,"endOffset":13526,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13568,"endOffset":13625,"count":5}],"isBlockCoverage":false},{"functionName":"Control","ranges":[{"startOffset":13630,"endOffset":13698,"count":5}],"isBlockCoverage":true},{"functionName":"refCounted","ranges":[{"startOffset":14012,"endOffset":14120,"count":6},{"startOffset":14054,"endOffset":14080,"count":3},{"startOffset":14082,"endOffset":14116,"count":3}],"isBlockCoverage":true},{"functionName":"unrefCounted","ranges":[{"startOffset":14124,"endOffset":14262,"count":5},{"startOffset":14168,"endOffset":14194,"count":2},{"startOffset":14196,"endOffset":14258,"count":2}],"isBlockCoverage":true},{"functionName":"ref","ranges":[{"startOffset":14266,"endOffset":14337,"count":1}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":14341,"endOffset":14416,"count":2}],"isBlockCoverage":true},{"functionName":"get fd","ranges":[{"startOffset":14420,"endOffset":14491,"count":2},{"startOffset":14475,"endOffset":14486,"count":0}],"isBlockCoverage":true},{"functionName":"setupChannel","ranges":[{"startOffset":14641,"endOffset":26294,"count":5},{"startOffset":15205,"endOffset":15269,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14870,"endOffset":14912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14968,"endOffset":15012,"count":0}],"isBlockCoverage":false},{"functionName":"channel.onread","ranges":[{"startOffset":15505,"endOffset":16684,"count":12},{"startOffset":15630,"endOffset":16504,"count":8},{"startOffset":15839,"endOffset":15866,"count":0},{"startOffset":16188,"endOffset":16421,"count":0},{"startOffset":16504,"endOffset":16680,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16838,"endOffset":19179,"count":0}],"isBlockCoverage":false},{"functionName":"target.send","ranges":[{"startOffset":19199,"endOffset":20013,"count":23},{"startOffset":19284,"endOffset":19369,"count":8},{"startOffset":19369,"endOffset":19646,"count":15},{"startOffset":19410,"endOffset":19470,"count":0},{"startOffset":19502,"endOffset":19569,"count":0},{"startOffset":19571,"endOffset":19646,"count":0},{"startOffset":19793,"endOffset":20012,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19955,"endOffset":19983,"count":0}],"isBlockCoverage":false},{"functionName":"target._send","ranges":[{"startOffset":20033,"endOffset":24298,"count":23},{"startOffset":20106,"endOffset":20121,"count":0},{"startOffset":20162,"endOffset":20200,"count":0},{"startOffset":20486,"endOffset":20524,"count":19},{"startOffset":20525,"endOffset":20563,"count":0},{"startOffset":20564,"endOffset":20603,"count":0},{"startOffset":20605,"endOffset":20722,"count":0},{"startOffset":20803,"endOffset":20854,"count":0},{"startOffset":20931,"endOffset":22648,"count":0},{"startOffset":22676,"endOffset":22810,"count":0},{"startOffset":22812,"endOffset":23069,"count":0},{"startOffset":23276,"endOffset":23452,"count":0},{"startOffset":23479,"endOffset":23670,"count":5},{"startOffset":23670,"endOffset":23763,"count":18},{"startOffset":23712,"endOffset":23763,"count":6},{"startOffset":23769,"endOffset":24171,"count":0}],"isBlockCoverage":true},{"functionName":"req.oncomplete","ranges":[{"startOffset":23506,"endOffset":23631,"count":5},{"startOffset":23606,"endOffset":23621,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24117,"endOffset":24145,"count":0}],"isBlockCoverage":false},{"functionName":"target.disconnect","ranges":[{"startOffset":24872,"endOffset":25296,"count":4},{"startOffset":24910,"endOffset":24985,"count":0}],"isBlockCoverage":true},{"functionName":"target._disconnect","ranges":[{"startOffset":25322,"endOffset":25939,"count":4},{"startOffset":25527,"endOffset":25552,"count":0},{"startOffset":25802,"endOffset":25904,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":25581,"endOffset":25708,"count":4},{"startOffset":25618,"endOffset":25625,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":25944,"endOffset":26028,"count":8}],"isBlockCoverage":true},{"functionName":"handleMessage","ranges":[{"startOffset":26032,"endOffset":26250,"count":8},{"startOffset":26115,"endOffset":26122,"count":0},{"startOffset":26156,"endOffset":26175,"count":0}],"isBlockCoverage":true},{"functionName":"isInternal","ranges":[{"startOffset":26329,"endOffset":26611,"count":8},{"startOffset":26473,"endOffset":26529,"count":0},{"startOffset":26530,"endOffset":26607,"count":0}],"isBlockCoverage":true},{"functionName":"nop","ranges":[{"startOffset":26613,"endOffset":26631,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":26633,"endOffset":29369,"count":5},{"startOffset":26765,"endOffset":26809,"count":1},{"startOffset":26809,"endOffset":26908,"count":4},{"startOffset":26841,"endOffset":26908,"count":0},{"startOffset":27151,"endOffset":27173,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27271,"endOffset":29328,"count":19},{"startOffset":27529,"endOffset":27577,"count":0},{"startOffset":27607,"endOffset":27650,"count":0},{"startOffset":27677,"endOffset":27720,"count":16},{"startOffset":27707,"endOffset":27719,"count":12},{"startOffset":27722,"endOffset":27920,"count":3},{"startOffset":27852,"endOffset":27894,"count":0},{"startOffset":27920,"endOffset":29307,"count":16},{"startOffset":27947,"endOffset":28325,"count":4},{"startOffset":27986,"endOffset":28171,"count":0},{"startOffset":28325,"endOffset":29307,"count":12},{"startOffset":28356,"endOffset":28429,"count":0},{"startOffset":28465,"endOffset":28496,"count":0},{"startOffset":28583,"endOffset":28593,"count":0},{"startOffset":28609,"endOffset":29307,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":27296,"endOffset":27488,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":29372,"endOffset":29688,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":29691,"endOffset":29892,"count":8},{"startOffset":29811,"endOffset":29890,"count":4}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":29894,"endOffset":30546,"count":1},{"startOffset":30096,"endOffset":30220,"count":3},{"startOffset":30135,"endOffset":30144,"count":1},{"startOffset":30144,"endOffset":30220,"count":2},{"startOffset":30353,"endOffset":30526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"57","url":"net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47067,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3350,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":3370,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":3466,"endOffset":3847,"count":2},{"startOffset":3633,"endOffset":3655,"count":0},{"startOffset":3689,"endOffset":3846,"count":0}],"isBlockCoverage":true},{"functionName":"getNewAsyncId","ranges":[{"startOffset":3850,"endOffset":3988,"count":2},{"startOffset":3945,"endOffset":3963,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":3991,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":4076,"endOffset":4180,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":4403,"endOffset":4694,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":5189,"endOffset":5915,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":5987,"endOffset":6590,"count":2},{"startOffset":6343,"endOffset":6584,"count":0}],"isBlockCoverage":true},{"functionName":"Socket","ranges":[{"startOffset":6725,"endOffset":10576,"count":2},{"startOffset":6785,"endOffset":6812,"count":0},{"startOffset":7362,"endOffset":7388,"count":0},{"startOffset":7932,"endOffset":8040,"count":0},{"startOffset":8137,"endOffset":8216,"count":0},{"startOffset":8217,"endOffset":8265,"count":0},{"startOffset":8267,"endOffset":8498,"count":0},{"startOffset":9049,"endOffset":9083,"count":0},{"startOffset":9163,"endOffset":9174,"count":1},{"startOffset":9263,"endOffset":9792,"count":0},{"startOffset":10158,"endOffset":10423,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":10749,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":10999,"endOffset":11647,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":11651,"endOffset":12030,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":12237,"endOffset":12693,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":12775,"endOffset":13279,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":13313,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":13798,"endOffset":14045,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":14076,"endOffset":14120,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14187,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14291,"endOffset":14347,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14438,"endOffset":14753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14822,"endOffset":14930,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":14998,"endOffset":15043,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":15050,"endOffset":15296,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":15388,"endOffset":15617,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":15644,"endOffset":15796,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":15825,"endOffset":16159,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":16189,"endOffset":16373,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":16401,"endOffset":16587,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":16634,"endOffset":16919,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":16953,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":17132,"endOffset":18086,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":18121,"endOffset":18412,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":18415,"endOffset":18575,"count":8}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":18602,"endOffset":18693,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":18726,"endOffset":18792,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":18824,"endOffset":18888,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":18918,"endOffset":18978,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":19015,"endOffset":19300,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":19332,"endOffset":19397,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":19427,"endOffset":19486,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":19528,"endOffset":19575,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":19611,"endOffset":20372,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":20403,"endOffset":20471,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":20501,"endOffset":20582,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":20775,"endOffset":20879,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":20911,"endOffset":21852,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":21857,"endOffset":22656,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":22659,"endOffset":24364,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":24394,"endOffset":25698,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":25702,"endOffset":28618,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":28621,"endOffset":28680,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":28706,"endOffset":28893,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":28922,"endOffset":29115,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":29119,"endOffset":30367,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":30370,"endOffset":31699,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":31810,"endOffset":31875,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":31943,"endOffset":33408,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":33410,"endOffset":35761,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":35828,"endOffset":35890,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":35893,"endOffset":36008,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":36011,"endOffset":37229,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":37258,"endOffset":40765,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":40768,"endOffset":41180,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":41243,"endOffset":41286,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":41361,"endOffset":41650,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":41653,"endOffset":42314,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":42351,"endOffset":43104,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":43133,"endOffset":44000,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":44042,"endOffset":44428,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":44432,"endOffset":44515,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":44574,"endOffset":44736,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":44939,"endOffset":44975,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":44979,"endOffset":45020,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":45080,"endOffset":45111,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":45115,"endOffset":45151,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":45189,"endOffset":45415,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":45441,"endOffset":45539,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":45567,"endOffset":45666,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":45827,"endOffset":46496,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":46535,"endOffset":46776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"58","url":"stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2144,"count":1}],"isBlockCoverage":false},{"functionName":"_uint8ArrayToBuffer","ranges":[{"startOffset":1935,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"59","url":"internal/streams/pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7428,"count":1}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":551,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"popCallback","ranges":[{"startOffset":1945,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":2318,"endOffset":2397,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":2399,"endOffset":2479,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":2481,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"isStream","ranges":[{"startOffset":2564,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":2637,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"makeAsyncIterable","ranges":[{"startOffset":2962,"endOffset":3238,"count":0}],"isBlockCoverage":false},{"functionName":"fromReadable","ranges":[{"startOffset":3240,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"pump","ranges":[{"startOffset":3466,"endOffset":3849,"count":0}],"isBlockCoverage":false},{"functionName":"pipeline","ranges":[{"startOffset":3851,"endOffset":7399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"60","url":"internal/streams/destroy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3537,"count":1}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":123,"endOffset":1132,"count":2},{"startOffset":249,"endOffset":263,"count":0},{"startOffset":266,"endOffset":343,"count":0},{"startOffset":356,"endOffset":447,"count":0},{"startOffset":645,"endOffset":674,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":705,"endOffset":1112,"count":2},{"startOffset":729,"endOffset":834,"count":0},{"startOffset":889,"endOffset":919,"count":0},{"startOffset":955,"endOffset":977,"count":0},{"startOffset":992,"endOffset":1052,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorCloseNT","ranges":[{"startOffset":1134,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":1223,"endOffset":1441,"count":2},{"startOffset":1328,"endOffset":1360,"count":0},{"startOffset":1387,"endOffset":1408,"count":0}],"isBlockCoverage":true},{"functionName":"emitErrorNT","ranges":[{"startOffset":1443,"endOffset":1730,"count":0}],"isBlockCoverage":false},{"functionName":"undestroy","ranges":[{"startOffset":1732,"endOffset":2269,"count":2}],"isBlockCoverage":true},{"functionName":"errorOrDestroy","ranges":[{"startOffset":2271,"endOffset":3041,"count":0}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":3043,"endOffset":3148,"count":0}],"isBlockCoverage":false},{"functionName":"destroyer","ranges":[{"startOffset":3183,"endOffset":3459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"61","url":"internal/streams/end-of-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5752,"count":1}],"isBlockCoverage":false},{"functionName":"isRequest","ranges":[{"startOffset":280,"endOffset":375,"count":0}],"isBlockCoverage":false},{"functionName":"isReadable","ranges":[{"startOffset":377,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"isWritable","ranges":[{"startOffset":537,"endOffset":695,"count":0}],"isBlockCoverage":false},{"functionName":"isWritableFinished","ranges":[{"startOffset":697,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":936,"endOffset":953,"count":0}],"isBlockCoverage":false},{"functionName":"isReadableEnded","ranges":[{"startOffset":955,"endOffset":1188,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":1190,"endOffset":5728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"62","url":"internal/streams/legacy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2081,"count":1}],"isBlockCoverage":false},{"functionName":"Stream","ranges":[{"startOffset":96,"endOffset":144,"count":6}],"isBlockCoverage":true},{"functionName":"Stream.pipe","ranges":[{"startOffset":258,"endOffset":2053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"63","url":"_stream_readable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38265,"count":1}],"isBlockCoverage":false},{"functionName":"prependListener","ranges":[{"startOffset":2299,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableState","ranges":[{"startOffset":3108,"endOffset":6492,"count":2},{"startOffset":3507,"endOffset":3550,"count":0},{"startOffset":4083,"endOffset":4119,"count":0},{"startOffset":6304,"endOffset":6490,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6495,"endOffset":7065,"count":2},{"startOffset":6563,"endOffset":6592,"count":0},{"startOffset":6915,"endOffset":6941,"count":0},{"startOffset":6996,"endOffset":7028,"count":0}],"isBlockCoverage":true},{"functionName":"Readable._destroy","ranges":[{"startOffset":7202,"endOffset":7234,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":7285,"endOffset":7323,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.push","ranges":[{"startOffset":7552,"endOffset":7638,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unshift","ranges":[{"startOffset":7734,"endOffset":7819,"count":0}],"isBlockCoverage":false},{"functionName":"readableAddChunk","ranges":[{"startOffset":7822,"endOffset":10075,"count":0}],"isBlockCoverage":false},{"functionName":"addChunk","ranges":[{"startOffset":10077,"endOffset":10735,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.isPaused","ranges":[{"startOffset":10767,"endOffset":10879,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.setEncoding","ranges":[{"startOffset":10943,"endOffset":11587,"count":0}],"isBlockCoverage":false},{"functionName":"computeNewHighWaterMark","ranges":[{"startOffset":11648,"endOffset":12013,"count":0}],"isBlockCoverage":false},{"functionName":"howMuchToRead","ranges":[{"startOffset":12126,"endOffset":12520,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.read","ranges":[{"startOffset":12617,"endOffset":16835,"count":0}],"isBlockCoverage":false},{"functionName":"onEofChunk","ranges":[{"startOffset":16838,"endOffset":17658,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable","ranges":[{"startOffset":17859,"endOffset":18186,"count":0}],"isBlockCoverage":false},{"functionName":"emitReadable_","ranges":[{"startOffset":18188,"endOffset":18824,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore","ranges":[{"startOffset":19174,"endOffset":19330,"count":0}],"isBlockCoverage":false},{"functionName":"maybeReadMore_","ranges":[{"startOffset":19332,"endOffset":21128,"count":0}],"isBlockCoverage":false},{"functionName":"Readable._read","ranges":[{"startOffset":21399,"endOffset":21465,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pipe","ranges":[{"startOffset":21494,"endOffset":25881,"count":0}],"isBlockCoverage":false},{"functionName":"pipeOnDrain","ranges":[{"startOffset":25884,"endOffset":26558,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.unpipe","ranges":[{"startOffset":26589,"endOffset":27258,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":27384,"endOffset":28291,"count":2},{"startOffset":27516,"endOffset":27848,"count":0},{"startOffset":27877,"endOffset":28274,"count":0}],"isBlockCoverage":true},{"functionName":"Readable.removeListener","ranges":[{"startOffset":28386,"endOffset":28900,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.removeAllListeners","ranges":[{"startOffset":29003,"endOffset":29541,"count":0}],"isBlockCoverage":false},{"functionName":"updateReadableListening","ranges":[{"startOffset":29544,"endOffset":30054,"count":0}],"isBlockCoverage":false},{"functionName":"nReadingNextTick","ranges":[{"startOffset":30056,"endOffset":30144,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.resume","ranges":[{"startOffset":30298,"endOffset":30623,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":30626,"endOffset":30776,"count":0}],"isBlockCoverage":false},{"functionName":"resume_","ranges":[{"startOffset":30778,"endOffset":31029,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.pause","ranges":[{"startOffset":31058,"endOffset":31325,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":31328,"endOffset":31475,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.wrap","ranges":[{"startOffset":31659,"endOffset":33159,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.<computed>","ranges":[{"startOffset":33204,"endOffset":33419,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33618,"endOffset":34007,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34013,"endOffset":34143,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":34209,"endOffset":34275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34334,"endOffset":34416,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34476,"endOffset":34536,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":34547,"endOffset":34656,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34710,"endOffset":34764,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34822,"endOffset":34910,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":34966,"endOffset":35051,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35100,"endOffset":35234,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35240,"endOffset":35529,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35582,"endOffset":35670,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35733,"endOffset":35778,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":35801,"endOffset":35852,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":35858,"endOffset":35907,"count":0}],"isBlockCoverage":false},{"functionName":"fromList","ranges":[{"startOffset":36211,"endOffset":36773,"count":0}],"isBlockCoverage":false},{"functionName":"endReadable","ranges":[{"startOffset":36775,"endOffset":36996,"count":0}],"isBlockCoverage":false},{"functionName":"endReadableNT","ranges":[{"startOffset":36998,"endOffset":37930,"count":0}],"isBlockCoverage":false},{"functionName":"endWritableNT","ranges":[{"startOffset":37932,"endOffset":38099,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.from","ranges":[{"startOffset":38117,"endOffset":38263,"count":0}],"isBlockCoverage":false}]},{"scriptId":"64","url":"internal/streams/buffer_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3784,"count":1}],"isBlockCoverage":false},{"functionName":"BufferList","ranges":[{"startOffset":190,"endOffset":274,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":278,"endOffset":465,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":469,"endOffset":627,"count":0}],"isBlockCoverage":false},{"functionName":"shift","ranges":[{"startOffset":631,"endOffset":858,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":862,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":934,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":1109,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1456,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":1914,"endOffset":1954,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1958,"endOffset":2054,"count":0}],"isBlockCoverage":false},{"functionName":"_getString","ranges":[{"startOffset":2129,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"_getBuffer","ranges":[{"startOffset":2794,"endOffset":3504,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3585,"endOffset":3780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"65","url":"internal/streams/state.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":881,"count":1}],"isBlockCoverage":false},{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":6},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":279,"endOffset":299,"count":4},{"startOffset":300,"endOffset":306,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":7},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":811,"count":6},{"startOffset":546,"endOffset":737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"66","url":"_stream_writable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22213,"count":1}],"isBlockCoverage":false},{"functionName":"nop","ranges":[{"startOffset":2206,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"WritableState","ranges":[{"startOffset":2225,"endOffset":6390,"count":4},{"startOffset":2620,"endOffset":2663,"count":0},{"startOffset":2838,"endOffset":2923,"count":2},{"startOffset":3214,"endOffset":3250,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6392,"endOffset":6524,"count":6}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":6562,"endOffset":6636,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6713,"endOffset":6778,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":7105,"endOffset":7319,"count":2},{"startOffset":7190,"endOffset":7312,"count":0}],"isBlockCoverage":true},{"functionName":"realHasInstance","ranges":[{"startOffset":7355,"endOffset":7412,"count":0}],"isBlockCoverage":false},{"functionName":"Writable","ranges":[{"startOffset":7417,"endOffset":8589,"count":4},{"startOffset":8058,"endOffset":8098,"count":2},{"startOffset":8104,"endOffset":8133,"count":0},{"startOffset":8272,"endOffset":8300,"count":0},{"startOffset":8354,"endOffset":8384,"count":0},{"startOffset":8439,"endOffset":8471,"count":0},{"startOffset":8524,"endOffset":8552,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.pipe","ranges":[{"startOffset":8685,"endOffset":8753,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.write","ranges":[{"startOffset":8783,"endOffset":9992,"count":6},{"startOffset":8953,"endOffset":9073,"count":0},{"startOffset":9097,"endOffset":9142,"count":0},{"startOffset":9341,"endOffset":9644,"count":0},{"startOffset":9681,"endOffset":9730,"count":0},{"startOffset":9757,"endOffset":9807,"count":0},{"startOffset":9820,"endOffset":9911,"count":0}],"isBlockCoverage":true},{"functionName":"Writable.cork","ranges":[{"startOffset":10021,"endOffset":10067,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.uncork","ranges":[{"startOffset":10098,"endOffset":10253,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":10296,"endOffset":10607,"count":0}],"isBlockCoverage":false},{"functionName":"writeOrBuffer","ranges":[{"startOffset":10797,"endOffset":11750,"count":6},{"startOffset":10895,"endOffset":10898,"count":0},{"startOffset":10994,"endOffset":11226,"count":0},{"startOffset":11558,"endOffset":11581,"count":0}],"isBlockCoverage":true},{"functionName":"doWrite","ranges":[{"startOffset":11752,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"onwriteError","ranges":[{"startOffset":12132,"endOffset":12552,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":12554,"endOffset":13807,"count":6},{"startOffset":12712,"endOffset":12786,"count":0},{"startOffset":12904,"endOffset":13074,"count":0},{"startOffset":13135,"endOffset":13176,"count":0},{"startOffset":13192,"endOffset":13748,"count":0}],"isBlockCoverage":true},{"functionName":"afterWriteTick","ranges":[{"startOffset":13809,"endOffset":13948,"count":0}],"isBlockCoverage":false},{"functionName":"afterWrite","ranges":[{"startOffset":13950,"endOffset":14360,"count":6},{"startOffset":14116,"endOffset":14176,"count":0},{"startOffset":14263,"endOffset":14327,"count":0}],"isBlockCoverage":true},{"functionName":"errorBuffer","ranges":[{"startOffset":14432,"endOffset":14753,"count":2},{"startOffset":14488,"endOffset":14505,"count":0},{"startOffset":14575,"endOffset":14728,"count":0}],"isBlockCoverage":true},{"functionName":"clearBuffer","ranges":[{"startOffset":14819,"endOffset":16252,"count":0}],"isBlockCoverage":false},{"functionName":"Writable._write","ranges":[{"startOffset":16282,"endOffset":16451,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.end","ranges":[{"startOffset":16515,"endOffset":17699,"count":2},{"startOffset":16680,"endOffset":16767,"count":0},{"startOffset":16790,"endOffset":16812,"count":0},{"startOffset":16818,"endOffset":16846,"count":0},{"startOffset":16895,"endOffset":16941,"count":0},{"startOffset":17385,"endOffset":17541,"count":0},{"startOffset":17614,"endOffset":17640,"count":0}],"isBlockCoverage":true},{"functionName":"needFinish","ranges":[{"startOffset":17702,"endOffset":17915,"count":10},{"startOffset":17754,"endOffset":17785,"count":4},{"startOffset":17786,"endOffset":17813,"count":4},{"startOffset":17814,"endOffset":17854,"count":4},{"startOffset":17855,"endOffset":17883,"count":4},{"startOffset":17884,"endOffset":17911,"count":4}],"isBlockCoverage":true},{"functionName":"callFinal","ranges":[{"startOffset":17917,"endOffset":18177,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17969,"endOffset":18173,"count":2},{"startOffset":18016,"endOffset":18058,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":18179,"endOffset":18527,"count":4},{"startOffset":18240,"endOffset":18261,"count":2},{"startOffset":18263,"endOffset":18525,"count":2},{"startOffset":18444,"endOffset":18521,"count":0}],"isBlockCoverage":true},{"functionName":"finishMaybe","ranges":[{"startOffset":18529,"endOffset":18856,"count":10},{"startOffset":18619,"endOffset":18839,"count":4},{"startOffset":18682,"endOffset":18835,"count":2},{"startOffset":18725,"endOffset":18783,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":18858,"endOffset":19476,"count":2},{"startOffset":18942,"endOffset":18949,"count":0},{"startOffset":19222,"endOffset":19416,"count":0}],"isBlockCoverage":true},{"functionName":"onFinished","ranges":[{"startOffset":19542,"endOffset":20006,"count":2}],"isBlockCoverage":true},{"functionName":"onerror","ranges":[{"startOffset":19578,"endOffset":19796,"count":0}],"isBlockCoverage":false},{"functionName":"onfinish","ranges":[{"startOffset":19800,"endOffset":19927,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":20073,"endOffset":20160,"count":18},{"startOffset":20146,"endOffset":20153,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":20166,"endOffset":20348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20373,"endOffset":20765,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":20771,"endOffset":20905,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":20938,"endOffset":21024,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21059,"endOffset":21147,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21178,"endOffset":21260,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21290,"endOffset":21374,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21412,"endOffset":21496,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21527,"endOffset":21607,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":21638,"endOffset":21715,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.destroy","ranges":[{"startOffset":21791,"endOffset":22002,"count":2}],"isBlockCoverage":true},{"functionName":"Writable._destroy","ranges":[{"startOffset":22090,"endOffset":22122,"count":0}],"isBlockCoverage":false},{"functionName":"Writable.<computed>","ranges":[{"startOffset":22173,"endOffset":22211,"count":0}],"isBlockCoverage":false}]},{"scriptId":"67","url":"_stream_duplex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3542,"count":1}],"isBlockCoverage":false},{"functionName":"Duplex","ranges":[{"startOffset":1917,"endOffset":2341,"count":2},{"startOffset":1981,"endOffset":2008,"count":0},{"startOffset":2229,"endOffset":2251,"count":0},{"startOffset":2294,"endOffset":2335,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3054,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3272,"endOffset":3533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"68","url":"_stream_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7707,"count":1}],"isBlockCoverage":false},{"functionName":"afterTransform","ranges":[{"startOffset":3891,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"Transform","ranges":[{"startOffset":4411,"endOffset":5239,"count":0}],"isBlockCoverage":true},{"functionName":"prefinish","ranges":[{"startOffset":5241,"endOffset":5453,"count":0}],"isBlockCoverage":false},{"functionName":"Transform.push","ranges":[{"startOffset":5482,"endOffset":5617,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._transform","ranges":[{"startOffset":6100,"endOffset":6189,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._write","ranges":[{"startOffset":6221,"endOffset":6559,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._read","ranges":[{"startOffset":6731,"endOffset":7104,"count":0}],"isBlockCoverage":false},{"functionName":"Transform._destroy","ranges":[{"startOffset":7139,"endOffset":7236,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":7240,"endOffset":7706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"69","url":"_stream_passthrough.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1753,"count":1}],"isBlockCoverage":false},{"functionName":"PassThrough","ranges":[{"startOffset":1520,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"PassThrough._transform","ranges":[{"startOffset":1699,"endOffset":1751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"70","url":"internal/net.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1691,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":971,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1021,"endOffset":1069,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1071,"endOffset":1157,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1159,"endOffset":1573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"71","url":"internal/stream_base_commons.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6821,"count":1}],"isBlockCoverage":false},{"functionName":"handleWriteReq","ranges":[{"startOffset":1106,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"onWriteComplete","ranges":[{"startOffset":1963,"endOffset":2473,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteWrap","ranges":[{"startOffset":2475,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"writevGeneric","ranges":[{"startOffset":2678,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"writeGeneric","ranges":[{"startOffset":3321,"endOffset":3528,"count":0}],"isBlockCoverage":false},{"functionName":"afterWriteDispatched","ranges":[{"startOffset":3530,"endOffset":3839,"count":0}],"isBlockCoverage":false},{"functionName":"onStreamRead","ranges":[{"startOffset":3841,"endOffset":5692,"count":0}],"isBlockCoverage":false},{"functionName":"setStreamTimeout","ranges":[{"startOffset":5694,"endOffset":6596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"internal/dtrace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"73","url":"dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26457,"count":1}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":2676,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":3685,"endOffset":3763,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":3766,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":4202,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":4774,"endOffset":5066,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5133,"endOffset":5556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":5582,"endOffset":9172,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9202,"endOffset":9944,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":9948,"endOffset":10293,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":10296,"endOffset":10938,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":10971,"endOffset":11278,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":11383,"endOffset":11824,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":11828,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":12216,"endOffset":12543,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":12546,"endOffset":12958,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":12961,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":13084,"endOffset":13208,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":13211,"endOffset":13408,"count":0}],"isBlockCoverage":false},{"functionName":"isConnected","ranges":[{"startOffset":13410,"endOffset":13525,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":14097,"endOffset":16691,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":16694,"endOffset":17833,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":17835,"endOffset":18012,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":18039,"endOffset":18574,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":18578,"endOffset":18632,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":18662,"endOffset":18852,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":18888,"endOffset":19198,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":19234,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":19412,"endOffset":19586,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":19625,"endOffset":19817,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":19861,"endOffset":20061,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":20106,"endOffset":20368,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":20404,"endOffset":20778,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":20816,"endOffset":21193,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":21243,"endOffset":22000,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":22052,"endOffset":22815,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":22819,"endOffset":22982,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":22985,"endOffset":23149,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":23152,"endOffset":23406,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":23432,"endOffset":23539,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":23568,"endOffset":23677,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":23718,"endOffset":23775,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":23816,"endOffset":23873,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":23914,"endOffset":23971,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":24012,"endOffset":24069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24170,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24297,"endOffset":24353,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24486,"endOffset":24543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24619,"endOffset":24678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24814,"endOffset":24871,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24947,"endOffset":25006,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25138,"endOffset":25191,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25263,"endOffset":25318,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25450,"endOffset":25507,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25583,"endOffset":25642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25748,"endOffset":25783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25892,"endOffset":25929,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26195,"endOffset":26231,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26235,"endOffset":26276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"74","url":"internal/dgram.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1844,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":448,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":552,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":649,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1320,"endOffset":1768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"75","url":"internal/socket_list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"76","url":"internal/child_process/serialization.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":775,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":1090,"endOffset":1297,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":1513,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"parseChannelMessages","ranges":[{"startOffset":1629,"endOffset":2280,"count":0}],"isBlockCoverage":false},{"functionName":"writeChannelMessage","ranges":[{"startOffset":2285,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"initMessageChannel","ranges":[{"startOffset":2726,"endOffset":2831,"count":5}],"isBlockCoverage":true},{"functionName":"parseChannelMessages","ranges":[{"startOffset":2836,"endOffset":3598,"count":8},{"startOffset":2910,"endOffset":2917,"count":0},{"startOffset":2972,"endOffset":3024,"count":5},{"startOffset":3284,"endOffset":3338,"count":0}],"isBlockCoverage":true},{"functionName":"writeChannelMessage","ranges":[{"startOffset":3603,"endOffset":3766,"count":23}],"isBlockCoverage":true}]},{"scriptId":"77","url":"string_decoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4033,"count":1}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":1850,"endOffset":2112,"count":5},{"startOffset":1962,"endOffset":2095,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2382,"endOffset":2581,"count":5}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2615,"endOffset":2916,"count":8},{"startOffset":2672,"endOffset":2683,"count":0},{"startOffset":2719,"endOffset":2870,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":2949,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"text","ranges":[{"startOffset":3237,"endOffset":3394,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3511,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3735,"endOffset":3798,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3869,"endOffset":3984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"78","url":"v8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8781,"count":1}],"isBlockCoverage":false},{"functionName":"writeHeapSnapshot","ranges":[{"startOffset":1665,"endOffset":1867,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":1869,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"setFlagsFromString","ranges":[{"startOffset":3302,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapStatistics","ranges":[{"startOffset":3406,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSpaceStatistics","ranges":[{"startOffset":4187,"endOffset":4744,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapCodeStatistics","ranges":[{"startOffset":4746,"endOffset":5090,"count":0}],"isBlockCoverage":false},{"functionName":"readRawBytes","ranges":[{"startOffset":5246,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"DefaultSerializer","ranges":[{"startOffset":6648,"endOffset":6736,"count":0}],"isBlockCoverage":false},{"functionName":"_writeHostObject","ranges":[{"startOffset":6740,"endOffset":7354,"count":0}],"isBlockCoverage":false},{"functionName":"_readHostObject","ranges":[{"startOffset":7409,"endOffset":8222,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":8226,"endOffset":8370,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":8372,"endOffset":8497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"79","url":"internal/heap_utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":826,"count":1}],"isBlockCoverage":false},{"functionName":"HeapSnapshotStream","ranges":[{"startOffset":322,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":480,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":553,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":737,"endOffset":779,"count":0}],"isBlockCoverage":false}]},{"scriptId":"80","url":"internal/modules/cjs/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42718,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":3392,"endOffset":3461,"count":1}],"isBlockCoverage":true},{"functionName":"enrichCJSError","ranges":[{"startOffset":3821,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4638,"endOffset":4955,"count":12191},{"startOffset":4736,"endOffset":4830,"count":80},{"startOffset":4812,"endOffset":4826,"count":16},{"startOffset":4830,"endOffset":4904,"count":12175},{"startOffset":4904,"endOffset":4936,"count":64},{"startOffset":4936,"endOffset":4954,"count":12175}],"isBlockCoverage":true},{"functionName":"updateChildren","ranges":[{"startOffset":4957,"endOffset":5132,"count":3105},{"startOffset":5030,"endOffset":5048,"count":3104},{"startOffset":5065,"endOffset":5103,"count":3104},{"startOffset":5075,"endOffset":5102,"count":1607},{"startOffset":5109,"endOffset":5130,"count":3098}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":5134,"endOffset":5371,"count":1498}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":5822,"endOffset":5899,"count":298}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6044,"endOffset":6166,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":6171,"endOffset":6304,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6351,"endOffset":6379,"count":298}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6384,"endOffset":6438,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6488,"endOffset":6524,"count":596}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":6529,"endOffset":6591,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":7010,"endOffset":7854,"count":9900},{"startOffset":7190,"endOffset":7206,"count":8935},{"startOffset":7206,"endOffset":7306,"count":965},{"startOffset":7306,"endOffset":7372,"count":512},{"startOffset":7372,"endOffset":7390,"count":453},{"startOffset":7390,"endOffset":7485,"count":0},{"startOffset":7485,"endOffset":7737,"count":453},{"startOffset":7737,"endOffset":7852,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageScope","ranges":[{"startOffset":7856,"endOffset":8329,"count":3847},{"startOffset":8065,"endOffset":8311,"count":7818},{"startOffset":8180,"endOffset":8193,"count":0},{"startOffset":8251,"endOffset":8307,"count":3847},{"startOffset":8311,"endOffset":8328,"count":0}],"isBlockCoverage":true},{"functionName":"readPackageMain","ranges":[{"startOffset":8331,"endOffset":8449,"count":851},{"startOffset":8424,"endOffset":8434,"count":788},{"startOffset":8435,"endOffset":8446,"count":63}],"isBlockCoverage":true},{"functionName":"readPackageExports","ranges":[{"startOffset":8451,"endOffset":8575,"count":1231},{"startOffset":8547,"endOffset":8560,"count":897},{"startOffset":8561,"endOffset":8572,"count":334}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":8577,"endOffset":9876,"count":851},{"startOffset":8697,"endOffset":8778,"count":187},{"startOffset":8778,"endOffset":8872,"count":664},{"startOffset":8872,"endOffset":8916,"count":14},{"startOffset":8917,"endOffset":8984,"count":5},{"startOffset":9010,"endOffset":9857,"count":0},{"startOffset":9857,"endOffset":9875,"count":664}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":10217,"endOffset":10427,"count":5591},{"startOffset":10305,"endOffset":10312,"count":3546},{"startOffset":10312,"endOffset":10336,"count":2045},{"startOffset":10336,"endOffset":10346,"count":0},{"startOffset":10348,"endOffset":10391,"count":0},{"startOffset":10391,"endOffset":10426,"count":2045}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":10429,"endOffset":10560,"count":2143}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":10635,"endOffset":10841,"count":2551},{"startOffset":10717,"endOffset":10823,"count":4908},{"startOffset":10789,"endOffset":10819,"count":1376},{"startOffset":10823,"endOffset":10840,"count":1175}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":10930,"endOffset":11366,"count":1498},{"startOffset":11138,"endOffset":11348,"count":1522},{"startOffset":11189,"endOffset":11198,"count":0},{"startOffset":11320,"endOffset":11344,"count":1498},{"startOffset":11348,"endOffset":11365,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":11368,"endOffset":11978,"count":2381},{"startOffset":11477,"endOffset":11482,"count":0},{"startOffset":11525,"endOffset":11538,"count":2353},{"startOffset":11538,"endOffset":11575,"count":28},{"startOffset":11575,"endOffset":11588,"count":0},{"startOffset":11588,"endOffset":11635,"count":28},{"startOffset":11635,"endOffset":11660,"count":0},{"startOffset":11660,"endOffset":11820,"count":28},{"startOffset":11722,"endOffset":11791,"count":0},{"startOffset":11820,"endOffset":11977,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalDotExportSugar","ranges":[{"startOffset":11980,"endOffset":12799,"count":19},{"startOffset":12077,"endOffset":12089,"count":3},{"startOffset":12089,"endOffset":12123,"count":16},{"startOffset":12123,"endOffset":12135,"count":0},{"startOffset":12135,"endOffset":12175,"count":16},{"startOffset":12175,"endOffset":12188,"count":0},{"startOffset":12188,"endOffset":12284,"count":16},{"startOffset":12284,"endOffset":12773,"count":66},{"startOffset":12351,"endOffset":12424,"count":16},{"startOffset":12424,"endOffset":12769,"count":50},{"startOffset":12470,"endOffset":12769,"count":0},{"startOffset":12773,"endOffset":12798,"count":16}],"isBlockCoverage":true},{"functionName":"applyExports","ranges":[{"startOffset":12801,"endOffset":14710,"count":1231},{"startOffset":12965,"endOffset":12987,"count":19},{"startOffset":12993,"endOffset":13006,"count":1212},{"startOffset":13006,"endOffset":13069,"count":19},{"startOffset":13069,"endOffset":13102,"count":3},{"startOffset":13102,"endOffset":14642,"count":19},{"startOffset":13385,"endOffset":14638,"count":0},{"startOffset":14642,"endOffset":14709,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":14871,"endOffset":15310,"count":2470},{"startOffset":15073,"endOffset":15078,"count":1239},{"startOffset":15093,"endOffset":15116,"count":1239},{"startOffset":15116,"endOffset":15241,"count":1231},{"startOffset":15241,"endOffset":15286,"count":19},{"startOffset":15286,"endOffset":15309,"count":1212}],"isBlockCoverage":true},{"functionName":"isArrayIndex","ranges":[{"startOffset":15312,"endOffset":15561,"count":3},{"startOffset":15435,"endOffset":15558,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":15563,"endOffset":18809,"count":21},{"startOffset":15667,"endOffset":16879,"count":19},{"startOffset":16124,"endOffset":16151,"count":0},{"startOffset":16185,"endOffset":16221,"count":0},{"startOffset":16229,"endOffset":16256,"count":0},{"startOffset":16301,"endOffset":16423,"count":0},{"startOffset":16765,"endOffset":16879,"count":0},{"startOffset":16879,"endOffset":18686,"count":2},{"startOffset":16911,"endOffset":17515,"count":1},{"startOffset":16948,"endOffset":17066,"count":0},{"startOffset":17230,"endOffset":17406,"count":0},{"startOffset":17412,"endOffset":17515,"count":0},{"startOffset":17515,"endOffset":18686,"count":1},{"startOffset":17644,"endOffset":17770,"count":0},{"startOffset":17797,"endOffset":18408,"count":2},{"startOffset":17826,"endOffset":17838,"count":0},{"startOffset":17847,"endOffset":18122,"count":1},{"startOffset":18013,"endOffset":18122,"count":0},{"startOffset":18131,"endOffset":18394,"count":0},{"startOffset":18408,"endOffset":18686,"count":0},{"startOffset":18686,"endOffset":18808,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":18875,"endOffset":21627,"count":2383},{"startOffset":18985,"endOffset":19008,"count":7},{"startOffset":19008,"endOffset":19071,"count":2376},{"startOffset":19048,"endOffset":19071,"count":0},{"startOffset":19147,"endOffset":19157,"count":1407},{"startOffset":19158,"endOffset":19178,"count":976},{"startOffset":19243,"endOffset":19256,"count":239},{"startOffset":19256,"endOffset":19379,"count":2144},{"startOffset":19403,"endOffset":19478,"count":2135},{"startOffset":19478,"endOffset":19540,"count":2144},{"startOffset":19540,"endOffset":21608,"count":4149},{"startOffset":19638,"endOffset":19658,"count":4143},{"startOffset":19660,"endOffset":19669,"count":1673},{"startOffset":19669,"endOffset":19697,"count":2476},{"startOffset":19697,"endOffset":19952,"count":2470},{"startOffset":19871,"endOffset":19877,"count":0},{"startOffset":19905,"endOffset":19946,"count":19},{"startOffset":19952,"endOffset":20081,"count":2457},{"startOffset":20081,"endOffset":21259,"count":2442},{"startOffset":20103,"endOffset":21036,"count":97},{"startOffset":20136,"endOffset":20304,"count":96},{"startOffset":20170,"endOffset":20230,"count":0},{"startOffset":20304,"endOffset":21028,"count":1},{"startOffset":20336,"endOffset":20968,"count":0},{"startOffset":21059,"endOffset":21253,"count":2345},{"startOffset":21149,"endOffset":21187,"count":2032},{"startOffset":21259,"endOffset":21279,"count":2457},{"startOffset":21279,"endOffset":21290,"count":1185},{"startOffset":21292,"endOffset":21508,"count":851},{"startOffset":21402,"endOffset":21440,"count":9},{"startOffset":21508,"endOffset":21528,"count":2457},{"startOffset":21528,"endOffset":21604,"count":2123},{"startOffset":21608,"endOffset":21626,"count":2}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":21871,"endOffset":23262,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":23354,"endOffset":24395,"count":1498},{"startOffset":23632,"endOffset":23657,"count":0},{"startOffset":23950,"endOffset":24288,"count":168682},{"startOffset":24030,"endOffset":24158,"count":15746},{"startOffset":24067,"endOffset":24117,"count":14049},{"startOffset":24158,"endOffset":24282,"count":152936},{"startOffset":24178,"endOffset":24282,"count":43181},{"startOffset":24213,"endOffset":24239,"count":29199},{"startOffset":24239,"endOffset":24274,"count":13982}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":24429,"endOffset":25567,"count":2382},{"startOffset":24507,"endOffset":24573,"count":0},{"startOffset":24642,"endOffset":24793,"count":1400},{"startOffset":24706,"endOffset":24740,"count":1079},{"startOffset":24741,"endOffset":24792,"count":0},{"startOffset":24795,"endOffset":25039,"count":982},{"startOffset":24850,"endOffset":24865,"count":981},{"startOffset":24866,"endOffset":24888,"count":981},{"startOffset":24890,"endOffset":24939,"count":981},{"startOffset":25028,"endOffset":25034,"count":0},{"startOffset":25039,"endOffset":25107,"count":1400},{"startOffset":25108,"endOffset":25127,"count":1400},{"startOffset":25129,"endOffset":25378,"count":0},{"startOffset":25378,"endOffset":25566,"count":1400}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":25570,"endOffset":25753,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":25946,"endOffset":26318,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":26323,"endOffset":26564,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":26765,"endOffset":27415,"count":29},{"startOffset":26940,"endOffset":27233,"count":27},{"startOffset":27235,"endOffset":27387,"count":3}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":27827,"endOffset":30640,"count":3377},{"startOffset":27910,"endOffset":28687,"count":3376},{"startOffset":28330,"endOffset":28683,"count":781},{"startOffset":28520,"endOffset":28570,"count":1},{"startOffset":28570,"endOffset":28615,"count":780},{"startOffset":28615,"endOffset":28683,"count":0},{"startOffset":28687,"endOffset":28841,"count":2596},{"startOffset":28841,"endOffset":29014,"count":826},{"startOffset":28927,"endOffset":28977,"count":28},{"startOffset":28977,"endOffset":29014,"count":798},{"startOffset":29014,"endOffset":29077,"count":1768},{"startOffset":29077,"endOffset":29104,"count":270},{"startOffset":29106,"endOffset":29125,"count":270},{"startOffset":29125,"endOffset":29256,"count":1498},{"startOffset":29256,"endOffset":29315,"count":1},{"startOffset":29315,"endOffset":29689,"count":1498},{"startOffset":29689,"endOffset":29879,"count":0},{"startOffset":29879,"endOffset":30612,"count":1498},{"startOffset":29970,"endOffset":30352,"count":0},{"startOffset":30377,"endOffset":30419,"count":1496},{"startOffset":30420,"endOffset":30532,"count":1496},{"startOffset":30534,"endOffset":30608,"count":3},{"startOffset":30612,"endOffset":30639,"count":1498}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":30669,"endOffset":32857,"count":2652},{"startOffset":30764,"endOffset":30789,"count":270},{"startOffset":30789,"endOffset":30839,"count":2382},{"startOffset":30839,"endOffset":30858,"count":0},{"startOffset":30860,"endOffset":31843,"count":0},{"startOffset":31843,"endOffset":31926,"count":2382},{"startOffset":31926,"endOffset":31944,"count":2381},{"startOffset":31946,"endOffset":32208,"count":2381},{"startOffset":32022,"endOffset":32204,"count":0},{"startOffset":32208,"endOffset":32355,"count":2382},{"startOffset":32355,"endOffset":32371,"count":2380},{"startOffset":32371,"endOffset":32467,"count":2},{"startOffset":32467,"endOffset":32525,"count":18},{"startOffset":32507,"endOffset":32519,"count":0},{"startOffset":32525,"endOffset":32856,"count":2}],"isBlockCoverage":true},{"functionName":"Module.load","ranges":[{"startOffset":32948,"endOffset":34378,"count":1498},{"startOffset":33267,"endOffset":33297,"count":0},{"startOffset":33299,"endOffset":33345,"count":0},{"startOffset":33708,"endOffset":33738,"count":0},{"startOffset":33740,"endOffset":33848,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34150,"endOffset":34365,"count":0}],"isBlockCoverage":false},{"functionName":"Module.require","ranges":[{"startOffset":34496,"endOffset":34795,"count":3376},{"startOffset":34556,"endOffset":34674,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":34975,"endOffset":36091,"count":1167},{"startOffset":35048,"endOffset":35388,"count":0},{"startOffset":35677,"endOffset":35786,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35229,"endOffset":35375,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35914,"endOffset":36054,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":36291,"endOffset":38105,"count":1167},{"startOffset":36371,"endOffset":36518,"count":0},{"startOffset":36699,"endOffset":36723,"count":0},{"startOffset":36725,"endOffset":37461,"count":0},{"startOffset":37684,"endOffset":37706,"count":1},{"startOffset":37731,"endOffset":37870,"count":0},{"startOffset":38069,"endOffset":38086,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":38164,"endOffset":38695,"count":1465},{"startOffset":38383,"endOffset":38598,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":38759,"endOffset":39108,"count":32},{"startOffset":38858,"endOffset":38960,"count":0},{"startOffset":39025,"endOffset":39106,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":39172,"endOffset":39475,"count":1},{"startOffset":39217,"endOffset":39366,"count":0}],"isBlockCoverage":true},{"functionName":"createRequireFromPath","ranges":[{"startOffset":39478,"endOffset":39903,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":40188,"endOffset":40741,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":40802,"endOffset":41710,"count":1},{"startOffset":40843,"endOffset":40868,"count":0},{"startOffset":40920,"endOffset":40943,"count":0},{"startOffset":41151,"endOffset":41193,"count":0},{"startOffset":41460,"endOffset":41589,"count":0}],"isBlockCoverage":true},{"functionName":"pathsFilterCB","ranges":[{"startOffset":41512,"endOffset":41569,"count":0}],"isBlockCoverage":false},{"functionName":"Module._preloadModules","ranges":[{"startOffset":41738,"endOffset":42244,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":42278,"endOffset":42434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"81","url":"vm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12692,"count":1}],"isBlockCoverage":false},{"functionName":"Script","ranges":[{"startOffset":1965,"endOffset":4125,"count":299},{"startOffset":2058,"endOffset":2104,"count":0},{"startOffset":2163,"endOffset":2238,"count":0},{"startOffset":2676,"endOffset":2709,"count":0},{"startOffset":2711,"endOffset":2860,"count":0},{"startOffset":2909,"endOffset":3050,"count":0},{"startOffset":3455,"endOffset":3524,"count":0},{"startOffset":3573,"endOffset":4121,"count":0}],"isBlockCoverage":true},{"functionName":"runInThisContext","ranges":[{"startOffset":4129,"endOffset":4409,"count":298},{"startOffset":4245,"endOffset":4283,"count":0},{"startOffset":4285,"endOffset":4361,"count":0}],"isBlockCoverage":true},{"functionName":"runInContext","ranges":[{"startOffset":4413,"endOffset":4819,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":4823,"endOffset":4994,"count":0}],"isBlockCoverage":false},{"functionName":"validateContext","ranges":[{"startOffset":4998,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"getRunInContextArgs","ranges":[{"startOffset":5219,"endOffset":5810,"count":298},{"startOffset":5388,"endOffset":5453,"count":0}],"isBlockCoverage":true},{"functionName":"getContextOptions","ranges":[{"startOffset":5812,"endOffset":6727,"count":0}],"isBlockCoverage":false},{"functionName":"isContext","ranges":[{"startOffset":6729,"endOffset":6911,"count":0}],"isBlockCoverage":false},{"functionName":"createContext","ranges":[{"startOffset":6946,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"createScript","ranges":[{"startOffset":7781,"endOffset":7857,"count":0}],"isBlockCoverage":false},{"functionName":"sigintHandlersWrap","ranges":[{"startOffset":8011,"endOffset":8449,"count":0}],"isBlockCoverage":false},{"functionName":"runInContext","ranges":[{"startOffset":8451,"endOffset":8848,"count":0}],"isBlockCoverage":false},{"functionName":"runInNewContext","ranges":[{"startOffset":8850,"endOffset":9202,"count":0}],"isBlockCoverage":false},{"functionName":"runInThisContext","ranges":[{"startOffset":9204,"endOffset":9390,"count":0}],"isBlockCoverage":false},{"functionName":"compileFunction","ranges":[{"startOffset":9392,"endOffset":11125,"count":0}],"isBlockCoverage":false},{"functionName":"measureMemory","ranges":[{"startOffset":11402,"endOffset":12205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"82","url":"internal/process/esm_loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":315,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"exports.importModuleDynamicallyCallback","ranges":[{"startOffset":656,"endOffset":1047,"count":0}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":1157,"endOffset":1924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"83","url":"internal/modules/esm/loader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9459,"count":1}],"isBlockCoverage":false},{"functionName":"Loader","ranges":[{"startOffset":1415,"endOffset":3784,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3788,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":4415,"endOffset":5438,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":5442,"endOffset":6117,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":6121,"endOffset":6292,"count":0}],"isBlockCoverage":false},{"functionName":"hook","ranges":[{"startOffset":6296,"endOffset":7255,"count":0}],"isBlockCoverage":false},{"functionName":"runGlobalPreloadCode","ranges":[{"startOffset":7259,"endOffset":8063,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":8067,"endOffset":9383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"84","url":"internal/modules/esm/module_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":394,"endOffset":467,"count":1498}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":470,"endOffset":746,"count":1498},{"startOffset":598,"endOffset":668,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":749,"endOffset":822,"count":0}],"isBlockCoverage":false}]},{"scriptId":"85","url":"internal/modules/esm/module_job.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4960,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":406,"endOffset":424,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":690,"endOffset":2303,"count":0}],"isBlockCoverage":false},{"functionName":"instantiate","ranges":[{"startOffset":2307,"endOffset":2452,"count":0}],"isBlockCoverage":false},{"functionName":"_instantiate","ranges":[{"startOffset":2456,"endOffset":4680,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":4684,"endOffset":4880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"86","url":"internal/modules/esm/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25006,"count":1}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":1600,"endOffset":1952,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":2063,"endOffset":2168,"count":0}],"isBlockCoverage":false},{"functionName":"readIfFile","ranges":[{"startOffset":2170,"endOffset":2418,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":2420,"endOffset":3785,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":3787,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":5021,"endOffset":5100,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":5102,"endOffset":6682,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":6684,"endOffset":6815,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":6871,"endOffset":7128,"count":0}],"isBlockCoverage":false},{"functionName":"resolveIndex","ranges":[{"startOffset":7130,"endOffset":7217,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":7219,"endOffset":8175,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsNotFound","ranges":[{"startOffset":8177,"endOffset":8350,"count":0}],"isBlockCoverage":false},{"functionName":"throwSubpathInvalid","ranges":[{"startOffset":8352,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"throwExportsInvalid","ranges":[{"startOffset":8525,"endOffset":8926,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTargetString","ranges":[{"startOffset":8928,"endOffset":10018,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":10073,"endOffset":10213,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExportsTarget","ranges":[{"startOffset":10215,"endOffset":12324,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":12326,"endOffset":13255,"count":0}],"isBlockCoverage":false},{"functionName":"packageMainResolve","ranges":[{"startOffset":13258,"endOffset":14477,"count":0}],"isBlockCoverage":false},{"functionName":"packageExportsResolve","ranges":[{"startOffset":14662,"endOffset":15934,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":15936,"endOffset":16054,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":16167,"endOffset":19589,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":19591,"endOffset":19701,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":19703,"endOffset":19974,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":19976,"endOffset":20159,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":20272,"endOffset":20729,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":20875,"endOffset":22283,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":22285,"endOffset":24925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"87","url":"internal/modules/esm/get_format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2437,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":1105,"endOffset":2391,"count":0}],"isBlockCoverage":false}]},{"scriptId":"88","url":"internal/modules/esm/get_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":964,"count":1}],"isBlockCoverage":false},{"functionName":"defaultGetSource","ranges":[{"startOffset":373,"endOffset":918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"89","url":"internal/modules/esm/transform_source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":false},{"functionName":"defaultTransformSource","ranges":[{"startOffset":15,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"90","url":"internal/modules/esm/create_dynamic_module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1723,"count":1}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":190,"endOffset":380,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":382,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":613,"endOffset":1682,"count":0}],"isBlockCoverage":false}]},{"scriptId":"91","url":"internal/modules/esm/translators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7498,"count":1}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":1284,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":1446,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":1643,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":2080,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":2331,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":3017,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":4053,"endOffset":4412,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":4476,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6586,"endOffset":7495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"92","url":"internal/vm/module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12305,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1478,"endOffset":3664,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3668,"endOffset":3805,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3809,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":3946,"endOffset":4223,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4227,"endOffset":4380,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4384,"endOffset":4634,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4638,"endOffset":5117,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5121,"endOffset":6073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6077,"endOffset":6520,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6667,"endOffset":6703,"count":0}],"isBlockCoverage":false},{"functionName":"SourceTextModule","ranges":[{"startOffset":6708,"endOffset":9032,"count":0}],"isBlockCoverage":false},{"functionName":"get dependencySpecifiers","ranges":[{"startOffset":9036,"endOffset":9335,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":9339,"endOffset":9608,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":9612,"endOffset":9808,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedData","ranges":[{"startOffset":9812,"endOffset":10074,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10119,"endOffset":11371,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11375,"endOffset":11677,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11681,"endOffset":12143,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12265,"endOffset":12300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"93","url":"internal/modules/run_main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2442,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":220,"endOffset":658,"count":1},{"startOffset":487,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":660,"endOffset":1212,"count":1},{"startOffset":784,"endOffset":796,"count":0},{"startOffset":941,"endOffset":953,"count":0},{"startOffset":1048,"endOffset":1060,"count":0},{"startOffset":1111,"endOffset":1124,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1214,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2059,"endOffset":2394,"count":1},{"startOffset":2239,"endOffset":2282,"count":0}],"isBlockCoverage":true}]},{"scriptId":"94","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/subprocess.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7120,"count":1}],"isBlockCoverage":true},{"functionName":"supportsESM","ranges":[{"startOffset":247,"endOffset":415,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":474,"endOffset":6891,"count":1},{"startOffset":1573,"endOffset":1766,"count":0},{"startOffset":5800,"endOffset":5805,"count":0},{"startOffset":5808,"endOffset":5960,"count":0},{"startOffset":6178,"endOffset":6409,"count":0},{"startOffset":6679,"endOffset":6745,"count":0},{"startOffset":6749,"endOffset":6889,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1084,"endOffset":1290,"count":1}],"isBlockCoverage":true},{"functionName":"checkSelectedByLineNumbers","ranges":[{"startOffset":1751,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2257,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2420,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2614,"endOffset":2638,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2662,"endOffset":2797,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2822,"endOffset":3453,"count":1},{"startOffset":2911,"endOffset":2977,"count":0},{"startOffset":2982,"endOffset":3136,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3166,"endOffset":3448,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3210,"endOffset":3267,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3282,"endOffset":3429,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3490,"endOffset":3685,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getRunner","ranges":[{"startOffset":3739,"endOffset":3791,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4157,"endOffset":4188,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4197,"endOffset":4223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4459,"endOffset":4821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4830,"endOffset":4859,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":4924,"endOffset":5747,"count":1},{"startOffset":5032,"endOffset":5590,"count":0},{"startOffset":5632,"endOffset":5718,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6899,"endOffset":7117,"count":0}],"isBlockCoverage":false}]},{"scriptId":"95","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/currently-unhandled/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":248,"count":1}],"isBlockCoverage":true}]},{"scriptId":"96","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/currently-unhandled/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"onUnhandledRejection","ranges":[{"startOffset":129,"endOffset":244,"count":0}],"isBlockCoverage":false},{"functionName":"onRejectionHandled","ranges":[{"startOffset":247,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"currentlyUnhandled","ranges":[{"startOffset":436,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":501,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"97","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/array-find-index/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"98","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/ensure-forked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":596,"count":1},{"startOffset":226,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"99","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/chalk/source/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6073,"count":1},{"startOffset":1532,"endOffset":1764,"count":44},{"startOffset":2057,"endOffset":2352,"count":8},{"startOffset":2386,"endOffset":2752,"count":8},{"startOffset":5948,"endOffset":5967,"count":0}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":430,"endOffset":809,"count":4},{"startOffset":477,"endOffset":558,"count":2},{"startOffset":560,"endOffset":638,"count":0},{"startOffset":709,"endOffset":728,"count":0},{"startOffset":778,"endOffset":790,"count":1},{"startOffset":791,"endOffset":806,"count":3}],"isBlockCoverage":true},{"functionName":"ChalkClass","ranges":[{"startOffset":832,"endOffset":941,"count":2}],"isBlockCoverage":true},{"functionName":"chalkFactory","ranges":[{"startOffset":966,"endOffset":1408,"count":4}],"isBlockCoverage":true},{"functionName":"chalk.template","ranges":[{"startOffset":1048,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"chalk.template.constructor","ranges":[{"startOffset":1235,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"Chalk","ranges":[{"startOffset":1411,"endOffset":1469,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1559,"endOffset":1758,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1786,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2080,"endOffset":2346,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2476,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"Object.defineProperties","ranges":[{"startOffset":2792,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2848,"endOffset":2892,"count":33}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2896,"endOffset":2946,"count":0}],"isBlockCoverage":false},{"functionName":"createStyler","ranges":[{"startOffset":2976,"endOffset":3250,"count":4},{"startOffset":3101,"endOffset":3184,"count":0}],"isBlockCoverage":true},{"functionName":"createBuilder","ranges":[{"startOffset":3275,"endOffset":4073,"count":4}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3323,"endOffset":3790,"count":33},{"startOffset":3373,"endOffset":3402,"count":0},{"startOffset":3404,"endOffset":3556,"count":0},{"startOffset":3763,"endOffset":3785,"count":0}],"isBlockCoverage":true},{"functionName":"applyStyle","ranges":[{"startOffset":4095,"endOffset":5135,"count":33},{"startOffset":4148,"endOffset":4190,"count":0},{"startOffset":4248,"endOffset":4269,"count":0},{"startOffset":4346,"endOffset":4675,"count":0},{"startOffset":5012,"endOffset":5095,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5169,"endOffset":5764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"100","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":36}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":6},{"startOffset":2869,"endOffset":3201,"count":18},{"startOffset":2929,"endOffset":3108,"count":264}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"101","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2765,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":719,"endOffset":805,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2456,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1125,"endOffset":1155,"count":0},{"startOffset":1184,"endOffset":2455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1675,"endOffset":1694,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2458,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"102","url":"os.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7480,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":1877,"endOffset":2118,"count":3}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":1936,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2396,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2429,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2462,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2510,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":2563,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":2618,"endOffset":2638,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":2671,"endOffset":2688,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":2724,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":2784,"endOffset":2808,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":2843,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":2895,"endOffset":2912,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3003,"endOffset":3103,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3105,"endOffset":3517,"count":1},{"startOffset":3207,"endOffset":3212,"count":0},{"startOffset":3274,"endOffset":3498,"count":8}],"isBlockCoverage":true},{"functionName":"arch","ranges":[{"startOffset":3519,"endOffset":3561,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":3588,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":3609,"endOffset":3659,"count":3}],"isBlockCoverage":true},{"functionName":"platform.<computed>","ranges":[{"startOffset":3690,"endOffset":3712,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":3715,"endOffset":4232,"count":1},{"startOffset":3764,"endOffset":4005,"count":0},{"startOffset":4045,"endOffset":4076,"count":0},{"startOffset":4077,"endOffset":4109,"count":0},{"startOffset":4110,"endOffset":4130,"count":0}],"isBlockCoverage":true},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":4261,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":4278,"endOffset":4325,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":4358,"endOffset":4375,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":4463,"endOffset":4716,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":4718,"endOffset":5432,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":5434,"endOffset":6111,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":6113,"endOffset":6402,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":6404,"endOffset":6659,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":6661,"endOffset":6887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"103","url":"tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5028,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1611,"count":11}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1613,"endOffset":2097,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2246,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2465,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3722,"endOffset":4150,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4206,"endOffset":4346,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4383,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4565,"endOffset":4704,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4746,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4921,"endOffset":4971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"104","url":"internal/tty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6291,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2451,"endOffset":2903,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3061,"endOffset":5812,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":5814,"endOffset":6238,"count":0}],"isBlockCoverage":false}]},{"scriptId":"105","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"106","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/chalk/source/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"stringReplaceAll","ranges":[{"startOffset":40,"endOffset":505,"count":0}],"isBlockCoverage":false},{"functionName":"stringEncaseCRLFWithFirstIndex","ranges":[{"startOffset":547,"endOffset":959,"count":0}],"isBlockCoverage":false}]},{"scriptId":"107","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/ipc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1035,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":107,"endOffset":399,"count":2},{"startOffset":139,"endOffset":153,"count":0},{"startOffset":186,"endOffset":260,"count":1},{"startOffset":263,"endOffset":323,"count":0},{"startOffset":326,"endOffset":373,"count":1},{"startOffset":376,"endOffset":394,"count":0}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":496,"endOffset":575,"count":11}],"isBlockCoverage":true},{"functionName":"unref","ranges":[{"startOffset":599,"endOffset":645,"count":2}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":709,"endOffset":1010,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":965,"count":1}],"isBlockCoverage":true}]},{"scriptId":"108","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/emittery/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9639,"count":1}],"isBlockCoverage":true},{"functionName":"assertEventName","ranges":[{"startOffset":300,"endOffset":478,"count":24},{"startOffset":373,"endOffset":405,"count":9},{"startOffset":407,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"assertListener","ranges":[{"startOffset":480,"endOffset":613,"count":9},{"startOffset":553,"endOffset":611,"count":0}],"isBlockCoverage":true},{"functionName":"getListeners","ranges":[{"startOffset":615,"endOffset":804,"count":24},{"startOffset":730,"endOffset":770,"count":10}],"isBlockCoverage":true},{"functionName":"getEventProducers","ranges":[{"startOffset":806,"endOffset":1067,"count":0}],"isBlockCoverage":false},{"functionName":"enqueueProducers","ranges":[{"startOffset":1069,"endOffset":1479,"count":15},{"startOffset":1207,"endOffset":1300,"count":0},{"startOffset":1335,"endOffset":1477,"count":0}],"isBlockCoverage":true},{"functionName":"iterator","ranges":[{"startOffset":1481,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"defaultMethodNamesOrAssert","ranges":[{"startOffset":2560,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"isListenerSymbol","ranges":[{"startOffset":3108,"endOffset":3172,"count":24},{"startOffset":3143,"endOffset":3172,"count":17}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":3200,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"Emittery","ranges":[{"startOffset":4283,"endOffset":4403,"count":2}],"isBlockCoverage":true},{"functionName":"on","ranges":[{"startOffset":4406,"endOffset":4808,"count":7},{"startOffset":4503,"endOffset":4515,"count":0}],"isBlockCoverage":true},{"functionName":"off","ranges":[{"startOffset":4811,"endOffset":5166,"count":2},{"startOffset":4922,"endOffset":4936,"count":0}],"isBlockCoverage":true},{"functionName":"once","ranges":[{"startOffset":5169,"endOffset":5312,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5209,"endOffset":5307,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5257,"endOffset":5301,"count":2}],"isBlockCoverage":true},{"functionName":"events","ranges":[{"startOffset":5315,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":5524,"endOffset":6182,"count":15},{"startOffset":5830,"endOffset":5834,"count":9},{"startOffset":5835,"endOffset":5854,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5930,"endOffset":6028,"count":6},{"startOffset":6023,"endOffset":6027,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6060,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"emitSerial","ranges":[{"startOffset":6185,"endOffset":6800,"count":0}],"isBlockCoverage":false},{"functionName":"onAny","ranges":[{"startOffset":6803,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"anyEvent","ranges":[{"startOffset":6971,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"offAny","ranges":[{"startOffset":7014,"endOffset":7142,"count":0}],"isBlockCoverage":false},{"functionName":"clearListeners","ranges":[{"startOffset":7145,"endOffset":7834,"count":0}],"isBlockCoverage":false},{"functionName":"listenerCount","ranges":[{"startOffset":7837,"endOffset":8518,"count":0}],"isBlockCoverage":false},{"functionName":"bindMethods","ranges":[{"startOffset":8521,"endOffset":9025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9110,"endOffset":9134,"count":13}],"isBlockCoverage":true}]},{"scriptId":"109","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":48,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"exports.set","ranges":[{"startOffset":164,"endOffset":276,"count":1},{"startOffset":194,"endOffset":250,"count":0}],"isBlockCoverage":true}]},{"scriptId":"110","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/chalk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"exports.get","ranges":[{"startOffset":77,"endOffset":172,"count":1},{"startOffset":96,"endOffset":156,"count":0}],"isBlockCoverage":true},{"functionName":"exports.set","ranges":[{"startOffset":189,"endOffset":324,"count":1},{"startOffset":212,"endOffset":272,"count":0}],"isBlockCoverage":true}]},{"scriptId":"111","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/now-and-timers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"112","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/provider-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1241,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":235,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"exports.babel","ranges":[{"startOffset":1123,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"exports.typescript","ranges":[{"startOffset":1190,"endOffset":1239,"count":0}],"isBlockCoverage":false}]},{"scriptId":"113","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/globs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7695,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":526,"endOffset":554,"count":8}],"isBlockCoverage":true},{"functionName":"buildExtensionPattern","ranges":[{"startOffset":956,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePattern","ranges":[{"startOffset":1042,"endOffset":1371,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePatterns","ranges":[{"startOffset":1419,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeGlobs","ranges":[{"startOffset":1569,"endOffset":3425,"count":0}],"isBlockCoverage":false},{"functionName":"hasExtension","ranges":[{"startOffset":3490,"endOffset":3560,"count":0}],"isBlockCoverage":false},{"functionName":"globFiles","ranges":[{"startOffset":3619,"endOffset":4266,"count":0}],"isBlockCoverage":false},{"functionName":"findFiles","ranges":[{"startOffset":4269,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"findTests","ranges":[{"startOffset":4457,"endOffset":4631,"count":0}],"isBlockCoverage":false},{"functionName":"getChokidarIgnorePatterns","ranges":[{"startOffset":4665,"endOffset":4881,"count":0}],"isBlockCoverage":false},{"functionName":"processMatchingPatterns","ranges":[{"startOffset":5016,"endOffset":5566,"count":0}],"isBlockCoverage":false},{"functionName":"matches","ranges":[{"startOffset":5569,"endOffset":5678,"count":0}],"isBlockCoverage":false},{"functionName":"matchesIgnorePatterns","ranges":[{"startOffset":5738,"endOffset":5880,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFileForMatching","ranges":[{"startOffset":5883,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"isHelperish","ranges":[{"startOffset":6462,"endOffset":7083,"count":0}],"isBlockCoverage":false},{"functionName":"classify","ranges":[{"startOffset":7121,"endOffset":7464,"count":0}],"isBlockCoverage":false},{"functionName":"applyTestFileFilter","ranges":[{"startOffset":7496,"endOffset":7642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"114","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/globby/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1}],"isBlockCoverage":true},{"functionName":"DEFAULT_FILTER","ranges":[{"startOffset":323,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"isNegative","ranges":[{"startOffset":356,"endOffset":385,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":416,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"checkCwdOption","ranges":[{"startOffset":599,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"getPathString","ranges":[{"startOffset":862,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"generateGlobTasks","ranges":[{"startOffset":936,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"globDirs","ranges":[{"startOffset":1555,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"getPattern","ranges":[{"startOffset":1981,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterSync","ranges":[{"startOffset":2088,"endOffset":2222,"count":0}],"isBlockCoverage":false},{"functionName":"globToTask","ranges":[{"startOffset":2244,"endOffset":2467,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2487,"endOffset":3215,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":3240,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.stream","ranges":[{"startOffset":3705,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.hasMagic","ranges":[{"startOffset":4302,"endOffset":4409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"115","url":"internal/fs/streams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13434,"count":1}],"isBlockCoverage":false},{"functionName":"allocNewPool","ranges":[{"startOffset":1130,"endOffset":1294,"count":0}],"isBlockCoverage":false},{"functionName":"checkPosition","ranges":[{"startOffset":1348,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"roundUpToMultipleOf8","ranges":[{"startOffset":1708,"endOffset":1797,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":1799,"endOffset":3876,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4028,"endOffset":4063,"count":0}],"isBlockCoverage":false},{"functionName":"_openReadFs","ranges":[{"startOffset":4163,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":4675,"endOffset":7167,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7202,"endOffset":7489,"count":2},{"startOffset":7257,"endOffset":7338,"count":0},{"startOffset":7369,"endOffset":7454,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7394,"endOffset":7436,"count":0}],"isBlockCoverage":false},{"functionName":"closeFsStream","ranges":[{"startOffset":7492,"endOffset":7648,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7565,"endOffset":7623,"count":2}],"isBlockCoverage":true},{"functionName":"ReadStream.close","ranges":[{"startOffset":7679,"endOffset":7765,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7826,"endOffset":7860,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":7888,"endOffset":10133,"count":2},{"startOffset":7968,"endOffset":8006,"count":0},{"startOffset":8238,"endOffset":8268,"count":0},{"startOffset":8351,"endOffset":8474,"count":0},{"startOffset":8499,"endOffset":8519,"count":0},{"startOffset":8521,"endOffset":8646,"count":0},{"startOffset":8712,"endOffset":8837,"count":0},{"startOffset":8905,"endOffset":9032,"count":0},{"startOffset":9079,"endOffset":9204,"count":0},{"startOffset":9304,"endOffset":9333,"count":0},{"startOffset":9359,"endOffset":9389,"count":0},{"startOffset":9572,"endOffset":9584,"count":0},{"startOffset":9635,"endOffset":9650,"count":0},{"startOffset":9701,"endOffset":9715,"count":0},{"startOffset":9926,"endOffset":9999,"count":0},{"startOffset":10029,"endOffset":10071,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._final","ranges":[{"startOffset":10276,"endOffset":10433,"count":2},{"startOffset":10332,"endOffset":10416,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10363,"endOffset":10410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10479,"endOffset":10515,"count":0}],"isBlockCoverage":false},{"functionName":"_openWriteFs","ranges":[{"startOffset":10618,"endOffset":11051,"count":2},{"startOffset":10727,"endOffset":10763,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10824,"endOffset":11047,"count":2},{"startOffset":10850,"endOffset":10967,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._write","ranges":[{"startOffset":11085,"endOffset":11753,"count":8},{"startOffset":11151,"endOffset":11245,"count":2},{"startOffset":11245,"endOffset":11269,"count":6},{"startOffset":11269,"endOffset":11314,"count":0},{"startOffset":11314,"endOffset":11727,"count":6},{"startOffset":11727,"endOffset":11751,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11182,"endOffset":11239,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11407,"endOffset":11689,"count":6},{"startOffset":11543,"endOffset":11601,"count":0},{"startOffset":11615,"endOffset":11643,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11789,"endOffset":12679,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12777,"endOffset":13159,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13322,"endOffset":13356,"count":0}],"isBlockCoverage":false}]},{"scriptId":"116","url":"internal/fs/promises.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15615,"count":1}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":1696,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"getAsyncId","ranges":[{"startOffset":1792,"endOffset":1849,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":1853,"endOffset":1889,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":1893,"endOffset":1967,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":1971,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":2023,"endOffset":2079,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":2083,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":2131,"endOffset":2167,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2171,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":2276,"endOffset":2349,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":2353,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":2416,"endOffset":2468,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":2472,"endOffset":2528,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":2532,"endOffset":2598,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2602,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":2709,"endOffset":2784,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":2788,"endOffset":2861,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":2865,"endOffset":2938,"count":0}],"isBlockCoverage":false},{"functionName":"validateFileHandle","ranges":[{"startOffset":2942,"endOffset":3092,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileHandle","ranges":[{"startOffset":3094,"endOffset":3443,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":3445,"endOffset":4308,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":4461,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":4684,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":5162,"endOffset":5487,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5489,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":6243,"endOffset":6593,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":6595,"endOffset":7547,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":7549,"endOffset":7911,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":7913,"endOffset":8219,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":8221,"endOffset":8356,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":8358,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":8549,"endOffset":8812,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":8814,"endOffset":8933,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":8935,"endOffset":9046,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":9048,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":9582,"endOffset":10034,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":10036,"endOffset":10279,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":10281,"endOffset":10694,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":10696,"endOffset":10904,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":10906,"endOffset":11176,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":11178,"endOffset":11445,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":11447,"endOffset":11770,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":11772,"endOffset":11910,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":11912,"endOffset":12075,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":12077,"endOffset":12263,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":12265,"endOffset":12486,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":12488,"endOffset":12730,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":12732,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":12927,"endOffset":13166,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":13168,"endOffset":13440,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":13442,"endOffset":13671,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":13673,"endOffset":13850,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":13852,"endOffset":14182,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":14184,"endOffset":14680,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":14682,"endOffset":14923,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":14925,"endOffset":15229,"count":0}],"isBlockCoverage":false}]},{"scriptId":"117","url":"internal/fs/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7030,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1122,"endOffset":1582,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1585,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2446,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2884,"endOffset":3182,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3185,"endOffset":3857,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3860,"endOffset":4058,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4061,"endOffset":4766,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4769,"endOffset":5252,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5255,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6534,"endOffset":6970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/array-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":102,"count":0}],"isBlockCoverage":false}]},{"scriptId":"119","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/merge2/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3241,"count":1}],"isBlockCoverage":true},{"functionName":"merge2","ranges":[{"startOffset":280,"endOffset":2663,"count":0}],"isBlockCoverage":false},{"functionName":"pauseStreams","ranges":[{"startOffset":2702,"endOffset":3240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"120","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2824,"count":1},{"startOffset":2151,"endOffset":2169,"count":0}],"isBlockCoverage":true},{"functionName":"FastGlob","ranges":[{"startOffset":284,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":627,"endOffset":2140,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":654,"endOffset":841,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":874,"endOffset":1374,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1411,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1710,"endOffset":1924,"count":0}],"isBlockCoverage":false},{"functionName":"escapePath","ranges":[{"startOffset":1981,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":2173,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternsInput","ranges":[{"startOffset":2477,"endOffset":2794,"count":0}],"isBlockCoverage":false}]},{"scriptId":"121","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3216,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":359,"endOffset":1039,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":1071,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1668,"endOffset":1768,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":1822,"endOffset":2063,"count":0}],"isBlockCoverage":false},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":2137,"endOffset":2535,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2607,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":2890,"endOffset":3150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"122","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1}],"isBlockCoverage":true}]},{"scriptId":"123","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":630,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":126,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"splitWhen","ranges":[{"startOffset":265,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"124","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/errno.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"isEnoentCodeError","ranges":[{"startOffset":116,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"125","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":149,"endOffset":618,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":623,"endOffset":717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"126","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1321,"count":1}],"isBlockCoverage":true},{"functionName":"unixify","ranges":[{"startOffset":415,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":518,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"escape","ranges":[{"startOffset":640,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"removeLeadingDotSegment","ranges":[{"startOffset":761,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"127","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5511,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":1089,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"isDynamicPattern","ranges":[{"startOffset":1236,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":2383,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":2563,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":2701,"endOffset":2800,"count":0}],"isBlockCoverage":false},{"functionName":"isPositivePattern","ranges":[{"startOffset":2850,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"getNegativePatterns","ranges":[{"startOffset":2981,"endOffset":3072,"count":0}],"isBlockCoverage":false},{"functionName":"getPositivePatterns","ranges":[{"startOffset":3126,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"getBaseDirectory","ranges":[{"startOffset":3271,"endOffset":3371,"count":0}],"isBlockCoverage":false},{"functionName":"hasGlobStar","ranges":[{"startOffset":3419,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":3531,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":3679,"endOffset":3850,"count":0}],"isBlockCoverage":false},{"functionName":"expandPatternsWithBraceExpansion","ranges":[{"startOffset":3924,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"expandBraceExpansion","ranges":[{"startOffset":4194,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"getPatternParts","ranges":[{"startOffset":4389,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":5085,"endOffset":5172,"count":0}],"isBlockCoverage":false},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":5200,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"matchAny","ranges":[{"startOffset":5371,"endOffset":5479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"128","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1106,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":447,"endOffset":1104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"129","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1153,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":405,"endOffset":1151,"count":9},{"startOffset":482,"endOffset":505,"count":0},{"startOffset":529,"endOffset":551,"count":0},{"startOffset":636,"endOffset":663,"count":2},{"startOffset":665,"endOffset":696,"count":2},{"startOffset":734,"endOffset":1133,"count":0}],"isBlockCoverage":true}]},{"scriptId":"130","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"isExtglob","ranges":[{"startOffset":168,"endOffset":439,"count":11},{"startOffset":239,"endOffset":262,"count":0},{"startOffset":332,"endOffset":420,"count":0}],"isBlockCoverage":true}]},{"scriptId":"131","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13682,"count":1}],"isBlockCoverage":true},{"functionName":"isEmptyString","ranges":[{"startOffset":187,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch","ranges":[{"startOffset":807,"endOffset":2152,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matcher","ranges":[{"startOffset":2804,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":3457,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":4220,"endOffset":4653,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":5371,"endOffset":5932,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":6710,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":7742,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":8840,"endOffset":9096,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":9897,"endOffset":10105,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":10816,"endOffset":11112,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":11564,"endOffset":11602,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.scan","ranges":[{"startOffset":11951,"endOffset":11987,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.parse","ranges":[{"startOffset":12373,"endOffset":12593,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braces","ranges":[{"startOffset":13160,"endOffset":13397,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":13451,"endOffset":13620,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8085,"count":1}],"isBlockCoverage":false},{"functionName":"isBoolean","ranges":[{"startOffset":2076,"endOffset":2138,"count":0}],"isBlockCoverage":false},{"functionName":"isNull","ranges":[{"startOffset":2140,"endOffset":2187,"count":0}],"isBlockCoverage":false},{"functionName":"isNullOrUndefined","ranges":[{"startOffset":2189,"endOffset":2268,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":2270,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":2332,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2394,"endOffset":2454,"count":0}],"isBlockCoverage":false},{"functionName":"isUndefined","ranges":[{"startOffset":2456,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":2515,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"isError","ranges":[{"startOffset":2593,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":2698,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"isPrimitive","ranges":[{"startOffset":2764,"endOffset":2883,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":2885,"endOffset":2944,"count":0}],"isBlockCoverage":false},{"functionName":"timestamp","ranges":[{"startOffset":3083,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3399,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":4288,"endOffset":4904,"count":54},{"startOffset":4373,"endOffset":4430,"count":0},{"startOffset":4489,"endOffset":4556,"count":0},{"startOffset":4599,"endOffset":4729,"count":0}],"isBlockCoverage":true},{"functionName":"_extend","ranges":[{"startOffset":4906,"endOffset":5194,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5242,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"callbackify","ranges":[{"startOffset":5671,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"getSystemErrorName","ranges":[{"startOffset":7054,"endOffset":7270,"count":0}],"isBlockCoverage":false},{"functionName":"isDeepStrictEqual","ranges":[{"startOffset":7631,"endOffset":7836,"count":0}],"isBlockCoverage":false}]},{"scriptId":"133","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4375,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":543,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":1359,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"braces.stringify","ranges":[{"startOffset":1795,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":2407,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":3141,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":4118,"endOffset":4319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"134","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":67,"endOffset":697,"count":0}],"isBlockCoverage":false}]},{"scriptId":"135","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2451,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isInteger","ranges":[{"startOffset":35,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"exports.find","ranges":[{"startOffset":292,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exceedsLimit","ranges":[{"startOffset":419,"endOffset":626,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeNode","ranges":[{"startOffset":712,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encloseBrace","ranges":[{"startOffset":1097,"endOffset":1266,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isInvalidBrace","ranges":[{"startOffset":1347,"endOffset":1680,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isOpenOrClose","ranges":[{"startOffset":1767,"endOffset":1906,"count":0}],"isBlockCoverage":false},{"functionName":"exports.reduce","ranges":[{"startOffset":1969,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"exports.flatten","ranges":[{"startOffset":2177,"endOffset":2449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"136","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/compile.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":102,"endOffset":1386,"count":0}],"isBlockCoverage":false}]},{"scriptId":"137","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6315,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":265,"endOffset":334,"count":0}],"isBlockCoverage":false},{"functionName":"transform","ranges":[{"startOffset":355,"endOffset":439,"count":0}],"isBlockCoverage":false},{"functionName":"isValidValue","ranges":[{"startOffset":463,"endOffset":558,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":578,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":624,"endOffset":817,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"pad","ranges":[{"startOffset":1001,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"toMaxLen","ranges":[{"startOffset":1315,"endOffset":1552,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":1574,"endOffset":2208,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":2227,"endOffset":2480,"count":0}],"isBlockCoverage":false},{"functionName":"toRegex","ranges":[{"startOffset":2499,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"rangeError","ranges":[{"startOffset":2780,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"invalidRange","ranges":[{"startOffset":2898,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"invalidStep","ranges":[{"startOffset":3031,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"fillNumbers","ranges":[{"startOffset":3199,"endOffset":4682,"count":0}],"isBlockCoverage":false},{"functionName":"fillLetters","ranges":[{"startOffset":4705,"endOffset":5486,"count":0}],"isBlockCoverage":false},{"functionName":"fill","ranges":[{"startOffset":5502,"endOffset":6289,"count":0}],"isBlockCoverage":false}]},{"scriptId":"138","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6481,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":235,"endOffset":2177,"count":0}],"isBlockCoverage":false},{"functionName":"collatePatterns","ranges":[{"startOffset":2180,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2556,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":3159,"endOffset":3832,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3834,"endOffset":4632,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4634,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5120,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5235,"endOffset":5298,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5300,"endOffset":5380,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5382,"endOffset":5478,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5480,"endOffset":5571,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5573,"endOffset":5741,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5743,"endOffset":5837,"count":0}],"isBlockCoverage":false},{"functionName":"hasPadding","ranges":[{"startOffset":5839,"endOffset":5899,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":5901,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"toRegexRange.clearCache","ranges":[{"startOffset":6382,"endOffset":6413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"139","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":411,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":184,"endOffset":409,"count":0}],"isBlockCoverage":false}]},{"scriptId":"140","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/expand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2780,"count":1}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":143,"endOffset":810,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":828,"endOffset":2752,"count":0}],"isBlockCoverage":false}]},{"scriptId":"141","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6913,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":576,"endOffset":6886,"count":0}],"isBlockCoverage":false}]},{"scriptId":"142","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/node_modules/braces/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"143","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":60,"count":1}],"isBlockCoverage":true}]},{"scriptId":"144","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/lib/picomatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9377,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":204,"endOffset":264,"count":16},{"startOffset":242,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch","ranges":[{"startOffset":1018,"endOffset":2836,"count":17},{"startOffset":1087,"endOffset":1365,"count":1},{"startOffset":1365,"endOffset":1400,"count":16},{"startOffset":1400,"endOffset":1414,"count":0},{"startOffset":1415,"endOffset":1428,"count":0},{"startOffset":1449,"endOffset":1490,"count":16},{"startOffset":1478,"endOffset":1489,"count":0},{"startOffset":1492,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1597,"count":16},{"startOffset":1669,"endOffset":1705,"count":0},{"startOffset":1710,"endOffset":1756,"count":16},{"startOffset":1861,"endOffset":2015,"count":0},{"startOffset":2015,"endOffset":2783,"count":16},{"startOffset":2783,"endOffset":2815,"count":0},{"startOffset":2815,"endOffset":2835,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1114,"endOffset":1161,"count":16}],"isBlockCoverage":true},{"functionName":"arrayMatcher","ranges":[{"startOffset":1189,"endOffset":1335,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":1829,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":2035,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.test","ranges":[{"startOffset":3384,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.matchBase","ranges":[{"startOffset":4600,"endOffset":4787,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.isMatch","ranges":[{"startOffset":5423,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.parse","ranges":[{"startOffset":5894,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.scan","ranges":[{"startOffset":6697,"endOffset":6737,"count":0}],"isBlockCoverage":false},{"functionName":"picomatch.compileRe","ranges":[{"startOffset":7249,"endOffset":7765,"count":16},{"startOffset":7344,"endOffset":7375,"count":0},{"startOffset":7439,"endOffset":7443,"count":0},{"startOffset":7482,"endOffset":7486,"count":0},{"startOffset":7594,"endOffset":7633,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.makeRe","ranges":[{"startOffset":7787,"endOffset":8538,"count":16},{"startOffset":7895,"endOffset":7956,"count":0},{"startOffset":8104,"endOffset":8172,"count":0},{"startOffset":8226,"endOffset":8245,"count":8},{"startOffset":8248,"endOffset":8299,"count":10},{"startOffset":8422,"endOffset":8461,"count":0}],"isBlockCoverage":true},{"functionName":"picomatch.toRegex","ranges":[{"startOffset":9000,"endOffset":9228,"count":16},{"startOffset":9120,"endOffset":9125,"count":0},{"startOffset":9138,"endOffset":9226,"count":0}],"isBlockCoverage":true}]},{"scriptId":"145","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/lib/scan.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8955,"count":1}],"isBlockCoverage":true},{"functionName":"isPathSeparator","ranges":[{"startOffset":665,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"depth","ranges":[{"startOffset":763,"endOffset":863,"count":0}],"isBlockCoverage":false},{"functionName":"scan","ranges":[{"startOffset":1438,"endOffset":8929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"146","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1885,"count":1}],"isBlockCoverage":true},{"functionName":"exports.isObject","ranges":[{"startOffset":242,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hasRegexChars","ranges":[{"startOffset":337,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isRegexChar","ranges":[{"startOffset":397,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"exports.escapeRegex","ranges":[{"startOffset":474,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toPosixSlashes","ranges":[{"startOffset":555,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeBackslashes","ranges":[{"startOffset":626,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"exports.supportsLookbehinds","ranges":[{"startOffset":771,"endOffset":960,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isWindows","ranges":[{"startOffset":983,"endOffset":1132,"count":42},{"startOffset":1010,"endOffset":1049,"count":0},{"startOffset":1051,"endOffset":1084,"count":0}],"isBlockCoverage":true},{"functionName":"exports.escapeLast","ranges":[{"startOffset":1156,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removePrefix","ranges":[{"startOffset":1427,"endOffset":1584,"count":26},{"startOffset":1505,"endOffset":1565,"count":0}],"isBlockCoverage":true},{"functionName":"exports.wrapOutput","ranges":[{"startOffset":1608,"endOffset":1883,"count":7},{"startOffset":1682,"endOffset":1686,"count":0},{"startOffset":1728,"endOffset":1732,"count":0},{"startOffset":1821,"endOffset":1864,"count":0}],"isBlockCoverage":true}]},{"scriptId":"147","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4448,"count":1}],"isBlockCoverage":true},{"functionName":"extglobChars","ranges":[{"startOffset":3985,"endOffset":4324,"count":16}],"isBlockCoverage":true},{"functionName":"globChars","ranges":[{"startOffset":4365,"endOffset":4444,"count":26},{"startOffset":4410,"endOffset":4425,"count":0}],"isBlockCoverage":true}]},{"scriptId":"148","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/picomatch/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27098,"count":1}],"isBlockCoverage":true},{"functionName":"expandRange","ranges":[{"startOffset":287,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":713,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":950,"endOffset":24549,"count":16},{"startOffset":1005,"endOffset":1056,"count":0},{"startOffset":1179,"endOffset":1217,"count":0},{"startOffset":1276,"endOffset":1372,"count":0},{"startOffset":1500,"endOffset":1504,"count":0},{"startOffset":2111,"endOffset":2115,"count":0},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2212,"endOffset":2228,"count":0},{"startOffset":2258,"endOffset":2287,"count":0},{"startOffset":2359,"endOffset":2397,"count":0},{"startOffset":6228,"endOffset":7451,"count":7},{"startOffset":7025,"endOffset":7258,"count":0},{"startOffset":7285,"endOffset":7310,"count":3},{"startOffset":7312,"endOffset":7367,"count":0},{"startOffset":7451,"endOffset":7532,"count":9},{"startOffset":7532,"endOffset":23426,"count":49},{"startOffset":7586,"endOffset":7609,"count":0},{"startOffset":7678,"endOffset":8506,"count":0},{"startOffset":8652,"endOffset":8715,"count":0},{"startOffset":8717,"endOffset":9849,"count":0},{"startOffset":9992,"endOffset":10008,"count":0},{"startOffset":10010,"endOffset":10125,"count":0},{"startOffset":10188,"endOffset":10345,"count":0},{"startOffset":10406,"endOffset":10494,"count":0},{"startOffset":10519,"endOffset":10954,"count":0},{"startOffset":11019,"endOffset":11378,"count":0},{"startOffset":11403,"endOffset":12858,"count":0},{"startOffset":12913,"endOffset":12937,"count":0},{"startOffset":12939,"endOffset":13206,"count":0},{"startOffset":13231,"endOffset":14361,"count":0},{"startOffset":14416,"endOffset":14569,"count":0},{"startOffset":14625,"endOffset":14886,"count":0},{"startOffset":14943,"endOffset":15553,"count":8},{"startOffset":15234,"endOffset":15268,"count":0},{"startOffset":15270,"endOffset":15469,"count":0},{"startOffset":15553,"endOffset":15607,"count":41},{"startOffset":15607,"endOffset":16173,"count":4},{"startOffset":15636,"endOffset":15658,"count":0},{"startOffset":15660,"endOffset":15909,"count":0},{"startOffset":15980,"endOffset":16004,"count":0},{"startOffset":16006,"endOffset":16093,"count":0},{"startOffset":16173,"endOffset":16237,"count":37},{"startOffset":16237,"endOffset":17174,"count":0},{"startOffset":17174,"endOffset":17235,"count":37},{"startOffset":17235,"endOffset":17535,"count":0},{"startOffset":17535,"endOffset":17589,"count":37},{"startOffset":17589,"endOffset":18139,"count":0},{"startOffset":18139,"endOffset":18199,"count":37},{"startOffset":18199,"endOffset":18424,"count":0},{"startOffset":18424,"endOffset":18484,"count":37},{"startOffset":18484,"endOffset":18785,"count":9},{"startOffset":18528,"endOffset":18567,"count":0},{"startOffset":18785,"endOffset":18881,"count":28},{"startOffset":18883,"endOffset":19090,"count":0},{"startOffset":19090,"endOffset":19175,"count":28},{"startOffset":19177,"endOffset":19234,"count":0},{"startOffset":19234,"endOffset":19266,"count":28},{"startOffset":19266,"endOffset":22465,"count":10},{"startOffset":19304,"endOffset":19355,"count":0},{"startOffset":19466,"endOffset":19489,"count":2},{"startOffset":19522,"endOffset":19579,"count":8},{"startOffset":19611,"endOffset":19656,"count":0},{"startOffset":19658,"endOffset":19736,"count":0},{"startOffset":19777,"endOffset":19830,"count":0},{"startOffset":19872,"endOffset":19924,"count":0},{"startOffset":19945,"endOffset":19970,"count":0},{"startOffset":19971,"endOffset":19982,"count":0},{"startOffset":19983,"endOffset":19996,"count":0},{"startOffset":19998,"endOffset":20076,"count":0},{"startOffset":20153,"endOffset":20330,"count":0},{"startOffset":20363,"endOffset":20371,"count":2},{"startOffset":20373,"endOffset":20590,"count":0},{"startOffset":20625,"endOffset":20653,"count":8},{"startOffset":20654,"endOffset":20667,"count":8},{"startOffset":20668,"endOffset":20676,"count":8},{"startOffset":20678,"endOffset":21078,"count":0},{"startOffset":21113,"endOffset":21141,"count":8},{"startOffset":21142,"endOffset":21160,"count":8},{"startOffset":21162,"endOffset":21695,"count":8},{"startOffset":21210,"endOffset":21214,"count":0},{"startOffset":21695,"endOffset":21746,"count":2},{"startOffset":21748,"endOffset":22078,"count":2},{"startOffset":22078,"endOffset":22465,"count":0},{"startOffset":22465,"endOffset":22553,"count":18},{"startOffset":22553,"endOffset":22734,"count":0},{"startOffset":22734,"endOffset":22802,"count":18},{"startOffset":22803,"endOffset":22825,"count":0},{"startOffset":22827,"endOffset":22897,"count":0},{"startOffset":22897,"endOffset":22935,"count":18},{"startOffset":22935,"endOffset":22959,"count":16},{"startOffset":22960,"endOffset":22982,"count":0},{"startOffset":22984,"endOffset":23404,"count":18},{"startOffset":23017,"endOffset":23102,"count":0},{"startOffset":23131,"endOffset":23218,"count":0},{"startOffset":23322,"endOffset":23398,"count":8},{"startOffset":23404,"endOffset":23426,"count":18},{"startOffset":23426,"endOffset":23457,"count":9},{"startOffset":23457,"endOffset":23635,"count":0},{"startOffset":23635,"endOffset":23664,"count":9},{"startOffset":23664,"endOffset":23840,"count":0},{"startOffset":23840,"endOffset":23869,"count":9},{"startOffset":23869,"endOffset":24045,"count":0},{"startOffset":24045,"endOffset":24133,"count":9},{"startOffset":24106,"endOffset":24132,"count":1},{"startOffset":24135,"endOffset":24215,"count":8},{"startOffset":24215,"endOffset":24309,"count":9},{"startOffset":24309,"endOffset":24530,"count":0},{"startOffset":24530,"endOffset":24548,"count":9}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":1977,"endOffset":2083,"count":10},{"startOffset":2044,"endOffset":2056,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":2891,"endOffset":2920,"count":68}],"isBlockCoverage":true},{"functionName":"state.peek","ranges":[{"startOffset":2950,"endOffset":2983,"count":18}],"isBlockCoverage":true},{"functionName":"state.advance","ranges":[{"startOffset":3019,"endOffset":3045,"count":59}],"isBlockCoverage":true},{"functionName":"remaining","ranges":[{"startOffset":3067,"endOffset":3101,"count":37}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":3121,"endOffset":3204,"count":67}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":3223,"endOffset":3334,"count":57},{"startOffset":3275,"endOffset":3289,"count":48},{"startOffset":3290,"endOffset":3303,"count":9}],"isBlockCoverage":true},{"functionName":"negate","ranges":[{"startOffset":3354,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"increment","ranges":[{"startOffset":3653,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"decrement","ranges":[{"startOffset":3730,"endOffset":3779,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":4104,"endOffset":5060,"count":57},{"startOffset":4147,"endOffset":4639,"count":10},{"startOffset":4188,"endOffset":4237,"count":0},{"startOffset":4304,"endOffset":4352,"count":0},{"startOffset":4387,"endOffset":4410,"count":0},{"startOffset":4411,"endOffset":4422,"count":0},{"startOffset":4423,"endOffset":4436,"count":0},{"startOffset":4438,"endOffset":4633,"count":0},{"startOffset":4665,"endOffset":4688,"count":0},{"startOffset":4689,"endOffset":4717,"count":0},{"startOffset":4719,"endOffset":4782,"count":0},{"startOffset":4802,"endOffset":4815,"count":8},{"startOffset":4867,"endOffset":4889,"count":8},{"startOffset":4891,"endOffset":4996,"count":0}],"isBlockCoverage":true},{"functionName":"extglobOpen","ranges":[{"startOffset":5085,"endOffset":5516,"count":0}],"isBlockCoverage":false},{"functionName":"extglobClose","ranges":[{"startOffset":5542,"endOffset":6126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6320,"endOffset":6991,"count":5},{"startOffset":6387,"endOffset":6442,"count":0},{"startOffset":6469,"endOffset":6730,"count":0},{"startOffset":6757,"endOffset":6815,"count":4},{"startOffset":6815,"endOffset":6842,"count":1},{"startOffset":6842,"endOffset":6952,"count":0},{"startOffset":6952,"endOffset":6970,"count":1},{"startOffset":6970,"endOffset":6973,"count":0},{"startOffset":6974,"endOffset":6984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7162,"endOffset":7242,"count":0}],"isBlockCoverage":false},{"functionName":"parse.fastpaths","ranges":[{"startOffset":24772,"endOffset":27071,"count":10},{"startOffset":24874,"endOffset":24912,"count":0},{"startOffset":24972,"endOffset":25068,"count":0},{"startOffset":25422,"endOffset":25431,"count":0},{"startOffset":25470,"endOffset":25485,"count":0},{"startOffset":25527,"endOffset":25531,"count":0},{"startOffset":25620,"endOffset":25627,"count":0},{"startOffset":25657,"endOffset":25686,"count":0},{"startOffset":26979,"endOffset":27009,"count":0},{"startOffset":27011,"endOffset":27051,"count":0}],"isBlockCoverage":true},{"functionName":"globstar","ranges":[{"startOffset":25707,"endOffset":25860,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":25880,"endOffset":26880,"count":13},{"startOffset":25914,"endOffset":25968,"count":0},{"startOffset":25976,"endOffset":26037,"count":0},{"startOffset":26045,"endOffset":26122,"count":0},{"startOffset":26130,"endOffset":26220,"count":0},{"startOffset":26228,"endOffset":26277,"count":0},{"startOffset":26285,"endOffset":26391,"count":0},{"startOffset":26399,"endOffset":26528,"count":0},{"startOffset":26536,"endOffset":26646,"count":0},{"startOffset":26735,"endOffset":26742,"count":10},{"startOffset":26742,"endOffset":26813,"count":3},{"startOffset":26813,"endOffset":26870,"count":0}],"isBlockCoverage":true}]},{"scriptId":"149","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":139,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"propagateCloseEventToSources","ranges":[{"startOffset":537,"endOffset":644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"150","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/utils/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":125,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":225,"endOffset":279,"count":0}],"isBlockCoverage":false}]},{"scriptId":"151","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1041,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderAsync","ranges":[{"startOffset":224,"endOffset":338,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":344,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":811,"endOffset":1002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"152","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/readers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1925,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":296,"endOffset":430,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":436,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":528,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":1311,"endOffset":1624,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1630,"endOffset":1887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"153","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":939,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":250,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":559,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":731,"endOffset":937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"154","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.stat/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1116,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":960,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":1034,"endOffset":1114,"count":0}],"isBlockCoverage":false}]},{"scriptId":"155","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.stat/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":79,"endOffset":594,"count":0}],"isBlockCoverage":false}]},{"scriptId":"156","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.stat/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":696,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":139,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":574,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"157","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":242,"endOffset":464,"count":0}],"isBlockCoverage":false}]},{"scriptId":"158","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1331,"count":1}],"isBlockCoverage":true},{"functionName":"walk","ranges":[{"startOffset":303,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"walkSync","ranges":[{"startOffset":655,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"walkStream","ranges":[{"startOffset":885,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":1123,"endOffset":1329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"159","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":936,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncProvider","ranges":[{"startOffset":152,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":371,"endOffset":739,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":778,"endOffset":850,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":852,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"160","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/readers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3115,"count":1}],"isBlockCoverage":true},{"functionName":"AsyncReader","ranges":[{"startOffset":326,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":843,"endOffset":1074,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":1080,"endOffset":1280,"count":0}],"isBlockCoverage":false},{"functionName":"onEntry","ranges":[{"startOffset":1286,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":1364,"endOffset":1438,"count":0}],"isBlockCoverage":false},{"functionName":"onEnd","ranges":[{"startOffset":1444,"endOffset":1514,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":1520,"endOffset":1762,"count":0}],"isBlockCoverage":false},{"functionName":"_worker","ranges":[{"startOffset":1768,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":2157,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":2399,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"_emitEntry","ranges":[{"startOffset":3007,"endOffset":3078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"161","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":957,"count":1}],"isBlockCoverage":true},{"functionName":"scandir","ranges":[{"startOffset":250,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"scandirSync","ranges":[{"startOffset":568,"endOffset":711,"count":0}],"isBlockCoverage":false},{"functionName":"getSettings","ranges":[{"startOffset":749,"endOffset":955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"162","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/providers/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3471,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":244,"endOffset":499,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":523,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"makeRplTaskEntry","ranges":[{"startOffset":1490,"endOffset":2084,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":2086,"endOffset":3285,"count":0}],"isBlockCoverage":false},{"functionName":"callFailureCallback","ranges":[{"startOffset":3315,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"callSuccessCallback","ranges":[{"startOffset":3389,"endOffset":3469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"163","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/run-parallel/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"runParallel","ranges":[{"startOffset":30,"endOffset":898,"count":0}],"isBlockCoverage":false}]},{"scriptId":"164","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1},{"startOffset":509,"endOffset":552,"count":0},{"startOffset":675,"endOffset":707,"count":0}],"isBlockCoverage":true}]},{"scriptId":"165","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true}]},{"scriptId":"166","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"DirentFromStats","ranges":[{"startOffset":108,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"createDirentFromStats","ranges":[{"startOffset":582,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"167","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":206,"endOffset":431,"count":0}],"isBlockCoverage":false},{"functionName":"readdirWithFileTypes","ranges":[{"startOffset":455,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"readdir","ranges":[{"startOffset":1320,"endOffset":1868,"count":0}],"isBlockCoverage":false}]},{"scriptId":"168","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1084,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":215,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":962,"endOffset":1050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"169","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.scandir/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"createFileSystemAdapter","ranges":[{"startOffset":302,"endOffset":524,"count":0}],"isBlockCoverage":false}]},{"scriptId":"170","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fastq/queue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3517,"count":1}],"isBlockCoverage":true},{"functionName":"fastqueue","ranges":[{"startOffset":48,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3121,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"Task","ranges":[{"startOffset":3142,"endOffset":3488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"171","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/reusify/reusify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"reusify","ranges":[{"startOffset":14,"endOffset":427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"172","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/readers/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"isFatalError","ranges":[{"startOffset":79,"endOffset":235,"count":0}],"isBlockCoverage":false},{"functionName":"isAppliedFilter","ranges":[{"startOffset":275,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"replacePathSegmentSeparator","ranges":[{"startOffset":411,"endOffset":526,"count":0}],"isBlockCoverage":false},{"functionName":"joinPathSegments","ranges":[{"startOffset":596,"endOffset":721,"count":0}],"isBlockCoverage":false}]},{"scriptId":"173","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":136,"endOffset":337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"174","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":958,"count":1}],"isBlockCoverage":true},{"functionName":"StreamProvider","ranges":[{"startOffset":190,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":557,"endOffset":918,"count":0}],"isBlockCoverage":false}]},{"scriptId":"175","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":421,"count":1}],"isBlockCoverage":true},{"functionName":"SyncProvider","ranges":[{"startOffset":149,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":331,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"176","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"SyncReader","ranges":[{"startOffset":255,"endOffset":425,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":431,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToQueue","ranges":[{"startOffset":583,"endOffset":668,"count":0}],"isBlockCoverage":false},{"functionName":"_handleQueue","ranges":[{"startOffset":674,"endOffset":823,"count":0}],"isBlockCoverage":false},{"functionName":"_handleDirectory","ranges":[{"startOffset":829,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"_handleError","ranges":[{"startOffset":1175,"endOffset":1317,"count":0}],"isBlockCoverage":false},{"functionName":"_handleEntry","ranges":[{"startOffset":1323,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_pushToStorage","ranges":[{"startOffset":1847,"endOffset":1912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"177","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@nodelib/fs.walk/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1244,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":183,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":1122,"endOffset":1210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"178","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/readers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":211,"endOffset":531,"count":0}],"isBlockCoverage":false},{"functionName":"_getFullEntryPath","ranges":[{"startOffset":537,"endOffset":633,"count":0}],"isBlockCoverage":false},{"functionName":"_makeEntry","ranges":[{"startOffset":639,"endOffset":940,"count":0}],"isBlockCoverage":false},{"functionName":"_isFatalError","ranges":[{"startOffset":946,"endOffset":1064,"count":0}],"isBlockCoverage":false}]},{"scriptId":"179","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/provider.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"Provider","ranges":[{"startOffset":315,"endOffset":706,"count":0}],"isBlockCoverage":false},{"functionName":"_getRootDirectory","ranges":[{"startOffset":712,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"_getReaderOptions","ranges":[{"startOffset":811,"endOffset":1587,"count":0}],"isBlockCoverage":false},{"functionName":"_getMicromatchOptions","ranges":[{"startOffset":1593,"endOffset":2014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"180","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2528,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":193,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":342,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"_getMatcher","ranges":[{"startOffset":595,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"_getNegativePatternsRe","ranges":[{"startOffset":721,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":982,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByDeep","ranges":[{"startOffset":1483,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntryLevel","ranges":[{"startOffset":1802,"endOffset":2093,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedSymbolicLink","ranges":[{"startOffset":2099,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByPositivePatterns","ranges":[{"startOffset":2229,"endOffset":2362,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByNegativePatterns","ranges":[{"startOffset":2368,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"181","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/matchers/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1459,"count":1}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":174,"endOffset":1419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"182","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/matchers/matcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1930,"count":1}],"isBlockCoverage":true},{"functionName":"Matcher","ranges":[{"startOffset":139,"endOffset":389,"count":0}],"isBlockCoverage":false},{"functionName":"_fillStorage","ranges":[{"startOffset":395,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"_getPatternSegments","ranges":[{"startOffset":1118,"endOffset":1721,"count":0}],"isBlockCoverage":false},{"functionName":"_splitSegmentsIntoSections","ranges":[{"startOffset":1727,"endOffset":1897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"183","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2295,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":143,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":325,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"_filter","ranges":[{"startOffset":637,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"_isDuplicateEntry","ranges":[{"startOffset":1379,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"_createIndexRecord","ranges":[{"startOffset":1462,"endOffset":1544,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyFileFilter","ranges":[{"startOffset":1550,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"_onlyDirectoryFilter","ranges":[{"startOffset":1655,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"_isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":1776,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"_isMatchToPatterns","ranges":[{"startOffset":2073,"endOffset":2258,"count":0}],"isBlockCoverage":false}]},{"scriptId":"184","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/filters/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"ErrorFilter","ranges":[{"startOffset":143,"endOffset":211,"count":0}],"isBlockCoverage":false},{"functionName":"getFilter","ranges":[{"startOffset":217,"endOffset":294,"count":0}],"isBlockCoverage":false},{"functionName":"_isNonFatalError","ranges":[{"startOffset":300,"endOffset":419,"count":0}],"isBlockCoverage":false}]},{"scriptId":"185","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/transformers/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":871,"count":1}],"isBlockCoverage":true},{"functionName":"EntryTransformer","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"getTransformer","ranges":[{"startOffset":222,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":304,"endOffset":829,"count":0}],"isBlockCoverage":false}]},{"scriptId":"186","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1229,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderStream","ranges":[{"startOffset":262,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":382,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":998,"endOffset":1189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"187","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/providers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"ProviderSync","ranges":[{"startOffset":219,"endOffset":331,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":337,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"api","ranges":[{"startOffset":573,"endOffset":764,"count":0}],"isBlockCoverage":false}]},{"scriptId":"188","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/readers/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":257,"endOffset":395,"count":0}],"isBlockCoverage":false},{"functionName":"dynamic","ranges":[{"startOffset":401,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"static","ranges":[{"startOffset":491,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getEntry","ranges":[{"startOffset":909,"endOffset":1240,"count":0}],"isBlockCoverage":false},{"functionName":"_getStat","ranges":[{"startOffset":1246,"endOffset":1337,"count":0}],"isBlockCoverage":false}]},{"scriptId":"189","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-glob/out/settings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2573,"count":1}],"isBlockCoverage":true},{"functionName":"Settings","ranges":[{"startOffset":443,"endOffset":2299,"count":0}],"isBlockCoverage":false},{"functionName":"_getValue","ranges":[{"startOffset":2305,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"_getFileSystemMethods","ranges":[{"startOffset":2399,"endOffset":2539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"190","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/dir-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2304,"count":1}],"isBlockCoverage":true},{"functionName":"getExtensions","ranges":[{"startOffset":106,"endOffset":187,"count":0}],"isBlockCoverage":false},{"functionName":"getPath","ranges":[{"startOffset":206,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"addExtensions","ranges":[{"startOffset":376,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"getGlob","ranges":[{"startOffset":525,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1344,"endOffset":1852,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1877,"endOffset":2302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"191","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/path-type/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1176,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":78,"endOffset":444,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeSync","ranges":[{"startOffset":446,"endOffset":770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"192","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/globby/gitignore.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2589,"count":1}],"isBlockCoverage":true},{"functionName":"mapGitIgnorePatternTo","ranges":[{"startOffset":392,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"parseGitIgnore","ranges":[{"startOffset":568,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"reduceIgnore","ranges":[{"startOffset":830,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"ensureAbsolutePathForCwd","ranges":[{"startOffset":1053,"endOffset":1243,"count":0}],"isBlockCoverage":false},{"functionName":"getIsIgnoredPredecate","ranges":[{"startOffset":1276,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"getFile","ranges":[{"startOffset":1407,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"getFileSync","ranges":[{"startOffset":1590,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeOptions","ranges":[{"startOffset":1772,"endOffset":1854,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1874,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2254,"endOffset":2587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"193","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ignore/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15352,"count":1},{"startOffset":591,"endOffset":606,"count":0},{"startOffset":14909,"endOffset":15351,"count":0}],"isBlockCoverage":true},{"functionName":"makeArray","ranges":[{"startOffset":41,"endOffset":135,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":623,"endOffset":692,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeRange","ranges":[{"startOffset":866,"endOffset":1138,"count":0}],"isBlockCoverage":false},{"functionName":"cleanRangeBackSlash","ranges":[{"startOffset":1188,"endOffset":1276,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2097,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2214,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2880,"endOffset":2901,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":2989,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3253,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3353,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":3785,"endOffset":3804,"count":0}],"isBlockCoverage":false},{"functionName":"startingReplacer","ranges":[{"startOffset":4026,"endOffset":4920,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5218,"endOffset":5688,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":5961,"endOffset":5986,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6180,"endOffset":6192,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6242,"endOffset":6254,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6447,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"prefix","ranges":[{"startOffset":7495,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"REPLACERS","ranges":[{"startOffset":7704,"endOffset":8038,"count":0}],"isBlockCoverage":false},{"functionName":"makeRegex","ranges":[{"startOffset":8201,"endOffset":8613,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":8632,"endOffset":8670,"count":0}],"isBlockCoverage":false},{"functionName":"checkPattern","ranges":[{"startOffset":8777,"endOffset":8944,"count":0}],"isBlockCoverage":false},{"functionName":"splitPattern","ranges":[{"startOffset":8967,"endOffset":9012,"count":0}],"isBlockCoverage":false},{"functionName":"IgnoreRule","ranges":[{"startOffset":9035,"endOffset":9211,"count":0}],"isBlockCoverage":false},{"functionName":"createRule","ranges":[{"startOffset":9234,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":9995,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":10063,"endOffset":10599,"count":0}],"isBlockCoverage":false},{"functionName":"isNotRelative","ranges":[{"startOffset":10623,"endOffset":10665,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.convert","ranges":[{"startOffset":10727,"endOffset":10733,"count":0}],"isBlockCoverage":false},{"functionName":"Ignore","ranges":[{"startOffset":10752,"endOffset":10916,"count":0}],"isBlockCoverage":false},{"functionName":"_initCache","ranges":[{"startOffset":10920,"endOffset":11025,"count":0}],"isBlockCoverage":false},{"functionName":"_addPattern","ranges":[{"startOffset":11029,"endOffset":11359,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":11417,"endOffset":11744,"count":0}],"isBlockCoverage":false},{"functionName":"addPattern","ranges":[{"startOffset":11760,"endOffset":11815,"count":0}],"isBlockCoverage":false},{"functionName":"_testOne","ranges":[{"startOffset":12409,"endOffset":12916,"count":0}],"isBlockCoverage":false},{"functionName":"_test","ranges":[{"startOffset":12947,"endOffset":13211,"count":0}],"isBlockCoverage":false},{"functionName":"_t","ranges":[{"startOffset":13215,"endOffset":14001,"count":0}],"isBlockCoverage":false},{"functionName":"ignores","ranges":[{"startOffset":14005,"endOffset":14087,"count":0}],"isBlockCoverage":false},{"functionName":"createFilter","ranges":[{"startOffset":14091,"endOffset":14151,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":14155,"endOffset":14231,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":14262,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"factory","ranges":[{"startOffset":14350,"endOffset":14380,"count":0}],"isBlockCoverage":false},{"functionName":"returnFalse","ranges":[{"startOffset":14402,"endOffset":14413,"count":0}],"isBlockCoverage":false},{"functionName":"isPathValid","ranges":[{"startOffset":14435,"endOffset":14506,"count":0}],"isBlockCoverage":false},{"functionName":"makePosix","ranges":[{"startOffset":14970,"endOffset":15077,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath.isNotRelative","ranges":[{"startOffset":15269,"endOffset":15349,"count":0}],"isBlockCoverage":false}]},{"scriptId":"194","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/globby/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"195","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/globby/stream-utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectTransform","ranges":[{"startOffset":97,"endOffset":151,"count":0}],"isBlockCoverage":false},{"functionName":"FilterStream","ranges":[{"startOffset":201,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":264,"endOffset":372,"count":0}],"isBlockCoverage":false},{"functionName":"UniqueStream","ranges":[{"startOffset":422,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":482,"endOffset":622,"count":0}],"isBlockCoverage":false}]},{"scriptId":"196","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ignore-by-default/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":725,"count":1}],"isBlockCoverage":true},{"functionName":"exports.directories","ranges":[{"startOffset":36,"endOffset":724,"count":1}],"isBlockCoverage":true}]},{"scriptId":"197","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/node_modules/slash/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"198","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/runner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14365,"count":1}],"isBlockCoverage":true},{"functionName":"Runner","ranges":[{"startOffset":410,"endOffset":5113,"count":1},{"startOffset":491,"endOffset":496,"count":0},{"startOffset":744,"endOffset":749,"count":0}],"isBlockCoverage":true},{"functionName":"Runner.registerUniqueTitle","ranges":[{"startOffset":1508,"endOffset":1632,"count":1},{"startOffset":1555,"endOffset":1579,"count":0}],"isBlockCoverage":true},{"functionName":"get snapshotDirectory","ranges":[{"startOffset":1748,"endOffset":1930,"count":0}],"isBlockCoverage":false},{"functionName":"Runner.chain.createChain.serial","ranges":[{"startOffset":1964,"endOffset":4898,"count":1},{"startOffset":2043,"endOffset":2193,"count":0},{"startOffset":2457,"endOffset":2522,"count":0},{"startOffset":2546,"endOffset":3361,"count":0},{"startOffset":3407,"endOffset":3526,"count":0},{"startOffset":3681,"endOffset":3754,"count":0},{"startOffset":3774,"endOffset":4021,"count":0},{"startOffset":4094,"endOffset":4159,"count":0},{"startOffset":4337,"endOffset":4458,"count":0},{"startOffset":4495,"endOffset":4541,"count":0},{"startOffset":4576,"endOffset":4586,"count":0},{"startOffset":4766,"endOffset":4883,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2269,"endOffset":2325,"count":1}],"isBlockCoverage":true},{"functionName":"compareTestSnapshot","ranges":[{"startOffset":5116,"endOffset":5499,"count":0}],"isBlockCoverage":false},{"functionName":"saveSnapshotState","ranges":[{"startOffset":5502,"endOffset":5844,"count":1},{"startOffset":5546,"endOffset":5584,"count":0},{"startOffset":5614,"endOffset":5825,"count":0}],"isBlockCoverage":true},{"functionName":"onRun","ranges":[{"startOffset":5847,"endOffset":5905,"count":1}],"isBlockCoverage":true},{"functionName":"onRunComplete","ranges":[{"startOffset":5908,"endOffset":5977,"count":1}],"isBlockCoverage":true},{"functionName":"attributeLeakedError","ranges":[{"startOffset":5980,"endOffset":6147,"count":0}],"isBlockCoverage":false},{"functionName":"beforeExitHandler","ranges":[{"startOffset":6150,"endOffset":6264,"count":0}],"isBlockCoverage":false},{"functionName":"runMultiple","ranges":[{"startOffset":6267,"endOffset":7524,"count":6}],"isBlockCoverage":true},{"functionName":"runAndStoreResult","ranges":[{"startOffset":6378,"endOffset":6536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6605,"endOffset":7466,"count":0}],"isBlockCoverage":false},{"functionName":"runSingle","ranges":[{"startOffset":7527,"endOffset":7798,"count":1}],"isBlockCoverage":true},{"functionName":"runHooks","ranges":[{"startOffset":7801,"endOffset":8902,"count":6},{"startOffset":8468,"endOffset":8870,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7888,"endOffset":8357,"count":0}],"isBlockCoverage":false},{"functionName":"runTest","ranges":[{"startOffset":8905,"endOffset":10524,"count":1},{"startOffset":9359,"endOffset":9425,"count":0},{"startOffset":10046,"endOffset":10376,"count":0}],"isBlockCoverage":true},{"functionName":"Runnable.fn","ranges":[{"startOffset":9366,"endOffset":9425,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":10527,"endOffset":14290,"count":1},{"startOffset":10639,"endOffset":11057,"count":0},{"startOffset":11134,"endOffset":11161,"count":0},{"startOffset":11163,"endOffset":11183,"count":0},{"startOffset":11224,"endOffset":11250,"count":0},{"startOffset":11252,"endOffset":11272,"count":0},{"startOffset":11506,"endOffset":11542,"count":0},{"startOffset":11637,"endOffset":11955,"count":0},{"startOffset":11992,"endOffset":12019,"count":0},{"startOffset":12021,"endOffset":12117,"count":0},{"startOffset":14232,"endOffset":14287,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12344,"endOffset":12993,"count":1},{"startOffset":12487,"endOffset":12511,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12542,"endOffset":12981,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13073,"endOffset":13743,"count":1},{"startOffset":13318,"endOffset":13334,"count":0},{"startOffset":13337,"endOffset":13361,"count":0},{"startOffset":13432,"endOffset":13455,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13636,"endOffset":13700,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13729,"endOffset":13737,"count":1}],"isBlockCoverage":true},{"functionName":"interrupt","ranges":[{"startOffset":14293,"endOffset":14336,"count":0}],"isBlockCoverage":false}]},{"scriptId":"199","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/matcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1785,"count":1}],"isBlockCoverage":true},{"functionName":"makeRegexp","ranges":[{"startOffset":107,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":667,"endOffset":1373,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.isMatch","ranges":[{"startOffset":1401,"endOffset":1783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"200","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/matcher/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"201","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/context-ref.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"ContextRef","ranges":[{"startOffset":74,"endOffset":111,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":114,"endOffset":145,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":148,"endOffset":191,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":194,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"LateBinding","ranges":[{"startOffset":310,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":385,"endOffset":479,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":482,"endOffset":544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"202","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1065,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":967,"endOffset":1039,"count":589}],"isBlockCoverage":true}]},{"scriptId":"203","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseClone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"baseClone","ranges":[{"startOffset":3365,"endOffset":5545,"count":6929},{"startOffset":3596,"endOffset":3682,"count":112},{"startOffset":3618,"endOffset":3657,"count":111},{"startOffset":3658,"endOffset":3677,"count":1},{"startOffset":3711,"endOffset":3735,"count":62},{"startOffset":3735,"endOffset":3760,"count":6867},{"startOffset":3760,"endOffset":3783,"count":4375},{"startOffset":3783,"endOffset":3827,"count":2492},{"startOffset":3827,"endOffset":3932,"count":72},{"startOffset":3882,"endOffset":3928,"count":0},{"startOffset":3932,"endOffset":4550,"count":2420},{"startOffset":4045,"endOffset":4093,"count":0},{"startOffset":4119,"endOffset":4136,"count":0},{"startOffset":4137,"endOffset":4159,"count":0},{"startOffset":4197,"endOffset":4201,"count":0},{"startOffset":4247,"endOffset":4399,"count":585},{"startOffset":4281,"endOffset":4332,"count":0},{"startOffset":4405,"endOffset":4546,"count":0},{"startOffset":4550,"endOffset":4630,"count":1907},{"startOffset":4630,"endOffset":4652,"count":2},{"startOffset":4703,"endOffset":4728,"count":299},{"startOffset":4728,"endOffset":4778,"count":1608},{"startOffset":4778,"endOffset":4914,"count":0},{"startOffset":4914,"endOffset":5079,"count":1608},{"startOffset":4938,"endOffset":5079,"count":0},{"startOffset":5079,"endOffset":5147,"count":1608},{"startOffset":5119,"endOffset":5133,"count":0},{"startOffset":5152,"endOffset":5178,"count":0},{"startOffset":5201,"endOffset":5212,"count":72},{"startOffset":5213,"endOffset":5230,"count":1536},{"startOffset":5250,"endOffset":5258,"count":72}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4798,"endOffset":4908,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4958,"endOffset":5073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5260,"endOffset":5524,"count":6338},{"startOffset":5301,"endOffset":5359,"count":6209}],"isBlockCoverage":true}]},{"scriptId":"204","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Stack.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"Stack","ranges":[{"startOffset":402,"endOffset":507,"count":2}],"isBlockCoverage":true}]},{"scriptId":"205","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_ListCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"ListCache","ranges":[{"startOffset":376,"endOffset":594,"count":2},{"startOffset":459,"endOffset":475,"count":0},{"startOffset":521,"endOffset":592,"count":0}],"isBlockCoverage":true}]},{"scriptId":"206","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_listCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheClear","ranges":[{"startOffset":115,"endOffset":183,"count":2}],"isBlockCoverage":true}]},{"scriptId":"207","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_listCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheDelete","ranges":[{"startOffset":440,"endOffset":739,"count":0}],"isBlockCoverage":false}]},{"scriptId":"208","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_assocIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"assocIndexOf","ranges":[{"startOffset":286,"endOffset":454,"count":288},{"startOffset":370,"endOffset":439,"count":21135},{"startOffset":407,"endOffset":435,"count":50},{"startOffset":439,"endOffset":453,"count":238}],"isBlockCoverage":true}]},{"scriptId":"209","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":681,"endOffset":776,"count":21135},{"startOffset":734,"endOffset":773,"count":21085},{"startOffset":754,"endOffset":772,"count":0}],"isBlockCoverage":true}]},{"scriptId":"210","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_listCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheGet","ranges":[{"startOffset":240,"endOffset":387,"count":288},{"startOffset":356,"endOffset":367,"count":238},{"startOffset":368,"endOffset":384,"count":50}],"isBlockCoverage":true}]},{"scriptId":"211","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_listCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheHas","ranges":[{"startOffset":292,"endOffset":370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"212","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_listCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"listCacheSet","ranges":[{"startOffset":292,"endOffset":520,"count":0}],"isBlockCoverage":false}]},{"scriptId":"213","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stackClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":254,"count":1}],"isBlockCoverage":true},{"functionName":"stackClear","ranges":[{"startOffset":148,"endOffset":223,"count":0}],"isBlockCoverage":false}]},{"scriptId":"214","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stackDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"stackDelete","ranges":[{"startOffset":237,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"215","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stackGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":271,"count":1}],"isBlockCoverage":true},{"functionName":"stackGet","ranges":[{"startOffset":183,"endOffset":242,"count":1907}],"isBlockCoverage":true}]},{"scriptId":"216","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stackHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":323,"count":1}],"isBlockCoverage":true},{"functionName":"stackHas","ranges":[{"startOffset":235,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"217","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stackSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":853,"count":1}],"isBlockCoverage":true},{"functionName":"stackSet","ranges":[{"startOffset":436,"endOffset":824,"count":1608},{"startOffset":529,"endOffset":758,"count":238},{"startOffset":617,"endOffset":706,"count":237},{"startOffset":706,"endOffset":758,"count":1},{"startOffset":758,"endOffset":823,"count":1371}],"isBlockCoverage":true}]},{"scriptId":"218","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"219","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":483,"count":1}],"isBlockCoverage":true},{"functionName":"getNative","ranges":[{"startOffset":331,"endOffset":453,"count":7},{"startOffset":439,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"220","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsNative.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1417,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":1182,"endOffset":1384,"count":7},{"startOffset":1256,"endOffset":1279,"count":0},{"startOffset":1327,"endOffset":1341,"count":0}],"isBlockCoverage":true}]},{"scriptId":"221","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isFunction.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":993,"count":1}],"isBlockCoverage":true},{"functionName":"isFunction","ranges":[{"startOffset":617,"endOffset":962,"count":11},{"startOffset":670,"endOffset":693,"count":0},{"startOffset":905,"endOffset":921,"count":4},{"startOffset":922,"endOffset":940,"count":4},{"startOffset":941,"endOffset":959,"count":4}],"isBlockCoverage":true}]},{"scriptId":"222","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseGetTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1},{"startOffset":328,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"baseGetTag","ranges":[{"startOffset":534,"endOffset":761,"count":2437},{"startOffset":584,"endOffset":646,"count":0},{"startOffset":712,"endOffset":730,"count":5},{"startOffset":735,"endOffset":758,"count":2432}],"isBlockCoverage":true}]},{"scriptId":"223","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true}]},{"scriptId":"224","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_root.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1},{"startOffset":119,"endOffset":126,"count":0},{"startOffset":127,"endOffset":152,"count":0},{"startOffset":153,"endOffset":160,"count":0},{"startOffset":234,"endOffset":245,"count":0},{"startOffset":246,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"225","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_freeGlobal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"226","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getRawTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1139,"count":1},{"startOffset":488,"endOffset":499,"count":0}],"isBlockCoverage":true},{"functionName":"getRawTag","ranges":[{"startOffset":701,"endOffset":1109,"count":5},{"startOffset":899,"endOffset":911,"count":0},{"startOffset":995,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"227","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_objectToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":565,"count":1}],"isBlockCoverage":true},{"functionName":"objectToString","ranges":[{"startOffset":453,"endOffset":530,"count":2432}],"isBlockCoverage":true}]},{"scriptId":"228","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":581,"endOffset":704,"count":9305},{"startOffset":658,"endOffset":701,"count":7980},{"startOffset":679,"endOffset":700,"count":3064}],"isBlockCoverage":true}]},{"scriptId":"229","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isMasked.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":564,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116,"endOffset":268,"count":1},{"startOffset":166,"endOffset":184,"count":0},{"startOffset":185,"endOffset":212,"count":0},{"startOffset":234,"endOffset":260,"count":0}],"isBlockCoverage":true},{"functionName":"isMasked","ranges":[{"startOffset":461,"endOffset":535,"count":7},{"startOffset":509,"endOffset":532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"230","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_coreJsData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":157,"count":1}],"isBlockCoverage":true}]},{"scriptId":"231","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_toSource.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"toSource","ranges":[{"startOffset":339,"endOffset":527,"count":12},{"startOffset":441,"endOffset":508,"count":0},{"startOffset":512,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"232","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"getValue","ranges":[{"startOffset":211,"endOffset":296,"count":7},{"startOffset":268,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"233","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_MapCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":869,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":389,"endOffset":606,"count":2},{"startOffset":467,"endOffset":470,"count":1},{"startOffset":471,"endOffset":487,"count":1},{"startOffset":533,"endOffset":604,"count":199}],"isBlockCoverage":true}]},{"scriptId":"234","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapCacheClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheClear","ranges":[{"startOffset":209,"endOffset":359,"count":2},{"startOffset":315,"endOffset":327,"count":0}],"isBlockCoverage":true}]},{"scriptId":"235","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":747,"count":1}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":319,"endOffset":532,"count":4},{"startOffset":397,"endOffset":413,"count":0},{"startOffset":459,"endOffset":530,"count":0}],"isBlockCoverage":true}]},{"scriptId":"236","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hashClear.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"hashClear","ranges":[{"startOffset":152,"endOffset":251,"count":4},{"startOffset":227,"endOffset":231,"count":0}],"isBlockCoverage":true}]},{"scriptId":"237","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_nativeCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true}]},{"scriptId":"238","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hashDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"hashDelete","ranges":[{"startOffset":279,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"239","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hashGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"hashGet","ranges":[{"startOffset":513,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"240","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hashHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"hashHas","ranges":[{"startOffset":461,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"241","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hashSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"hashSet","ranges":[{"startOffset":379,"endOffset":570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"242","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapCacheDelete.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":450,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheDelete","ranges":[{"startOffset":282,"endOffset":415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"243","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getMapData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":400,"count":1}],"isBlockCoverage":true},{"functionName":"getMapData","ranges":[{"startOffset":214,"endOffset":369,"count":3189},{"startOffset":301,"endOffset":351,"count":0}],"isBlockCoverage":true}]},{"scriptId":"244","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isKeyable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":430,"count":1}],"isBlockCoverage":true},{"functionName":"isKeyable","ranges":[{"startOffset":201,"endOffset":400,"count":3189},{"startOffset":349,"endOffset":374,"count":0}],"isBlockCoverage":true}]},{"scriptId":"245","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapCacheGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheGet","ranges":[{"startOffset":228,"endOffset":298,"count":1619}],"isBlockCoverage":true}]},{"scriptId":"246","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheHas","ranges":[{"startOffset":280,"endOffset":350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"247","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapCacheSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"mapCacheSet","ranges":[{"startOffset":279,"endOffset":457,"count":1570},{"startOffset":432,"endOffset":435,"count":0}],"isBlockCoverage":true}]},{"scriptId":"248","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"arrayEach","ranges":[{"startOffset":274,"endOffset":507,"count":1608},{"startOffset":359,"endOffset":362,"count":0},{"startOffset":407,"endOffset":489,"count":6338},{"startOffset":465,"endOffset":485,"count":0}],"isBlockCoverage":true}]},{"scriptId":"249","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_assignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"assignValue","ranges":[{"startOffset":629,"endOffset":867,"count":6928},{"startOffset":743,"endOffset":765,"count":0},{"startOffset":767,"endOffset":817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"250","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseAssignValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignValue","ranges":[{"startOffset":314,"endOffset":589,"count":6928},{"startOffset":386,"endOffset":403,"count":0},{"startOffset":405,"endOffset":551,"count":0}],"isBlockCoverage":true}]},{"scriptId":"251","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_defineProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":64,"endOffset":194,"count":1},{"startOffset":180,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"252","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseAssign.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssign","ranges":[{"startOffset":339,"endOffset":439,"count":585}],"isBlockCoverage":true}]},{"scriptId":"253","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_copyObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1044,"count":1}],"isBlockCoverage":true},{"functionName":"copyObject","ranges":[{"startOffset":467,"endOffset":1013,"count":1170},{"startOffset":556,"endOffset":572,"count":0},{"startOffset":650,"endOffset":994,"count":590},{"startOffset":717,"endOffset":776,"count":0},{"startOffset":882,"endOffset":935,"count":0}],"isBlockCoverage":true}]},{"scriptId":"254","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":884,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":761,"endOffset":859,"count":2121},{"startOffset":814,"endOffset":837,"count":0}],"isBlockCoverage":true}]},{"scriptId":"255","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayLikeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1778,"count":1}],"isBlockCoverage":true},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":697,"endOffset":1744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"256","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseTimes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"baseTimes","ranges":[{"startOffset":313,"endOffset":474,"count":0}],"isBlockCoverage":false}]},{"scriptId":"257","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1026,"count":1},{"startOffset":851,"endOffset":993,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":797,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":853,"endOffset":993,"count":0}],"isBlockCoverage":false}]},{"scriptId":"258","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsArguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsArguments","ranges":[{"startOffset":355,"endOffset":452,"count":2},{"startOffset":418,"endOffset":449,"count":1}],"isBlockCoverage":true}]},{"scriptId":"259","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isObjectLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":497,"endOffset":581,"count":4}],"isBlockCoverage":true}]},{"scriptId":"260","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true}]},{"scriptId":"261","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1114,"count":1},{"startOffset":548,"endOffset":559,"count":0},{"startOffset":697,"endOffset":708,"count":0},{"startOffset":1072,"endOffset":1084,"count":0}],"isBlockCoverage":true}]},{"scriptId":"262","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/stubFalse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"stubFalse","ranges":[{"startOffset":210,"endOffset":250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"263","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"isIndex","ranges":[{"startOffset":456,"endOffset":731,"count":0}],"isBlockCoverage":false}]},{"scriptId":"264","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":695,"count":1},{"startOffset":643,"endOffset":661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"265","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsTypedArray","ranges":[{"startOffset":2050,"endOffset":2185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"266","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":802,"count":1}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":645,"endOffset":773,"count":2125},{"startOffset":706,"endOffset":723,"count":4},{"startOffset":724,"endOffset":741,"count":4},{"startOffset":742,"endOffset":770,"count":4}],"isBlockCoverage":true}]},{"scriptId":"267","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseUnary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":332,"count":1}],"isBlockCoverage":true},{"functionName":"baseUnary","ranges":[{"startOffset":218,"endOffset":302,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":254,"endOffset":299,"count":3217}],"isBlockCoverage":true}]},{"scriptId":"268","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_nodeUtil.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":615,"endOffset":962,"count":1},{"startOffset":806,"endOffset":911,"count":0},{"startOffset":912,"endOffset":942,"count":0},{"startOffset":948,"endOffset":960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"269","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":479,"endOffset":747,"count":2121},{"startOffset":571,"endOffset":746,"count":0}],"isBlockCoverage":true}]},{"scriptId":"270","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":273,"endOffset":448,"count":4541},{"startOffset":404,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"271","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_nativeKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true}]},{"scriptId":"272","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_overArg.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":382,"count":1}],"isBlockCoverage":true},{"functionName":"overArg","ranges":[{"startOffset":254,"endOffset":354,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":299,"endOffset":351,"count":4541}],"isBlockCoverage":true}]},{"scriptId":"273","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isArrayLike.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLike","ranges":[{"startOffset":695,"endOffset":798,"count":2125},{"startOffset":774,"endOffset":795,"count":4}],"isBlockCoverage":true}]},{"scriptId":"274","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseAssignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":482,"count":1}],"isBlockCoverage":true},{"functionName":"baseAssignIn","ranges":[{"startOffset":345,"endOffset":449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"275","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/keysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":778,"count":1}],"isBlockCoverage":true},{"functionName":"keysIn","ranges":[{"startOffset":643,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"276","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":870,"count":1}],"isBlockCoverage":true},{"functionName":"baseKeysIn","ranges":[{"startOffset":523,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"277","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_nativeKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeysIn","ranges":[{"startOffset":292,"endOffset":457,"count":0}],"isBlockCoverage":false}]},{"scriptId":"278","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1056,"count":1},{"startOffset":508,"endOffset":519,"count":0},{"startOffset":567,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"cloneBuffer","ranges":[{"startOffset":783,"endOffset":1024,"count":0}],"isBlockCoverage":false}]},{"scriptId":"279","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_copyArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":454,"count":1}],"isBlockCoverage":true},{"functionName":"copyArray","ranges":[{"startOffset":219,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"280","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_copySymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":446,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbols","ranges":[{"startOffset":317,"endOffset":414,"count":585}],"isBlockCoverage":true}]},{"scriptId":"281","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getSymbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":886,"count":1},{"startOffset":624,"endOffset":635,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbols","ranges":[{"startOffset":638,"endOffset":854,"count":2121},{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":774,"endOffset":850,"count":0}],"isBlockCoverage":false}]},{"scriptId":"282","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayFilter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"arrayFilter","ranges":[{"startOffset":289,"endOffset":600,"count":2121},{"startOffset":377,"endOffset":380,"count":0},{"startOffset":464,"endOffset":581,"count":0}],"isBlockCoverage":true}]},{"scriptId":"283","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/stubArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":390,"count":1}],"isBlockCoverage":true},{"functionName":"stubArray","ranges":[{"startOffset":323,"endOffset":360,"count":0}],"isBlockCoverage":false}]},{"scriptId":"284","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_copySymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"copySymbolsIn","ranges":[{"startOffset":335,"endOffset":436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"285","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getSymbolsIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":754,"count":1},{"startOffset":549,"endOffset":560,"count":0}],"isBlockCoverage":true},{"functionName":"getSymbolsIn","ranges":[{"startOffset":563,"endOffset":720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"286","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayPush.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"arrayPush","ranges":[{"startOffset":200,"endOffset":407,"count":1536},{"startOffset":341,"endOffset":389,"count":0}],"isBlockCoverage":true}]},{"scriptId":"287","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getPrototype.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"288","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeys","ranges":[{"startOffset":342,"endOffset":424,"count":1536}],"isBlockCoverage":true}]},{"scriptId":"289","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseGetAllKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":537,"endOffset":704,"count":1536},{"startOffset":652,"endOffset":660,"count":0}],"isBlockCoverage":true}]},{"scriptId":"290","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getAllKeysIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"getAllKeysIn","ranges":[{"startOffset":367,"endOffset":455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"291","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1838,"count":1},{"startOffset":1296,"endOffset":1811,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":1309,"endOffset":1808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"292","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_DataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true}]},{"scriptId":"293","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"294","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"295","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_WeakMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true}]},{"scriptId":"296","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_initCloneArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":692,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneArray","ranges":[{"startOffset":329,"endOffset":657,"count":72},{"startOffset":498,"endOffset":528,"count":53},{"startOffset":529,"endOffset":567,"count":0},{"startOffset":569,"endOffset":638,"count":0}],"isBlockCoverage":true}]},{"scriptId":"297","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_initCloneByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2261,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneByTag","ranges":[{"startOffset":1454,"endOffset":2226,"count":0}],"isBlockCoverage":false}]},{"scriptId":"298","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneArrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":449,"count":1}],"isBlockCoverage":true},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"299","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_Uint8Array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true}]},{"scriptId":"300","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneDataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":507,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDataView","ranges":[{"startOffset":267,"endOffset":473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"301","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"cloneRegExp","ranges":[{"startOffset":243,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"302","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1},{"startOffset":138,"endOffset":149,"count":0},{"startOffset":205,"endOffset":216,"count":0}],"isBlockCoverage":true},{"functionName":"cloneSymbol","ranges":[{"startOffset":394,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"303","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cloneTypedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"cloneTypedArray","ranges":[{"startOffset":275,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"304","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_initCloneObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"initCloneObject","ranges":[{"startOffset":290,"endOffset":450,"count":2420},{"startOffset":443,"endOffset":447,"count":0}],"isBlockCoverage":true}]},{"scriptId":"305","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseCreate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":686,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":355,"endOffset":651,"count":1}],"isBlockCoverage":true},{"functionName":"object","ranges":[{"startOffset":370,"endOffset":390,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":400,"endOffset":648,"count":2420},{"startOffset":444,"endOffset":468,"count":0},{"startOffset":532,"endOffset":647,"count":0}],"isBlockCoverage":true}]},{"scriptId":"306","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"307","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMap","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"308","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":613,"count":1},{"startOffset":575,"endOffset":586,"count":0}],"isBlockCoverage":true}]},{"scriptId":"309","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsSet","ranges":[{"startOffset":362,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"310","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/create-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4201,"count":1}],"isBlockCoverage":true},{"functionName":"startChain","ranges":[{"startOffset":52,"endOffset":279,"count":11}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":108,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"extendChain","ranges":[{"startOffset":281,"endOffset":647,"count":63},{"startOffset":338,"endOffset":357,"count":9}],"isBlockCoverage":true},{"functionName":"fn","ranges":[{"startOffset":371,"endOffset":426,"count":0}],"isBlockCoverage":false},{"functionName":"callWithFlag","ranges":[{"startOffset":649,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"createHookChain","ranges":[{"startOffset":981,"endOffset":1506,"count":8},{"startOffset":1311,"endOffset":1489,"count":4}],"isBlockCoverage":true},{"functionName":"createChain","ranges":[{"startOffset":1508,"endOffset":4169,"count":1}],"isBlockCoverage":true}]},{"scriptId":"311","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/parse-test-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"parseTestArgs","ranges":[{"startOffset":14,"endOffset":599,"count":1},{"startOffset":106,"endOffset":117,"count":0},{"startOffset":233,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"buildTitle","ranges":[{"startOffset":290,"endOffset":511,"count":1},{"startOffset":347,"endOffset":388,"count":0}],"isBlockCoverage":true}]},{"scriptId":"312","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/snapshot-manager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13484,"count":1}],"isBlockCoverage":true},{"functionName":"SnapshotError","ranges":[{"startOffset":1226,"endOffset":1338,"count":0}],"isBlockCoverage":false},{"functionName":"ChecksumError","ranges":[{"startOffset":1426,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"VersionMismatchError","ranges":[{"startOffset":1618,"endOffset":1805,"count":0}],"isBlockCoverage":false},{"functionName":"isLegacySnapshot","ranges":[{"startOffset":1929,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"LegacyError","ranges":[{"startOffset":2102,"endOffset":2200,"count":0}],"isBlockCoverage":false},{"functionName":"tryRead","ranges":[{"startOffset":2239,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"withoutLineEndings","ranges":[{"startOffset":2397,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"formatEntry","ranges":[{"startOffset":2625,"endOffset":2860,"count":0}],"isBlockCoverage":false},{"functionName":"combineEntries","ranges":[{"startOffset":2862,"endOffset":3511,"count":0}],"isBlockCoverage":false},{"functionName":"generateReport","ranges":[{"startOffset":3513,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"appendReportEntries","ranges":[{"startOffset":4043,"endOffset":4454,"count":0}],"isBlockCoverage":false},{"functionName":"encodeSnapshots","ranges":[{"startOffset":4456,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"decodeSnapshots","ranges":[{"startOffset":6472,"endOffset":8469,"count":0}],"isBlockCoverage":false},{"functionName":"Manager","ranges":[{"startOffset":8488,"endOffset":8893,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":8896,"endOffset":9599,"count":0}],"isBlockCoverage":false},{"functionName":"deferRecord","ranges":[{"startOffset":9602,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"record","ranges":[{"startOffset":10646,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":10737,"endOffset":11466,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11500,"endOffset":11992,"count":0}],"isBlockCoverage":false},{"functionName":"mem.cacheKey.file.file","ranges":[{"startOffset":12029,"endOffset":12612,"count":0}],"isBlockCoverage":false},{"functionName":"cacheKey","ranges":[{"startOffset":12625,"endOffset":12643,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":12702,"endOffset":13461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"313","url":"crypto.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7286,"count":1}],"isBlockCoverage":false},{"functionName":"createHash","ranges":[{"startOffset":3104,"endOffset":3186,"count":3670}],"isBlockCoverage":true},{"functionName":"createCipher","ranges":[{"startOffset":3188,"endOffset":3288,"count":0}],"isBlockCoverage":false},{"functionName":"createCipheriv","ranges":[{"startOffset":3290,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipher","ranges":[{"startOffset":3394,"endOffset":3498,"count":0}],"isBlockCoverage":false},{"functionName":"createDecipheriv","ranges":[{"startOffset":3500,"endOffset":3606,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellman","ranges":[{"startOffset":3608,"endOffset":3764,"count":0}],"isBlockCoverage":false},{"functionName":"createDiffieHellmanGroup","ranges":[{"startOffset":3766,"endOffset":3848,"count":0}],"isBlockCoverage":false},{"functionName":"createECDH","ranges":[{"startOffset":3850,"endOffset":3906,"count":0}],"isBlockCoverage":false},{"functionName":"createHmac","ranges":[{"startOffset":3908,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"createSign","ranges":[{"startOffset":3992,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"createVerify","ranges":[{"startOffset":4076,"endOffset":4162,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsDisabled","ranges":[{"startOffset":5155,"endOffset":5228,"count":0}],"isBlockCoverage":false},{"functionName":"setFipsForced","ranges":[{"startOffset":5230,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsDisabled","ranges":[{"startOffset":5320,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"getFipsForced","ranges":[{"startOffset":5364,"endOffset":5404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"314","url":"internal/crypto/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3513,"count":1}],"isBlockCoverage":false},{"functionName":"assertOffset","ranges":[{"startOffset":617,"endOffset":983,"count":0}],"isBlockCoverage":false},{"functionName":"assertSize","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"randomBytes","ranges":[{"startOffset":1448,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"randomFillSync","ranges":[{"startOffset":1962,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"randomFill","ranges":[{"startOffset":2439,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":3376,"endOffset":3443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"315","url":"internal/crypto/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2373,"count":1}],"isBlockCoverage":false},{"functionName":"pbkdf2","ranges":[{"startOffset":471,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"pbkdf2Sync","ranges":[{"startOffset":1344,"endOffset":1755,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1757,"endOffset":2160,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":2162,"endOffset":2326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"316","url":"internal/crypto/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2937,"count":1}],"isBlockCoverage":false},{"functionName":"setDefaultEncoding","ranges":[{"startOffset":781,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultEncoding","ranges":[{"startOffset":844,"endOffset":903,"count":10079}],"isBlockCoverage":true},{"functionName":"toBuf","ranges":[{"startOffset":1078,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1368,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1444,"endOffset":1486,"count":0}],"isBlockCoverage":false},{"functionName":"setEngine","ranges":[{"startOffset":1490,"endOffset":1856,"count":0}],"isBlockCoverage":false},{"functionName":"timingSafeEqual","ranges":[{"startOffset":1858,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2406,"endOffset":2754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"317","url":"internal/crypto/scrypt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3695,"count":1}],"isBlockCoverage":false},{"functionName":"scrypt","ranges":[{"startOffset":587,"endOffset":1424,"count":0}],"isBlockCoverage":false},{"functionName":"scryptSync","ranges":[{"startOffset":1426,"endOffset":1851,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1853,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2097,"endOffset":3652,"count":0}],"isBlockCoverage":false}]},{"scriptId":"318","url":"internal/crypto/keygen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10082,"count":1}],"isBlockCoverage":false},{"functionName":"wrapKey","ranges":[{"startOffset":954,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPair","ranges":[{"startOffset":1084,"endOffset":1739,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeyPairSync","ranges":[{"startOffset":1865,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"handleError","ranges":[{"startOffset":1981,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":2326,"endOffset":3450,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":3452,"endOffset":10021,"count":0}],"isBlockCoverage":false}]},{"scriptId":"319","url":"internal/crypto/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10293,"count":1}],"isBlockCoverage":false},{"functionName":"KeyObject","ranges":[{"startOffset":1041,"endOffset":1471,"count":0}],"isBlockCoverage":false},{"functionName":"get type","ranges":[{"startOffset":1475,"endOffset":1518,"count":0}],"isBlockCoverage":false},{"functionName":"SecretKeyObject","ranges":[{"startOffset":1566,"endOffset":1620,"count":0}],"isBlockCoverage":false},{"functionName":"get symmetricKeySize","ranges":[{"startOffset":1624,"endOffset":1700,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":1704,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"get asymmetricKeyType","ranges":[{"startOffset":1863,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"PublicKeyObject","ranges":[{"startOffset":2067,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2125,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateKeyObject","ranges":[{"startOffset":2356,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"export","ranges":[{"startOffset":2415,"endOffset":2640,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormat","ranges":[{"startOffset":2644,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyType","ranges":[{"startOffset":2973,"endOffset":3825,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":3827,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyFormatAndType","ranges":[{"startOffset":3925,"endOffset":4519,"count":0}],"isBlockCoverage":false},{"functionName":"isStringOrBuffer","ranges":[{"startOffset":4521,"endOffset":4615,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyEncoding","ranges":[{"startOffset":4617,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"parsePublicKeyEncoding","ranges":[{"startOffset":6116,"endOffset":6252,"count":0}],"isBlockCoverage":false},{"functionName":"parsePrivateKeyEncoding","ranges":[{"startOffset":6452,"endOffset":6568,"count":0}],"isBlockCoverage":false},{"functionName":"getKeyObjectHandle","ranges":[{"startOffset":6570,"endOffset":7132,"count":0}],"isBlockCoverage":false},{"functionName":"prepareAsymmetricKey","ranges":[{"startOffset":7134,"endOffset":8375,"count":0}],"isBlockCoverage":false},{"functionName":"preparePrivateKey","ranges":[{"startOffset":8377,"endOffset":8465,"count":0}],"isBlockCoverage":false},{"functionName":"preparePublicOrPrivateKey","ranges":[{"startOffset":8467,"endOffset":8562,"count":0}],"isBlockCoverage":false},{"functionName":"prepareSecretKey","ranges":[{"startOffset":8564,"endOffset":9055,"count":0}],"isBlockCoverage":false},{"functionName":"createSecretKey","ranges":[{"startOffset":9057,"endOffset":9340,"count":0}],"isBlockCoverage":false},{"functionName":"createPublicKey","ranges":[{"startOffset":9342,"endOffset":9577,"count":0}],"isBlockCoverage":false},{"functionName":"createPrivateKey","ranges":[{"startOffset":9579,"endOffset":9846,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyObject","ranges":[{"startOffset":9848,"endOffset":9912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"320","url":"internal/crypto/diffiehellman.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8131,"count":1}],"isBlockCoverage":false},{"functionName":"DiffieHellman","ranges":[{"startOffset":970,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"DiffieHellmanGroup","ranges":[{"startOffset":2539,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"dhGenerateKeys","ranges":[{"startOffset":2954,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"dhComputeSecret","ranges":[{"startOffset":3230,"endOffset":3554,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrime","ranges":[{"startOffset":3653,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetGenerator","ranges":[{"startOffset":3920,"endOffset":4092,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPublicKey","ranges":[{"startOffset":4203,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"dhGetPrivateKey","ranges":[{"startOffset":4477,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"setPublicKey","ranges":[{"startOffset":4681,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"setPrivateKey","ranges":[{"startOffset":4879,"endOffset":5035,"count":0}],"isBlockCoverage":false},{"functionName":"ECDH","ranges":[{"startOffset":5039,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"generateKeys","ranges":[{"startOffset":5504,"endOffset":5626,"count":0}],"isBlockCoverage":false},{"functionName":"getPublicKey","ranges":[{"startOffset":5659,"endOffset":5857,"count":0}],"isBlockCoverage":false},{"functionName":"convertKey","ranges":[{"startOffset":5878,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6399,"endOffset":6534,"count":0}],"isBlockCoverage":false},{"functionName":"getFormat","ranges":[{"startOffset":6536,"endOffset":6859,"count":0}],"isBlockCoverage":false},{"functionName":"diffieHellman","ranges":[{"startOffset":6929,"endOffset":8044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"321","url":"internal/crypto/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8473,"count":1}],"isBlockCoverage":false},{"functionName":"rsaFunctionFor","ranges":[{"startOffset":1054,"endOffset":1914,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1122,"endOffset":1911,"count":0}],"isBlockCoverage":false},{"functionName":"getDecoder","ranges":[{"startOffset":2415,"endOffset":2732,"count":0}],"isBlockCoverage":false},{"functionName":"getUIntOption","ranges":[{"startOffset":2734,"endOffset":2955,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherBase","ranges":[{"startOffset":2957,"endOffset":3366,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3368,"endOffset":3590,"count":0}],"isBlockCoverage":false},{"functionName":"createCipherWithIV","ranges":[{"startOffset":3592,"endOffset":3851,"count":0}],"isBlockCoverage":false},{"functionName":"Cipher","ranges":[{"startOffset":3853,"endOffset":4043,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":4186,"endOffset":4302,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":4331,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":4498,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"final","ranges":[{"startOffset":5177,"endOffset":5480,"count":0}],"isBlockCoverage":false},{"functionName":"setAutoPadding","ranges":[{"startOffset":5518,"endOffset":5665,"count":0}],"isBlockCoverage":false},{"functionName":"getAuthTag","ranges":[{"startOffset":5698,"endOffset":5858,"count":0}],"isBlockCoverage":false},{"functionName":"setAuthTag","ranges":[{"startOffset":5862,"endOffset":6205,"count":0}],"isBlockCoverage":false},{"functionName":"setAAD","ranges":[{"startOffset":6233,"endOffset":6660,"count":0}],"isBlockCoverage":false},{"functionName":"Cipheriv","ranges":[{"startOffset":6663,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"addCipherPrototypeFunctions","ranges":[{"startOffset":6864,"endOffset":7455,"count":3},{"startOffset":7260,"endOffset":7333,"count":1},{"startOffset":7333,"endOffset":7395,"count":2}],"isBlockCoverage":true},{"functionName":"Decipher","ranges":[{"startOffset":7611,"endOffset":7808,"count":0}],"isBlockCoverage":false},{"functionName":"Decipheriv","ranges":[{"startOffset":7965,"endOffset":8171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"322","url":"internal/streams/lazy_transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1669,"count":1}],"isBlockCoverage":false},{"functionName":"LazyTransform","ranges":[{"startOffset":468,"endOffset":530,"count":3670}],"isBlockCoverage":true},{"functionName":"makeGetter","ranges":[{"startOffset":662,"endOffset":970,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":699,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"makeSetter","ranges":[{"startOffset":972,"endOffset":1167,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1009,"endOffset":1164,"count":0}],"isBlockCoverage":false}]},{"scriptId":"323","url":"internal/crypto/sig.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5946,"count":1}],"isBlockCoverage":false},{"functionName":"Sign","ranges":[{"startOffset":729,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1100,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1219,"endOffset":1580,"count":0}],"isBlockCoverage":false},{"functionName":"getPadding","ranges":[{"startOffset":1583,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"getSaltLength","ranges":[{"startOffset":1660,"endOffset":1741,"count":0}],"isBlockCoverage":false},{"functionName":"getDSASignatureEncoding","ranges":[{"startOffset":1743,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"getIntOption","ranges":[{"startOffset":2089,"endOffset":2321,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":2345,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"signOneShot","ranges":[{"startOffset":3011,"endOffset":3809,"count":0}],"isBlockCoverage":false},{"functionName":"Verify","ranges":[{"startOffset":3811,"endOffset":4067,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":4295,"endOffset":4929,"count":0}],"isBlockCoverage":false},{"functionName":"verifyOneShot","ranges":[{"startOffset":4932,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"324","url":"internal/crypto/hash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":false},{"functionName":"Hash","ranges":[{"startOffset":764,"endOffset":1272,"count":3670},{"startOffset":835,"endOffset":871,"count":0},{"startOffset":998,"endOffset":1017,"count":0},{"startOffset":1018,"endOffset":1044,"count":0},{"startOffset":1090,"endOffset":1137,"count":0}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":1403,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"_transform","ranges":[{"startOffset":1602,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":1734,"endOffset":1814,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":1841,"endOffset":2353,"count":10377},{"startOffset":1897,"endOffset":1920,"count":10079},{"startOffset":1982,"endOffset":2020,"count":0},{"startOffset":2097,"endOffset":2243,"count":0},{"startOffset":2294,"endOffset":2336,"count":0}],"isBlockCoverage":true},{"functionName":"digest","ranges":[{"startOffset":2381,"endOffset":2726,"count":3670},{"startOffset":2474,"endOffset":2512,"count":0},{"startOffset":2547,"endOffset":2570,"count":0}],"isBlockCoverage":true},{"functionName":"Hmac","ranges":[{"startOffset":2730,"endOffset":3058,"count":0}],"isBlockCoverage":false},{"functionName":"digest","ranges":[{"startOffset":3239,"endOffset":3658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"325","url":"internal/crypto/certificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1119,"count":1}],"isBlockCoverage":false},{"functionName":"verifySpkac","ranges":[{"startOffset":247,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"exportPublicKey","ranges":[{"startOffset":347,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"exportChallenge","ranges":[{"startOffset":478,"endOffset":607,"count":0}],"isBlockCoverage":false},{"functionName":"Certificate","ranges":[{"startOffset":695,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"326","url":"zlib.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28287,"count":1}],"isBlockCoverage":false},{"functionName":"zlibBuffer","ranges":[{"startOffset":3264,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnData","ranges":[{"startOffset":3989,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnError","ranges":[{"startOffset":4143,"endOffset":4228,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferOnEnd","ranges":[{"startOffset":4230,"endOffset":4684,"count":0}],"isBlockCoverage":false},{"functionName":"zlibBufferSync","ranges":[{"startOffset":4686,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"zlibOnError","ranges":[{"startOffset":5228,"endOffset":5569,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5794,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6525,"endOffset":6816,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase","ranges":[{"startOffset":6867,"endOffset":8421,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8627,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9087,"endOffset":9133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9280,"endOffset":9332,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.reset","ranges":[{"startOffset":9472,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._flush","ranges":[{"startOffset":9726,"endOffset":9798,"count":0}],"isBlockCoverage":false},{"functionName":"maxFlush","ranges":[{"startOffset":10396,"endOffset":10471,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.flush","ranges":[{"startOffset":10912,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase.close","ranges":[{"startOffset":11357,"endOffset":11439,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._destroy","ranges":[{"startOffset":11472,"endOffset":11532,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._transform","ranges":[{"startOffset":11567,"endOffset":12130,"count":0}],"isBlockCoverage":false},{"functionName":"ZlibBase._processChunk","ranges":[{"startOffset":12168,"endOffset":12397,"count":0}],"isBlockCoverage":false},{"functionName":"processChunkSync","ranges":[{"startOffset":12400,"endOffset":14604,"count":0}],"isBlockCoverage":false},{"functionName":"processChunk","ranges":[{"startOffset":14606,"endOffset":15196,"count":0}],"isBlockCoverage":false},{"functionName":"processCallback","ranges":[{"startOffset":15198,"endOffset":17500,"count":0}],"isBlockCoverage":false},{"functionName":"_close","ranges":[{"startOffset":17502,"endOffset":17692,"count":0}],"isBlockCoverage":false},{"functionName":"Zlib","ranges":[{"startOffset":17888,"endOffset":20476,"count":0}],"isBlockCoverage":false},{"functionName":"paramsAfterFlushCallback","ranges":[{"startOffset":20826,"endOffset":21092,"count":0}],"isBlockCoverage":false},{"functionName":"params","ranges":[{"startOffset":21118,"endOffset":21530,"count":0}],"isBlockCoverage":false},{"functionName":"Deflate","ranges":[{"startOffset":21574,"endOffset":21698,"count":0}],"isBlockCoverage":false},{"functionName":"Inflate","ranges":[{"startOffset":21794,"endOffset":21918,"count":0}],"isBlockCoverage":false},{"functionName":"Gzip","ranges":[{"startOffset":22014,"endOffset":22126,"count":0}],"isBlockCoverage":false},{"functionName":"Gunzip","ranges":[{"startOffset":22216,"endOffset":22336,"count":0}],"isBlockCoverage":false},{"functionName":"DeflateRaw","ranges":[{"startOffset":22430,"endOffset":22624,"count":0}],"isBlockCoverage":false},{"functionName":"InflateRaw","ranges":[{"startOffset":22726,"endOffset":22862,"count":0}],"isBlockCoverage":false},{"functionName":"Unzip","ranges":[{"startOffset":22964,"endOffset":23080,"count":0}],"isBlockCoverage":false},{"functionName":"createConvenienceMethod","ranges":[{"startOffset":23172,"endOffset":23561,"count":18},{"startOffset":23231,"endOffset":23560,"count":9}],"isBlockCoverage":true},{"functionName":"syncBufferWrapper","ranges":[{"startOffset":23244,"endOffset":23345,"count":0}],"isBlockCoverage":false},{"functionName":"asyncBufferWrapper","ranges":[{"startOffset":23360,"endOffset":23558,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23624,"endOffset":23699,"count":107},{"startOffset":23676,"endOffset":23692,"count":9},{"startOffset":23693,"endOffset":23696,"count":98}],"isBlockCoverage":true},{"functionName":"Brotli","ranges":[{"startOffset":23915,"endOffset":25026,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliCompress","ranges":[{"startOffset":25120,"endOffset":25273,"count":0}],"isBlockCoverage":false},{"functionName":"BrotliDecompress","ranges":[{"startOffset":25387,"endOffset":25546,"count":0}],"isBlockCoverage":false},{"functionName":"createProperty","ranges":[{"startOffset":25665,"endOffset":25829,"count":9}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":25765,"endOffset":25822,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":26039,"endOffset":26075,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":26079,"endOffset":26120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"327","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"328","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3379,"count":1}],"isBlockCoverage":true},{"functionName":"shortcircuitPrimitive","ranges":[{"startOffset":408,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"compareDescriptors","ranges":[{"startOffset":730,"endOffset":2814,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2864,"endOffset":3352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"329","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/Circular.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":785,"count":1}],"isBlockCoverage":true},{"functionName":"Circular","ranges":[{"startOffset":33,"endOffset":80,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":84,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":365,"endOffset":583,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":587,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":651,"endOffset":756,"count":0}],"isBlockCoverage":false}]},{"scriptId":"330","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":249,"count":1}],"isBlockCoverage":true}]},{"scriptId":"331","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/describe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5965,"count":1}],"isBlockCoverage":true},{"functionName":"describePrimitive","ranges":[{"startOffset":2448,"endOffset":2957,"count":0}],"isBlockCoverage":false},{"functionName":"unboxComplex","ranges":[{"startOffset":2959,"endOffset":3324,"count":0}],"isBlockCoverage":false},{"functionName":"registerPlugins","ranges":[{"startOffset":3326,"endOffset":3726,"count":0}],"isBlockCoverage":false},{"functionName":"describeComplex","ranges":[{"startOffset":3728,"endOffset":4699,"count":0}],"isBlockCoverage":false},{"functionName":"describeItem","ranges":[{"startOffset":4722,"endOffset":4923,"count":0}],"isBlockCoverage":false},{"functionName":"describeMapEntry","ranges":[{"startOffset":4950,"endOffset":5058,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":5060,"endOffset":5938,"count":0}],"isBlockCoverage":false}]},{"scriptId":"332","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/Registry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":403,"count":1}],"isBlockCoverage":true},{"functionName":"Registry","ranges":[{"startOffset":33,"endOffset":103,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":107,"endOffset":155,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":159,"endOffset":218,"count":0}],"isBlockCoverage":false},{"functionName":"alloc","ranges":[{"startOffset":222,"endOffset":374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"333","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/arguments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1385,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":409,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":652,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1160,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"334","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7185,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":436,"endOffset":713,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":743,"endOffset":839,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectValue","ranges":[{"startOffset":950,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1207,"endOffset":1399,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":1403,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1474,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1565,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":2001,"endOffset":6371,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2068,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2439,"endOffset":2563,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2569,"endOffset":3030,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":3036,"endOffset":3472,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":3478,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":4500,"endOffset":6365,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":6413,"endOffset":7138,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6483,"endOffset":6780,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":6786,"endOffset":7055,"count":0}],"isBlockCoverage":false},{"functionName":"hasSameCtor","ranges":[{"startOffset":7061,"endOffset":7132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"335","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/formatUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3260,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":60,"endOffset":146,"count":0}],"isBlockCoverage":false},{"functionName":"formatCtorAndStringTag","ranges":[{"startOffset":168,"endOffset":537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectFormatter","ranges":[{"startOffset":621,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":844,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":1193,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":1877,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"shouldFormat","ranges":[{"startOffset":2165,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"customize","ranges":[{"startOffset":2206,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"SingleValueFormatter","ranges":[{"startOffset":2579,"endOffset":2786,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2790,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"finalize","ranges":[{"startOffset":2965,"endOffset":3116,"count":0}],"isBlockCoverage":false},{"functionName":"maxDepth","ranges":[{"startOffset":3120,"endOffset":3205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"336","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/lineBuilder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7155,"count":1}],"isBlockCoverage":true},{"functionName":"translateGutter","ranges":[{"startOffset":123,"endOffset":485,"count":0}],"isBlockCoverage":false},{"functionName":"Line","ranges":[{"startOffset":502,"endOffset":670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":674,"endOffset":717,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":721,"endOffset":758,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":762,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":820,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":884,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":938,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1031,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":1206,"endOffset":1479,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":1483,"endOffset":1630,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":1634,"endOffset":1783,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":1787,"endOffset":1871,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":1875,"endOffset":1960,"count":0}],"isBlockCoverage":false},{"functionName":"Collection","ranges":[{"startOffset":2050,"endOffset":2091,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2095,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2221,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"get hasGutter","ranges":[{"startOffset":2281,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"get isSingle","ranges":[{"startOffset":2399,"endOffset":2526,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":2530,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"concat","ranges":[{"startOffset":2636,"endOffset":2725,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2729,"endOffset":3536,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithInfix","ranges":[{"startOffset":3540,"endOffset":4287,"count":0}],"isBlockCoverage":false},{"functionName":"withFirstPrefixed","ranges":[{"startOffset":4291,"endOffset":4423,"count":0}],"isBlockCoverage":false},{"functionName":"withLastPostfixed","ranges":[{"startOffset":4427,"endOffset":4561,"count":0}],"isBlockCoverage":false},{"functionName":"stripFlags","ranges":[{"startOffset":4565,"endOffset":4671,"count":0}],"isBlockCoverage":false},{"functionName":"decompose","ranges":[{"startOffset":4675,"endOffset":5381,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":5462,"endOffset":5708,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5731,"endOffset":5774,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":5779,"endOffset":5856,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":5861,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":5942,"endOffset":6019,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6024,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6106,"endOffset":6175,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6194,"endOffset":6277,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6284,"endOffset":6366,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6373,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6463,"endOffset":6546,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":6553,"endOffset":6652,"count":0}],"isBlockCoverage":false},{"functionName":"first","ranges":[{"startOffset":6678,"endOffset":6763,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":6770,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"line","ranges":[{"startOffset":6861,"endOffset":6946,"count":0}],"isBlockCoverage":false},{"functionName":"single","ranges":[{"startOffset":6953,"endOffset":7038,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultGutter","ranges":[{"startOffset":7045,"endOffset":7146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"337","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/getObjectKeys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":944,"count":1}],"isBlockCoverage":true},{"functionName":"getObjectKeys","ranges":[{"startOffset":14,"endOffset":912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"338","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/hasLength.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"hasLength","ranges":[{"startOffset":104,"endOffset":275,"count":0}],"isBlockCoverage":false}]},{"scriptId":"339","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/metaDescriptors/stats.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3836,"count":1}],"isBlockCoverage":true},{"functionName":"describeIterableRecursor","ranges":[{"startOffset":228,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"describeListRecursor","ranges":[{"startOffset":380,"endOffset":462,"count":0}],"isBlockCoverage":false},{"functionName":"describePropertyRecursor","ranges":[{"startOffset":516,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeIterableStats","ranges":[{"startOffset":668,"endOffset":745,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeListStats","ranges":[{"startOffset":807,"endOffset":876,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePropertyStats","ranges":[{"startOffset":930,"endOffset":1007,"count":0}],"isBlockCoverage":false},{"functionName":"Stats","ranges":[{"startOffset":1306,"endOffset":1351,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1355,"endOffset":1432,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1436,"endOffset":2989,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2993,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3141,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3387,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3625,"endOffset":3755,"count":0}],"isBlockCoverage":false}]},{"scriptId":"340","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/recursorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1901,"count":1}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":51,"endOffset":74,"count":0}],"isBlockCoverage":false},{"functionName":"fork","ranges":[{"startOffset":117,"endOffset":396,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":418,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"replay","ranges":[{"startOffset":580,"endOffset":1256,"count":0}],"isBlockCoverage":false},{"functionName":"sequence","ranges":[{"startOffset":1282,"endOffset":1500,"count":0}],"isBlockCoverage":false},{"functionName":"singleValue","ranges":[{"startOffset":1530,"endOffset":1662,"count":0}],"isBlockCoverage":false},{"functionName":"unshift","ranges":[{"startOffset":1698,"endOffset":1874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"341","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/arrayBuffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":313,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":343,"endOffset":444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"342","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/typedArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4439,"count":1}],"isBlockCoverage":true},{"functionName":"getBuffer","ranges":[{"startOffset":382,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":628,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":910,"endOffset":1010,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeBytes","ranges":[{"startOffset":1046,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"Bytes","ranges":[{"startOffset":1292,"endOffset":1343,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1347,"endOffset":1482,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1486,"endOffset":2297,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2301,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"TypedArrayValue","ranges":[{"startOffset":2466,"endOffset":2539,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":2543,"endOffset":2931,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedMixin","ranges":[{"startOffset":3049,"endOffset":3869,"count":3}],"isBlockCoverage":true},{"functionName":"createListRecursor","ranges":[{"startOffset":3237,"endOffset":3307,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":3313,"endOffset":3749,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":3755,"endOffset":3863,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMixin","ranges":[{"startOffset":3977,"endOffset":4320,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4073,"endOffset":4314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"343","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/boxed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":165,"endOffset":234,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":264,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedBoxedValue","ranges":[{"startOffset":634,"endOffset":709,"count":0}],"isBlockCoverage":false},{"functionName":"createListRecursor","ranges":[{"startOffset":713,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":783,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1126,"endOffset":1220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"344","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11011,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":306,"endOffset":367,"count":0}],"isBlockCoverage":false},{"functionName":"basicEscape","ranges":[{"startOffset":707,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"escapeLinebreak","ranges":[{"startOffset":1015,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"themeControlPictures","ranges":[{"startOffset":1221,"endOffset":1442,"count":0}],"isBlockCoverage":false},{"functionName":"escapeQuotes","ranges":[{"startOffset":1537,"endOffset":1834,"count":0}],"isBlockCoverage":false},{"functionName":"includesLinebreaks","ranges":[{"startOffset":1836,"endOffset":1932,"count":0}],"isBlockCoverage":false},{"functionName":"diffLine","ranges":[{"startOffset":1934,"endOffset":3579,"count":0}],"isBlockCoverage":false},{"functionName":"gatherLines","ranges":[{"startOffset":3615,"endOffset":3923,"count":0}],"isBlockCoverage":false},{"functionName":"StringValue","ranges":[{"startOffset":3947,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3999,"endOffset":4123,"count":0}],"isBlockCoverage":false},{"functionName":"get includesLinebreaks","ranges":[{"startOffset":4127,"endOffset":4200,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4204,"endOffset":5175,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":5179,"endOffset":5553,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5557,"endOffset":10819,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":10823,"endOffset":10863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"345","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/esutils/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1334,"endOffset":1486,"count":1}],"isBlockCoverage":true}]},{"scriptId":"346","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/esutils/lib/ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":4687,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":1370,"endOffset":2121,"count":0}],"isBlockCoverage":false},{"functionName":"isIterationStatement","ranges":[{"startOffset":2127,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isStatement","ranges":[{"startOffset":2450,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"isSourceElement","ranges":[{"startOffset":3268,"endOffset":3393,"count":0}],"isBlockCoverage":false},{"functionName":"trailingStatement","ranges":[{"startOffset":3399,"endOffset":3843,"count":0}],"isBlockCoverage":false},{"functionName":"isProblematicIfStatement","ranges":[{"startOffset":3849,"endOffset":4384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"347","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/esutils/lib/code.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":29610,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":29569,"count":1},{"startOffset":27989,"endOffset":28199,"count":128},{"startOffset":28045,"endOffset":28058,"count":31},{"startOffset":28059,"endOffset":28107,"count":102},{"startOffset":28094,"endOffset":28107,"count":37},{"startOffset":28108,"endOffset":28143,"count":76},{"startOffset":28144,"endOffset":28158,"count":75},{"startOffset":28273,"endOffset":28531,"count":128},{"startOffset":28328,"endOffset":28341,"count":31},{"startOffset":28342,"endOffset":28390,"count":102},{"startOffset":28377,"endOffset":28390,"count":37},{"startOffset":28391,"endOffset":28439,"count":76},{"startOffset":28426,"endOffset":28439,"count":28},{"startOffset":28440,"endOffset":28475,"count":66},{"startOffset":28476,"endOffset":28490,"count":65}],"isBlockCoverage":true},{"functionName":"isDecimalDigit","ranges":[{"startOffset":26641,"endOffset":26726,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":26732,"endOffset":26919,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":26925,"endOffset":27008,"count":0}],"isBlockCoverage":false},{"functionName":"isWhiteSpace","ranges":[{"startOffset":27243,"endOffset":27434,"count":0}],"isBlockCoverage":false},{"functionName":"isLineTerminator","ranges":[{"startOffset":27469,"endOffset":27583,"count":0}],"isBlockCoverage":false},{"functionName":"fromCodePoint","ranges":[{"startOffset":27634,"endOffset":27914,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES5","ranges":[{"startOffset":28537,"endOffset":28686,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES5","ranges":[{"startOffset":28692,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStartES6","ranges":[{"startOffset":28844,"endOffset":28993,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierPartES6","ranges":[{"startOffset":28999,"endOffset":29145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"348","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/esutils/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5616,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1333,"endOffset":5575,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictModeReservedWordES6","ranges":[{"startOffset":1405,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES5","ranges":[{"startOffset":1752,"endOffset":1984,"count":0}],"isBlockCoverage":false},{"functionName":"isKeywordES6","ranges":[{"startOffset":1990,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES5","ranges":[{"startOffset":3224,"endOffset":3363,"count":0}],"isBlockCoverage":false},{"functionName":"isReservedWordES6","ranges":[{"startOffset":3369,"endOffset":3508,"count":0}],"isBlockCoverage":false},{"functionName":"isRestrictedWord","ranges":[{"startOffset":3514,"endOffset":3603,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES5","ranges":[{"startOffset":3609,"endOffset":4045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeUtf16","ranges":[{"startOffset":4051,"endOffset":4161,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierNameES6","ranges":[{"startOffset":4167,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES5","ranges":[{"startOffset":4909,"endOffset":5027,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierES6","ranges":[{"startOffset":5033,"endOffset":5151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"349","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fast-diff/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":27285,"count":1}],"isBlockCoverage":true},{"functionName":"diff_main","ranges":[{"startOffset":1553,"endOffset":2723,"count":0}],"isBlockCoverage":false},{"functionName":"diff_compute_","ranges":[{"startOffset":2987,"endOffset":4571,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisect_","ranges":[{"startOffset":4922,"endOffset":8417,"count":0}],"isBlockCoverage":false},{"functionName":"diff_bisectSplit_","ranges":[{"startOffset":8763,"endOffset":9109,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonPrefix","ranges":[{"startOffset":9335,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"diff_commonSuffix","ranges":[{"startOffset":10396,"endOffset":11301,"count":0}],"isBlockCoverage":false},{"functionName":"diff_halfMatch_","ranges":[{"startOffset":11745,"endOffset":14805,"count":0}],"isBlockCoverage":false},{"functionName":"diff_cleanupMerge","ranges":[{"startOffset":15072,"endOffset":22357,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_start","ranges":[{"startOffset":22360,"endOffset":22457,"count":0}],"isBlockCoverage":false},{"functionName":"is_surrogate_pair_end","ranges":[{"startOffset":22459,"endOffset":22554,"count":0}],"isBlockCoverage":false},{"functionName":"starts_with_pair_end","ranges":[{"startOffset":22556,"endOffset":22645,"count":0}],"isBlockCoverage":false},{"functionName":"ends_with_pair_start","ranges":[{"startOffset":22647,"endOffset":22751,"count":0}],"isBlockCoverage":false},{"functionName":"remove_empty_tuples","ranges":[{"startOffset":22753,"endOffset":22939,"count":0}],"isBlockCoverage":false},{"functionName":"make_edit_splice","ranges":[{"startOffset":22941,"endOffset":23244,"count":0}],"isBlockCoverage":false},{"functionName":"find_cursor_edit_diff","ranges":[{"startOffset":23246,"endOffset":26986,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":26988,"endOffset":27180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"350","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/dataView.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":58,"endOffset":319,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":349,"endOffset":447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"351","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2613,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":304,"endOffset":471,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":501,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"formatDate","ranges":[{"startOffset":682,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"DateValue","ranges":[{"startOffset":993,"endOffset":1068,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1072,"endOffset":1333,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1337,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2122,"endOffset":2253,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedDateValue","ranges":[{"startOffset":2460,"endOffset":2610,"count":0}],"isBlockCoverage":false}]},{"scriptId":"352","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/date-time/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":831,"count":1}],"isBlockCoverage":true},{"functionName":"dateTime","ranges":[{"startOffset":71,"endOffset":718,"count":0}],"isBlockCoverage":false}]},{"scriptId":"353","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/time-zone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":343,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"354","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3605,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":331,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":638,"endOffset":733,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorValue","ranges":[{"startOffset":869,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":942,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1086,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2197,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedErrorValue","ranges":[{"startOffset":2400,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2587,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedErrorValue","ranges":[{"startOffset":3512,"endOffset":3602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"355","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/isEnumerable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"isEnumerable","ranges":[{"startOffset":14,"endOffset":140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"356","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3272,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":377,"endOffset":600,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":630,"endOffset":728,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionValue","ranges":[{"startOffset":870,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":943,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"DescribedFunctionValue","ranges":[{"startOffset":1858,"endOffset":1951,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1955,"endOffset":2203,"count":0}],"isBlockCoverage":false},{"functionName":"createPropertyRecursor","ranges":[{"startOffset":2207,"endOffset":2745,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2749,"endOffset":2809,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedFunctionValue","ranges":[{"startOffset":2897,"endOffset":2987,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2991,"endOffset":3205,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3209,"endOffset":3269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"357","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":275,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":412,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":512,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"358","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1845,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"MapValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1028,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1032,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1229,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedMapValue","ranges":[{"startOffset":1752,"endOffset":1842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"359","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/promise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1054,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":167,"endOffset":238,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":268,"endOffset":345,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":630,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":916,"endOffset":1051,"count":0}],"isBlockCoverage":false}]},{"scriptId":"360","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/regexp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2733,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":219,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":432,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"getSortedFlags","ranges":[{"startOffset":617,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"RegexpValue","ranges":[{"startOffset":824,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":930,"endOffset":1107,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1111,"endOffset":2317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":2321,"endOffset":2395,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedRegexpValue","ranges":[{"startOffset":2612,"endOffset":2730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"361","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/complexValues/set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1815,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":223,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":370,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"SetValue","ranges":[{"startOffset":595,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":668,"endOffset":861,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":865,"endOffset":1026,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1030,"endOffset":1090,"count":0}],"isBlockCoverage":false},{"functionName":"createIterableRecursor","ranges":[{"startOffset":1227,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSetValue","ranges":[{"startOffset":1722,"endOffset":1812,"count":0}],"isBlockCoverage":false}]},{"scriptId":"362","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/getCtor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1275,"count":1}],"isBlockCoverage":true},{"functionName":"getCtor","ranges":[{"startOffset":59,"endOffset":1249,"count":0}],"isBlockCoverage":false}]},{"scriptId":"363","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/getStringTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":721,"count":1},{"startOffset":467,"endOffset":720,"count":0}],"isBlockCoverage":true},{"functionName":"getStringTag","ranges":[{"startOffset":51,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":225,"endOffset":379,"count":0}],"isBlockCoverage":false},{"functionName":"getStringTagWithPromiseWorkaround","ranges":[{"startOffset":519,"endOffset":665,"count":0}],"isBlockCoverage":false}]},{"scriptId":"364","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/metaDescriptors/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7800,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":228,"endOffset":310,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":354,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":519,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":653,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexItem","ranges":[{"startOffset":1017,"endOffset":1095,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1099,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1175,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":1334,"endOffset":1719,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1723,"endOffset":4317,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":4321,"endOffset":4361,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveItem","ranges":[{"startOffset":4536,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4618,"endOffset":4775,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4779,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":5338,"endOffset":6853,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":6857,"endOffset":7586,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7590,"endOffset":7644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"365","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/metaDescriptors/mapEntry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7289,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":318,"endOffset":585,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":615,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"mergeWithKey","ranges":[{"startOffset":974,"endOffset":1422,"count":0}],"isBlockCoverage":false},{"functionName":"MapEntry","ranges":[{"startOffset":1443,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":1639,"endOffset":1916,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1920,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":2403,"endOffset":3004,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3008,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":3353,"endOffset":4184,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":4188,"endOffset":7070,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":7074,"endOffset":7148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"366","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/themeUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5252,"count":1}],"isBlockCoverage":true},{"functionName":"freezeTheme","ranges":[{"startOffset":151,"endOffset":490,"count":1},{"startOffset":233,"endOffset":472,"count":42},{"startOffset":338,"endOffset":468,"count":120},{"startOffset":397,"endOffset":425,"count":118},{"startOffset":427,"endOffset":462,"count":41}],"isBlockCoverage":true},{"functionName":"normalizePlugins","ranges":[{"startOffset":2414,"endOffset":3166,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":3206,"endOffset":4083,"count":0}],"isBlockCoverage":false},{"functionName":"addModifier","ranges":[{"startOffset":4147,"endOffset":4339,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiers","ranges":[{"startOffset":4447,"endOffset":5021,"count":0}],"isBlockCoverage":false},{"functionName":"applyModifiersToOriginal","ranges":[{"startOffset":5063,"endOffset":5191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"367","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":555,"endOffset":649,"count":1}],"isBlockCoverage":true}]},{"scriptId":"368","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1220,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1115,"endOffset":1192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"369","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseMerge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"baseMerge","ranges":[{"startOffset":699,"endOffset":1298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"370","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_assignMergeValue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":582,"count":1}],"isBlockCoverage":true},{"functionName":"assignMergeValue","ranges":[{"startOffset":342,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"371","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true}]},{"scriptId":"372","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_createBaseFor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":648,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseFor","ranges":[{"startOffset":217,"endOffset":614,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"373","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseMergeDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3069,"count":1}],"isBlockCoverage":true},{"functionName":"baseMergeDeep","ranges":[{"startOffset":1316,"endOffset":3035,"count":0}],"isBlockCoverage":false}]},{"scriptId":"374","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isArrayLikeObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":742,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":615,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"375","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1650,"count":1}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":1229,"endOffset":1616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"376","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_safeGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"safeGet","ranges":[{"startOffset":243,"endOffset":428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"377","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/toPlainObject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":744,"count":1}],"isBlockCoverage":true},{"functionName":"toPlainObject","ranges":[{"startOffset":634,"endOffset":710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"378","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_createAssigner.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1042,"count":1}],"isBlockCoverage":true},{"functionName":"createAssigner","ranges":[{"startOffset":272,"endOffset":1007,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326,"endOffset":1003,"count":0}],"isBlockCoverage":false}]},{"scriptId":"379","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":559,"count":1}],"isBlockCoverage":true},{"functionName":"baseRest","ranges":[{"startOffset":430,"endOffset":530,"count":5}],"isBlockCoverage":true}]},{"scriptId":"380","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/identity.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":297,"endOffset":341,"count":1}],"isBlockCoverage":true}]},{"scriptId":"381","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_overRest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1096,"count":1}],"isBlockCoverage":true},{"functionName":"overRest","ranges":[{"startOffset":503,"endOffset":1067,"count":5},{"startOffset":607,"endOffset":614,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":629,"endOffset":1064,"count":1}],"isBlockCoverage":true}]},{"scriptId":"382","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_apply.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"apply","ranges":[{"startOffset":374,"endOffset":688,"count":1},{"startOffset":441,"endOffset":475,"count":0},{"startOffset":480,"endOffset":523,"count":0},{"startOffset":585,"endOffset":646,"count":0},{"startOffset":650,"endOffset":687,"count":0}],"isBlockCoverage":true}]},{"scriptId":"383","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_setToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"384","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseSetToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":641,"count":1},{"startOffset":412,"endOffset":422,"count":0}],"isBlockCoverage":true},{"functionName":"baseSetToString","ranges":[{"startOffset":425,"endOffset":604,"count":5}],"isBlockCoverage":true}]},{"scriptId":"385","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/constant.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"constant","ranges":[{"startOffset":426,"endOffset":499,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":462,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"386","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_shortOut.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":941,"count":1}],"isBlockCoverage":true},{"functionName":"shortOut","ranges":[{"startOffset":534,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":609,"endOffset":909,"count":5},{"startOffset":752,"endOffset":830,"count":1},{"startOffset":786,"endOffset":824,"count":0},{"startOffset":830,"endOffset":860,"count":4}],"isBlockCoverage":true}]},{"scriptId":"387","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isIterateeCall.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":877,"count":1}],"isBlockCoverage":true},{"functionName":"isIterateeCall","ranges":[{"startOffset":514,"endOffset":842,"count":0}],"isBlockCoverage":false}]},{"scriptId":"388","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/pluginRegistry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6139,"count":1}],"isBlockCoverage":true},{"functionName":"PluginError","ranges":[{"startOffset":707,"endOffset":816,"count":0}],"isBlockCoverage":false},{"functionName":"PluginTypeError","ranges":[{"startOffset":864,"endOffset":977,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedApiError","ranges":[{"startOffset":1031,"endOffset":1159,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedError","ranges":[{"startOffset":1210,"endOffset":1344,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorTagError","ranges":[{"startOffset":1406,"endOffset":1596,"count":0}],"isBlockCoverage":false},{"functionName":"DuplicateDescriptorIdError","ranges":[{"startOffset":1657,"endOffset":1945,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1949,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"modifyTheme","ranges":[{"startOffset":3525,"endOffset":3639,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3641,"endOffset":5084,"count":0}],"isBlockCoverage":false},{"functionName":"getDeserializers","ranges":[{"startOffset":5104,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"getThemes","ranges":[{"startOffset":5414,"endOffset":5598,"count":0}],"isBlockCoverage":false},{"functionName":"getTryDescribeValues","ranges":[{"startOffset":5630,"endOffset":5734,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDescriptorRef","ranges":[{"startOffset":5788,"endOffset":6086,"count":0}],"isBlockCoverage":false}]},{"scriptId":"389","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true}]},{"scriptId":"390","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6662,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":276,"endOffset":447,"count":40},{"startOffset":427,"endOffset":432,"count":4},{"startOffset":433,"endOffset":444,"count":36}],"isBlockCoverage":true}]},{"scriptId":"391","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1},{"startOffset":233,"endOffset":281,"count":0}],"isBlockCoverage":true}]},{"scriptId":"392","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1},{"startOffset":91,"endOffset":138,"count":0},{"startOffset":141,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":143,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":193,"endOffset":201,"count":40}],"isBlockCoverage":true}]},{"scriptId":"393","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8032,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":245,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2244,"endOffset":2440,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2444,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2489,"endOffset":2879,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2883,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3178,"endOffset":4029,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4033,"endOffset":4575,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4728,"endOffset":8004,"count":0}],"isBlockCoverage":false}]},{"scriptId":"394","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":54,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":308,"endOffset":342,"count":0}],"isBlockCoverage":false}]},{"scriptId":"395","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":698,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":157,"endOffset":673,"count":0}],"isBlockCoverage":false}]},{"scriptId":"396","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":47,"endOffset":138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"397","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/clean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":47,"endOffset":167,"count":0}],"isBlockCoverage":false}]},{"scriptId":"398","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/inc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"inc","ranges":[{"startOffset":57,"endOffset":314,"count":0}],"isBlockCoverage":false}]},{"scriptId":"399","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":74,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"400","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":48,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"401","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":60,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"402","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/major.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"major","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"403","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/minor.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"minor","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"404","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/patch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"patch","ranges":[{"startOffset":58,"endOffset":98,"count":0}],"isBlockCoverage":false}]},{"scriptId":"405","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/prerelease.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"prerelease","ranges":[{"startOffset":52,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"406","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/rcompare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"rcompare","ranges":[{"startOffset":54,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"407","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/compare-loose.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":58,"endOffset":87,"count":0}],"isBlockCoverage":false}]},{"scriptId":"408","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/compare-build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"compareBuild","ranges":[{"startOffset":65,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"409","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"sort","ranges":[{"startOffset":61,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"410","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/rsort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"rsort","ranges":[{"startOffset":62,"endOffset":125,"count":0}],"isBlockCoverage":false}]},{"scriptId":"411","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"412","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":48,"endOffset":89,"count":0}],"isBlockCoverage":false}]},{"scriptId":"413","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":114,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":49,"endOffset":92,"count":0}],"isBlockCoverage":false}]},{"scriptId":"414","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"415","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":49,"endOffset":91,"count":0}],"isBlockCoverage":false}]},{"scriptId":"416","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":907,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":181,"endOffset":885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"417","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1497,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":135,"endOffset":1472,"count":0}],"isBlockCoverage":false}]},{"scriptId":"418","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/classes/comparator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3654,"count":1}],"isBlockCoverage":true},{"functionName":"get ANY","ranges":[{"startOffset":100,"endOffset":131,"count":2}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":134,"endOffset":741,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":745,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1245,"endOffset":1284,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":1288,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":1672,"endOffset":3428,"count":0}],"isBlockCoverage":false}]},{"scriptId":"419","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/classes/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12419,"count":1}],"isBlockCoverage":true},{"functionName":"Range","ranges":[{"startOffset":55,"endOffset":1358,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":1362,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":1532,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"parseRange","ranges":[{"startOffset":1575,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":2861,"endOffset":3491,"count":0}],"isBlockCoverage":false},{"functionName":"test","ranges":[{"startOffset":3559,"endOffset":3941,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":4323,"endOffset":4729,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":4899,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"isX","ranges":[{"startOffset":5226,"endOffset":5277,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTildes","ranges":[{"startOffset":5582,"endOffset":5697,"count":0}],"isBlockCoverage":false},{"functionName":"replaceTilde","ranges":[{"startOffset":5720,"endOffset":6394,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":6625,"endOffset":6740,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCaret","ranges":[{"startOffset":6763,"endOffset":8065,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":8090,"endOffset":8251,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRange","ranges":[{"startOffset":8275,"endOffset":9965,"count":0}],"isBlockCoverage":false},{"functionName":"replaceStars","ranges":[{"startOffset":10111,"endOffset":10286,"count":0}],"isBlockCoverage":false},{"functionName":"replaceGTE0","ranges":[{"startOffset":10308,"endOffset":10458,"count":0}],"isBlockCoverage":false},{"functionName":"hyphenReplace","ranges":[{"startOffset":10700,"endOffset":11376,"count":0}],"isBlockCoverage":false},{"functionName":"testSet","ranges":[{"startOffset":11394,"endOffset":12418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"420","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/functions/satisfies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":60,"endOffset":205,"count":0}],"isBlockCoverage":false}]},{"scriptId":"421","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/to-comparators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"toComparators","ranges":[{"startOffset":115,"endOffset":235,"count":0}],"isBlockCoverage":false}]},{"scriptId":"422","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/max-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":109,"endOffset":547,"count":0}],"isBlockCoverage":false}]},{"scriptId":"423","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/min-satisfying.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"minSatisfying","ranges":[{"startOffset":108,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"424","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/min-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1397,"count":1}],"isBlockCoverage":true},{"functionName":"minVersion","ranges":[{"startOffset":144,"endOffset":1368,"count":0}],"isBlockCoverage":false}]},{"scriptId":"425","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/valid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"validRange","ranges":[{"startOffset":61,"endOffset":283,"count":0}],"isBlockCoverage":false}]},{"scriptId":"426","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/outside.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2188,"count":1}],"isBlockCoverage":true},{"functionName":"outside","ranges":[{"startOffset":388,"endOffset":2161,"count":0}],"isBlockCoverage":false}]},{"scriptId":"427","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/gtr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"gtr","ranges":[{"startOffset":129,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"428","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/ltr.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"ltr","ranges":[{"startOffset":125,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"429","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/intersects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"intersects","ranges":[{"startOffset":61,"endOffset":172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"430","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/simplify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1287,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":329,"endOffset":1286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"431","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/node_modules/semver/ranges/subset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4797,"count":1}],"isBlockCoverage":true},{"functionName":"subset","ranges":[{"startOffset":1422,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSubset","ranges":[{"startOffset":2111,"endOffset":4273,"count":0}],"isBlockCoverage":false},{"functionName":"higherGT","ranges":[{"startOffset":4324,"endOffset":4522,"count":0}],"isBlockCoverage":false},{"functionName":"lowerLT","ranges":[{"startOffset":4573,"endOffset":4771,"count":0}],"isBlockCoverage":false}]},{"scriptId":"432","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/metaDescriptors/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6149,"count":1}],"isBlockCoverage":true},{"functionName":"describeComplex","ranges":[{"startOffset":331,"endOffset":413,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeComplex","ranges":[{"startOffset":457,"endOffset":572,"count":0}],"isBlockCoverage":false},{"functionName":"describePrimitive","ranges":[{"startOffset":622,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"deserializePrimitive","ranges":[{"startOffset":756,"endOffset":888,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":1125,"endOffset":1167,"count":0}],"isBlockCoverage":false},{"functionName":"compareKeys","ranges":[{"startOffset":1171,"endOffset":1692,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1696,"endOffset":2761,"count":0}],"isBlockCoverage":false},{"functionName":"ComplexProperty","ranges":[{"startOffset":2881,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2953,"endOffset":3025,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3029,"endOffset":3304,"count":0}],"isBlockCoverage":false},{"functionName":"formatShallow","ranges":[{"startOffset":3308,"endOffset":3811,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":3815,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"PrimitiveProperty","ranges":[{"startOffset":3981,"endOffset":4049,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":4053,"endOffset":4328,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":4332,"endOffset":5014,"count":0}],"isBlockCoverage":false},{"functionName":"diffDeep","ranges":[{"startOffset":5018,"endOffset":6007,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6011,"endOffset":6063,"count":0}],"isBlockCoverage":false}]},{"scriptId":"433","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2777,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":329,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":705,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolValue","ranges":[{"startOffset":1012,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":1115,"endOffset":1405,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":1409,"endOffset":1540,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":1544,"endOffset":1651,"count":0}],"isBlockCoverage":false},{"functionName":"formatAsKey","ranges":[{"startOffset":1655,"endOffset":1788,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":1792,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"DeserializedSymbolValue","ranges":[{"startOffset":2159,"endOffset":2232,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2236,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"formatString","ranges":[{"startOffset":2730,"endOffset":2774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"434","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/js-string-escape/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"435","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/well-known-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":800,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":689,"count":12}],"isBlockCoverage":true},{"functionName":"exports.isWellKnown","ranges":[{"startOffset":715,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"exports.getLabel","ranges":[{"startOffset":767,"endOffset":799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"436","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/bigInt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":718,"endOffset":758,"count":0}],"isBlockCoverage":false}]},{"scriptId":"437","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/boolean.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":931,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanValue","ranges":[{"startOffset":425,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":477,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":741,"endOffset":781,"count":0}],"isBlockCoverage":false}]},{"scriptId":"438","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/null.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":406,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":501,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"439","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/number.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":285,"count":0}],"isBlockCoverage":false},{"functionName":"NumberValue","ranges":[{"startOffset":422,"endOffset":470,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":474,"endOffset":606,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":610,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":781,"endOffset":821,"count":0}],"isBlockCoverage":false}]},{"scriptId":"440","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/primitiveValues/undefined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":772,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":224,"endOffset":278,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":421,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"formatDeep","ranges":[{"startOffset":516,"endOffset":618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/shouldCompareDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"shouldCompareDeep","ranges":[{"startOffset":206,"endOffset":537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/symbolProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2759,"count":1}],"isBlockCoverage":true},{"functionName":"Comparable","ranges":[{"startOffset":247,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":352,"endOffset":533,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":537,"endOffset":1293,"count":0}],"isBlockCoverage":false},{"functionName":"prepareDiff","ranges":[{"startOffset":1297,"endOffset":2003,"count":0}],"isBlockCoverage":false},{"functionName":"Collector","ranges":[{"startOffset":2152,"endOffset":2288,"count":0}],"isBlockCoverage":false},{"functionName":"collectAll","ranges":[{"startOffset":2292,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"createRecursor","ranges":[{"startOffset":2542,"endOffset":2635,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/diff.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13797,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":630,"endOffset":640,"count":0}],"isBlockCoverage":false},{"functionName":"compareComplexShape","ranges":[{"startOffset":642,"endOffset":1886,"count":0}],"isBlockCoverage":false},{"functionName":"diffDescriptors","ranges":[{"startOffset":1888,"endOffset":13597,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":13641,"endOffset":13776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/Indenter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"Indenter","ranges":[{"startOffset":33,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"increase","ranges":[{"startOffset":148,"endOffset":216,"count":0}],"isBlockCoverage":false},{"functionName":"decrease","ranges":[{"startOffset":220,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":292,"endOffset":331,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/format.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3075,"count":1}],"isBlockCoverage":true},{"functionName":"alwaysFormat","ranges":[{"startOffset":241,"endOffset":251,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptor","ranges":[{"startOffset":295,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2953,"endOffset":3050,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/serialize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11884,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4107,"endOffset":4142,"count":31}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4189,"endOffset":4224,"count":31}],"isBlockCoverage":true},{"functionName":"DescriptorSerializationError","ranges":[{"startOffset":4281,"endOffset":4435,"count":0}],"isBlockCoverage":false},{"functionName":"MissingPluginError","ranges":[{"startOffset":4482,"endOffset":4670,"count":0}],"isBlockCoverage":false},{"functionName":"PointerLookupError","ranges":[{"startOffset":4717,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedPluginError","ranges":[{"startOffset":4935,"endOffset":5219,"count":0}],"isBlockCoverage":false},{"functionName":"UnsupportedVersion","ranges":[{"startOffset":5321,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"shallowSerializeDescriptor","ranges":[{"startOffset":5528,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"serializeState","ranges":[{"startOffset":5713,"endOffset":6349,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":6351,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeState","ranges":[{"startOffset":8193,"endOffset":8512,"count":0}],"isBlockCoverage":false},{"functionName":"shallowDeserializeDescriptor","ranges":[{"startOffset":8514,"endOffset":8709,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeRecord","ranges":[{"startOffset":8711,"endOffset":9397,"count":0}],"isBlockCoverage":false},{"functionName":"buildPluginMap","ranges":[{"startOffset":9399,"endOffset":10738,"count":0}],"isBlockCoverage":false},{"functionName":"deserialize","ranges":[{"startOffset":10740,"endOffset":11849,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/md5-hex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":406,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":66,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/encoder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9570,"count":1}],"isBlockCoverage":true},{"functionName":"encodeInteger","ranges":[{"startOffset":689,"endOffset":828,"count":0}],"isBlockCoverage":false},{"functionName":"encodeValue","ranges":[{"startOffset":830,"endOffset":3045,"count":0}],"isBlockCoverage":false},{"functionName":"decodeValue","ranges":[{"startOffset":3047,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"buildBuffer","ranges":[{"startOffset":5536,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":6160,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"decodePlugins","ranges":[{"startOffset":7915,"endOffset":8425,"count":0}],"isBlockCoverage":false},{"functionName":"decodeRecord","ranges":[{"startOffset":8465,"endOffset":9182,"count":0}],"isBlockCoverage":false},{"functionName":"extractVersion","ranges":[{"startOffset":9220,"endOffset":9288,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":9330,"endOffset":9545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/flattenDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"flattenDeep","ranges":[{"startOffset":412,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"450","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseFlatten.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1201,"count":1}],"isBlockCoverage":true},{"functionName":"baseFlatten","ranges":[{"startOffset":568,"endOffset":1169,"count":1},{"startOffset":852,"endOffset":1081,"count":0}],"isBlockCoverage":true}]},{"scriptId":"451","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isFlattenable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":608,"count":1},{"startOffset":208,"endOffset":219,"count":0}],"isBlockCoverage":true},{"functionName":"isFlattenable","ranges":[{"startOffset":430,"endOffset":574,"count":1}],"isBlockCoverage":true}]},{"scriptId":"452","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concordance/lib/metaDescriptors/pointer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":617,"count":1}],"isBlockCoverage":true},{"functionName":"describe","ranges":[{"startOffset":63,"endOffset":120,"count":0}],"isBlockCoverage":false},{"functionName":"Pointer","ranges":[{"startOffset":249,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":392,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"serialize","ranges":[{"startOffset":439,"endOffset":479,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/indent-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":743,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":741,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4113,"count":1}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":389,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64","ranges":[{"startOffset":643,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":740,"endOffset":799,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":801,"endOffset":1290,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1292,"endOffset":1593,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":1624,"endOffset":1698,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toBase64","ranges":[{"startOffset":1732,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":1876,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":2165,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":2253,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":2497,"endOffset":2568,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":2605,"endOffset":2653,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":2677,"endOffset":2724,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":2746,"endOffset":2813,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":2837,"endOffset":2911,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":2936,"endOffset":3108,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":3140,"endOffset":3260,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":3358,"endOffset":3477,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":3582,"endOffset":3725,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeComments","ranges":[{"startOffset":3753,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":3854,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":3963,"endOffset":4111,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/safe-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1},{"startOffset":353,"endOffset":465,"count":0}],"isBlockCoverage":true},{"functionName":"copyProps","ranges":[{"startOffset":156,"endOffset":242,"count":1},{"startOffset":211,"endOffset":240,"count":11}],"isBlockCoverage":true},{"functionName":"SafeBuffer","ranges":[{"startOffset":467,"endOffset":569,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.from","ranges":[{"startOffset":655,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.alloc","ranges":[{"startOffset":861,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafe","ranges":[{"startOffset":1222,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"SafeBuffer.allocUnsafeSlow","ranges":[{"startOffset":1385,"endOffset":1528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/write-file-atomic/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6812,"count":1}],"isBlockCoverage":true},{"functionName":"getId","ranges":[{"startOffset":593,"endOffset":850,"count":1},{"startOffset":765,"endOffset":848,"count":0}],"isBlockCoverage":true},{"functionName":"getTmpname","ranges":[{"startOffset":875,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"cleanupOnExit","ranges":[{"startOffset":1079,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"serializeActiveFile","ranges":[{"startOffset":1240,"endOffset":1599,"count":0}],"isBlockCoverage":false},{"functionName":"isChownErrOk","ranges":[{"startOffset":1682,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileAsync","ranges":[{"startOffset":1945,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4412,"endOffset":4687,"count":0}],"isBlockCoverage":false},{"functionName":"writeFileSync","ranges":[{"startOffset":4689,"endOffset":6811,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/imurmurhash/imurmurhash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4412,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":443,"endOffset":4407,"count":1},{"startOffset":4352,"endOffset":4405,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3","ranges":[{"startOffset":811,"endOffset":1083,"count":1},{"startOffset":896,"endOffset":903,"count":0},{"startOffset":963,"endOffset":980,"count":0},{"startOffset":982,"endOffset":1018,"count":0},{"startOffset":1044,"endOffset":1077,"count":0}],"isBlockCoverage":true},{"functionName":"MurmurHash3.hash","ranges":[{"startOffset":1254,"endOffset":3073,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.result","ranges":[{"startOffset":3193,"endOffset":3797,"count":0}],"isBlockCoverage":false},{"functionName":"MurmurHash3.reset","ranges":[{"startOffset":3937,"endOffset":4078,"count":1},{"startOffset":3997,"endOffset":4003,"count":0}],"isBlockCoverage":true}]},{"scriptId":"458","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4124,"count":1},{"startOffset":379,"endOffset":405,"count":0},{"startOffset":456,"endOffset":503,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":985,"endOffset":1446,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":1479,"endOffset":1781,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1783,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2013,"endOffset":2731,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":2052,"endOffset":2729,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":2759,"endOffset":2791,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":2841,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":3433,"endOffset":3702,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":3743,"endOffset":4123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28321,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2164,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":2928,"endOffset":2960,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":3514,"endOffset":3630,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":3632,"endOffset":4611,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":4727,"endOffset":5667,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":5669,"endOffset":7313,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":7315,"endOffset":9040,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9042,"endOffset":11890,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":11892,"endOffset":12499,"count":3},{"startOffset":11953,"endOffset":12497,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":12581,"endOffset":12642,"count":3}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":12789,"endOffset":13160,"count":0}],"isBlockCoverage":false},{"functionName":"notEqual","ranges":[{"startOffset":13267,"endOffset":13642,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":13725,"endOffset":14089,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":14178,"endOffset":14550,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":14598,"endOffset":14986,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":15037,"endOffset":15433,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":15456,"endOffset":15768,"count":0}],"isBlockCoverage":false},{"functionName":"notStrictEqual","ranges":[{"startOffset":15795,"endOffset":16115,"count":0}],"isBlockCoverage":false},{"functionName":"Comparison","ranges":[{"startOffset":16139,"endOffset":16512,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":16516,"endOffset":17233,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":17235,"endOffset":20593,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":20595,"endOffset":20801,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":20803,"endOffset":21167,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":21169,"endOffset":21883,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":21885,"endOffset":23499,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":23501,"endOffset":24082,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":24084,"endOffset":24734,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":24752,"endOffset":24846,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":24866,"endOffset":24978,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":25003,"endOffset":25097,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":25123,"endOffset":25235,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":25255,"endOffset":26624,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":26627,"endOffset":27699,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":27716,"endOffset":27808,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":27833,"endOffset":27939,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":28019,"endOffset":28088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"internal/assert/assertion_error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16587,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1239,"endOffset":1515,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1517,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2126,"endOffset":10512,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":10553,"endOffset":15437,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":15441,"endOffset":15516,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15520,"endOffset":16550,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"internal/assert/calltracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2253,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":293,"endOffset":301,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":327,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"calls","ranges":[{"startOffset":358,"endOffset":1367,"count":0}],"isBlockCoverage":false},{"functionName":"report","ranges":[{"startOffset":1371,"endOffset":1987,"count":0}],"isBlockCoverage":false},{"functionName":"verify","ranges":[{"startOffset":1991,"endOffset":2219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"463","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-typedarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1016,"count":1}],"isBlockCoverage":true},{"functionName":"isTypedArray","ranges":[{"startOffset":475,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictTypedArray","ranges":[{"startOffset":583,"endOffset":943,"count":0}],"isBlockCoverage":false},{"functionName":"isLooseTypedArray","ranges":[{"startOffset":945,"endOffset":1015,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/typedarray-to-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"typedarrayToBuffer","ranges":[{"startOffset":245,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"worker_threads.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":false}]},{"scriptId":"466","url":"internal/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12025,"count":1}],"isBlockCoverage":false},{"functionName":"process.chdir","ranges":[{"startOffset":1963,"endOffset":2043,"count":0}],"isBlockCoverage":false},{"functionName":"Worker","ranges":[{"startOffset":2086,"endOffset":6548,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6552,"endOffset":7041,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7045,"endOffset":7141,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7145,"endOffset":7314,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7318,"endOffset":8065,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8069,"endOffset":8537,"count":0}],"isBlockCoverage":false},{"functionName":"postMessage","ranges":[{"startOffset":8541,"endOffset":8656,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":8660,"endOffset":9494,"count":0}],"isBlockCoverage":false},{"functionName":"ref","ranges":[{"startOffset":9498,"endOffset":9604,"count":0}],"isBlockCoverage":false},{"functionName":"unref","ranges":[{"startOffset":9608,"endOffset":9720,"count":0}],"isBlockCoverage":false},{"functionName":"get threadId","ranges":[{"startOffset":9724,"endOffset":9823,"count":0}],"isBlockCoverage":false},{"functionName":"get stdin","ranges":[{"startOffset":9827,"endOffset":9885,"count":0}],"isBlockCoverage":false},{"functionName":"get stdout","ranges":[{"startOffset":9889,"endOffset":9949,"count":0}],"isBlockCoverage":false},{"functionName":"get stderr","ranges":[{"startOffset":9953,"endOffset":10013,"count":0}],"isBlockCoverage":false},{"functionName":"get resourceLimits","ranges":[{"startOffset":10017,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"getHeapSnapshot","ranges":[{"startOffset":10157,"endOffset":10566,"count":0}],"isBlockCoverage":false},{"functionName":"pipeWithoutWarning","ranges":[{"startOffset":10570,"endOffset":10892,"count":0}],"isBlockCoverage":false},{"functionName":"parseResourceLimits","ranges":[{"startOffset":10966,"endOffset":11560,"count":0}],"isBlockCoverage":false},{"functionName":"makeResourceLimits","ranges":[{"startOffset":11562,"endOffset":11848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"467","url":"internal/worker/io.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7900,"count":1}],"isBlockCoverage":false},{"functionName":"onmessage","ranges":[{"startOffset":2646,"endOffset":2886,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3200,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3252,"endOffset":3476,"count":0}],"isBlockCoverage":false},{"functionName":"oninit","ranges":[{"startOffset":3543,"endOffset":3611,"count":0}],"isBlockCoverage":false},{"functionName":"onclose","ranges":[{"startOffset":3802,"endOffset":3846,"count":0}],"isBlockCoverage":false},{"functionName":"MessagePort.close","ranges":[{"startOffset":4007,"endOffset":4124,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":4238,"endOffset":4846,"count":0}],"isBlockCoverage":false},{"functionName":"setupPortReferencing","ranges":[{"startOffset":4852,"endOffset":5564,"count":0}],"isBlockCoverage":false},{"functionName":"ReadableWorkerStdio","ranges":[{"startOffset":5614,"endOffset":5963,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":5967,"endOffset":6272,"count":0}],"isBlockCoverage":false},{"functionName":"WritableWorkerStdio","ranges":[{"startOffset":6323,"endOffset":6472,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":6476,"endOffset":6752,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":6756,"endOffset":6905,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6909,"endOffset":7148,"count":0}],"isBlockCoverage":false},{"functionName":"createWorkerStdio","ranges":[{"startOffset":7152,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"receiveMessageOnPort","ranges":[{"startOffset":7423,"endOffset":7584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"internal/error-serdes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3774,"count":1}],"isBlockCoverage":false},{"functionName":"TryGetAllProperties","ranges":[{"startOffset":586,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"GetConstructors","ranges":[{"startOffset":1387,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"GetName","ranges":[{"startOffset":1806,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"inspect","ranges":[{"startOffset":1953,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":2140,"endOffset":3044,"count":0}],"isBlockCoverage":false},{"functionName":"deserializeError","ranges":[{"startOffset":3063,"endOffset":3717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mem/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1415,"count":1}],"isBlockCoverage":true},{"functionName":"mem","ranges":[{"startOffset":149,"endOffset":1157,"count":2},{"startOffset":431,"endOffset":459,"count":0},{"startOffset":1089,"endOffset":1101,"count":0}],"isBlockCoverage":true},{"functionName":"cacheKey","ranges":[{"startOffset":317,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"memoized","ranges":[{"startOffset":479,"endOffset":934,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.clear","ranges":[{"startOffset":1206,"endOffset":1413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mem/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2660,"count":1}],"isBlockCoverage":true},{"functionName":"copyProperty","ranges":[{"startOffset":36,"endOffset":632,"count":4},{"startOffset":295,"endOffset":322,"count":2},{"startOffset":324,"endOffset":535,"count":2},{"startOffset":535,"endOffset":559,"count":0},{"startOffset":561,"endOffset":575,"count":0},{"startOffset":575,"endOffset":631,"count":2}],"isBlockCoverage":true},{"functionName":"canCopyProperty","ranges":[{"startOffset":838,"endOffset":1204,"count":2},{"startOffset":944,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"changePrototype","ranges":[{"startOffset":1231,"endOffset":1409,"count":2},{"startOffset":1363,"endOffset":1408,"count":0}],"isBlockCoverage":true},{"functionName":"wrappedToString","ranges":[{"startOffset":1436,"endOffset":1499,"count":0}],"isBlockCoverage":false},{"functionName":"changeToString","ranges":[{"startOffset":1968,"endOffset":2350,"count":2},{"startOffset":2020,"endOffset":2024,"count":0}],"isBlockCoverage":true},{"functionName":"mimicFn","ranges":[{"startOffset":2369,"endOffset":2631,"count":2},{"startOffset":2491,"endOffset":2554,"count":4}],"isBlockCoverage":true}]},{"scriptId":"471","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/map-age-cleaner/dist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3903,"count":1}],"isBlockCoverage":true},{"functionName":"__awaiter","ranges":[{"startOffset":58,"endOffset":613,"count":0}],"isBlockCoverage":false},{"functionName":"__importDefault","ranges":[{"startOffset":671,"endOffset":752,"count":1},{"startOffset":723,"endOffset":728,"count":0}],"isBlockCoverage":true},{"functionName":"mapAgeCleaner","ranges":[{"startOffset":872,"endOffset":3774,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/p-defer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/concordance-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3893,"count":1},{"startOffset":3636,"endOffset":3648,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3513,"endOffset":3589,"count":112},{"startOffset":3556,"endOffset":3587,"count":62}],"isBlockCoverage":true},{"functionName":"get maxDepth","ranges":[{"startOffset":3738,"endOffset":3814,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":62},{"startOffset":144,"endOffset":152,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":315,"count":62},{"startOffset":294,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"476","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/cloneDeepWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"cloneDeepWith","ranges":[{"startOffset":817,"endOffset":1012,"count":1},{"startOffset":921,"endOffset":932,"count":0}],"isBlockCoverage":true}]},{"scriptId":"477","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"register","ranges":[{"startOffset":1437,"endOffset":1927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/lib/elementFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10519,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":188,"endOffset":10493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/node_modules/arrify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":152,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":150,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/lib/diffShallow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12237,"count":1}],"isBlockCoverage":true},{"functionName":"diffShallow","ranges":[{"startOffset":14,"endOffset":12207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"481","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/lib/escapeText.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"escapeText","ranges":[{"startOffset":14,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@concordance/react/lib/testJsonFactory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1551,"count":1}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":48,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"483","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/serialize-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4606,"count":1}],"isBlockCoverage":true},{"functionName":"isAvaAssertionError","ranges":[{"startOffset":360,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":451,"endOffset":596,"count":0}],"isBlockCoverage":false},{"functionName":"extractSource","ranges":[{"startOffset":635,"endOffset":1252,"count":0}],"isBlockCoverage":false},{"functionName":"buildSource","ranges":[{"startOffset":1254,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"trySerializeError","ranges":[{"startOffset":1981,"endOffset":3942,"count":0}],"isBlockCoverage":false},{"functionName":"serializeError","ranges":[{"startOffset":3944,"endOffset":4571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/clean-yaml-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2176,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"cleanYamlObj","ranges":[{"startOffset":132,"endOffset":1901,"count":0}],"isBlockCoverage":false},{"functionName":"setProp","ranges":[{"startOffset":1903,"endOffset":2131,"count":0}],"isBlockCoverage":false},{"functionName":"defaultFilter","ranges":[{"startOffset":2133,"endOffset":2175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"485","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":598,"count":1}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":160,"endOffset":596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"486","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/stack-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7648,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":175,"endOffset":253,"count":57}],"isBlockCoverage":true},{"functionName":"StackUtils","ranges":[{"startOffset":416,"endOffset":886,"count":1}],"isBlockCoverage":true},{"functionName":"nodeInternals","ranges":[{"startOffset":897,"endOffset":944,"count":1}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":948,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"captureString","ranges":[{"startOffset":2048,"endOffset":2446,"count":0}],"isBlockCoverage":false},{"functionName":"capture","ranges":[{"startOffset":2450,"endOffset":3023,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":3027,"endOffset":4002,"count":0}],"isBlockCoverage":false},{"functionName":"parseLine","ranges":[{"startOffset":4006,"endOffset":6075,"count":0}],"isBlockCoverage":false},{"functionName":"setFile","ranges":[{"startOffset":6079,"endOffset":6316,"count":0}],"isBlockCoverage":false},{"functionName":"ignoredPackagesRegExp","ranges":[{"startOffset":6318,"endOffset":6600,"count":1},{"startOffset":6424,"endOffset":6599,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6465,"endOffset":6495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/stack-utils/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":236,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":85,"endOffset":234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":308,"count":1}],"isBlockCoverage":false}]},{"scriptId":"489","url":"internal/source_map/source_map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10485,"count":1}],"isBlockCoverage":false},{"functionName":"StringCharIterator","ranges":[{"startOffset":3884,"endOffset":3960,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":3998,"endOffset":4060,"count":0}],"isBlockCoverage":false},{"functionName":"peek","ranges":[{"startOffset":4098,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"hasNext","ranges":[{"startOffset":4197,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":4501,"endOffset":8427,"count":0}],"isBlockCoverage":false},{"functionName":"isSeparator","ranges":[{"startOffset":8485,"endOffset":8554,"count":0}],"isBlockCoverage":false},{"functionName":"decodeVLQ","ranges":[{"startOffset":8644,"endOffset":9577,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSourceMapV3","ranges":[{"startOffset":9644,"endOffset":9991,"count":0}],"isBlockCoverage":false},{"functionName":"compareSourceMapEntry","ranges":[{"startOffset":10186,"endOffset":10449,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/assert.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24728,"count":1}],"isBlockCoverage":true},{"functionName":"formatDescriptorDiff","ranges":[{"startOffset":351,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"formatDescriptorWithLabel","ranges":[{"startOffset":607,"endOffset":761,"count":0}],"isBlockCoverage":false},{"functionName":"formatWithLabel","ranges":[{"startOffset":763,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"formatPowerAssertValue","ranges":[{"startOffset":898,"endOffset":995,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnProperty","ranges":[{"startOffset":1020,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":1103,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"notImplemented","ranges":[{"startOffset":1136,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":1223,"endOffset":1974,"count":0}],"isBlockCoverage":false},{"functionName":"getErrorWithLongStackTrace","ranges":[{"startOffset":2019,"endOffset":2216,"count":0}],"isBlockCoverage":false},{"functionName":"validateExpectations","ranges":[{"startOffset":2218,"endOffset":4709,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpectations","ranges":[{"startOffset":4828,"endOffset":7140,"count":0}],"isBlockCoverage":false},{"functionName":"Assertions","ranges":[{"startOffset":7162,"endOffset":24692,"count":1},{"startOffset":24316,"endOffset":24689,"count":0}],"isBlockCoverage":true},{"functionName":"withSkip","ranges":[{"startOffset":7383,"endOffset":7454,"count":19}],"isBlockCoverage":true},{"functionName":"withPowerAssert","ranges":[{"startOffset":7634,"endOffset":7981,"count":0}],"isBlockCoverage":false},{"functionName":"checkMessage","ranges":[{"startOffset":8007,"endOffset":8426,"count":1},{"startOffset":8092,"endOffset":8122,"count":0},{"startOffset":8147,"endOffset":8425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8452,"endOffset":8474,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8501,"endOffset":8689,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8714,"endOffset":9617,"count":1},{"startOffset":8784,"endOffset":8802,"count":0},{"startOffset":8858,"endOffset":9613,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9643,"endOffset":9974,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10006,"endOffset":10618,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10653,"endOffset":11180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11207,"endOffset":12695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12724,"endOffset":14289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14323,"endOffset":16673,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16705,"endOffset":17292,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17329,"endOffset":19205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":19236,"endOffset":20802,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20831,"endOffset":21127,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21155,"endOffset":21447,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21474,"endOffset":21754,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21782,"endOffset":22066,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22094,"endOffset":22988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23019,"endOffset":23934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23999,"endOffset":24310,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24403,"endOffset":24678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":65,"endOffset":200,"count":1},{"startOffset":134,"endOffset":162,"count":0}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/like-selector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":911,"count":1}],"isBlockCoverage":true},{"functionName":"isLikeSelector","ranges":[{"startOffset":14,"endOffset":213,"count":0}],"isBlockCoverage":false},{"functionName":"selectComparable","ranges":[{"startOffset":377,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18899,"count":1}],"isBlockCoverage":true},{"functionName":"formatErrorValue","ranges":[{"startOffset":337,"endOffset":474,"count":0}],"isBlockCoverage":false},{"functionName":"captureSavedError","ranges":[{"startOffset":502,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext","ranges":[{"startOffset":746,"endOffset":4076,"count":1}],"isBlockCoverage":true},{"functionName":"pass","ranges":[{"startOffset":785,"endOffset":830,"count":1}],"isBlockCoverage":true},{"functionName":"pending","ranges":[{"startOffset":844,"endOffset":900,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":911,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"skip","ranges":[{"startOffset":969,"endOffset":1014,"count":0}],"isBlockCoverage":false},{"functionName":"compareWithSnapshot","ranges":[{"startOffset":1040,"endOffset":1103,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.snapshot.skip","ranges":[{"startOffset":1229,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.log","ranges":[{"startOffset":1280,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan","ranges":[{"startOffset":1536,"endOffset":1592,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.plan.skip","ranges":[{"startOffset":1614,"endOffset":1622,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.timeout","ranges":[{"startOffset":1642,"endOffset":1674,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.teardown","ranges":[{"startOffset":1695,"endOffset":1743,"count":0}],"isBlockCoverage":false},{"functionName":"ExecutionContext.try","ranges":[{"startOffset":1759,"endOffset":4072,"count":0}],"isBlockCoverage":false},{"functionName":"get end","ranges":[{"startOffset":4079,"endOffset":4218,"count":0}],"isBlockCoverage":false},{"functionName":"get title","ranges":[{"startOffset":4221,"endOffset":4271,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":4274,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"set context","ranges":[{"startOffset":4340,"endOffset":4410,"count":0}],"isBlockCoverage":false},{"functionName":"get passed","ranges":[{"startOffset":4413,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgStart","ranges":[{"startOffset":4472,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"_throwsArgEnd","ranges":[{"startOffset":4576,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"Test","ranges":[{"startOffset":4653,"endOffset":7629,"count":1},{"startOffset":4757,"endOffset":4762,"count":0}],"isBlockCoverage":true},{"functionName":"Test.compareWithSnapshot","ranges":[{"startOffset":5449,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"Test.skipSnapshot","ranges":[{"startOffset":6026,"endOffset":6282,"count":0}],"isBlockCoverage":false},{"functionName":"Test.runAttempt","ranges":[{"startOffset":6305,"endOffset":7118,"count":0}],"isBlockCoverage":false},{"functionName":"bindEndCallback","ranges":[{"startOffset":7632,"endOffset":8041,"count":0}],"isBlockCoverage":false},{"functionName":"endCallback","ranges":[{"startOffset":8044,"endOffset":8516,"count":0}],"isBlockCoverage":false},{"functionName":"createExecutionContext","ranges":[{"startOffset":8519,"endOffset":8585,"count":1}],"isBlockCoverage":true},{"functionName":"countPassedAssertion","ranges":[{"startOffset":8588,"endOffset":8940,"count":1},{"startOffset":8635,"endOffset":8726,"count":0},{"startOffset":8764,"endOffset":8889,"count":0}],"isBlockCoverage":true},{"functionName":"addLog","ranges":[{"startOffset":8943,"endOffset":8984,"count":0}],"isBlockCoverage":false},{"functionName":"addPendingAssertion","ranges":[{"startOffset":8987,"endOffset":9574,"count":0}],"isBlockCoverage":false},{"functionName":"addFailedAssertion","ranges":[{"startOffset":9577,"endOffset":9962,"count":0}],"isBlockCoverage":false},{"functionName":"finishAttempt","ranges":[{"startOffset":9965,"endOffset":10983,"count":0}],"isBlockCoverage":false},{"functionName":"saveFirstError","ranges":[{"startOffset":10986,"endOffset":11072,"count":0}],"isBlockCoverage":false},{"functionName":"plan","ranges":[{"startOffset":11075,"endOffset":11371,"count":0}],"isBlockCoverage":false},{"functionName":"timeout","ranges":[{"startOffset":11374,"endOffset":11671,"count":0}],"isBlockCoverage":false},{"functionName":"refreshTimeout","ranges":[{"startOffset":11674,"endOffset":11854,"count":1},{"startOffset":11735,"endOffset":11851,"count":0}],"isBlockCoverage":true},{"functionName":"clearTimeout","ranges":[{"startOffset":11857,"endOffset":11952,"count":1}],"isBlockCoverage":true},{"functionName":"addTeardown","ranges":[{"startOffset":11955,"endOffset":12344,"count":0}],"isBlockCoverage":false},{"functionName":"runTeardowns","ranges":[{"startOffset":12347,"endOffset":12657,"count":1},{"startOffset":12453,"endOffset":12482,"count":0},{"startOffset":12520,"endOffset":12654,"count":0}],"isBlockCoverage":true},{"functionName":"verifyPlan","ranges":[{"startOffset":12660,"endOffset":13021,"count":1},{"startOffset":12726,"endOffset":12764,"count":0},{"startOffset":12766,"endOffset":13018,"count":0}],"isBlockCoverage":true},{"functionName":"verifyAssertions","ranges":[{"startOffset":13024,"endOffset":13669,"count":1},{"startOffset":13069,"endOffset":13085,"count":0},{"startOffset":13123,"endOffset":13241,"count":0},{"startOffset":13281,"endOffset":13384,"count":0},{"startOffset":13454,"endOffset":13520,"count":0},{"startOffset":13552,"endOffset":13570,"count":0},{"startOffset":13572,"endOffset":13662,"count":0}],"isBlockCoverage":true},{"functionName":"trackThrows","ranges":[{"startOffset":13672,"endOffset":13738,"count":0}],"isBlockCoverage":false},{"functionName":"detectImproperThrows","ranges":[{"startOffset":13741,"endOffset":14414,"count":0}],"isBlockCoverage":false},{"functionName":"waitForPendingThrowsAssertion","ranges":[{"startOffset":14417,"endOffset":14854,"count":0}],"isBlockCoverage":false},{"functionName":"attributeLeakedError","ranges":[{"startOffset":14857,"endOffset":15006,"count":0}],"isBlockCoverage":false},{"functionName":"callFn","ranges":[{"startOffset":15009,"endOffset":15191,"count":1},{"startOffset":15126,"endOffset":15188,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":15194,"endOffset":18008,"count":1},{"startOffset":15292,"endOffset":15613,"count":0},{"startOffset":15848,"endOffset":15997,"count":0},{"startOffset":16174,"endOffset":17028,"count":0},{"startOffset":17980,"endOffset":18007,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15875,"endOffset":15991,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16627,"endOffset":17022,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17069,"endOffset":17974,"count":1}],"isBlockCoverage":true},{"functionName":"finishDueToAttributedError","ranges":[{"startOffset":17120,"endOffset":17162,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToTimeout","ranges":[{"startOffset":17195,"endOffset":17237,"count":0}],"isBlockCoverage":false},{"functionName":"finishDueToInactivity","ranges":[{"startOffset":17273,"endOffset":17513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17540,"endOffset":17874,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17887,"endOffset":17915,"count":1}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":18011,"endOffset":18872,"count":1},{"startOffset":18110,"endOffset":18163,"count":0},{"startOffset":18407,"endOffset":18598,"count":0}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/plur/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":87,"endOffset":987,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/irregular-plurals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":165,"endOffset":227,"count":5}],"isBlockCoverage":true}]},{"scriptId":"496","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/dependency-tracker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":898,"count":1}],"isBlockCoverage":true},{"functionName":"flush","ranges":[{"startOffset":151,"endOffset":311,"count":7},{"startOffset":205,"endOffset":219,"count":1},{"startOffset":219,"endOffset":310,"count":6}],"isBlockCoverage":true},{"functionName":"track","ranges":[{"startOffset":337,"endOffset":552,"count":1106},{"startOffset":401,"endOffset":415,"count":0},{"startOffset":452,"endOffset":483,"count":6}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":578,"endOffset":869,"count":1},{"startOffset":659,"endOffset":867,"count":3}],"isBlockCoverage":true},{"functionName":"require.extensions.<computed>","ranges":[{"startOffset":740,"endOffset":863,"count":1107},{"startOffset":794,"endOffset":821,"count":1106}],"isBlockCoverage":true}]},{"scriptId":"497","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/line-numbers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":0,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"findTest","ranges":[{"startOffset":579,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":1169,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1284,"endOffset":2438,"count":1},{"startOffset":1371,"endOffset":2437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1632,"endOffset":2435,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map-support/source-map-support.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19729,"count":1},{"startOffset":172,"endOffset":235,"count":0},{"startOffset":238,"endOffset":265,"count":0}],"isBlockCoverage":true},{"functionName":"dynamicRequire","ranges":[{"startOffset":444,"endOffset":516,"count":1}],"isBlockCoverage":true},{"functionName":"isInBrowser","ranges":[{"startOffset":1174,"endOffset":1478,"count":36},{"startOffset":1236,"endOffset":1248,"count":0},{"startOffset":1296,"endOffset":1380,"count":0},{"startOffset":1381,"endOffset":1474,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobalProcessEventEmitter","ranges":[{"startOffset":1480,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"handlerExec","ranges":[{"startOffset":1627,"endOffset":1829,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":1826,"count":72},{"startOffset":1770,"endOffset":1799,"count":28},{"startOffset":1805,"endOffset":1825,"count":44}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1912,"endOffset":2942,"count":36},{"startOffset":2040,"endOffset":2341,"count":0},{"startOffset":2375,"endOffset":2416,"count":0},{"startOffset":2460,"endOffset":2720,"count":0},{"startOffset":2751,"endOffset":2845,"count":28},{"startOffset":2850,"endOffset":2894,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2174,"endOffset":2335,"count":0}],"isBlockCoverage":false},{"functionName":"supportRelativeURL","ranges":[{"startOffset":3117,"endOffset":3605,"count":0}],"isBlockCoverage":false},{"functionName":"retrieveSourceMapURL","ranges":[{"startOffset":3607,"endOffset":4650,"count":36},{"startOffset":3685,"endOffset":4173,"count":0},{"startOffset":4576,"endOffset":4594,"count":0},{"startOffset":4625,"endOffset":4649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5057,"endOffset":5798,"count":36},{"startOffset":5168,"endOffset":5797,"count":0}],"isBlockCoverage":true},{"functionName":"mapSourcePosition","ranges":[{"startOffset":5802,"endOffset":7614,"count":575},{"startOffset":5910,"endOffset":6822,"count":36},{"startOffset":6068,"endOffset":6705,"count":0},{"startOffset":6923,"endOffset":6981,"count":0},{"startOffset":6983,"endOffset":7592,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6450,"endOffset":6689,"count":0}],"isBlockCoverage":false},{"functionName":"mapEvalOrigin","ranges":[{"startOffset":7754,"endOffset":8450,"count":0}],"isBlockCoverage":false},{"functionName":"CallSiteToString","ranges":[{"startOffset":8846,"endOffset":10836,"count":575},{"startOffset":8940,"endOffset":8974,"count":0},{"startOffset":9048,"endOffset":9064,"count":0},{"startOffset":9066,"endOffset":9185,"count":0},{"startOffset":9244,"endOffset":9474,"count":0},{"startOffset":9897,"endOffset":9913,"count":328},{"startOffset":9936,"endOffset":10558,"count":317},{"startOffset":10080,"endOffset":10112,"count":0},{"startOffset":10178,"endOffset":10479,"count":271},{"startOffset":10239,"endOffset":10280,"count":117},{"startOffset":10330,"endOffset":10418,"count":267},{"startOffset":10420,"endOffset":10473,"count":51},{"startOffset":10479,"endOffset":10554,"count":46},{"startOffset":10530,"endOffset":10546,"count":41},{"startOffset":10558,"endOffset":10757,"count":258},{"startOffset":10583,"endOffset":10642,"count":11},{"startOffset":10620,"endOffset":10636,"count":0},{"startOffset":10642,"endOffset":10757,"count":247},{"startOffset":10666,"endOffset":10697,"count":194},{"startOffset":10697,"endOffset":10757,"count":53},{"startOffset":10775,"endOffset":10819,"count":522}],"isBlockCoverage":true},{"functionName":"cloneCallSite","ranges":[{"startOffset":10838,"endOffset":11143,"count":575}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10956,"endOffset":11084,"count":11500},{"startOffset":11017,"endOffset":11065,"count":10350},{"startOffset":11066,"endOffset":11079,"count":1150}],"isBlockCoverage":true},{"functionName":"object.<computed>","ranges":[{"startOffset":11019,"endOffset":11065,"count":2934}],"isBlockCoverage":true},{"functionName":"wrapCallSite","ranges":[{"startOffset":11145,"endOffset":13493,"count":584},{"startOffset":11257,"endOffset":11316,"count":0},{"startOffset":11340,"endOffset":11393,"count":0},{"startOffset":11633,"endOffset":11668,"count":9},{"startOffset":11684,"endOffset":13129,"count":575},{"startOffset":12275,"endOffset":12279,"count":0},{"startOffset":12300,"endOffset":12324,"count":0},{"startOffset":12325,"endOffset":12342,"count":0},{"startOffset":12343,"endOffset":12361,"count":0},{"startOffset":12363,"endOffset":12400,"count":0},{"startOffset":13129,"endOffset":13214,"count":9},{"startOffset":13214,"endOffset":13238,"count":0},{"startOffset":13254,"endOffset":13404,"count":0},{"startOffset":13404,"endOffset":13492,"count":9}],"isBlockCoverage":true},{"functionName":"frame.getFunctionName","ranges":[{"startOffset":12660,"endOffset":12829,"count":575},{"startOffset":12711,"endOffset":12759,"count":59},{"startOffset":12759,"endOffset":12822,"count":516}],"isBlockCoverage":true},{"functionName":"frame.getFileName","ranges":[{"startOffset":12855,"endOffset":12893,"count":0}],"isBlockCoverage":false},{"functionName":"frame.getLineNumber","ranges":[{"startOffset":12921,"endOffset":12957,"count":575}],"isBlockCoverage":true},{"functionName":"frame.getColumnNumber","ranges":[{"startOffset":12987,"endOffset":13029,"count":575}],"isBlockCoverage":true},{"functionName":"frame.getScriptNameOrSourceURL","ranges":[{"startOffset":13068,"endOffset":13106,"count":575}],"isBlockCoverage":true},{"functionName":"frame.getEvalOrigin","ranges":[{"startOffset":13352,"endOffset":13381,"count":0}],"isBlockCoverage":false},{"functionName":"prepareStackTrace","ranges":[{"startOffset":13605,"endOffset":14218,"count":59},{"startOffset":13683,"endOffset":13741,"count":0},{"startOffset":13767,"endOffset":13777,"count":0},{"startOffset":13809,"endOffset":13814,"count":43},{"startOffset":13990,"endOffset":14109,"count":584}],"isBlockCoverage":true},{"functionName":"getErrorSource","ranges":[{"startOffset":14285,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"printErrorAndExit","ranges":[{"startOffset":15106,"endOffset":15483,"count":0}],"isBlockCoverage":false},{"functionName":"shimEmitUncaughtException","ranges":[{"startOffset":15485,"endOffset":15904,"count":0}],"isBlockCoverage":false},{"functionName":"exports.install","ranges":[{"startOffset":16228,"endOffset":19374,"count":1},{"startOffset":16268,"endOffset":16273,"count":0},{"startOffset":16409,"endOffset":16530,"count":0},{"startOffset":16660,"endOffset":16807,"count":0},{"startOffset":16942,"endOffset":17097,"count":0},{"startOffset":17190,"endOffset":17207,"count":0},{"startOffset":17209,"endOffset":17703,"count":0},{"startOffset":17841,"endOffset":17884,"count":0},{"startOffset":18194,"endOffset":18200,"count":0},{"startOffset":18657,"endOffset":18698,"count":0},{"startOffset":18705,"endOffset":18716,"count":0},{"startOffset":19255,"endOffset":19288,"count":0},{"startOffset":19290,"endOffset":19368,"count":0}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":17447,"endOffset":17632,"count":0}],"isBlockCoverage":false},{"functionName":"exports.resetRetrieveHandlers","ranges":[{"startOffset":19409,"endOffset":19728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"500","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14356,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":1},{"startOffset":727,"endOffset":748,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2690,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":3228,"endOffset":4140,"count":558},{"startOffset":3688,"endOffset":3732,"count":1},{"startOffset":3762,"endOffset":3871,"count":185},{"startOffset":3825,"endOffset":3865,"count":43}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":4246,"endOffset":5137,"count":1},{"startOffset":4788,"endOffset":5133,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":6124,"endOffset":8836,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9271,"endOffset":10865,"count":558},{"startOffset":9746,"endOffset":9785,"count":0},{"startOffset":9787,"endOffset":10115,"count":0},{"startOffset":10265,"endOffset":10276,"count":0},{"startOffset":10277,"endOffset":10286,"count":0},{"startOffset":10288,"endOffset":10326,"count":0},{"startOffset":10667,"endOffset":10861,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":11038,"endOffset":12997,"count":1},{"startOffset":11475,"endOffset":12973,"count":558},{"startOffset":11582,"endOffset":11762,"count":88},{"startOffset":11685,"endOffset":11754,"count":231},{"startOffset":11762,"endOffset":11956,"count":470},{"startOffset":11880,"endOffset":11915,"count":0},{"startOffset":12776,"endOffset":12936,"count":185}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":13057,"endOffset":13526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13157,"endOffset":13514,"count":1},{"startOffset":13211,"endOffset":13241,"count":0},{"startOffset":13501,"endOffset":13507,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13608,"endOffset":14111,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":14218,"endOffset":14304,"count":1}],"isBlockCoverage":true}]},{"scriptId":"501","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":2417},{"startOffset":2927,"endOffset":2949,"count":242},{"startOffset":2954,"endOffset":2973,"count":2175}],"isBlockCoverage":true},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":2417},{"startOffset":3568,"endOffset":3848,"count":2600},{"startOffset":3649,"endOffset":3807,"count":183}],"isBlockCoverage":true},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":2600},{"startOffset":512,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"503","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12938,"count":1},{"startOffset":6427,"endOffset":6440,"count":0},{"startOffset":6604,"endOffset":6619,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":2473},{"startOffset":663,"endOffset":693,"count":2394},{"startOffset":693,"endOffset":833,"count":79},{"startOffset":758,"endOffset":833,"count":0}],"isBlockCoverage":true},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4570,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4734,"endOffset":5803,"count":2},{"startOffset":4788,"endOffset":4810,"count":0},{"startOffset":5206,"endOffset":5653,"count":4},{"startOffset":5267,"endOffset":5608,"count":2},{"startOffset":5608,"endOffset":5635,"count":0},{"startOffset":5635,"endOffset":5653,"count":2},{"startOffset":5653,"endOffset":5802,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5859,"endOffset":5939,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5945,"endOffset":5982,"count":2}],"isBlockCoverage":true},{"functionName":"toSetString","ranges":[{"startOffset":6273,"endOffset":6375,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6443,"endOffset":6550,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6622,"endOffset":7404,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7741,"endOffset":8377,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8830,"endOffset":9477,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9562,"endOffset":9817,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9947,"endOffset":10548,"count":470},{"startOffset":10092,"endOffset":10113,"count":0},{"startOffset":10214,"endOffset":10547,"count":0}],"isBlockCoverage":true},{"functionName":"parseSourceMapInput","ranges":[{"startOffset":10788,"endOffset":10881,"count":0}],"isBlockCoverage":false},{"functionName":"computeSourceURL","ranges":[{"startOffset":11047,"endOffset":12892,"count":0}],"isBlockCoverage":false}]},{"scriptId":"504","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":4},{"startOffset":691,"endOffset":712,"count":0}],"isBlockCoverage":true},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":2},{"startOffset":956,"endOffset":1003,"count":0}],"isBlockCoverage":true},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":44},{"startOffset":1502,"endOffset":1526,"count":0},{"startOffset":1578,"endOffset":1605,"count":0},{"startOffset":1658,"endOffset":1677,"count":0},{"startOffset":1796,"endOffset":1838,"count":0}],"isBlockCoverage":true},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":787},{"startOffset":2037,"endOffset":2125,"count":0}],"isBlockCoverage":true},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":743},{"startOffset":2387,"endOffset":2568,"count":0}],"isBlockCoverage":true},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":3}],"isBlockCoverage":true}]},{"scriptId":"505","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":558},{"startOffset":607,"endOffset":646,"count":470},{"startOffset":647,"endOffset":724,"count":0}],"isBlockCoverage":true},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":1}],"isBlockCoverage":true},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":558},{"startOffset":1682,"endOffset":1751,"count":0}],"isBlockCoverage":true},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":1},{"startOffset":2183,"endOffset":2277,"count":0}],"isBlockCoverage":true}]},{"scriptId":"506","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40562,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":769,"count":1},{"startOffset":550,"endOffset":609,"count":0},{"startOffset":651,"endOffset":707,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":805,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2628,"endOffset":2786,"count":77},{"startOffset":2677,"endOffset":2744,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2970,"endOffset":3126,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3188,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3567,"endOffset":3697,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4634,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6792,"endOffset":9416,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10950,"endOffset":13394,"count":1},{"startOffset":11079,"endOffset":11138,"count":0},{"startOffset":11836,"endOffset":11897,"count":0},{"startOffset":11917,"endOffset":11967,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12540,"endOffset":12709,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":13148,"endOffset":13230,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer._findSourceIndex","ranges":[{"startOffset":13679,"endOffset":14207,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":14544,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":16796,"endOffset":16855,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":16922,"endOffset":17098,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":17346,"endOffset":20551,"count":1},{"startOffset":17827,"endOffset":20305,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":20750,"endOffset":21569,"count":77},{"startOffset":21193,"endOffset":21323,"count":0},{"startOffset":21358,"endOffset":21492,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":21724,"endOffset":22603,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":23769,"endOffset":25022,"count":77},{"startOffset":24230,"endOffset":24922,"count":0}],"isBlockCoverage":true},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":25195,"endOffset":25452,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":25678,"endOffset":27289,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":28401,"endOffset":29507,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":31455,"endOffset":32949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":33343,"endOffset":33607,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":34426,"endOffset":35605,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":35780,"endOffset":35951,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":36179,"endOffset":36618,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":37381,"endOffset":38292,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":38543,"endOffset":40498,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":77},{"startOffset":3683,"endOffset":3834,"count":0},{"startOffset":3854,"endOffset":4246,"count":0}],"isBlockCoverage":true}]},{"scriptId":"508","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":2},{"startOffset":2037,"endOffset":3299,"count":0}],"isBlockCoverage":true},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":2}],"isBlockCoverage":true}]},{"scriptId":"509","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13808,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6512,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6757,"endOffset":7182,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7448,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8168,"endOffset":8584,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8763,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9399,"endOffset":9832,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10120,"endOffset":10264,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10508,"endOffset":10922,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11111,"endOffset":11230,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11371,"endOffset":13772,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/buffer-from/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1595,"count":1}],"isBlockCoverage":true},{"functionName":"isArrayBuffer","ranges":[{"startOffset":184,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"fromArrayBuffer","ranges":[{"startOffset":281,"endOffset":822,"count":0}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":824,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"bufferFrom","ranges":[{"startOffset":1154,"endOffset":1565,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/distributable/test/library/asset.test.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2064,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":257,"endOffset":352,"count":4},{"startOffset":325,"endOffset":330,"count":1},{"startOffset":331,"endOffset":349,"count":3}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":354,"endOffset":540,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":542,"endOffset":1285,"count":1},{"startOffset":624,"endOffset":697,"count":0},{"startOffset":699,"endOffset":795,"count":0},{"startOffset":797,"endOffset":925,"count":0},{"startOffset":948,"endOffset":1284,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1355,"endOffset":2023,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1785,"endOffset":1825,"count":1}],"isBlockCoverage":true}]},{"scriptId":"512","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":190,"count":1},{"startOffset":133,"endOffset":159,"count":0}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Bundler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24904,"count":1}],"isBlockCoverage":true},{"functionName":"Bundler","ranges":[{"startOffset":1170,"endOffset":2835,"count":1},{"startOffset":1635,"endOffset":1662,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1318,"endOffset":1340,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeEntries","ranges":[{"startOffset":2839,"endOffset":3205,"count":1},{"startOffset":3134,"endOffset":3177,"count":0}],"isBlockCoverage":true},{"functionName":"findEntryFiles","ranges":[{"startOffset":3209,"endOffset":3377,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3302,"endOffset":3334,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3351,"endOffset":3371,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":3381,"endOffset":5655,"count":1},{"startOffset":3645,"endOffset":3660,"count":0},{"startOffset":3696,"endOffset":3708,"count":0},{"startOffset":3774,"endOffset":3846,"count":0},{"startOffset":3910,"endOffset":3930,"count":0},{"startOffset":4027,"endOffset":4036,"count":0},{"startOffset":4070,"endOffset":4075,"count":0},{"startOffset":4189,"endOffset":4195,"count":0},{"startOffset":4325,"endOffset":4346,"count":0},{"startOffset":4413,"endOffset":4429,"count":0},{"startOffset":4558,"endOffset":4585,"count":0},{"startOffset":4713,"endOffset":4716,"count":0},{"startOffset":4920,"endOffset":4940,"count":0},{"startOffset":5086,"endOffset":5099,"count":0},{"startOffset":5270,"endOffset":5291,"count":0},{"startOffset":5357,"endOffset":5364,"count":0},{"startOffset":5500,"endOffset":5521,"count":0},{"startOffset":5616,"endOffset":5637,"count":0}],"isBlockCoverage":true},{"functionName":"addAssetType","ranges":[{"startOffset":5659,"endOffset":5948,"count":1},{"startOffset":5725,"endOffset":5794,"count":0},{"startOffset":5815,"endOffset":5891,"count":0}],"isBlockCoverage":true},{"functionName":"addPackager","ranges":[{"startOffset":5952,"endOffset":6120,"count":0}],"isBlockCoverage":false},{"functionName":"addBundleLoader","ranges":[{"startOffset":6124,"endOffset":6783,"count":4},{"startOffset":6190,"endOffset":6242,"count":0},{"startOffset":6279,"endOffset":6348,"count":0},{"startOffset":6382,"endOffset":6640,"count":8},{"startOffset":6412,"endOffset":6435,"count":4},{"startOffset":6437,"endOffset":6516,"count":0},{"startOffset":6563,"endOffset":6634,"count":0},{"startOffset":6661,"endOffset":6740,"count":0}],"isBlockCoverage":true},{"functionName":"loadPlugins","ranges":[{"startOffset":6787,"endOffset":7477,"count":1},{"startOffset":6945,"endOffset":6966,"count":0},{"startOffset":7098,"endOffset":7314,"count":17},{"startOffset":7207,"endOffset":7306,"count":0},{"startOffset":7321,"endOffset":7473,"count":0}],"isBlockCoverage":true},{"functionName":"bundle","ranges":[{"startOffset":7481,"endOffset":11633,"count":1},{"startOffset":7604,"endOffset":7766,"count":0},{"startOffset":8613,"endOffset":8761,"count":0},{"startOffset":8814,"endOffset":8873,"count":0},{"startOffset":9280,"endOffset":9323,"count":2},{"startOffset":9948,"endOffset":9973,"count":0},{"startOffset":10122,"endOffset":10185,"count":3},{"startOffset":10336,"endOffset":10355,"count":0},{"startOffset":10357,"endOffset":10426,"count":0},{"startOffset":10600,"endOffset":10619,"count":0},{"startOffset":11018,"endOffset":11376,"count":0},{"startOffset":11629,"endOffset":11632,"count":0}],"isBlockCoverage":true},{"functionName":"isInitialBundle","ranges":[{"startOffset":7631,"endOffset":7758,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":11637,"endOffset":12784,"count":1},{"startOffset":11672,"endOffset":11693,"count":0},{"startOffset":12018,"endOffset":12529,"count":0},{"startOffset":12557,"endOffset":12663,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12212,"endOffset":12258,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12301,"endOffset":12350,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":12788,"endOffset":13078,"count":1},{"startOffset":12825,"endOffset":12865,"count":0},{"startOffset":12885,"endOffset":12915,"count":0}],"isBlockCoverage":true},{"functionName":"getAsset","ranges":[{"startOffset":13082,"endOffset":13254,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsset","ranges":[{"startOffset":13258,"endOffset":13394,"count":2}],"isBlockCoverage":true},{"functionName":"getLoadedAsset","ranges":[{"startOffset":13398,"endOffset":13658,"count":2},{"startOffset":13458,"endOffset":13507,"count":0}],"isBlockCoverage":true},{"functionName":"watch","ranges":[{"startOffset":13662,"endOffset":13946,"count":5},{"startOffset":13733,"endOffset":13945,"count":0}],"isBlockCoverage":true},{"functionName":"unwatch","ranges":[{"startOffset":13950,"endOffset":14265,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDep","ranges":[{"startOffset":14269,"endOffset":15308,"count":1},{"startOffset":14350,"endOffset":14409,"count":0},{"startOffset":14477,"endOffset":15307,"count":0}],"isBlockCoverage":true},{"functionName":"installDep","ranges":[{"startOffset":15312,"endOffset":15891,"count":0}],"isBlockCoverage":false},{"functionName":"throwDepError","ranges":[{"startOffset":15895,"endOffset":16172,"count":0}],"isBlockCoverage":false},{"functionName":"processAsset","ranges":[{"startOffset":16176,"endOffset":16380,"count":1},{"startOffset":16234,"endOffset":16342,"count":0}],"isBlockCoverage":true},{"functionName":"loadAsset","ranges":[{"startOffset":16384,"endOffset":18981,"count":2},{"startOffset":16434,"endOffset":16455,"count":0},{"startOffset":16768,"endOffset":16806,"count":0},{"startOffset":16854,"endOffset":16900,"count":0},{"startOffset":17415,"endOffset":17591,"count":0},{"startOffset":18504,"endOffset":18540,"count":0},{"startOffset":18909,"endOffset":18921,"count":0},{"startOffset":18923,"endOffset":18977,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17698,"endOffset":18256,"count":4},{"startOffset":17747,"endOffset":18026,"count":3},{"startOffset":18026,"endOffset":18248,"count":1},{"startOffset":18248,"endOffset":18255,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18620,"endOffset":18831,"count":4},{"startOffset":18734,"endOffset":18825,"count":1}],"isBlockCoverage":true},{"functionName":"createBundleTree","ranges":[{"startOffset":18985,"endOffset":21850,"count":2},{"startOffset":19064,"endOffset":19104,"count":1},{"startOffset":19133,"endOffset":19152,"count":0},{"startOffset":19154,"endOffset":19844,"count":0},{"startOffset":20016,"endOffset":20043,"count":0},{"startOffset":20045,"endOffset":20066,"count":0},{"startOffset":20116,"endOffset":20158,"count":0},{"startOffset":20325,"endOffset":20364,"count":1},{"startOffset":20365,"endOffset":20380,"count":1},{"startOffset":20382,"endOffset":20419,"count":1},{"startOffset":20434,"endOffset":20448,"count":1},{"startOffset":20467,"endOffset":20715,"count":1},{"startOffset":20581,"endOffset":20606,"count":0},{"startOffset":20715,"endOffset":21333,"count":1},{"startOffset":20820,"endOffset":21197,"count":0},{"startOffset":21718,"endOffset":21792,"count":1}],"isBlockCoverage":true},{"functionName":"moveAssetToBundle","ranges":[{"startOffset":21854,"endOffset":22618,"count":0}],"isBlockCoverage":false},{"functionName":"findOrphanAssets","ranges":[{"startOffset":22622,"endOffset":22767,"count":2},{"startOffset":22694,"endOffset":22763,"count":4},{"startOffset":22727,"endOffset":22757,"count":2}],"isBlockCoverage":true},{"functionName":"unloadOrphanedAssets","ranges":[{"startOffset":22771,"endOffset":22885,"count":1},{"startOffset":22843,"endOffset":22881,"count":0}],"isBlockCoverage":true},{"functionName":"unloadAsset","ranges":[{"startOffset":22889,"endOffset":23239,"count":0}],"isBlockCoverage":false},{"functionName":"onAdd","ranges":[{"startOffset":23243,"endOffset":23503,"count":0}],"isBlockCoverage":false},{"functionName":"onChange","ranges":[{"startOffset":23507,"endOffset":24140,"count":0}],"isBlockCoverage":false},{"functionName":"onUnlink","ranges":[{"startOffset":24144,"endOffset":24446,"count":0}],"isBlockCoverage":false},{"functionName":"middleware","ranges":[{"startOffset":24450,"endOffset":24523,"count":0}],"isBlockCoverage":false},{"functionName":"serve","ranges":[{"startOffset":24527,"endOffset":24786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"514","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/fs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":186,"count":1},{"startOffset":137,"endOffset":158,"count":0}],"isBlockCoverage":true}]},{"scriptId":"515","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/fs/src/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":752,"count":1}],"isBlockCoverage":true},{"functionName":"exports.realpath","ranges":[{"startOffset":399,"endOffset":560,"count":0}],"isBlockCoverage":false},{"functionName":"exports.exists","ranges":[{"startOffset":617,"endOffset":713,"count":98}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":659,"endOffset":709,"count":98}],"isBlockCoverage":true}]},{"scriptId":"516","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336,"count":1},{"startOffset":140,"endOffset":168,"count":0},{"startOffset":271,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/utils/src/promisify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":295,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":293,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":41,"endOffset":290,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84,"endOffset":284,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":130,"endOffset":276,"count":46},{"startOffset":171,"endOffset":190,"count":24},{"startOffset":190,"endOffset":222,"count":22},{"startOffset":222,"endOffset":245,"count":14},{"startOffset":245,"endOffset":275,"count":8}],"isBlockCoverage":true}]},{"scriptId":"518","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/utils/src/errorUtils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":650,"count":1}],"isBlockCoverage":true},{"functionName":"errorToJson","ranges":[{"startOffset":0,"endOffset":392,"count":0}],"isBlockCoverage":false},{"functionName":"jsonToError","ranges":[{"startOffset":394,"endOffset":578,"count":0}],"isBlockCoverage":false}]},{"scriptId":"519","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mkdirp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2644,"count":1}],"isBlockCoverage":true},{"functionName":"mkdirP","ranges":[{"startOffset":144,"endOffset":1569,"count":3},{"startOffset":261,"endOffset":348,"count":0},{"startOffset":519,"endOffset":536,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":522,"endOffset":536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":591,"endOffset":1565,"count":3},{"startOffset":624,"endOffset":700,"count":1},{"startOffset":700,"endOffset":740,"count":2},{"startOffset":740,"endOffset":1017,"count":0},{"startOffset":1205,"endOffset":1549,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":859,"endOffset":992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1242,"endOffset":1524,"count":2},{"startOffset":1453,"endOffset":1465,"count":0}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":1585,"endOffset":2642,"count":0}],"isBlockCoverage":false}]},{"scriptId":"520","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/fs/node_modules/rimraf/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9225,"count":1},{"startOffset":185,"endOffset":230,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":409,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1102,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf_","ranges":[{"startOffset":3485,"endOffset":4407,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":4409,"endOffset":4914,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":4916,"endOffset":5390,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":5392,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"rmkids","ranges":[{"startOffset":5968,"endOffset":6491,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":6632,"endOffset":8002,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":8004,"endOffset":8400,"count":0}],"isBlockCoverage":false},{"functionName":"rmkidsSync","ranges":[{"startOffset":8402,"endOffset":9224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"521","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19433,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2187,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2608,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2854,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"Glob","ranges":[{"startOffset":3249,"endOffset":4679,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4706,"endOffset":4909,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4938,"endOffset":5253,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5285,"endOffset":6101,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6126,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6200,"endOffset":6249,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6274,"endOffset":6332,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6357,"endOffset":6444,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6470,"endOffset":7052,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":7080,"endOffset":8846,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8881,"endOffset":9117,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9153,"endOffset":11197,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11227,"endOffset":11795,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11833,"endOffset":12630,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12658,"endOffset":13170,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13172,"endOffset":13352,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13387,"endOffset":13884,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13917,"endOffset":15002,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":15038,"endOffset":15268,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15306,"endOffset":16453,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16487,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16777,"endOffset":17459,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17526,"endOffset":18907,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18933,"endOffset":19432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"522","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2489,"endOffset":2534,"count":0},{"startOffset":2673,"endOffset":2754,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25347,"count":1},{"startOffset":117,"endOffset":130,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1102,"endOffset":1216,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1153,"endOffset":1209,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1291,"endOffset":1434,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1436,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1656,"endOffset":2001,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2024,"endOffset":2142,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2144,"endOffset":2554,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":2556,"endOffset":3162,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3192,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"make","ranges":[{"startOffset":3240,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"parseNegate","ranges":[{"startOffset":4551,"endOffset":4936,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5212,"endOffset":5282,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5331,"endOffset":5808,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":6506,"endOffset":16995,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17016,"endOffset":17103,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17141,"endOffset":18278,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":18298,"endOffset":18552,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":18588,"endOffset":19999,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":20250,"endOffset":25162,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":25196,"endOffset":25260,"count":0}],"isBlockCoverage":false},{"functionName":"regExpEscape","ranges":[{"startOffset":25262,"endOffset":25346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"525","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"526","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1174,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1173,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"529","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":534,"endOffset":541,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":0}],"isBlockCoverage":false},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12002,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":592,"endOffset":881,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":883,"endOffset":1510,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1541,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2131,"endOffset":3632,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3672,"endOffset":5630,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5665,"endOffset":6053,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6096,"endOffset":6803,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6835,"endOffset":7261,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7300,"endOffset":7781,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7818,"endOffset":8682,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8722,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9858,"endOffset":10604,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10675,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11874,"endOffset":11920,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11952,"endOffset":12001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"531","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6167,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":257,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"alphasorti","ranges":[{"startOffset":496,"endOffset":582,"count":0}],"isBlockCoverage":false},{"functionName":"alphasort","ranges":[{"startOffset":584,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":643,"endOffset":867,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreMap","ranges":[{"startOffset":917,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1212,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":3389,"endOffset":4733,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4735,"endOffset":5186,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5207,"endOffset":5562,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5758,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5974,"endOffset":6166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"533","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"534","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Resolver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13008,"count":1}],"isBlockCoverage":true},{"functionName":"Resolver","ranges":[{"startOffset":1112,"endOffset":1263,"count":6}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1267,"endOffset":2639,"count":2},{"startOffset":1433,"endOffset":1474,"count":0},{"startOffset":1533,"endOffset":1607,"count":0},{"startOffset":1712,"endOffset":1745,"count":0},{"startOffset":1809,"endOffset":1990,"count":1},{"startOffset":2182,"endOffset":2254,"count":0},{"startOffset":2380,"endOffset":2578,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":1981,"count":40}],"isBlockCoverage":true},{"functionName":"resolveModule","ranges":[{"startOffset":2643,"endOffset":3625,"count":2},{"startOffset":2704,"endOffset":2726,"count":1},{"startOffset":2727,"endOffset":2742,"count":1},{"startOffset":2841,"endOffset":2902,"count":1},{"startOffset":3181,"endOffset":3624,"count":0}],"isBlockCoverage":true},{"functionName":"getCacheKey","ranges":[{"startOffset":3629,"endOffset":3730,"count":2},{"startOffset":3680,"endOffset":3702,"count":1},{"startOffset":3703,"endOffset":3707,"count":1}],"isBlockCoverage":true},{"functionName":"resolveFilename","ranges":[{"startOffset":3734,"endOffset":4586,"count":1},{"startOffset":3800,"endOffset":3939,"count":0},{"startOffset":3947,"endOffset":4430,"count":0},{"startOffset":4525,"endOffset":4576,"count":0}],"isBlockCoverage":true},{"functionName":"loadRelative","ranges":[{"startOffset":4590,"endOffset":4983,"count":2},{"startOffset":4871,"endOffset":4933,"count":0}],"isBlockCoverage":true},{"functionName":"findNodeModulePath","ranges":[{"startOffset":4987,"endOffset":6091,"count":0}],"isBlockCoverage":false},{"functionName":"loadNodeModules","ranges":[{"startOffset":6095,"endOffset":6672,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":6676,"endOffset":6839,"count":2},{"startOffset":6772,"endOffset":6788,"count":0},{"startOffset":6796,"endOffset":6838,"count":0}],"isBlockCoverage":true},{"functionName":"loadDirectory","ranges":[{"startOffset":6843,"endOffset":7527,"count":0}],"isBlockCoverage":false},{"functionName":"readPackage","ranges":[{"startOffset":7531,"endOffset":8178,"count":31},{"startOffset":7640,"endOffset":7689,"count":4},{"startOffset":7689,"endOffset":7738,"count":27},{"startOffset":7738,"endOffset":8000,"count":3},{"startOffset":8000,"endOffset":8119,"count":0},{"startOffset":8119,"endOffset":8177,"count":3}],"isBlockCoverage":true},{"functionName":"getBrowserField","ranges":[{"startOffset":8182,"endOffset":8313,"count":168},{"startOffset":8242,"endOffset":8254,"count":0},{"startOffset":8288,"endOffset":8301,"count":0}],"isBlockCoverage":true},{"functionName":"getPackageEntries","ranges":[{"startOffset":8317,"endOffset":9108,"count":0}],"isBlockCoverage":false},{"functionName":"loadAsFile","ranges":[{"startOffset":9112,"endOffset":9332,"count":2},{"startOffset":9328,"endOffset":9331,"count":0}],"isBlockCoverage":true},{"functionName":"expandFile","ranges":[{"startOffset":9336,"endOffset":9762,"count":2},{"startOffset":9481,"endOffset":9741,"count":82},{"startOffset":9620,"endOffset":9707,"count":0}],"isBlockCoverage":true},{"functionName":"resolveAliases","ranges":[{"startOffset":9766,"endOffset":9989,"count":84}],"isBlockCoverage":true},{"functionName":"resolvePackageAliases","ranges":[{"startOffset":9993,"endOffset":10390,"count":168},{"startOffset":10046,"endOffset":10076,"count":0}],"isBlockCoverage":true},{"functionName":"getAlias","ranges":[{"startOffset":10394,"endOffset":11493,"count":504},{"startOffset":10459,"endOffset":10489,"count":0},{"startOffset":10517,"endOffset":11492,"count":0}],"isBlockCoverage":true},{"functionName":"lookupAlias","ranges":[{"startOffset":11497,"endOffset":12258,"count":0}],"isBlockCoverage":false},{"functionName":"findPackage","ranges":[{"startOffset":12262,"endOffset":12618,"count":7},{"startOffset":12429,"endOffset":12469,"count":31},{"startOffset":12471,"endOffset":12614,"count":31},{"startOffset":12537,"endOffset":12614,"count":24},{"startOffset":12614,"endOffset":12617,"count":0}],"isBlockCoverage":true},{"functionName":"loadAlias","ranges":[{"startOffset":12622,"endOffset":12977,"count":2},{"startOffset":12753,"endOffset":12831,"count":1}],"isBlockCoverage":true}]},{"scriptId":"536","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/builtins/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":385,"count":1},{"startOffset":116,"endOffset":225,"count":38},{"startOffset":166,"endOffset":198,"count":10},{"startOffset":203,"endOffset":222,"count":28}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-libs-browser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1966,"count":1}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393,"count":1}],"isBlockCoverage":true},{"functionName":"normalisePath","ranges":[{"startOffset":75,"endOffset":136,"count":8}],"isBlockCoverage":true},{"functionName":"exports.isGlob","ranges":[{"startOffset":155,"endOffset":205,"count":7}],"isBlockCoverage":true},{"functionName":"exports.glob","ranges":[{"startOffset":223,"endOffset":293,"count":0}],"isBlockCoverage":false},{"functionName":"exports.glob.sync","ranges":[{"startOffset":316,"endOffset":391,"count":1}],"isBlockCoverage":true}]},{"scriptId":"539","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":255,"count":1}],"isBlockCoverage":true}]},{"scriptId":"540","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2240,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":478,"endOffset":647,"count":1}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":703,"endOffset":981,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":1033,"endOffset":1205,"count":0}],"isBlockCoverage":false},{"functionName":"generateTasks","ranges":[{"startOffset":1297,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"getWorks","ranges":[{"startOffset":1641,"endOffset":1916,"count":1}],"isBlockCoverage":true},{"functionName":"assertPatternsInput","ranges":[{"startOffset":1918,"endOffset":2107,"count":1},{"startOffset":2026,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":2109,"endOffset":2238,"count":1}],"isBlockCoverage":true}]},{"scriptId":"541","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/managers/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1501,"count":1}],"isBlockCoverage":true},{"functionName":"__assign","ranges":[{"startOffset":57,"endOffset":406,"count":1},{"startOffset":101,"endOffset":357,"count":0}],"isBlockCoverage":true},{"functionName":"__assign","ranges":[{"startOffset":104,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"prepare","ranges":[{"startOffset":473,"endOffset":1471,"count":1},{"startOffset":928,"endOffset":969,"count":0},{"startOffset":1126,"endOffset":1450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"542","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/managers/tasks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3710,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":200,"endOffset":1176,"count":1},{"startOffset":743,"endOffset":747,"count":0},{"startOffset":846,"endOffset":864,"count":0}],"isBlockCoverage":true},{"functionName":"convertPatternsToTasks","ranges":[{"startOffset":1291,"endOffset":1824,"count":2},{"startOffset":1625,"endOffset":1738,"count":0}],"isBlockCoverage":true},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1929,"endOffset":2028,"count":1}],"isBlockCoverage":true},{"functionName":"getNegativePatternsAsPositive","ranges":[{"startOffset":2127,"endOffset":2362,"count":1}],"isBlockCoverage":true},{"functionName":"groupPatternsByBaseDirectory","ranges":[{"startOffset":2500,"endOffset":2875,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2578,"endOffset":2866,"count":1},{"startOffset":2704,"endOffset":2761,"count":0}],"isBlockCoverage":true},{"functionName":"convertPatternGroupsToTasks","ranges":[{"startOffset":2997,"endOffset":3216,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3103,"endOffset":3211,"count":1}],"isBlockCoverage":true},{"functionName":"convertPatternGroupToTask","ranges":[{"startOffset":3350,"endOffset":3644,"count":1}],"isBlockCoverage":true}]},{"scriptId":"543","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/utils/pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4597,"count":1}],"isBlockCoverage":true},{"functionName":"isStaticPattern","ranges":[{"startOffset":293,"endOffset":371,"count":1}],"isBlockCoverage":true},{"functionName":"isDynamicPattern","ranges":[{"startOffset":477,"endOffset":564,"count":2}],"isBlockCoverage":true},{"functionName":"unixifyPattern","ranges":[{"startOffset":675,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"convertToPositivePattern","ranges":[{"startOffset":857,"endOffset":973,"count":0}],"isBlockCoverage":false},{"functionName":"convertToNegativePattern","ranges":[{"startOffset":1097,"endOffset":1171,"count":0}],"isBlockCoverage":false},{"functionName":"isNegativePattern","ranges":[{"startOffset":1302,"endOffset":1401,"count":2},{"startOffset":1376,"endOffset":1397,"count":0}],"isBlockCoverage":true},{"functionName":"isPositivePattern","ranges":[{"startOffset":1518,"endOffset":1599,"count":1}],"isBlockCoverage":true},{"functionName":"getNegativePatterns","ranges":[{"startOffset":1714,"endOffset":1805,"count":1}],"isBlockCoverage":true},{"functionName":"getPositivePatterns","ranges":[{"startOffset":1924,"endOffset":2015,"count":1}],"isBlockCoverage":true},{"functionName":"getBaseDirectory","ranges":[{"startOffset":2129,"endOffset":2201,"count":2}],"isBlockCoverage":true},{"functionName":"hasGlobStar","ranges":[{"startOffset":2309,"endOffset":2389,"count":1}],"isBlockCoverage":true},{"functionName":"endsWithSlashGlobStar","ranges":[{"startOffset":2503,"endOffset":2593,"count":0}],"isBlockCoverage":false},{"functionName":"isAffectDepthOfReadingPattern","ranges":[{"startOffset":2778,"endOffset":2947,"count":0}],"isBlockCoverage":false},{"functionName":"getNaiveDepth","ranges":[{"startOffset":3111,"endOffset":3568,"count":1},{"startOffset":3459,"endOffset":3516,"count":0}],"isBlockCoverage":true},{"functionName":"getMaxNaivePatternsDepth","ranges":[{"startOffset":3705,"endOffset":3907,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3779,"endOffset":3899,"count":1},{"startOffset":3878,"endOffset":3885,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":4019,"endOffset":4106,"count":1}],"isBlockCoverage":true},{"functionName":"convertPatternsToRe","ranges":[{"startOffset":4177,"endOffset":4312,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4252,"endOffset":4307,"count":1}],"isBlockCoverage":true},{"functionName":"matchAny","ranges":[{"startOffset":4439,"endOffset":4565,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4506,"endOffset":4560,"count":1}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob-parent/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":763,"count":1}],"isBlockCoverage":true},{"functionName":"globParent","ranges":[{"startOffset":189,"endOffset":761,"count":2},{"startOffset":262,"endOffset":285,"count":0},{"startOffset":287,"endOffset":319,"count":0},{"startOffset":437,"endOffset":448,"count":0}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob-parent/node_modules/is-glob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":547,"count":1}],"isBlockCoverage":true},{"functionName":"isGlob","ranges":[{"startOffset":202,"endOffset":545,"count":2},{"startOffset":270,"endOffset":293,"count":0},{"startOffset":317,"endOffset":329,"count":0},{"startOffset":439,"endOffset":527,"count":0}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/path-dirname/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3609,"count":1},{"startOffset":3532,"endOffset":3539,"count":0}],"isBlockCoverage":true},{"functionName":"assertPath","ranges":[{"startOffset":83,"endOffset":227,"count":2},{"startOffset":143,"endOffset":225,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":229,"endOffset":820,"count":2},{"startOffset":301,"endOffset":312,"count":0},{"startOffset":470,"endOffset":693,"count":22},{"startOffset":529,"endOffset":603,"count":2},{"startOffset":603,"endOffset":689,"count":20},{"startOffset":717,"endOffset":744,"count":0},{"startOffset":777,"endOffset":789,"count":0}],"isBlockCoverage":true},{"functionName":"win32","ranges":[{"startOffset":822,"endOffset":3484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"547","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/micromatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23853,"count":1}],"isBlockCoverage":true},{"functionName":"micromatch","ranges":[{"startOffset":983,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.match","ranges":[{"startOffset":2336,"endOffset":3471,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.isMatch","ranges":[{"startOffset":4089,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.some","ranges":[{"startOffset":5256,"endOffset":5500,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.every","ranges":[{"startOffset":6340,"endOffset":6584,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.any","ranges":[{"startOffset":7225,"endOffset":7670,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.all","ranges":[{"startOffset":8467,"endOffset":8833,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.not","ranges":[{"startOffset":9456,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.contains","ranges":[{"startOffset":10592,"endOffset":11182,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchBase","ranges":[{"startOffset":11344,"endOffset":11512,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.matchKeys","ranges":[{"startOffset":12283,"endOffset":12519,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":13185,"endOffset":14448,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.capture","ranges":[{"startOffset":15159,"endOffset":15578,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.makeRe","ranges":[{"startOffset":16099,"endOffset":16858,"count":1},{"startOffset":16163,"endOffset":16228,"count":0},{"startOffset":16265,"endOffset":16357,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":16361,"endOffset":16801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16487,"endOffset":16597,"count":1}],"isBlockCoverage":true},{"functionName":"micromatch.braces","ranges":[{"startOffset":17385,"endOffset":17790,"count":1},{"startOffset":17448,"endOffset":17474,"count":0},{"startOffset":17476,"endOffset":17551,"count":0}],"isBlockCoverage":true},{"functionName":"expand","ranges":[{"startOffset":17555,"endOffset":17733,"count":1},{"startOffset":17692,"endOffset":17732,"count":0}],"isBlockCoverage":true},{"functionName":"micromatch.braceExpand","ranges":[{"startOffset":17903,"endOffset":18026,"count":0}],"isBlockCoverage":false},{"functionName":"micromatch.create","ranges":[{"startOffset":19285,"endOffset":19700,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19359,"endOffset":19696,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":19376,"endOffset":19478,"count":1}],"isBlockCoverage":true},{"functionName":"micromatch.parse","ranges":[{"startOffset":20474,"endOffset":20900,"count":1},{"startOffset":20538,"endOffset":20589,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":20593,"endOffset":20845,"count":1}],"isBlockCoverage":true},{"functionName":"micromatch.compile","ranges":[{"startOffset":21713,"endOffset":22021,"count":1},{"startOffset":21769,"endOffset":21816,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21866,"endOffset":22017,"count":1}],"isBlockCoverage":true},{"functionName":"micromatch.clearCache","ranges":[{"startOffset":22137,"endOffset":22183,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyString","ranges":[{"startOffset":22261,"endOffset":22345,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":22494,"endOffset":23108,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":23273,"endOffset":23609,"count":5},{"startOffset":23423,"endOffset":23461,"count":0},{"startOffset":23491,"endOffset":23529,"count":0}],"isBlockCoverage":true}]},{"scriptId":"548","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8241,"count":1}],"isBlockCoverage":true},{"functionName":"braces","ranges":[{"startOffset":1008,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"braces.expand","ranges":[{"startOffset":2166,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"braces.optimize","ranges":[{"startOffset":2702,"endOffset":2774,"count":0}],"isBlockCoverage":false},{"functionName":"braces.create","ranges":[{"startOffset":3343,"endOffset":4564,"count":0}],"isBlockCoverage":false},{"functionName":"braces.makeRe","ranges":[{"startOffset":4932,"endOffset":5449,"count":0}],"isBlockCoverage":false},{"functionName":"braces.parse","ranges":[{"startOffset":6214,"endOffset":6319,"count":0}],"isBlockCoverage":false},{"functionName":"braces.compile","ranges":[{"startOffset":7176,"endOffset":7275,"count":0}],"isBlockCoverage":false},{"functionName":"braces.clearCache","ranges":[{"startOffset":7391,"endOffset":7434,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":7618,"endOffset":7991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/to-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3643,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":474,"endOffset":627,"count":4},{"startOffset":579,"endOffset":626,"count":0}],"isBlockCoverage":true},{"functionName":"makeRe","ranges":[{"startOffset":853,"endOffset":2741,"count":4},{"startOffset":922,"endOffset":947,"count":0},{"startOffset":984,"endOffset":1035,"count":0},{"startOffset":1072,"endOffset":1164,"count":0},{"startOffset":1383,"endOffset":1415,"count":0},{"startOffset":1485,"endOffset":1601,"count":2},{"startOffset":1517,"endOffset":1557,"count":0},{"startOffset":1632,"endOffset":1696,"count":2},{"startOffset":1737,"endOffset":1742,"count":2},{"startOffset":1743,"endOffset":1747,"count":2},{"startOffset":1790,"endOffset":1795,"count":1},{"startOffset":1796,"endOffset":1800,"count":3},{"startOffset":1875,"endOffset":1894,"count":0},{"startOffset":1896,"endOffset":1919,"count":0},{"startOffset":1992,"endOffset":2042,"count":0},{"startOffset":2160,"endOffset":2184,"count":0},{"startOffset":2186,"endOffset":2274,"count":0},{"startOffset":2280,"endOffset":2648,"count":0}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":2964,"endOffset":3172,"count":4}],"isBlockCoverage":true},{"functionName":"createKey","ranges":[{"startOffset":3339,"endOffset":3581,"count":4},{"startOffset":3394,"endOffset":3409,"count":0},{"startOffset":3459,"endOffset":3565,"count":11}],"isBlockCoverage":true}]},{"scriptId":"550","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/safe-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1235,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExp","ranges":[{"startOffset":1155,"endOffset":1234,"count":0}],"isBlockCoverage":false}]},{"scriptId":"551","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ret/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6555,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":165,"endOffset":6522,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ret/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2616,"count":1}],"isBlockCoverage":true},{"functionName":"exports.strToChars","ranges":[{"startOffset":476,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"exports.tokenizeClass","ranges":[{"startOffset":1393,"endOffset":2399,"count":0}],"isBlockCoverage":false},{"functionName":"exports.error","ranges":[{"startOffset":2508,"endOffset":2614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"553","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ret/lib/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":166,"count":1}],"isBlockCoverage":true}]},{"scriptId":"554","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ret/lib/sets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2230,"count":1}],"isBlockCoverage":true},{"functionName":"INTS","ranges":[{"startOffset":44,"endOffset":110,"count":0}],"isBlockCoverage":false},{"functionName":"WORDS","ranges":[{"startOffset":125,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"WHITESPACE","ranges":[{"startOffset":316,"endOffset":1346,"count":0}],"isBlockCoverage":false},{"functionName":"NOTANYCHAR","ranges":[{"startOffset":1366,"endOffset":1548,"count":0}],"isBlockCoverage":false},{"functionName":"exports.words","ranges":[{"startOffset":1596,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"exports.notWords","ranges":[{"startOffset":1688,"endOffset":1757,"count":0}],"isBlockCoverage":false},{"functionName":"exports.ints","ranges":[{"startOffset":1775,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"exports.notInts","ranges":[{"startOffset":1865,"endOffset":1933,"count":0}],"isBlockCoverage":false},{"functionName":"exports.whitespace","ranges":[{"startOffset":1957,"endOffset":2032,"count":0}],"isBlockCoverage":false},{"functionName":"exports.notWhitespace","ranges":[{"startOffset":2059,"endOffset":2133,"count":0}],"isBlockCoverage":false},{"functionName":"exports.anyChar","ranges":[{"startOffset":2154,"endOffset":2228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"555","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ret/lib/positions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"exports.wordBoundary","ranges":[{"startOffset":56,"endOffset":117,"count":0}],"isBlockCoverage":false},{"functionName":"exports.nonWordBoundary","ranges":[{"startOffset":146,"endOffset":207,"count":0}],"isBlockCoverage":false},{"functionName":"exports.begin","ranges":[{"startOffset":226,"endOffset":287,"count":0}],"isBlockCoverage":false},{"functionName":"exports.end","ranges":[{"startOffset":304,"endOffset":365,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":888,"count":1},{"startOffset":358,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":401,"endOffset":886,"count":20},{"startOffset":463,"endOffset":491,"count":0},{"startOffset":492,"endOffset":514,"count":0},{"startOffset":516,"endOffset":588,"count":0},{"startOffset":621,"endOffset":684,"count":0},{"startOffset":711,"endOffset":759,"count":0}],"isBlockCoverage":true}]},{"scriptId":"557","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/isobject/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":288,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":179,"endOffset":286,"count":35},{"startOffset":225,"endOffset":251,"count":33},{"startOffset":252,"endOffset":283,"count":22}],"isBlockCoverage":true}]},{"scriptId":"558","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/define-property/node_modules/is-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"isDescriptor","ranges":[{"startOffset":319,"endOffset":496,"count":20},{"startOffset":385,"endOffset":408,"count":14},{"startOffset":408,"endOffset":429,"count":6},{"startOffset":429,"endOffset":467,"count":2},{"startOffset":467,"endOffset":495,"count":4}],"isBlockCoverage":true}]},{"scriptId":"559","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3562,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":60,"endOffset":1965,"count":49},{"startOffset":105,"endOffset":124,"count":1},{"startOffset":124,"endOffset":145,"count":48},{"startOffset":145,"endOffset":159,"count":1},{"startOffset":159,"endOffset":212,"count":47},{"startOffset":212,"endOffset":229,"count":5},{"startOffset":229,"endOffset":255,"count":42},{"startOffset":255,"endOffset":271,"count":10},{"startOffset":271,"endOffset":297,"count":32},{"startOffset":297,"endOffset":313,"count":0},{"startOffset":313,"endOffset":339,"count":32},{"startOffset":339,"endOffset":355,"count":0},{"startOffset":355,"endOffset":383,"count":32},{"startOffset":383,"endOffset":454,"count":11},{"startOffset":415,"endOffset":436,"count":0},{"startOffset":454,"endOffset":476,"count":21},{"startOffset":476,"endOffset":491,"count":0},{"startOffset":491,"endOffset":513,"count":21},{"startOffset":513,"endOffset":529,"count":0},{"startOffset":529,"endOffset":554,"count":21},{"startOffset":554,"endOffset":573,"count":0},{"startOffset":573,"endOffset":593,"count":21},{"startOffset":593,"endOffset":607,"count":0},{"startOffset":607,"endOffset":628,"count":21},{"startOffset":628,"endOffset":643,"count":0},{"startOffset":643,"endOffset":665,"count":21},{"startOffset":665,"endOffset":681,"count":0},{"startOffset":681,"endOffset":714,"count":21},{"startOffset":714,"endOffset":745,"count":0},{"startOffset":750,"endOffset":783,"count":0},{"startOffset":823,"endOffset":856,"count":0},{"startOffset":861,"endOffset":894,"count":0},{"startOffset":899,"endOffset":924,"count":0},{"startOffset":929,"endOffset":954,"count":0},{"startOffset":986,"endOffset":1023,"count":0},{"startOffset":1028,"endOffset":1067,"count":0},{"startOffset":1072,"endOffset":1125,"count":0},{"startOffset":1158,"endOffset":1197,"count":0},{"startOffset":1202,"endOffset":1243,"count":0},{"startOffset":1276,"endOffset":1315,"count":0},{"startOffset":1320,"endOffset":1361,"count":0},{"startOffset":1366,"endOffset":1409,"count":0},{"startOffset":1414,"endOffset":1457,"count":0},{"startOffset":1461,"endOffset":1490,"count":21},{"startOffset":1490,"endOffset":1519,"count":0},{"startOffset":1519,"endOffset":1635,"count":21},{"startOffset":1657,"endOffset":1708,"count":0},{"startOffset":1713,"endOffset":1764,"count":0},{"startOffset":1769,"endOffset":1826,"count":0},{"startOffset":1831,"endOffset":1886,"count":0},{"startOffset":1890,"endOffset":1964,"count":0}],"isBlockCoverage":true},{"functionName":"ctorName","ranges":[{"startOffset":1968,"endOffset":2072,"count":32},{"startOffset":2063,"endOffset":2069,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":2074,"endOffset":2178,"count":21},{"startOffset":2145,"endOffset":2177,"count":0}],"isBlockCoverage":true},{"functionName":"isError","ranges":[{"startOffset":2180,"endOffset":2347,"count":21},{"startOffset":2270,"endOffset":2288,"count":0},{"startOffset":2289,"endOffset":2343,"count":0}],"isBlockCoverage":true},{"functionName":"isDate","ranges":[{"startOffset":2349,"endOffset":2544,"count":21},{"startOffset":2399,"endOffset":2411,"count":0},{"startOffset":2464,"endOffset":2500,"count":0},{"startOffset":2505,"endOffset":2541,"count":0}],"isBlockCoverage":true},{"functionName":"isRegexp","ranges":[{"startOffset":2546,"endOffset":2778,"count":21},{"startOffset":2600,"endOffset":2612,"count":0},{"startOffset":2656,"endOffset":2694,"count":0},{"startOffset":2699,"endOffset":2736,"count":0},{"startOffset":2741,"endOffset":2775,"count":0}],"isBlockCoverage":true},{"functionName":"isGeneratorFn","ranges":[{"startOffset":2780,"endOffset":2866,"count":11}],"isBlockCoverage":true},{"functionName":"isGeneratorObj","ranges":[{"startOffset":2868,"endOffset":3020,"count":21},{"startOffset":2944,"endOffset":2979,"count":0},{"startOffset":2984,"endOffset":3017,"count":0}],"isBlockCoverage":true},{"functionName":"isArguments","ranges":[{"startOffset":3022,"endOffset":3273,"count":21},{"startOffset":3097,"endOffset":3132,"count":0},{"startOffset":3134,"endOffset":3160,"count":0},{"startOffset":3165,"endOffset":3255,"count":0}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":3398,"endOffset":3561,"count":21},{"startOffset":3496,"endOffset":3543,"count":0}],"isBlockCoverage":true}]},{"scriptId":"560","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/define-property/node_modules/is-accessor-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessorDescriptor","ranges":[{"startOffset":368,"endOffset":1311,"count":2},{"startOffset":443,"endOffset":545,"count":0},{"startOffset":579,"endOffset":602,"count":0},{"startOffset":653,"endOffset":676,"count":0},{"startOffset":701,"endOffset":733,"count":0},{"startOffset":758,"endOffset":1002,"count":0},{"startOffset":1003,"endOffset":1037,"count":0},{"startOffset":1039,"endOffset":1310,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1313,"endOffset":1382,"count":6}],"isBlockCoverage":true}]},{"scriptId":"561","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/define-property/node_modules/is-data-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":233,"endOffset":947,"count":4},{"startOffset":437,"endOffset":460,"count":0},{"startOffset":494,"endOffset":596,"count":0},{"startOffset":670,"endOffset":946,"count":0}],"isBlockCoverage":true}]},{"scriptId":"562","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1},{"startOffset":139,"endOffset":578,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":142,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":581,"endOffset":688,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":690,"endOffset":759,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":761,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":867,"endOffset":957,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":1032,"endOffset":1118,"count":0}],"isBlockCoverage":false},{"functionName":"isEnum","ranges":[{"startOffset":1120,"endOffset":1212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"563","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extend-shallow/node_modules/is-extendable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"isExtendable","ranges":[{"startOffset":238,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-plain-object/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":856,"count":1}],"isBlockCoverage":true},{"functionName":"isObjectObject","ranges":[{"startOffset":213,"endOffset":337,"count":9},{"startOffset":276,"endOffset":334,"count":2}],"isBlockCoverage":true},{"functionName":"isPlainObject","ranges":[{"startOffset":356,"endOffset":854,"count":8},{"startOffset":437,"endOffset":450,"count":7},{"startOffset":450,"endOffset":543,"count":1},{"startOffset":543,"endOffset":556,"count":0},{"startOffset":556,"endOffset":652,"count":1},{"startOffset":652,"endOffset":665,"count":0},{"startOffset":665,"endOffset":781,"count":1},{"startOffset":781,"endOffset":804,"count":0},{"startOffset":804,"endOffset":853,"count":1}],"isBlockCoverage":true}]},{"scriptId":"565","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/assign-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":981,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":186,"endOffset":979,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regex-not/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1665,"count":1}],"isBlockCoverage":true},{"functionName":"toRegex","ranges":[{"startOffset":468,"endOffset":561,"count":1}],"isBlockCoverage":true},{"functionName":"toRegex.create","ranges":[{"startOffset":879,"endOffset":1607,"count":4},{"startOffset":943,"endOffset":994,"count":0},{"startOffset":1143,"endOffset":1147,"count":0},{"startOffset":1190,"endOffset":1195,"count":0},{"startOffset":1231,"endOffset":1245,"count":0},{"startOffset":1367,"endOffset":1432,"count":0},{"startOffset":1491,"endOffset":1513,"count":0},{"startOffset":1515,"endOffset":1590,"count":0}],"isBlockCoverage":true}]},{"scriptId":"567","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/array-unique/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":829,"count":1}],"isBlockCoverage":true},{"functionName":"unique","ranges":[{"startOffset":187,"endOffset":510,"count":0}],"isBlockCoverage":false},{"functionName":"uniqueImmutable","ranges":[{"startOffset":540,"endOffset":827,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-extendable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":331,"count":1}],"isBlockCoverage":true},{"functionName":"isExtendable","ranges":[{"startOffset":184,"endOffset":329,"count":15},{"startOffset":297,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"570","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/lib/compilers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6894,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":65,"endOffset":5226,"count":0}],"isBlockCoverage":false},{"functionName":"multiply","ranges":[{"startOffset":5290,"endOffset":5394,"count":0}],"isBlockCoverage":false},{"functionName":"isEscaped","ranges":[{"startOffset":5441,"endOffset":5501,"count":0}],"isBlockCoverage":false},{"functionName":"isOptimized","ranges":[{"startOffset":5778,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteralBrace","ranges":[{"startOffset":6071,"endOffset":6176,"count":0}],"isBlockCoverage":false},{"functionName":"noInner","ranges":[{"startOffset":6274,"endOffset":6539,"count":0}],"isBlockCoverage":false},{"functionName":"isType","ranges":[{"startOffset":6627,"endOffset":6718,"count":0}],"isBlockCoverage":false},{"functionName":"hasQueue","ranges":[{"startOffset":6809,"endOffset":6893,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7031,"count":1}],"isBlockCoverage":true},{"functionName":"utils.define","ranges":[{"startOffset":378,"endOffset":529,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isEmptySets","ranges":[{"startOffset":629,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isQuotedString","ranges":[{"startOffset":784,"endOffset":939,"count":0}],"isBlockCoverage":false},{"functionName":"utils.createKey","ranges":[{"startOffset":1132,"endOffset":1408,"count":0}],"isBlockCoverage":false},{"functionName":"utils.createOptions","ranges":[{"startOffset":1463,"endOffset":1771,"count":0}],"isBlockCoverage":false},{"functionName":"utils.join","ranges":[{"startOffset":1839,"endOffset":2501,"count":0}],"isBlockCoverage":false},{"functionName":"utils.split","ranges":[{"startOffset":2576,"endOffset":2856,"count":0}],"isBlockCoverage":false},{"functionName":"utils.expand","ranges":[{"startOffset":3009,"endOffset":4772,"count":0}],"isBlockCoverage":false},{"functionName":"utils.escapeBrackets","ranges":[{"startOffset":4951,"endOffset":6057,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isQuantifier","ranges":[{"startOffset":6177,"endOffset":6242,"count":0}],"isBlockCoverage":false},{"functionName":"utils.stringifyArray","ranges":[{"startOffset":6324,"endOffset":6383,"count":0}],"isBlockCoverage":false},{"functionName":"utils.arrayify","ranges":[{"startOffset":6459,"endOffset":6600,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isString","ranges":[{"startOffset":6707,"endOffset":6773,"count":0}],"isBlockCoverage":false},{"functionName":"utils.last","ranges":[{"startOffset":6876,"endOffset":6933,"count":0}],"isBlockCoverage":false},{"functionName":"utils.escapeRegex","ranges":[{"startOffset":6956,"endOffset":7029,"count":0}],"isBlockCoverage":false}]},{"scriptId":"572","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/split-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3658,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":228,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"getClosingQuote","ranges":[{"startOffset":3084,"endOffset":3268,"count":0}],"isBlockCoverage":false},{"functionName":"keepQuotes","ranges":[{"startOffset":3270,"endOffset":3459,"count":0}],"isBlockCoverage":false},{"functionName":"keepEscaping","ranges":[{"startOffset":3461,"endOffset":3657,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/arr-flatten/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":418,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":227,"count":0}],"isBlockCoverage":false},{"functionName":"flat","ranges":[{"startOffset":230,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fill-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5061,"count":1}],"isBlockCoverage":true},{"functionName":"fillRange","ranges":[{"startOffset":659,"endOffset":2245,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2247,"endOffset":3418,"count":0}],"isBlockCoverage":false},{"functionName":"toRange","ranges":[{"startOffset":3420,"endOffset":3775,"count":0}],"isBlockCoverage":false},{"functionName":"toSequence","ranges":[{"startOffset":3777,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"zeros","ranges":[{"startOffset":4168,"endOffset":4557,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":4559,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":4614,"endOffset":4669,"count":0}],"isBlockCoverage":false},{"functionName":"isValid","ranges":[{"startOffset":4671,"endOffset":4806,"count":0}],"isBlockCoverage":false},{"functionName":"isValidLetter","ranges":[{"startOffset":4808,"endOffset":4910,"count":0}],"isBlockCoverage":false},{"functionName":"isValidNumber","ranges":[{"startOffset":4912,"endOffset":4980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-number/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":420,"count":1}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":215,"endOffset":418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"576","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-number/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-buffer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":698,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":265,"endOffset":363,"count":61}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":365,"endOffset":502,"count":61},{"startOffset":468,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"isSlowBuffer","ranges":[{"startOffset":555,"endOffset":697,"count":61},{"startOffset":632,"endOffset":666,"count":0},{"startOffset":667,"endOffset":695,"count":0}],"isBlockCoverage":true}]},{"scriptId":"578","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fill-range/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/repeat-string/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":637,"endOffset":1212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/to-regex-range/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6447,"count":1}],"isBlockCoverage":true},{"functionName":"toRegexRange","ranges":[{"startOffset":268,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"siftPatterns","ranges":[{"startOffset":1872,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"splitToRanges","ranges":[{"startOffset":2245,"endOffset":2759,"count":0}],"isBlockCoverage":false},{"functionName":"rangeToPattern","ranges":[{"startOffset":2881,"endOffset":3597,"count":0}],"isBlockCoverage":false},{"functionName":"splitToPatterns","ranges":[{"startOffset":3599,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"filterPatterns","ranges":[{"startOffset":4415,"endOffset":5078,"count":0}],"isBlockCoverage":false},{"functionName":"zip","ranges":[{"startOffset":5148,"endOffset":5246,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5248,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":5313,"endOffset":5400,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":5402,"endOffset":5555,"count":0}],"isBlockCoverage":false},{"functionName":"countNines","ranges":[{"startOffset":5557,"endOffset":5646,"count":0}],"isBlockCoverage":false},{"functionName":"countZeros","ranges":[{"startOffset":5648,"endOffset":5739,"count":0}],"isBlockCoverage":false},{"functionName":"toQuantifier","ranges":[{"startOffset":5741,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"toCharacterClass","ranges":[{"startOffset":5946,"endOffset":6038,"count":0}],"isBlockCoverage":false},{"functionName":"padding","ranges":[{"startOffset":6040,"endOffset":6097,"count":0}],"isBlockCoverage":false},{"functionName":"padZeros","ranges":[{"startOffset":6099,"endOffset":6380,"count":0}],"isBlockCoverage":false}]},{"scriptId":"581","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/repeat-element/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":194,"endOffset":323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"582","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/lib/parsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8031,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":131,"endOffset":6666,"count":0}],"isBlockCoverage":false},{"functionName":"isExtglobChar","ranges":[{"startOffset":6736,"endOffset":6843,"count":0}],"isBlockCoverage":false},{"functionName":"concatNodes","ranges":[{"startOffset":7029,"endOffset":8030,"count":0}],"isBlockCoverage":false}]},{"scriptId":"583","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11214,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":551,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"Node.isNode","ranges":[{"startOffset":1396,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"Node.define","ranges":[{"startOffset":1834,"endOffset":1899,"count":0}],"isBlockCoverage":false},{"functionName":"Node.isEmpty","ranges":[{"startOffset":2414,"endOffset":2464,"count":0}],"isBlockCoverage":false},{"functionName":"Node.push","ranges":[{"startOffset":2811,"endOffset":2999,"count":0}],"isBlockCoverage":false},{"functionName":"Node.unshift","ranges":[{"startOffset":3355,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"Node.pop","ranges":[{"startOffset":3984,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"Node.shift","ranges":[{"startOffset":4484,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"Node.remove","ranges":[{"startOffset":4746,"endOffset":4991,"count":0}],"isBlockCoverage":false},{"functionName":"Node.find","ranges":[{"startOffset":5548,"endOffset":5609,"count":0}],"isBlockCoverage":false},{"functionName":"Node.isType","ranges":[{"startOffset":5970,"endOffset":6023,"count":0}],"isBlockCoverage":false},{"functionName":"Node.hasType","ranges":[{"startOffset":6452,"endOffset":6506,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6923,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7020,"endOffset":7087,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7642,"endOffset":7695,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7704,"endOffset":7945,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8321,"endOffset":8405,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8414,"endOffset":8557,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":8974,"endOffset":9058,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9067,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9654,"endOffset":9716,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10156,"endOffset":10227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10668,"endOffset":10793,"count":0}],"isBlockCoverage":false},{"functionName":"lazyKeys","ranges":[{"startOffset":10905,"endOffset":11010,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":11082,"endOffset":11153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"584","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-node/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":240,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"585","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-node/node_modules/is-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"isDescriptor","ranges":[{"startOffset":319,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-node/node_modules/is-accessor-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessorDescriptor","ranges":[{"startOffset":368,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1313,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-node/node_modules/is-data-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":233,"endOffset":947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"588","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-util/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26801,"count":1}],"isBlockCoverage":true},{"functionName":"utils.isNode","ranges":[{"startOffset":433,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"utils.noop","ranges":[{"startOffset":786,"endOffset":830,"count":0}],"isBlockCoverage":false},{"functionName":"utils.identity","ranges":[{"startOffset":1115,"endOffset":1165,"count":0}],"isBlockCoverage":false},{"functionName":"utils.append","ranges":[{"startOffset":1743,"endOffset":1820,"count":0}],"isBlockCoverage":false},{"functionName":"utils.toNoop","ranges":[{"startOffset":2480,"endOffset":2625,"count":0}],"isBlockCoverage":false},{"functionName":"utils.visit","ranges":[{"startOffset":3193,"endOffset":3412,"count":0}],"isBlockCoverage":false},{"functionName":"utils.mapVisit","ranges":[{"startOffset":3969,"endOffset":4294,"count":0}],"isBlockCoverage":false},{"functionName":"utils.addOpen","ranges":[{"startOffset":5187,"endOffset":5752,"count":0}],"isBlockCoverage":false},{"functionName":"utils.addClose","ranges":[{"startOffset":6697,"endOffset":7249,"count":0}],"isBlockCoverage":false},{"functionName":"utils.wrapNodes","ranges":[{"startOffset":7631,"endOffset":7901,"count":0}],"isBlockCoverage":false},{"functionName":"utils.pushNode","ranges":[{"startOffset":8374,"endOffset":8668,"count":0}],"isBlockCoverage":false},{"functionName":"utils.unshiftNode","ranges":[{"startOffset":9120,"endOffset":9402,"count":0}],"isBlockCoverage":false},{"functionName":"utils.popNode","ranges":[{"startOffset":10111,"endOffset":10310,"count":0}],"isBlockCoverage":false},{"functionName":"utils.shiftNode","ranges":[{"startOffset":11026,"endOffset":11231,"count":0}],"isBlockCoverage":false},{"functionName":"utils.removeNode","ranges":[{"startOffset":11895,"endOffset":12308,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isType","ranges":[{"startOffset":12779,"endOffset":13314,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasType","ranges":[{"startOffset":13900,"endOffset":14183,"count":0}],"isBlockCoverage":false},{"functionName":"utils.firstOfType","ranges":[{"startOffset":14705,"endOffset":14863,"count":0}],"isBlockCoverage":false},{"functionName":"utils.findNode","ranges":[{"startOffset":15514,"endOffset":15694,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isOpen","ranges":[{"startOffset":16206,"endOffset":16339,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isClose","ranges":[{"startOffset":16855,"endOffset":16989,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasOpen","ranges":[{"startOffset":17466,"endOffset":17716,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasClose","ranges":[{"startOffset":18199,"endOffset":18466,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasOpenAndClose","ranges":[{"startOffset":19132,"endOffset":19204,"count":0}],"isBlockCoverage":false},{"functionName":"utils.addType","ranges":[{"startOffset":19801,"endOffset":20260,"count":0}],"isBlockCoverage":false},{"functionName":"utils.removeType","ranges":[{"startOffset":20918,"endOffset":21252,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isEmpty","ranges":[{"startOffset":21661,"endOffset":22206,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isInsideType","ranges":[{"startOffset":22777,"endOffset":23093,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isInside","ranges":[{"startOffset":23807,"endOffset":24722,"count":0}],"isBlockCoverage":false},{"functionName":"utils.last","ranges":[{"startOffset":24935,"endOffset":24992,"count":0}],"isBlockCoverage":false},{"functionName":"utils.arrayify","ranges":[{"startOffset":25292,"endOffset":25440,"count":0}],"isBlockCoverage":false},{"functionName":"utils.stringify","ranges":[{"startOffset":25669,"endOffset":25726,"count":0}],"isBlockCoverage":false},{"functionName":"utils.trim","ranges":[{"startOffset":25913,"endOffset":25982,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":26029,"endOffset":26090,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":26135,"endOffset":26195,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":26242,"endOffset":26306,"count":0}],"isBlockCoverage":false},{"functionName":"isArray","ranges":[{"startOffset":26351,"endOffset":26405,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":26492,"endOffset":26657,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":26729,"endOffset":26800,"count":0}],"isBlockCoverage":false}]},{"scriptId":"589","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon-util/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"590","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/braces/lib/braces.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2455,"count":1}],"isBlockCoverage":true},{"functionName":"Braces","ranges":[{"startOffset":257,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"Braces.init","ranges":[{"startOffset":379,"endOffset":1594,"count":0}],"isBlockCoverage":false},{"functionName":"Braces.parse","ranges":[{"startOffset":1659,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"Braces.compile","ranges":[{"startOffset":1885,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"Braces.expand","ranges":[{"startOffset":2115,"endOffset":2229,"count":0}],"isBlockCoverage":false},{"functionName":"Braces.optimize","ranges":[{"startOffset":2281,"endOffset":2399,"count":0}],"isBlockCoverage":false}]},{"scriptId":"591","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3985,"count":1}],"isBlockCoverage":true},{"functionName":"Snapdragon","ranges":[{"startOffset":418,"endOffset":975,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":691,"endOffset":747,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":807,"endOffset":859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":917,"endOffset":967,"count":0}],"isBlockCoverage":false},{"functionName":"Snapdragon.capture","ranges":[{"startOffset":1737,"endOffset":1811,"count":0}],"isBlockCoverage":false},{"functionName":"Snapdragon.use","ranges":[{"startOffset":2189,"endOffset":2243,"count":7}],"isBlockCoverage":true},{"functionName":"Snapdragon.parse","ranges":[{"startOffset":2679,"endOffset":2916,"count":1}],"isBlockCoverage":true},{"functionName":"Snapdragon.compile","ranges":[{"startOffset":3556,"endOffset":3809,"count":1}],"isBlockCoverage":true}]},{"scriptId":"592","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/base/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12118,"count":1}],"isBlockCoverage":true},{"functionName":"namespace","ranges":[{"startOffset":373,"endOffset":11953,"count":1},{"startOffset":419,"endOffset":446,"count":0}],"isBlockCoverage":true},{"functionName":"Base","ranges":[{"startOffset":1396,"endOffset":1600,"count":1},{"startOffset":1462,"endOffset":1509,"count":0}],"isBlockCoverage":true},{"functionName":"Base.initBase","ranges":[{"startOffset":1837,"endOffset":2214,"count":1},{"startOffset":2002,"endOffset":2018,"count":0},{"startOffset":2138,"endOffset":2178,"count":0}],"isBlockCoverage":true},{"functionName":"Base.is","ranges":[{"startOffset":2729,"endOffset":2978,"count":1},{"startOffset":2780,"endOffset":2846,"count":0}],"isBlockCoverage":true},{"functionName":"Base.isRegistered","ranges":[{"startOffset":4054,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"Base.use","ranges":[{"startOffset":4832,"endOffset":4892,"count":0}],"isBlockCoverage":false},{"functionName":"Base.define","ranges":[{"startOffset":5439,"endOffset":5579,"count":5},{"startOffset":5483,"endOffset":5530,"count":0}],"isBlockCoverage":true},{"functionName":"Base.mixin","ranges":[{"startOffset":6100,"endOffset":6172,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7654,"endOffset":7724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8200,"endOffset":8253,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8623,"endOffset":8756,"count":1},{"startOffset":8701,"endOffset":8735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9474,"endOffset":10021,"count":1},{"startOffset":9549,"endOffset":9554,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9583,"endOffset":9758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9789,"endOffset":9886,"count":0}],"isBlockCoverage":false},{"functionName":"Ctor.mixin","ranges":[{"startOffset":9917,"endOffset":9999,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10682,"endOffset":10845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11275,"endOffset":11366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"593","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/base/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":240,"endOffset":757,"count":14},{"startOffset":312,"endOffset":340,"count":9},{"startOffset":342,"endOffset":407,"count":0},{"startOffset":441,"endOffset":506,"count":0},{"startOffset":532,"endOffset":565,"count":0},{"startOffset":567,"endOffset":622,"count":0}],"isBlockCoverage":true}]},{"scriptId":"594","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/base/node_modules/is-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"isDescriptor","ranges":[{"startOffset":319,"endOffset":496,"count":14},{"startOffset":385,"endOffset":408,"count":13},{"startOffset":408,"endOffset":429,"count":1},{"startOffset":429,"endOffset":467,"count":0},{"startOffset":467,"endOffset":495,"count":1}],"isBlockCoverage":true}]},{"scriptId":"595","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/base/node_modules/is-accessor-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessorDescriptor","ranges":[{"startOffset":368,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1313,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"596","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/base/node_modules/is-data-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":233,"endOffset":947,"count":1},{"startOffset":437,"endOffset":460,"count":0},{"startOffset":494,"endOffset":596,"count":0},{"startOffset":670,"endOffset":946,"count":0}],"isBlockCoverage":true}]},{"scriptId":"597","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/cache-base/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5753,"count":1}],"isBlockCoverage":true},{"functionName":"namespace","ranges":[{"startOffset":757,"endOffset":5501,"count":1}],"isBlockCoverage":true},{"functionName":"Cache","ranges":[{"startOffset":1117,"endOffset":1235,"count":1},{"startOffset":1155,"endOffset":1185,"count":0},{"startOffset":1201,"endOffset":1231,"count":0}],"isBlockCoverage":true},{"functionName":"Cache.set","ranges":[{"startOffset":1959,"endOffset":2264,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.union","ranges":[{"startOffset":2677,"endOffset":2910,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.get","ranges":[{"startOffset":3424,"endOffset":3591,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.has","ranges":[{"startOffset":3964,"endOffset":4173,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.del","ranges":[{"startOffset":4615,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.clear","ranges":[{"startOffset":4951,"endOffset":5012,"count":0}],"isBlockCoverage":false},{"functionName":"Cache.visit","ranges":[{"startOffset":5407,"endOffset":5481,"count":0}],"isBlockCoverage":false},{"functionName":"arrayify","ranges":[{"startOffset":5536,"endOffset":5618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"598","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/component-emitter/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3468,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":172,"endOffset":229,"count":2}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":346,"endOffset":470,"count":2},{"startOffset":406,"endOffset":452,"count":20}],"isBlockCoverage":true},{"functionName":"Emitter.on.Emitter.addEventListener","ranges":[{"startOffset":683,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"Emitter.once","ranges":[{"startOffset":1084,"endOffset":1245,"count":0}],"isBlockCoverage":false},{"functionName":"Emitter.off.Emitter.removeListener.Emitter.removeAllListeners.Emitter.removeEventListener","ranges":[{"startOffset":1571,"endOffset":2380,"count":0}],"isBlockCoverage":false},{"functionName":"Emitter.emit","ranges":[{"startOffset":2535,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"Emitter.listeners","ranges":[{"startOffset":3128,"endOffset":3237,"count":0}],"isBlockCoverage":false},{"functionName":"Emitter.hasListeners","ranges":[{"startOffset":3403,"endOffset":3465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"599","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/collection-visit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":709,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":271,"endOffset":707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"600","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object-visit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":806,"count":1}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":225,"endOffset":804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"601","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/map-visit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"mapVisit","ranges":[{"startOffset":340,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":843,"endOffset":966,"count":0}],"isBlockCoverage":false}]},{"scriptId":"602","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/to-object-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":663,"count":1}],"isBlockCoverage":true},{"functionName":"toPath","ranges":[{"startOffset":220,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":345,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"603","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/to-object-path/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":0}],"isBlockCoverage":false}]},{"scriptId":"604","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/union-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"unionValue","ranges":[{"startOffset":172,"endOffset":535,"count":0}],"isBlockCoverage":false},{"functionName":"arrayify","ranges":[{"startOffset":538,"endOffset":699,"count":0}],"isBlockCoverage":false}]},{"scriptId":"605","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/arr-union/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"union","ranges":[{"startOffset":32,"endOffset":525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"606","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/get-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1072,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":166,"endOffset":838,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":841,"endOffset":948,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":950,"endOffset":1071,"count":0}],"isBlockCoverage":false}]},{"scriptId":"607","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/set-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1188,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":354,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"isValidKey","ranges":[{"startOffset":1081,"endOffset":1187,"count":0}],"isBlockCoverage":false}]},{"scriptId":"608","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/set-value/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"609","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unset-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":756,"count":1}],"isBlockCoverage":true},{"functionName":"unset","ranges":[{"startOffset":255,"endOffset":754,"count":0}],"isBlockCoverage":false}]},{"scriptId":"610","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unset-value/node_modules/has-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":289,"endOffset":424,"count":0}],"isBlockCoverage":false}]},{"scriptId":"611","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unset-value/node_modules/has-value/node_modules/isobject/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":214,"endOffset":315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"612","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/isarray/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1},{"startOffset":60,"endOffset":130,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":63,"endOffset":130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"613","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unset-value/node_modules/has-values/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"hasValue","ranges":[{"startOffset":183,"endOffset":613,"count":0}],"isBlockCoverage":false}]},{"scriptId":"614","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-value/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":289,"endOffset":378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"615","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-values/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1245,"count":1}],"isBlockCoverage":true},{"functionName":"hasValue","ranges":[{"startOffset":260,"endOffset":1243,"count":0}],"isBlockCoverage":false}]},{"scriptId":"616","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-values/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2470,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"617","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mixin-deep/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"mixinDeep","ranges":[{"startOffset":92,"endOffset":302,"count":1},{"startOffset":187,"endOffset":283,"count":2},{"startOffset":240,"endOffset":279,"count":1}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":430,"endOffset":624,"count":6},{"startOffset":480,"endOffset":497,"count":0},{"startOffset":542,"endOffset":558,"count":0},{"startOffset":560,"endOffset":590,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":731,"endOffset":808,"count":8},{"startOffset":783,"endOffset":805,"count":1}],"isBlockCoverage":true},{"functionName":"isValidKey","ranges":[{"startOffset":940,"endOffset":1046,"count":6}],"isBlockCoverage":true}]},{"scriptId":"618","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mixin-deep/node_modules/is-extendable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"isExtendable","ranges":[{"startOffset":238,"endOffset":348,"count":8},{"startOffset":295,"endOffset":323,"count":7},{"startOffset":324,"endOffset":345,"count":7}],"isBlockCoverage":true}]},{"scriptId":"619","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/for-in/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":319,"count":1}],"isBlockCoverage":true},{"functionName":"forIn","ranges":[{"startOffset":175,"endOffset":317,"count":1},{"startOffset":233,"endOffset":315,"count":6},{"startOffset":291,"endOffset":311,"count":0}],"isBlockCoverage":true}]},{"scriptId":"620","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pascalcase/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"pascalcase","ranges":[{"startOffset":146,"endOffset":555,"count":1},{"startOffset":204,"endOffset":256,"count":0},{"startOffset":321,"endOffset":350,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":500,"endOffset":551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"621","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/class-utils/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8174,"count":1}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":305,"endOffset":381,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":773,"endOffset":1264,"count":0}],"isBlockCoverage":false},{"functionName":"hasAll","ranges":[{"startOffset":1645,"endOffset":1836,"count":0}],"isBlockCoverage":false},{"functionName":"arrayify","ranges":[{"startOffset":2069,"endOffset":2151,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":2181,"endOffset":2210,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2290,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"hasConstructor","ranges":[{"startOffset":2590,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"nativeKeys","ranges":[{"startOffset":3136,"endOffset":3311,"count":0}],"isBlockCoverage":false},{"functionName":"getDescriptor","ranges":[{"startOffset":3890,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"copyDescriptor","ranges":[{"startOffset":4589,"endOffset":5054,"count":0}],"isBlockCoverage":false},{"functionName":"copy","ranges":[{"startOffset":5333,"endOffset":5975,"count":0}],"isBlockCoverage":false},{"functionName":"inherit","ranges":[{"startOffset":6255,"endOffset":6772,"count":0}],"isBlockCoverage":false},{"functionName":"cu.extend","ranges":[{"startOffset":7501,"endOffset":7616,"count":1}],"isBlockCoverage":true},{"functionName":"cu.bubble","ranges":[{"startOffset":7806,"endOffset":8172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"622","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/class-utils/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"623","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"isDescriptor","ranges":[{"startOffset":319,"endOffset":496,"count":182},{"startOffset":385,"endOffset":408,"count":121},{"startOffset":408,"endOffset":429,"count":61},{"startOffset":429,"endOffset":467,"count":3},{"startOffset":467,"endOffset":495,"count":58}],"isBlockCoverage":true}]},{"scriptId":"624","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-descriptor/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3149,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":167,"endOffset":2879,"count":182},{"startOffset":261,"endOffset":290,"count":0},{"startOffset":311,"endOffset":335,"count":0},{"startOffset":399,"endOffset":426,"count":0},{"startOffset":451,"endOffset":475,"count":72},{"startOffset":477,"endOffset":503,"count":110},{"startOffset":503,"endOffset":552,"count":72},{"startOffset":554,"endOffset":580,"count":0},{"startOffset":580,"endOffset":623,"count":72},{"startOffset":623,"endOffset":649,"count":61},{"startOffset":651,"endOffset":826,"count":11},{"startOffset":758,"endOffset":799,"count":0},{"startOffset":826,"endOffset":903,"count":61},{"startOffset":905,"endOffset":930,"count":0},{"startOffset":930,"endOffset":1031,"count":61},{"startOffset":1031,"endOffset":1057,"count":0},{"startOffset":1057,"endOffset":1085,"count":61},{"startOffset":1085,"endOffset":1109,"count":0},{"startOffset":1109,"endOffset":1194,"count":61},{"startOffset":1194,"endOffset":1220,"count":0},{"startOffset":1220,"endOffset":1253,"count":61},{"startOffset":1253,"endOffset":1277,"count":0},{"startOffset":1277,"endOffset":1315,"count":61},{"startOffset":1315,"endOffset":1344,"count":0},{"startOffset":1344,"endOffset":1378,"count":61},{"startOffset":1378,"endOffset":1403,"count":0},{"startOffset":1403,"endOffset":1439,"count":61},{"startOffset":1439,"endOffset":1466,"count":0},{"startOffset":1466,"endOffset":1501,"count":61},{"startOffset":1501,"endOffset":1527,"count":0},{"startOffset":1527,"endOffset":1597,"count":61},{"startOffset":1597,"endOffset":1620,"count":0},{"startOffset":1620,"endOffset":1656,"count":61},{"startOffset":1656,"endOffset":1683,"count":0},{"startOffset":1683,"endOffset":1715,"count":61},{"startOffset":1715,"endOffset":1738,"count":0},{"startOffset":1738,"endOffset":1774,"count":61},{"startOffset":1774,"endOffset":1801,"count":0},{"startOffset":1801,"endOffset":1836,"count":61},{"startOffset":1836,"endOffset":1862,"count":0},{"startOffset":1862,"endOffset":1906,"count":61},{"startOffset":1906,"endOffset":1937,"count":0},{"startOffset":1937,"endOffset":1978,"count":61},{"startOffset":1978,"endOffset":2009,"count":0},{"startOffset":2009,"endOffset":2053,"count":61},{"startOffset":2053,"endOffset":2087,"count":0},{"startOffset":2087,"endOffset":2130,"count":61},{"startOffset":2130,"endOffset":2163,"count":0},{"startOffset":2163,"endOffset":2222,"count":61},{"startOffset":2222,"endOffset":2251,"count":0},{"startOffset":2251,"endOffset":2290,"count":61},{"startOffset":2290,"endOffset":2320,"count":0},{"startOffset":2320,"endOffset":2366,"count":61},{"startOffset":2366,"endOffset":2403,"count":0},{"startOffset":2403,"endOffset":2442,"count":61},{"startOffset":2442,"endOffset":2472,"count":0},{"startOffset":2472,"endOffset":2512,"count":61},{"startOffset":2512,"endOffset":2543,"count":0},{"startOffset":2543,"endOffset":2582,"count":61},{"startOffset":2582,"endOffset":2612,"count":0},{"startOffset":2612,"endOffset":2652,"count":61},{"startOffset":2652,"endOffset":2683,"count":0},{"startOffset":2683,"endOffset":2724,"count":61},{"startOffset":2724,"endOffset":2756,"count":0},{"startOffset":2756,"endOffset":2797,"count":61},{"startOffset":2797,"endOffset":2829,"count":0},{"startOffset":2829,"endOffset":2878,"count":61}],"isBlockCoverage":true},{"functionName":"isBuffer","ranges":[{"startOffset":3005,"endOffset":3148,"count":61},{"startOffset":3113,"endOffset":3145,"count":0}],"isBlockCoverage":true}]},{"scriptId":"625","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-accessor-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1460,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessorDescriptor","ranges":[{"startOffset":363,"endOffset":1306,"count":3},{"startOffset":438,"endOffset":540,"count":0},{"startOffset":574,"endOffset":597,"count":0},{"startOffset":648,"endOffset":671,"count":0},{"startOffset":696,"endOffset":728,"count":1},{"startOffset":730,"endOffset":753,"count":2},{"startOffset":753,"endOffset":997,"count":1},{"startOffset":998,"endOffset":1032,"count":1},{"startOffset":1034,"endOffset":1057,"count":0},{"startOffset":1057,"endOffset":1082,"count":1},{"startOffset":1123,"endOffset":1146,"count":0},{"startOffset":1215,"endOffset":1285,"count":0},{"startOffset":1289,"endOffset":1305,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1308,"endOffset":1377,"count":10}],"isBlockCoverage":true}]},{"scriptId":"626","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-accessor-descriptor/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":6},{"startOffset":278,"endOffset":307,"count":0},{"startOffset":328,"endOffset":352,"count":0},{"startOffset":372,"endOffset":388,"count":5},{"startOffset":389,"endOffset":414,"count":5},{"startOffset":416,"endOffset":443,"count":1},{"startOffset":443,"endOffset":498,"count":5},{"startOffset":500,"endOffset":526,"count":0},{"startOffset":526,"endOffset":581,"count":5},{"startOffset":583,"endOffset":609,"count":0},{"startOffset":609,"endOffset":658,"count":5},{"startOffset":658,"endOffset":684,"count":3},{"startOffset":686,"endOffset":714,"count":2},{"startOffset":714,"endOffset":791,"count":3},{"startOffset":793,"endOffset":818,"count":0},{"startOffset":818,"endOffset":919,"count":3},{"startOffset":919,"endOffset":945,"count":0},{"startOffset":945,"endOffset":973,"count":3},{"startOffset":973,"endOffset":997,"count":0},{"startOffset":997,"endOffset":1086,"count":3},{"startOffset":1086,"endOffset":1112,"count":0},{"startOffset":1112,"endOffset":1145,"count":3},{"startOffset":1145,"endOffset":1169,"count":0},{"startOffset":1169,"endOffset":1207,"count":3},{"startOffset":1207,"endOffset":1236,"count":0},{"startOffset":1236,"endOffset":1270,"count":3},{"startOffset":1270,"endOffset":1295,"count":0},{"startOffset":1295,"endOffset":1330,"count":3},{"startOffset":1330,"endOffset":1356,"count":0},{"startOffset":1356,"endOffset":1426,"count":3},{"startOffset":1426,"endOffset":1449,"count":0},{"startOffset":1449,"endOffset":1485,"count":3},{"startOffset":1485,"endOffset":1512,"count":0},{"startOffset":1512,"endOffset":1544,"count":3},{"startOffset":1544,"endOffset":1567,"count":0},{"startOffset":1567,"endOffset":1603,"count":3},{"startOffset":1603,"endOffset":1630,"count":0},{"startOffset":1630,"endOffset":1665,"count":3},{"startOffset":1665,"endOffset":1691,"count":0},{"startOffset":1691,"endOffset":1748,"count":3},{"startOffset":1748,"endOffset":1777,"count":0},{"startOffset":1777,"endOffset":1816,"count":3},{"startOffset":1816,"endOffset":1846,"count":0},{"startOffset":1846,"endOffset":1892,"count":3},{"startOffset":1892,"endOffset":1929,"count":0},{"startOffset":1929,"endOffset":1968,"count":3},{"startOffset":1968,"endOffset":1998,"count":0},{"startOffset":1998,"endOffset":2038,"count":3},{"startOffset":2038,"endOffset":2069,"count":0},{"startOffset":2069,"endOffset":2108,"count":3},{"startOffset":2108,"endOffset":2138,"count":0},{"startOffset":2138,"endOffset":2178,"count":3},{"startOffset":2178,"endOffset":2209,"count":0},{"startOffset":2209,"endOffset":2250,"count":3},{"startOffset":2250,"endOffset":2282,"count":0},{"startOffset":2282,"endOffset":2323,"count":3},{"startOffset":2323,"endOffset":2355,"count":0},{"startOffset":2355,"endOffset":2404,"count":3}],"isBlockCoverage":true}]},{"scriptId":"627","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-data-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":988,"count":1}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":332,"endOffset":913,"count":58},{"startOffset":403,"endOffset":426,"count":0},{"startOffset":460,"endOffset":562,"count":0},{"startOffset":636,"endOffset":912,"count":0}],"isBlockCoverage":true}]},{"scriptId":"628","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-data-descriptor/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":58},{"startOffset":278,"endOffset":307,"count":0},{"startOffset":328,"endOffset":352,"count":0},{"startOffset":416,"endOffset":443,"count":0},{"startOffset":500,"endOffset":526,"count":0},{"startOffset":583,"endOffset":609,"count":0},{"startOffset":686,"endOffset":714,"count":0},{"startOffset":793,"endOffset":818,"count":0},{"startOffset":919,"endOffset":945,"count":0},{"startOffset":973,"endOffset":997,"count":0},{"startOffset":1086,"endOffset":1112,"count":0},{"startOffset":1145,"endOffset":1169,"count":0},{"startOffset":1207,"endOffset":1236,"count":0},{"startOffset":1270,"endOffset":1295,"count":0},{"startOffset":1330,"endOffset":1356,"count":0},{"startOffset":1426,"endOffset":1449,"count":0},{"startOffset":1485,"endOffset":1512,"count":0},{"startOffset":1544,"endOffset":1567,"count":0},{"startOffset":1603,"endOffset":1630,"count":0},{"startOffset":1665,"endOffset":1691,"count":0},{"startOffset":1748,"endOffset":1777,"count":0},{"startOffset":1816,"endOffset":1846,"count":0},{"startOffset":1892,"endOffset":1929,"count":0},{"startOffset":1968,"endOffset":1998,"count":0},{"startOffset":2038,"endOffset":2069,"count":0},{"startOffset":2108,"endOffset":2138,"count":0},{"startOffset":2178,"endOffset":2209,"count":0},{"startOffset":2250,"endOffset":2282,"count":0},{"startOffset":2323,"endOffset":2355,"count":0}],"isBlockCoverage":true}]},{"scriptId":"629","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/static-extend/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2271,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":1337,"endOffset":2215,"count":2},{"startOffset":1409,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1487,"endOffset":2212,"count":1},{"startOffset":1547,"endOffset":1616,"count":0},{"startOffset":1754,"endOffset":1871,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1999,"endOffset":2012,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2025,"endOffset":2078,"count":0}],"isBlockCoverage":false}]},{"scriptId":"630","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object-copy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3417,"count":1}],"isBlockCoverage":true},{"functionName":"copy","ranges":[{"startOffset":586,"endOffset":1190,"count":1},{"startOffset":655,"endOffset":731,"count":0},{"startOffset":759,"endOffset":835,"count":0},{"startOffset":977,"endOffset":1188,"count":22},{"startOffset":1030,"endOffset":1184,"count":11},{"startOffset":1110,"endOffset":1128,"count":7},{"startOffset":1130,"endOffset":1184,"count":7}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":1261,"endOffset":1351,"count":32}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":1709,"endOffset":2188,"count":29},{"startOffset":1803,"endOffset":1965,"count":0},{"startOffset":2072,"endOffset":2102,"count":11},{"startOffset":2108,"endOffset":2130,"count":18},{"startOffset":2130,"endOffset":2187,"count":0}],"isBlockCoverage":true},{"functionName":"arrayify","ranges":[{"startOffset":2385,"endOffset":2467,"count":30},{"startOffset":2423,"endOffset":2459,"count":29},{"startOffset":2445,"endOffset":2450,"count":0},{"startOffset":2460,"endOffset":2464,"count":1}],"isBlockCoverage":true},{"functionName":"hasConstructor","ranges":[{"startOffset":2685,"endOffset":2783,"count":1}],"isBlockCoverage":true},{"functionName":"nativeKeys","ranges":[{"startOffset":3190,"endOffset":3299,"count":1},{"startOffset":3245,"endOffset":3255,"count":0}],"isBlockCoverage":true}]},{"scriptId":"631","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object-copy/node_modules/kind-of/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2407,"count":1}],"isBlockCoverage":true},{"functionName":"kindOf","ranges":[{"startOffset":204,"endOffset":2405,"count":32},{"startOffset":278,"endOffset":307,"count":0},{"startOffset":328,"endOffset":352,"count":0},{"startOffset":416,"endOffset":443,"count":0},{"startOffset":500,"endOffset":526,"count":0},{"startOffset":583,"endOffset":609,"count":0},{"startOffset":658,"endOffset":684,"count":29},{"startOffset":686,"endOffset":714,"count":3},{"startOffset":714,"endOffset":791,"count":29},{"startOffset":793,"endOffset":818,"count":29},{"startOffset":818,"endOffset":2404,"count":0}],"isBlockCoverage":true}]},{"scriptId":"632","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/copy-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"copyDescriptor","ranges":[{"startOffset":1052,"endOffset":1863,"count":7},{"startOffset":1169,"endOffset":1235,"count":0},{"startOffset":1297,"endOffset":1374,"count":0},{"startOffset":1436,"endOffset":1503,"count":0},{"startOffset":1588,"endOffset":1649,"count":0},{"startOffset":1678,"endOffset":1746,"count":0}],"isBlockCoverage":true},{"functionName":"isObject","ranges":[{"startOffset":1866,"endOffset":1946,"count":21}],"isBlockCoverage":true}]},{"scriptId":"633","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object-copy/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":751,"count":11},{"startOffset":336,"endOffset":401,"count":0},{"startOffset":435,"endOffset":500,"count":0},{"startOffset":526,"endOffset":559,"count":0},{"startOffset":561,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"634","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/static-extend/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":751,"count":1},{"startOffset":306,"endOffset":334,"count":0},{"startOffset":336,"endOffset":401,"count":0},{"startOffset":435,"endOffset":500,"count":0},{"startOffset":543,"endOffset":558,"count":0},{"startOffset":616,"endOffset":750,"count":0}],"isBlockCoverage":true}]},{"scriptId":"635","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":751,"count":170},{"startOffset":306,"endOffset":334,"count":0},{"startOffset":336,"endOffset":401,"count":0},{"startOffset":435,"endOffset":500,"count":0},{"startOffset":526,"endOffset":559,"count":0},{"startOffset":561,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"636","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/lib/compiler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3591,"count":1}],"isBlockCoverage":true},{"functionName":"Compiler","ranges":[{"startOffset":259,"endOffset":715,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":539,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":561,"endOffset":619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":640,"endOffset":698,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":921,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":1638,"endOffset":1707,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":1752,"endOffset":1817,"count":28}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1887,"endOffset":1959,"count":41}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2008,"endOffset":2061,"count":0}],"isBlockCoverage":false},{"functionName":"prev","ranges":[{"startOffset":2117,"endOffset":2210,"count":13},{"startOffset":2178,"endOffset":2205,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":2262,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":2399,"endOffset":2652,"count":28},{"startOffset":2519,"endOffset":2606,"count":0}],"isBlockCoverage":true},{"functionName":"mapVisit","ranges":[{"startOffset":2718,"endOffset":2963,"count":1},{"startOffset":2767,"endOffset":2822,"count":0},{"startOffset":2893,"endOffset":2942,"count":28}],"isBlockCoverage":true},{"functionName":"compile","ranges":[{"startOffset":3010,"endOffset":3529,"count":1},{"startOffset":3226,"endOffset":3472,"count":0}],"isBlockCoverage":true}]},{"scriptId":"637","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/use/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3487,"count":1}],"isBlockCoverage":true},{"functionName":"base","ranges":[{"startOffset":169,"endOffset":3256,"count":2},{"startOffset":220,"endOffset":248,"count":0},{"startOffset":250,"endOffset":314,"count":0},{"startOffset":347,"endOffset":356,"count":0},{"startOffset":406,"endOffset":417,"count":0},{"startOffset":460,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1665,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"use","ranges":[{"startOffset":2221,"endOffset":2889,"count":1},{"startOffset":2333,"endOffset":2383,"count":0},{"startOffset":2469,"endOffset":2526,"count":0},{"startOffset":2548,"endOffset":2554,"count":0},{"startOffset":2698,"endOffset":2740,"count":0},{"startOffset":2812,"endOffset":2838,"count":0},{"startOffset":2840,"endOffset":2868,"count":0}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":3102,"endOffset":3239,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":3259,"endOffset":3349,"count":4},{"startOffset":3297,"endOffset":3323,"count":2},{"startOffset":3324,"endOffset":3346,"count":2}],"isBlockCoverage":true},{"functionName":"define","ranges":[{"startOffset":3351,"endOffset":3486,"count":5}],"isBlockCoverage":true}]},{"scriptId":"638","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":263,"count":1},{"startOffset":165,"endOffset":212,"count":0}],"isBlockCoverage":true}]},{"scriptId":"639","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6015,"count":1},{"startOffset":1443,"endOffset":1650,"count":0},{"startOffset":1674,"endOffset":1690,"count":0},{"startOffset":1732,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":661,"endOffset":710,"count":237}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":719,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1474,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":1847,"endOffset":1976,"count":4},{"startOffset":1915,"endOffset":1952,"count":0}],"isBlockCoverage":true},{"functionName":"exports.formatters.o","ranges":[{"startOffset":2063,"endOffset":2244,"count":0}],"isBlockCoverage":false},{"functionName":"exports.formatters.O","ranges":[{"startOffset":2345,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"formatArgs","ranges":[{"startOffset":2522,"endOffset":2965,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3056,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3222,"endOffset":3498,"count":1},{"startOffset":3449,"endOffset":3496,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3615,"endOffset":3662,"count":1}],"isBlockCoverage":true},{"functionName":"createWritableStdioStream","ranges":[{"startOffset":3866,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":5710,"endOffset":5918,"count":4},{"startOffset":5848,"endOffset":5916,"count":0}],"isBlockCoverage":true}]},{"scriptId":"640","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/debug/src/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":818,"endOffset":1071,"count":4},{"startOffset":895,"endOffset":1003,"count":55}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1200,"endOffset":2957,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1237,"endOffset":2646,"count":2},{"startOffset":1304,"endOffset":1422,"count":0},{"startOffset":1649,"endOffset":2583,"count":0},{"startOffset":2584,"endOffset":2612,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1957,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3117,"endOffset":3657,"count":1},{"startOffset":3267,"endOffset":3279,"count":0},{"startOffset":3392,"endOffset":3651,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":3711,"endOffset":3755,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":3897,"endOffset":4206,"count":4},{"startOffset":3992,"endOffset":4062,"count":0},{"startOffset":4119,"endOffset":4188,"count":0}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":4294,"endOffset":4393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"641","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":407,"endOffset":783,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":907,"endOffset":1910,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2008,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2382,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2582,"endOffset":2763,"count":0}],"isBlockCoverage":false}]},{"scriptId":"642","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":888,"count":1}],"isBlockCoverage":true},{"functionName":"exports.unixify","ranges":[{"startOffset":280,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isString","ranges":[{"startOffset":458,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"exports.arrayify","ranges":[{"startOffset":592,"endOffset":710,"count":0}],"isBlockCoverage":false},{"functionName":"exports.last","ranges":[{"startOffset":829,"endOffset":886,"count":28}],"isBlockCoverage":true}]},{"scriptId":"643","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":6},{"startOffset":128,"endOffset":139,"count":0},{"startOffset":203,"endOffset":290,"count":9}],"isBlockCoverage":true},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":9},{"startOffset":352,"endOffset":412,"count":62}],"isBlockCoverage":true},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":62}],"isBlockCoverage":true}]},{"scriptId":"644","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"645","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14101,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":2973,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":3991,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":5869,"endOffset":8581,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9016,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":10783,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":12802,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13353,"endOffset":13856,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":13963,"endOffset":14049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"646","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"647","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"648","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10484,"count":1},{"startOffset":6430,"endOffset":6443,"count":0},{"startOffset":6607,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4737,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":5942,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5948,"endOffset":5985,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6276,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6446,"endOffset":6553,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6625,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7744,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8819,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9537,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9799,"endOffset":10400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"649","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"650","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"651","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38390,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":770,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2521,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2821,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3039,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3418,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4485,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6535,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10656,"endOffset":12847,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":13229,"endOffset":15039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15280,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":15506,"endOffset":15682,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":15930,"endOffset":19135,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":19334,"endOffset":20153,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":20308,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":22205,"endOffset":23481,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":23654,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":24137,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":26630,"endOffset":27848,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":29633,"endOffset":31107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31501,"endOffset":31765,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":32436,"endOffset":33615,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":33790,"endOffset":33961,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":34189,"endOffset":34628,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":35243,"endOffset":36153,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":36404,"endOffset":38326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"652","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"653","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"654","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13796,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6745,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7436,"endOffset":7853,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8156,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8751,"endOffset":9090,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9387,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10108,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10496,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11099,"endOffset":11218,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11359,"endOffset":13760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"655","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map-resolve/lib/source-map-resolve-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8896,"count":1}],"isBlockCoverage":true},{"functionName":"callbackAsync","ranges":[{"startOffset":246,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"parseMapToJSON","ranges":[{"startOffset":354,"endOffset":528,"count":0}],"isBlockCoverage":false},{"functionName":"readSync","ranges":[{"startOffset":530,"endOffset":720,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourceMap","ranges":[{"startOffset":724,"endOffset":1379,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourceMapSync","ranges":[{"startOffset":1381,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"base64ToBuf","ranges":[{"startOffset":2213,"endOffset":2410,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64String","ranges":[{"startOffset":2412,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourceMapHelper","ranges":[{"startOffset":2818,"endOffset":3853,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSources","ranges":[{"startOffset":3857,"endOffset":4786,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourcesSync","ranges":[{"startOffset":4788,"endOffset":5508,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSourcesHelper","ranges":[{"startOffset":5536,"endOffset":6642,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":6646,"endOffset":7925,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":7927,"endOffset":8590,"count":0}],"isBlockCoverage":false}]},{"scriptId":"656","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map-url/source-map-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":78,"endOffset":305,"count":1},{"startOffset":139,"endOffset":152,"count":0},{"startOffset":154,"endOffset":179,"count":0},{"startOffset":254,"endOffset":303,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":312,"endOffset":1189,"count":1}],"isBlockCoverage":true},{"functionName":"getFrom","ranges":[{"startOffset":685,"endOffset":800,"count":0}],"isBlockCoverage":false},{"functionName":"existsIn","ranges":[{"startOffset":817,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"removeFrom","ranges":[{"startOffset":888,"endOffset":947,"count":0}],"isBlockCoverage":false},{"functionName":"insertBefore","ranges":[{"startOffset":968,"endOffset":1182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"657","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map-resolve/lib/resolve-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"resolveUrl","ranges":[{"startOffset":26,"endOffset":189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"658","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/source-map-resolve/lib/decode-uri-component.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1}],"isBlockCoverage":true},{"functionName":"customDecodeUriComponent","ranges":[{"startOffset":58,"endOffset":230,"count":0}],"isBlockCoverage":false}]},{"scriptId":"659","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/decode-uri-component/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2226,"count":1}],"isBlockCoverage":true},{"functionName":"decodeComponents","ranges":[{"startOffset":145,"endOffset":609,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":611,"endOffset":899,"count":0}],"isBlockCoverage":false},{"functionName":"customDecodeURIComponent","ranges":[{"startOffset":901,"endOffset":1793,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1812,"endOffset":2224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"660","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/urix/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":304,"count":1}],"isBlockCoverage":true},{"functionName":"urix","ranges":[{"startOffset":121,"endOffset":277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"661","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/atob/node-atob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true},{"functionName":"atob","ranges":[{"startOffset":15,"endOffset":93,"count":0}],"isBlockCoverage":false}]},{"scriptId":"662","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/lib/parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11102,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":409,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":659,"endOffset":1332,"count":2},{"startOffset":844,"endOffset":849,"count":1},{"startOffset":883,"endOffset":888,"count":1},{"startOffset":918,"endOffset":923,"count":1},{"startOffset":951,"endOffset":956,"count":1},{"startOffset":982,"endOffset":987,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":1476,"endOffset":1946,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":2275,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"position","ranges":[{"startOffset":2418,"endOffset":2627,"count":271}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2522,"endOffset":2622,"count":29}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2766,"endOffset":2925,"count":36},{"startOffset":2828,"endOffset":2864,"count":20}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3016,"endOffset":3067,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":3214,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":3520,"endOffset":3659,"count":0}],"isBlockCoverage":false},{"functionName":"isInside","ranges":[{"startOffset":3847,"endOffset":3951,"count":52},{"startOffset":3902,"endOffset":3907,"count":0}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":4181,"endOffset":4246,"count":0}],"isBlockCoverage":false},{"functionName":"prev","ranges":[{"startOffset":4323,"endOffset":4442,"count":28},{"startOffset":4376,"endOffset":4403,"count":0}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":4513,"endOffset":4573,"count":26}],"isBlockCoverage":true},{"functionName":"updatePosition","ranges":[{"startOffset":4642,"endOffset":4876,"count":26},{"startOffset":4712,"endOffset":4738,"count":0},{"startOffset":4795,"endOffset":4804,"count":0}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":5042,"endOffset":5180,"count":269},{"startOffset":5107,"endOffset":5176,"count":26}],"isBlockCoverage":true},{"functionName":"capture","ranges":[{"startOffset":5330,"endOffset":6004,"count":36},{"startOffset":5391,"endOffset":5444,"count":31},{"startOffset":5444,"endOffset":6003,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5498,"endOffset":5970,"count":25},{"startOffset":5622,"endOffset":5630,"count":0},{"startOffset":5639,"endOffset":5969,"count":0}],"isBlockCoverage":true},{"functionName":"capturePair","ranges":[{"startOffset":6112,"endOffset":7884,"count":0}],"isBlockCoverage":false},{"functionName":"eos","ranges":[{"startOffset":7934,"endOffset":8652,"count":1},{"startOffset":7998,"endOffset":8005,"count":0},{"startOffset":8067,"endOffset":8083,"count":0},{"startOffset":8085,"endOffset":8517,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8340,"endOffset":8482,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":8724,"endOffset":9062,"count":26},{"startOffset":8856,"endOffset":9058,"count":307},{"startOffset":8918,"endOffset":9052,"count":26}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":9137,"endOffset":10378,"count":1},{"startOffset":9190,"endOffset":9245,"count":0},{"startOffset":10047,"endOffset":10055,"count":26},{"startOffset":10082,"endOffset":10104,"count":0},{"startOffset":10106,"endOffset":10230,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":9349,"endOffset":10022,"count":26},{"startOffset":9747,"endOffset":9798,"count":0},{"startOffset":9894,"endOffset":9917,"count":25},{"startOffset":9919,"endOffset":10016,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":10428,"endOffset":10594,"count":0}],"isBlockCoverage":false},{"functionName":"mapVisit","ranges":[{"startOffset":10641,"endOffset":10770,"count":0}],"isBlockCoverage":false},{"functionName":"hasOpen","ranges":[{"startOffset":10772,"endOffset":10867,"count":0}],"isBlockCoverage":false},{"functionName":"hasClose","ranges":[{"startOffset":10869,"endOffset":10975,"count":0}],"isBlockCoverage":false},{"functionName":"hasDelims","ranges":[{"startOffset":10977,"endOffset":11047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"663","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/map-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1952,"count":1}],"isBlockCoverage":true},{"functionName":"MapCache","ranges":[{"startOffset":393,"endOffset":450,"count":7}],"isBlockCoverage":true},{"functionName":"mapSet","ranges":[{"startOffset":750,"endOffset":861,"count":10}],"isBlockCoverage":true},{"functionName":"mapGet","ranges":[{"startOffset":1102,"endOffset":1189,"count":5},{"startOffset":1154,"endOffset":1165,"count":0}],"isBlockCoverage":true},{"functionName":"mapHas","ranges":[{"startOffset":1480,"endOffset":1569,"count":0}],"isBlockCoverage":false},{"functionName":"mapDelete","ranges":[{"startOffset":1870,"endOffset":1950,"count":0}],"isBlockCoverage":false}]},{"scriptId":"664","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/snapdragon/lib/position.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":112,"endOffset":318,"count":29}],"isBlockCoverage":true}]},{"scriptId":"665","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/micromatch/lib/compilers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1827,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":105,"endOffset":1235,"count":1},{"startOffset":738,"endOffset":788,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":857,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"options.star","ranges":[{"startOffset":915,"endOffset":968,"count":0}],"isBlockCoverage":false},{"functionName":"escapeExtglobs","ranges":[{"startOffset":1238,"endOffset":1826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"666","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nanomatch/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22642,"count":1}],"isBlockCoverage":true},{"functionName":"nanomatch","ranges":[{"startOffset":950,"endOffset":2087,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.match","ranges":[{"startOffset":2642,"endOffset":3775,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.isMatch","ranges":[{"startOffset":4391,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.some","ranges":[{"startOffset":5568,"endOffset":5813,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.every","ranges":[{"startOffset":6661,"endOffset":6906,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.any","ranges":[{"startOffset":7545,"endOffset":8001,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.all","ranges":[{"startOffset":8796,"endOffset":9163,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.not","ranges":[{"startOffset":9784,"endOffset":10153,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.contains","ranges":[{"startOffset":10866,"endOffset":11467,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.matchBase","ranges":[{"startOffset":11628,"endOffset":11796,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.matchKeys","ranges":[{"startOffset":12565,"endOffset":12800,"count":0}],"isBlockCoverage":false},{"functionName":"matcher","ranges":[{"startOffset":13464,"endOffset":14910,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.capture","ranges":[{"startOffset":15622,"endOffset":16040,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.makeRe","ranges":[{"startOffset":16559,"endOffset":17171,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.create","ranges":[{"startOffset":18379,"endOffset":18650,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.parse","ranges":[{"startOffset":19422,"endOffset":19848,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.compile","ranges":[{"startOffset":20659,"endOffset":20985,"count":0}],"isBlockCoverage":false},{"functionName":"nanomatch.clearCache","ranges":[{"startOffset":21100,"endOffset":21147,"count":0}],"isBlockCoverage":false},{"functionName":"compose","ranges":[{"startOffset":21297,"endOffset":21911,"count":0}],"isBlockCoverage":false},{"functionName":"memoize","ranges":[{"startOffset":22076,"endOffset":22412,"count":0}],"isBlockCoverage":false}]},{"scriptId":"667","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nanomatch/lib/compilers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8449,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":62,"endOffset":8446,"count":1},{"startOffset":8352,"endOffset":8394,"count":0},{"startOffset":8396,"endOffset":8444,"count":0}],"isBlockCoverage":true},{"functionName":"slash","ranges":[{"startOffset":95,"endOffset":335,"count":13},{"startOffset":130,"endOffset":166,"count":0},{"startOffset":168,"endOffset":203,"count":0},{"startOffset":220,"endOffset":258,"count":0},{"startOffset":260,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"star","ranges":[{"startOffset":339,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":801,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1242,"endOffset":1304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1356,"endOffset":1519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1571,"endOffset":1696,"count":1},{"startOffset":1622,"endOffset":1643,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1766,"endOffset":1828,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1848,"endOffset":2700,"count":12},{"startOffset":2078,"endOffset":2097,"count":0},{"startOffset":2099,"endOffset":2172,"count":0},{"startOffset":2199,"endOffset":2228,"count":0},{"startOffset":2296,"endOffset":2342,"count":0},{"startOffset":2421,"endOffset":2517,"count":0},{"startOffset":2569,"endOffset":2602,"count":0},{"startOffset":2604,"endOffset":2659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2763,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3478,"endOffset":3598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3662,"endOffset":4291,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4340,"endOffset":4788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4851,"endOffset":6281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6335,"endOffset":7736,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7785,"endOffset":7847,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7904,"endOffset":8269,"count":1},{"startOffset":8076,"endOffset":8100,"count":0},{"startOffset":8101,"endOffset":8125,"count":0},{"startOffset":8127,"endOffset":8227,"count":0}],"isBlockCoverage":true}]},{"scriptId":"668","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nanomatch/lib/parsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7627,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":348,"endOffset":6820,"count":1},{"startOffset":6732,"endOffset":6772,"count":0},{"startOffset":6774,"endOffset":6818,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":609,"endOffset":810,"count":26},{"startOffset":645,"endOffset":652,"count":25},{"startOffset":652,"endOffset":712,"count":1},{"startOffset":712,"endOffset":809,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":874,"endOffset":1118,"count":26},{"startOffset":923,"endOffset":930,"count":0},{"startOffset":1032,"endOffset":1102,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1183,"endOffset":1601,"count":26},{"startOffset":1285,"endOffset":1600,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1663,"endOffset":2312,"count":26},{"startOffset":1780,"endOffset":1788,"count":0},{"startOffset":1812,"endOffset":1919,"count":0},{"startOffset":1921,"endOffset":2111,"count":0},{"startOffset":2112,"endOffset":2145,"count":0},{"startOffset":2147,"endOffset":2311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2368,"endOffset":2715,"count":26},{"startOffset":2494,"endOffset":2501,"count":25},{"startOffset":2501,"endOffset":2606,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2852,"endOffset":3158,"count":25},{"startOffset":2991,"endOffset":3157,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3225,"endOffset":3944,"count":25},{"startOffset":3379,"endOffset":3435,"count":0},{"startOffset":3436,"endOffset":3444,"count":0},{"startOffset":3581,"endOffset":3943,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4002,"endOffset":4323,"count":25},{"startOffset":4183,"endOffset":4322,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4383,"endOffset":4588,"count":25},{"startOffset":4476,"endOffset":4483,"count":13},{"startOffset":4483,"endOffset":4587,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4657,"endOffset":5002,"count":13},{"startOffset":4775,"endOffset":5001,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5066,"endOffset":5299,"count":13},{"startOffset":5115,"endOffset":5122,"count":0},{"startOffset":5221,"endOffset":5298,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5417,"endOffset":6371,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6424,"endOffset":6651,"count":0}],"isBlockCoverage":false},{"functionName":"advanceTo","ranges":[{"startOffset":6877,"endOffset":7283,"count":0}],"isBlockCoverage":false},{"functionName":"createTextRegex","ranges":[{"startOffset":7315,"endOffset":7558,"count":1},{"startOffset":7365,"endOffset":7379,"count":0}],"isBlockCoverage":true}]},{"scriptId":"669","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nanomatch/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52,"count":1}],"isBlockCoverage":true}]},{"scriptId":"670","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fragment-cache/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3075,"count":1}],"isBlockCoverage":true},{"functionName":"FragmentCache","ranges":[{"startOffset":481,"endOffset":545,"count":3}],"isBlockCoverage":true},{"functionName":"cache","ranges":[{"startOffset":1003,"endOffset":1108,"count":10},{"startOffset":1059,"endOffset":1103,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1490,"endOffset":1607,"count":5}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":2131,"endOffset":2221,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2846,"endOffset":2993,"count":5},{"startOffset":2971,"endOffset":2992,"count":0}],"isBlockCoverage":true}]},{"scriptId":"671","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nanomatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8808,"count":1}],"isBlockCoverage":true},{"functionName":"utils.isEmptyString","ranges":[{"startOffset":514,"endOffset":584,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isWindows","ranges":[{"startOffset":830,"endOffset":894,"count":0}],"isBlockCoverage":false},{"functionName":"utils.last","ranges":[{"startOffset":960,"endOffset":1017,"count":0}],"isBlockCoverage":false},{"functionName":"utils.instantiate","ranges":[{"startOffset":1089,"endOffset":2371,"count":0}],"isBlockCoverage":false},{"functionName":"utils.createKey","ranges":[{"startOffset":2557,"endOffset":2821,"count":0}],"isBlockCoverage":false},{"functionName":"utils.arrayify","ranges":[{"startOffset":2895,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isString","ranges":[{"startOffset":3088,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isRegex","ranges":[{"startOffset":3213,"endOffset":3271,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isObject","ranges":[{"startOffset":3346,"endOffset":3404,"count":0}],"isBlockCoverage":false},{"functionName":"utils.escapeRegex","ranges":[{"startOffset":3483,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"utils.combineDupes","ranges":[{"startOffset":3703,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasSpecialChars","ranges":[{"startOffset":4107,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"utils.toPosixPath","ranges":[{"startOffset":4315,"endOffset":4367,"count":0}],"isBlockCoverage":false},{"functionName":"utils.unescape","ranges":[{"startOffset":4504,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"utils.stripDrive","ranges":[{"startOffset":4709,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"utils.stripPrefix","ranges":[{"startOffset":4907,"endOffset":5051,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isSimpleChar","ranges":[{"startOffset":5239,"endOffset":5299,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isSlash","ranges":[{"startOffset":5405,"endOffset":5495,"count":0}],"isBlockCoverage":false},{"functionName":"utils.matchPath","ranges":[{"startOffset":5676,"endOffset":5836,"count":0}],"isBlockCoverage":false},{"functionName":"utils._equals","ranges":[{"startOffset":5966,"endOffset":6062,"count":0}],"isBlockCoverage":false},{"functionName":"utils._contains","ranges":[{"startOffset":6189,"endOffset":6309,"count":0}],"isBlockCoverage":false},{"functionName":"utils.equalsPattern","ranges":[{"startOffset":6495,"endOffset":6877,"count":0}],"isBlockCoverage":false},{"functionName":"utils.containsPattern","ranges":[{"startOffset":7053,"endOffset":7445,"count":0}],"isBlockCoverage":false},{"functionName":"utils.matchBasename","ranges":[{"startOffset":7644,"endOffset":7761,"count":0}],"isBlockCoverage":false},{"functionName":"utils.identity","ranges":[{"startOffset":7845,"endOffset":7876,"count":0}],"isBlockCoverage":false},{"functionName":"utils.value","ranges":[{"startOffset":7987,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"utils.unixify","ranges":[{"startOffset":8422,"endOffset":8806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"672","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-windows/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":150,"endOffset":651,"count":1},{"startOffset":286,"endOffset":649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":653,"endOffset":820,"count":1}],"isBlockCoverage":true},{"functionName":"isWindows","ranges":[{"startOffset":691,"endOffset":817,"count":1}],"isBlockCoverage":true}]},{"scriptId":"673","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/arr-diff/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":805,"count":1}],"isBlockCoverage":true},{"functionName":"diff","ranges":[{"startOffset":179,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"diffArray","ranges":[{"startOffset":345,"endOffset":804,"count":0}],"isBlockCoverage":false}]},{"scriptId":"674","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object.pick/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":630,"count":1}],"isBlockCoverage":true},{"functionName":"pick","ranges":[{"startOffset":234,"endOffset":628,"count":0}],"isBlockCoverage":false}]},{"scriptId":"675","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8172,"count":1}],"isBlockCoverage":true},{"functionName":"extglob","ranges":[{"startOffset":763,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.match","ranges":[{"startOffset":1343,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.isMatch","ranges":[{"startOffset":2644,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.contains","ranges":[{"startOffset":3694,"endOffset":4061,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.matcher","ranges":[{"startOffset":4529,"endOffset":4859,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.create","ranges":[{"startOffset":5271,"endOffset":5607,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.capture","ranges":[{"startOffset":6336,"endOffset":6709,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.makeRe","ranges":[{"startOffset":7091,"endOffset":7828,"count":0}],"isBlockCoverage":false},{"functionName":"extglob.clearCache","ranges":[{"startOffset":7899,"endOffset":7944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"676","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"677","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/lib/compilers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4001,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":106,"endOffset":3999,"count":1}],"isBlockCoverage":true},{"functionName":"star","ranges":[{"startOffset":128,"endOffset":378,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":543,"endOffset":605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":657,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":790,"endOffset":1319,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1373,"endOffset":1821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1875,"endOffset":2090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2142,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2229,"endOffset":2867,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2893,"endOffset":3836,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3885,"endOffset":3995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"678","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5172,"count":1}],"isBlockCoverage":true},{"functionName":"brackets","ranges":[{"startOffset":573,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"brackets.match","ranges":[{"startOffset":1304,"endOffset":1866,"count":0}],"isBlockCoverage":false},{"functionName":"brackets.isMatch","ranges":[{"startOffset":2363,"endOffset":2448,"count":0}],"isBlockCoverage":false},{"functionName":"brackets.matcher","ranges":[{"startOffset":2954,"endOffset":3085,"count":0}],"isBlockCoverage":false},{"functionName":"brackets.makeRe","ranges":[{"startOffset":3452,"endOffset":3618,"count":0}],"isBlockCoverage":false},{"functionName":"brackets.create","ranges":[{"startOffset":4654,"endOffset":4966,"count":0}],"isBlockCoverage":false}]},{"scriptId":"679","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/lib/compilers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2029,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":81,"endOffset":2027,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":185,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":322,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":480,"endOffset":744,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":810,"endOffset":872,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":899,"endOffset":961,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":989,"endOffset":1799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1827,"endOffset":2023,"count":0}],"isBlockCoverage":false}]},{"scriptId":"680","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/posix-character-classes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"681","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/lib/parsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4394,"count":1}],"isBlockCoverage":true},{"functionName":"parsers","ranges":[{"startOffset":223,"endOffset":4266,"count":1},{"startOffset":286,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":404,"endOffset":629,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":689,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1014,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1426,"endOffset":1439,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1505,"endOffset":2439,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2509,"endOffset":3171,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3239,"endOffset":4262,"count":0}],"isBlockCoverage":false}]},{"scriptId":"682","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":664,"count":1}],"isBlockCoverage":true},{"functionName":"exports.last","ranges":[{"startOffset":202,"endOffset":249,"count":0}],"isBlockCoverage":false},{"functionName":"exports.createRegex","ranges":[{"startOffset":331,"endOffset":662,"count":1},{"startOffset":374,"endOffset":388,"count":0},{"startOffset":530,"endOffset":595,"count":0}],"isBlockCoverage":true}]},{"scriptId":"683","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":751,"count":0}],"isBlockCoverage":false}]},{"scriptId":"684","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/expand-brackets/node_modules/extend-shallow/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":74,"endOffset":304,"count":0}],"isBlockCoverage":false},{"functionName":"assign","ranges":[{"startOffset":307,"endOffset":414,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwn","ranges":[{"startOffset":489,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"685","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/lib/parsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3172,"count":1}],"isBlockCoverage":true},{"functionName":"parsers","ranges":[{"startOffset":390,"endOffset":3037,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":690,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1619,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2299,"endOffset":2498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2567,"endOffset":2869,"count":0}],"isBlockCoverage":false}]},{"scriptId":"686","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/node_modules/define-property/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":759,"count":1}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":240,"endOffset":757,"count":0}],"isBlockCoverage":false}]},{"scriptId":"687","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/node_modules/is-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"isDescriptor","ranges":[{"startOffset":319,"endOffset":496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"688","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/node_modules/is-accessor-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessorDescriptor","ranges":[{"startOffset":368,"endOffset":1311,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1313,"endOffset":1382,"count":0}],"isBlockCoverage":false}]},{"scriptId":"689","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/node_modules/is-data-descriptor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"isDataDescriptor","ranges":[{"startOffset":233,"endOffset":947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"690","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1274,"count":1}],"isBlockCoverage":true},{"functionName":"utils.arrayify","ranges":[{"startOffset":246,"endOffset":328,"count":0}],"isBlockCoverage":false},{"functionName":"utils.memoize","ranges":[{"startOffset":397,"endOffset":702,"count":0}],"isBlockCoverage":false},{"functionName":"utils.createKey","ranges":[{"startOffset":888,"endOffset":1100,"count":0}],"isBlockCoverage":false},{"functionName":"utils.createRegex","ranges":[{"startOffset":1177,"endOffset":1272,"count":1}],"isBlockCoverage":true}]},{"scriptId":"691","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/extglob/lib/extglob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1735,"count":1}],"isBlockCoverage":true},{"functionName":"Extglob","ranges":[{"startOffset":330,"endOffset":1678,"count":0}],"isBlockCoverage":false}]},{"scriptId":"692","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/micromatch/lib/parsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2027,"count":1}],"isBlockCoverage":true},{"functionName":"createNotRegex","ranges":[{"startOffset":383,"endOffset":442,"count":13},{"startOffset":413,"endOffset":439,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":482,"endOffset":1787,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1031,"endOffset":1142,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1417,"endOffset":1783,"count":13},{"startOffset":1466,"endOffset":1473,"count":0},{"startOffset":1586,"endOffset":1593,"count":0}],"isBlockCoverage":true},{"functionName":"textRegex","ranges":[{"startOffset":1820,"endOffset":2026,"count":1}],"isBlockCoverage":true}]},{"scriptId":"693","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/micromatch/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":52,"count":1}],"isBlockCoverage":true}]},{"scriptId":"694","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/micromatch/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7258,"count":1}],"isBlockCoverage":true},{"functionName":"utils.isWindows","ranges":[{"startOffset":619,"endOffset":693,"count":0}],"isBlockCoverage":false},{"functionName":"utils.instantiate","ranges":[{"startOffset":765,"endOffset":2045,"count":2},{"startOffset":908,"endOffset":925,"count":1},{"startOffset":927,"endOffset":1223,"count":1},{"startOffset":1101,"endOffset":1170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1261,"endOffset":2019,"count":1},{"startOffset":1477,"endOffset":1514,"count":0},{"startOffset":1516,"endOffset":1903,"count":0}],"isBlockCoverage":true},{"functionName":"utils.createKey","ranges":[{"startOffset":2231,"endOffset":2519,"count":5},{"startOffset":2302,"endOffset":2327,"count":0},{"startOffset":2424,"endOffset":2503,"count":30}],"isBlockCoverage":true},{"functionName":"utils.arrayify","ranges":[{"startOffset":2593,"endOffset":2711,"count":1},{"startOffset":2653,"endOffset":2703,"count":0},{"startOffset":2704,"endOffset":2708,"count":0}],"isBlockCoverage":true},{"functionName":"utils.isString","ranges":[{"startOffset":2786,"endOffset":2837,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isObject","ranges":[{"startOffset":2912,"endOffset":2970,"count":0}],"isBlockCoverage":false},{"functionName":"utils.hasSpecialChars","ranges":[{"startOffset":3064,"endOffset":3144,"count":0}],"isBlockCoverage":false},{"functionName":"utils.escapeRegex","ranges":[{"startOffset":3223,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"utils.toPosixPath","ranges":[{"startOffset":3427,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"utils.unescape","ranges":[{"startOffset":3616,"endOffset":3696,"count":0}],"isBlockCoverage":false},{"functionName":"utils.stripPrefix","ranges":[{"startOffset":3808,"endOffset":3972,"count":0}],"isBlockCoverage":false},{"functionName":"utils.isSlash","ranges":[{"startOffset":4078,"endOffset":4168,"count":0}],"isBlockCoverage":false},{"functionName":"utils.matchPath","ranges":[{"startOffset":4349,"endOffset":4509,"count":0}],"isBlockCoverage":false},{"functionName":"utils._equals","ranges":[{"startOffset":4639,"endOffset":4735,"count":0}],"isBlockCoverage":false},{"functionName":"utils._contains","ranges":[{"startOffset":4862,"endOffset":4982,"count":0}],"isBlockCoverage":false},{"functionName":"utils.equalsPattern","ranges":[{"startOffset":5168,"endOffset":5550,"count":0}],"isBlockCoverage":false},{"functionName":"utils.containsPattern","ranges":[{"startOffset":5726,"endOffset":6118,"count":0}],"isBlockCoverage":false},{"functionName":"utils.matchBasename","ranges":[{"startOffset":6317,"endOffset":6413,"count":0}],"isBlockCoverage":false},{"functionName":"utils.value","ranges":[{"startOffset":6524,"endOffset":6648,"count":0}],"isBlockCoverage":false},{"functionName":"utils.unixify","ranges":[{"startOffset":6864,"endOffset":7256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"695","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/reader-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2785,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":99,"endOffset":392,"count":1},{"startOffset":164,"endOffset":256,"count":0},{"startOffset":257,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":219,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":406,"endOffset":604,"count":1},{"startOffset":537,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":463,"endOffset":502,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":853,"endOffset":2731,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderAsync","ranges":[{"startOffset":915,"endOffset":1020,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1166,"endOffset":1249,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync.read","ranges":[{"startOffset":1415,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync.api","ranges":[{"startOffset":2152,"endOffset":2330,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync.dynamicApi","ranges":[{"startOffset":2421,"endOffset":2512,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderAsync.staticApi","ranges":[{"startOffset":2601,"endOffset":2702,"count":0}],"isBlockCoverage":false}]},{"scriptId":"696","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2606,"count":1}],"isBlockCoverage":true},{"functionName":"readdirSyncPath","ranges":[{"startOffset":720,"endOffset":803,"count":0}],"isBlockCoverage":false},{"functionName":"readdirSyncStat","ranges":[{"startOffset":977,"endOffset":1073,"count":0}],"isBlockCoverage":false},{"functionName":"readdirAsyncPath","ranges":[{"startOffset":1330,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"readdirAsyncStat","ranges":[{"startOffset":1706,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"readdirStreamPath","ranges":[{"startOffset":2115,"endOffset":2202,"count":0}],"isBlockCoverage":false},{"functionName":"readdirStreamStat","ranges":[{"startOffset":2505,"endOffset":2605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"697","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":711,"count":1}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":369,"endOffset":710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"698","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/directory-reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12416,"count":1}],"isBlockCoverage":true},{"functionName":"DirectoryReader","ranges":[{"startOffset":694,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"readNextDirectory","ranges":[{"startOffset":2057,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"finishedReadingDirectory","ranges":[{"startOffset":3119,"endOffset":3414,"count":0}],"isBlockCoverage":false},{"functionName":"checkForEOF","ranges":[{"startOffset":3584,"endOffset":3888,"count":0}],"isBlockCoverage":false},{"functionName":"processItem","ranges":[{"startOffset":4406,"endOffset":7422,"count":0}],"isBlockCoverage":false},{"functionName":"pushOrBuffer","ranges":[{"startOffset":7590,"endOffset":7887,"count":0}],"isBlockCoverage":false},{"functionName":"pushFromBuffer","ranges":[{"startOffset":8188,"endOffset":8647,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRecurse","ranges":[{"startOffset":9120,"endOffset":10455,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":10847,"endOffset":11843,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":12024,"endOffset":12378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"699","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/normalize-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5712,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":2065,"endOffset":5711,"count":0}],"isBlockCoverage":false}]},{"scriptId":"700","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/glob-to-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3445,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":3443,"count":0}],"isBlockCoverage":false}]},{"scriptId":"701","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/stat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2145,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":479,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"symlinkStat","ranges":[{"startOffset":1513,"endOffset":2144,"count":0}],"isBlockCoverage":false}]},{"scriptId":"702","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/call.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1526,"count":1}],"isBlockCoverage":true},{"functionName":"safeCall","ranges":[{"startOffset":419,"endOffset":779,"count":0}],"isBlockCoverage":false},{"functionName":"callOnce","ranges":[{"startOffset":1088,"endOffset":1525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"703","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/sync/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1320,"count":1}],"isBlockCoverage":true},{"functionName":"exports.readdir","ranges":[{"startOffset":266,"endOffset":492,"count":0}],"isBlockCoverage":false},{"functionName":"exports.stat","ranges":[{"startOffset":678,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"exports.lstat","ranges":[{"startOffset":1092,"endOffset":1318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"704","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/sync/for-each.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"syncForEach","ranges":[{"startOffset":363,"endOffset":733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"705","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/async/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1107,"count":1}],"isBlockCoverage":true},{"functionName":"readdirAsync","ranges":[{"startOffset":497,"endOffset":1106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"706","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/call-me-maybe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":408,"count":1},{"startOffset":62,"endOffset":84,"count":0},{"startOffset":85,"endOffset":123,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":88,"endOffset":123,"count":0}],"isBlockCoverage":false},{"functionName":"maybe","ranges":[{"startOffset":142,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"707","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/async/for-each.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":796,"count":1}],"isBlockCoverage":true},{"functionName":"asyncForEach","ranges":[{"startOffset":331,"endOffset":795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"708","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@mrmlnc/readdir-enhanced/lib/stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":579,"count":1}],"isBlockCoverage":true},{"functionName":"readdirStream","ranges":[{"startOffset":387,"endOffset":578,"count":0}],"isBlockCoverage":false}]},{"scriptId":"709","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/reader.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":262,"endOffset":2296,"count":1}],"isBlockCoverage":true},{"functionName":"Reader","ranges":[{"startOffset":281,"endOffset":572,"count":1}],"isBlockCoverage":true},{"functionName":"Reader.getRootDirectory","ranges":[{"startOffset":670,"endOffset":753,"count":1}],"isBlockCoverage":true},{"functionName":"Reader.getReaderOptions","ranges":[{"startOffset":850,"endOffset":1140,"count":1},{"startOffset":927,"endOffset":931,"count":0}],"isBlockCoverage":true},{"functionName":"Reader.getMicromatchOptions","ranges":[{"startOffset":1245,"endOffset":1556,"count":1}],"isBlockCoverage":true},{"functionName":"Reader.transform","ranges":[{"startOffset":1645,"endOffset":2101,"count":1},{"startOffset":1700,"endOffset":1791,"count":0},{"startOffset":1834,"endOffset":1856,"count":0},{"startOffset":1858,"endOffset":1902,"count":0},{"startOffset":1942,"endOffset":1949,"count":0},{"startOffset":2048,"endOffset":2100,"count":0}],"isBlockCoverage":true},{"functionName":"Reader.isEnoentCodeError","ranges":[{"startOffset":2210,"endOffset":2272,"count":0}],"isBlockCoverage":false}]},{"scriptId":"710","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/filters/deep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3600,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":209,"endOffset":3563,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter","ranges":[{"startOffset":228,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter.getFilter","ranges":[{"startOffset":467,"endOffset":757,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":672,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.getMaxPatternDepth","ranges":[{"startOffset":876,"endOffset":1056,"count":1},{"startOffset":988,"endOffset":998,"count":0}],"isBlockCoverage":true},{"functionName":"DeepFilter.getNegativePatternsRe","ranges":[{"startOffset":1202,"endOffset":1439,"count":1}],"isBlockCoverage":true},{"functionName":"DeepFilter.filter","ranges":[{"startOffset":1552,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.isSkippedByDeepOption","ranges":[{"startOffset":2262,"endOffset":2406,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.isSkippedByMaxPatternDepth","ranges":[{"startOffset":2594,"endOffset":2720,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.isSkippedSymlinkedDirectory","ranges":[{"startOffset":2899,"endOffset":3008,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.isSkippedDotDirectory","ranges":[{"startOffset":3178,"endOffset":3278,"count":0}],"isBlockCoverage":false},{"functionName":"DeepFilter.isSkippedByNegativePatterns","ranges":[{"startOffset":3434,"endOffset":3535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"711","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/utils/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":703,"count":1}],"isBlockCoverage":true},{"functionName":"isDotDirectory","ranges":[{"startOffset":193,"endOffset":284,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":392,"endOffset":467,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbsolute","ranges":[{"startOffset":570,"endOffset":663,"count":0}],"isBlockCoverage":false}]},{"scriptId":"712","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/filters/entry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3464,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":210,"endOffset":3426,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter","ranges":[{"startOffset":229,"endOffset":405,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter.getFilter","ranges":[{"startOffset":503,"endOffset":846,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":766,"endOffset":838,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter.filter","ranges":[{"startOffset":957,"endOffset":1627,"count":1},{"startOffset":1121,"endOffset":1168,"count":0},{"startOffset":1352,"endOffset":1391,"count":0},{"startOffset":1466,"endOffset":1505,"count":0}],"isBlockCoverage":true},{"functionName":"EntryFilter.isDuplicateEntry","ranges":[{"startOffset":1765,"endOffset":1834,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter.createIndexRecord","ranges":[{"startOffset":1950,"endOffset":2023,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter.onlyFileFilter","ranges":[{"startOffset":2160,"endOffset":2244,"count":1}],"isBlockCoverage":true},{"functionName":"EntryFilter.onlyDirectoryFilter","ranges":[{"startOffset":2398,"endOffset":2493,"count":1},{"startOffset":2462,"endOffset":2485,"count":0}],"isBlockCoverage":true},{"functionName":"EntryFilter.isSkippedByAbsoluteNegativePatterns","ranges":[{"startOffset":2670,"endOffset":2924,"count":1},{"startOffset":2777,"endOffset":2923,"count":0}],"isBlockCoverage":true},{"functionName":"EntryFilter.isMatchToPatterns","ranges":[{"startOffset":3243,"endOffset":3397,"count":2},{"startOffset":3337,"endOffset":3389,"count":1}],"isBlockCoverage":true}]},{"scriptId":"713","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/adapters/fs-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2516,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":99,"endOffset":392,"count":1},{"startOffset":164,"endOffset":256,"count":0},{"startOffset":257,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":219,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":406,"endOffset":604,"count":1},{"startOffset":537,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":463,"endOffset":502,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":821,"endOffset":2461,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemStream","ranges":[{"startOffset":888,"endOffset":998,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemStream.read","ranges":[{"startOffset":1105,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemStream.getEntry","ranges":[{"startOffset":1979,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"FileSystemStream.getStat","ranges":[{"startOffset":2321,"endOffset":2427,"count":0}],"isBlockCoverage":false}]},{"scriptId":"714","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/@nodelib/fs.stat/out/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1125,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":210,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"statCallback","ranges":[{"startOffset":431,"endOffset":930,"count":0}],"isBlockCoverage":false},{"functionName":"statSync","ranges":[{"startOffset":996,"endOffset":1095,"count":1}],"isBlockCoverage":true}]},{"scriptId":"715","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/@nodelib/fs.stat/out/managers/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":389,"count":1}],"isBlockCoverage":true},{"functionName":"prepare","ranges":[{"startOffset":122,"endOffset":361,"count":1},{"startOffset":241,"endOffset":252,"count":0}],"isBlockCoverage":true}]},{"scriptId":"716","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/@nodelib/fs.stat/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"getFileSystemAdapter","ranges":[{"startOffset":233,"endOffset":419,"count":1},{"startOffset":347,"endOffset":418,"count":0}],"isBlockCoverage":true}]},{"scriptId":"717","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/@nodelib/fs.stat/out/providers/stat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1286,"count":1}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":77,"endOffset":486,"count":1},{"startOffset":227,"endOffset":484,"count":0}],"isBlockCoverage":true},{"functionName":"stat.isSymbolicLink","ranges":[{"startOffset":316,"endOffset":326,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":508,"endOffset":1061,"count":0}],"isBlockCoverage":false},{"functionName":"isFollowedSymlink","ranges":[{"startOffset":1133,"endOffset":1238,"count":1},{"startOffset":1210,"endOffset":1235,"count":0}],"isBlockCoverage":true}]},{"scriptId":"718","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/adapters/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":140,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystem","ranges":[{"startOffset":159,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystem.getFullEntryPath","ranges":[{"startOffset":328,"endOffset":414,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystem.makeEntry","ranges":[{"startOffset":529,"endOffset":663,"count":1}],"isBlockCoverage":true}]},{"scriptId":"719","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/reader-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3082,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":99,"endOffset":392,"count":1},{"startOffset":164,"endOffset":256,"count":0},{"startOffset":257,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":219,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":406,"endOffset":604,"count":2},{"startOffset":537,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":463,"endOffset":502,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":890,"endOffset":1301,"count":1}],"isBlockCoverage":true},{"functionName":"TransformStream","ranges":[{"startOffset":956,"endOffset":1122,"count":0}],"isBlockCoverage":false},{"functionName":"TransformStream._transform","ranges":[{"startOffset":1167,"endOffset":1268,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1357,"endOffset":3027,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderStream","ranges":[{"startOffset":1420,"endOffset":1526,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1673,"endOffset":1756,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream.read","ranges":[{"startOffset":1924,"endOffset":2360,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream.api","ranges":[{"startOffset":2445,"endOffset":2623,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream.dynamicApi","ranges":[{"startOffset":2715,"endOffset":2806,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderStream.staticApi","ranges":[{"startOffset":2896,"endOffset":2997,"count":0}],"isBlockCoverage":false}]},{"scriptId":"720","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/providers/reader-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":99,"endOffset":392,"count":1},{"startOffset":164,"endOffset":256,"count":0},{"startOffset":257,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":219,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":406,"endOffset":604,"count":1},{"startOffset":537,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":463,"endOffset":502,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":848,"endOffset":2473,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync","ranges":[{"startOffset":909,"endOffset":1013,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1158,"endOffset":1239,"count":1}],"isBlockCoverage":true},{"functionName":"ReaderSync.read","ranges":[{"startOffset":1403,"endOffset":1816,"count":1},{"startOffset":1670,"endOffset":1809,"count":0}],"isBlockCoverage":true},{"functionName":"ReaderSync.api","ranges":[{"startOffset":1899,"endOffset":2077,"count":1},{"startOffset":1959,"endOffset":2023,"count":0}],"isBlockCoverage":true},{"functionName":"ReaderSync.dynamicApi","ranges":[{"startOffset":2167,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"ReaderSync.staticApi","ranges":[{"startOffset":2344,"endOffset":2445,"count":1}],"isBlockCoverage":true}]},{"scriptId":"721","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/adapters/fs-sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2114,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60,"endOffset":608,"count":1}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":99,"endOffset":392,"count":1},{"startOffset":164,"endOffset":256,"count":0},{"startOffset":257,"endOffset":347,"count":0}],"isBlockCoverage":true},{"functionName":"extendStatics","ranges":[{"startOffset":219,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"extendStatics","ranges":[{"startOffset":273,"endOffset":347,"count":0}],"isBlockCoverage":false},{"functionName":"__extends","ranges":[{"startOffset":406,"endOffset":604,"count":1},{"startOffset":537,"endOffset":555,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":463,"endOffset":502,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":786,"endOffset":2061,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemSync","ranges":[{"startOffset":851,"endOffset":959,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemSync.read","ranges":[{"startOffset":1062,"endOffset":1485,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1451,"count":1},{"startOffset":1365,"endOffset":1406,"count":0}],"isBlockCoverage":true},{"functionName":"FileSystemSync.getEntry","ranges":[{"startOffset":1590,"endOffset":1812,"count":1},{"startOffset":1755,"endOffset":1805,"count":0}],"isBlockCoverage":true},{"functionName":"FileSystemSync.getStat","ranges":[{"startOffset":1919,"endOffset":2029,"count":1}],"isBlockCoverage":true}]},{"scriptId":"722","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/utils/array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"flatten","ranges":[{"startOffset":176,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":227,"endOffset":294,"count":1}],"isBlockCoverage":true}]},{"scriptId":"723","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/fast-glob/out/utils/stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":465,"count":1}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":205,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"724","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/getModuleParts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":48,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"725","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4044,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":228,"endOffset":2775,"count":2},{"startOffset":2673,"endOffset":2678,"count":1},{"startOffset":2712,"endOffset":2771,"count":40}],"isBlockCoverage":true},{"functionName":"registerExtension","ranges":[{"startOffset":2779,"endOffset":2926,"count":121},{"startOffset":2842,"endOffset":2872,"count":81}],"isBlockCoverage":true},{"functionName":"findParser","ranges":[{"startOffset":2930,"endOffset":3862,"count":7},{"startOffset":2989,"endOffset":3008,"count":4},{"startOffset":3010,"endOffset":3041,"count":0},{"startOffset":3145,"endOffset":3156,"count":0},{"startOffset":3194,"endOffset":3838,"count":4},{"startOffset":3279,"endOffset":3832,"count":0}],"isBlockCoverage":true},{"functionName":"getAsset","ranges":[{"startOffset":3866,"endOffset":4015,"count":4}],"isBlockCoverage":true}]},{"scriptId":"726","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":194,"count":1},{"startOffset":137,"endOffset":162,"count":0}],"isBlockCoverage":true}]},{"scriptId":"727","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/src/Logger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5718,"count":1},{"startOffset":5341,"endOffset":5675,"count":0}],"isBlockCoverage":true},{"functionName":"Logger","ranges":[{"startOffset":391,"endOffset":492,"count":1}],"isBlockCoverage":true},{"functionName":"setOptions","ranges":[{"startOffset":496,"endOffset":1020,"count":2},{"startOffset":552,"endOffset":588,"count":1},{"startOffset":597,"endOffset":623,"count":1},{"startOffset":632,"endOffset":635,"count":1},{"startOffset":668,"endOffset":705,"count":1},{"startOffset":714,"endOffset":729,"count":0},{"startOffset":787,"endOffset":803,"count":1},{"startOffset":910,"endOffset":948,"count":1},{"startOffset":957,"endOffset":973,"count":0}],"isBlockCoverage":true},{"functionName":"countLines","ranges":[{"startOffset":1024,"endOffset":1288,"count":0}],"isBlockCoverage":false},{"functionName":"writeRaw","ranges":[{"startOffset":1292,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1427,"endOffset":1663,"count":0}],"isBlockCoverage":false},{"functionName":"verbose","ranges":[{"startOffset":1667,"endOffset":2118,"count":2},{"startOffset":1734,"endOffset":2117,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":2122,"endOffset":2215,"count":4},{"startOffset":2185,"endOffset":2214,"count":0}],"isBlockCoverage":true},{"functionName":"persistent","ranges":[{"startOffset":2219,"endOffset":2342,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":2346,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":2481,"endOffset":2613,"count":0}],"isBlockCoverage":false},{"functionName":"success","ranges":[{"startOffset":2617,"endOffset":2713,"count":1}],"isBlockCoverage":true},{"functionName":"formatError","ranges":[{"startOffset":2717,"endOffset":2780,"count":0}],"isBlockCoverage":false},{"functionName":"_writeError","ranges":[{"startOffset":2784,"endOffset":2986,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":2990,"endOffset":3300,"count":1},{"startOffset":3020,"endOffset":3034,"count":0},{"startOffset":3035,"endOffset":3055,"count":0},{"startOffset":3078,"endOffset":3299,"count":0}],"isBlockCoverage":true},{"functionName":"progress","ranges":[{"startOffset":3304,"endOffset":3813,"count":5},{"startOffset":3372,"endOffset":3809,"count":0}],"isBlockCoverage":true},{"functionName":"stopSpinner","ranges":[{"startOffset":3817,"endOffset":3920,"count":0}],"isBlockCoverage":false},{"functionName":"handleMessage","ranges":[{"startOffset":3924,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"_log","ranges":[{"startOffset":3999,"endOffset":4087,"count":0}],"isBlockCoverage":false},{"functionName":"table","ranges":[{"startOffset":4091,"endOffset":4789,"count":1},{"startOffset":4195,"endOffset":4341,"count":2},{"startOffset":4242,"endOffset":4335,"count":6},{"startOffset":4289,"endOffset":4293,"count":3},{"startOffset":4389,"endOffset":4785,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4417,"endOffset":4744,"count":6},{"startOffset":4615,"endOffset":4659,"count":4},{"startOffset":4660,"endOffset":4663,"count":4},{"startOffset":4664,"endOffset":4667,"count":2}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":4836,"endOffset":5010,"count":6},{"startOffset":4958,"endOffset":4986,"count":4},{"startOffset":4986,"endOffset":5009,"count":2}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":5052,"endOffset":5130,"count":12}],"isBlockCoverage":true},{"functionName":"LoggerProxy.<computed>","ranges":[{"startOffset":5471,"endOffset":5629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"728","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/chalk/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6437,"count":1},{"startOffset":274,"endOffset":336,"count":0},{"startOffset":1637,"endOffset":1678,"count":0},{"startOffset":1723,"endOffset":1982,"count":41},{"startOffset":2227,"endOffset":2673,"count":15},{"startOffset":2257,"endOffset":2273,"count":1},{"startOffset":2273,"endOffset":2673,"count":14},{"startOffset":2825,"endOffset":3344,"count":15},{"startOffset":2855,"endOffset":2871,"count":1},{"startOffset":2871,"endOffset":3344,"count":14}],"isBlockCoverage":true},{"functionName":"applyOptions","ranges":[{"startOffset":619,"endOffset":915,"count":3},{"startOffset":676,"endOffset":681,"count":1},{"startOffset":750,"endOffset":769,"count":0},{"startOffset":826,"endOffset":841,"count":0},{"startOffset":879,"endOffset":896,"count":2},{"startOffset":897,"endOffset":912,"count":1}],"isBlockCoverage":true},{"functionName":"Chalk","ranges":[{"startOffset":917,"endOffset":1542,"count":3},{"startOffset":1100,"endOffset":1127,"count":2},{"startOffset":1128,"endOffset":1144,"count":2},{"startOffset":1146,"endOffset":1509,"count":1},{"startOffset":1509,"endOffset":1541,"count":2}],"isBlockCoverage":true},{"functionName":"Chalk.chalk.template","ranges":[{"startOffset":1220,"endOffset":1342,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1832,"endOffset":1976,"count":24},{"startOffset":1914,"endOffset":1942,"count":5},{"startOffset":1943,"endOffset":1952,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2004,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2296,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2961,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3384,"endOffset":3392,"count":0}],"isBlockCoverage":false},{"functionName":"build","ranges":[{"startOffset":3404,"endOffset":4262,"count":24}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":3460,"endOffset":3523,"count":19}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3667,"endOffset":3700,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3704,"endOffset":3743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3817,"endOffset":3852,"count":24}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3856,"endOffset":3901,"count":0}],"isBlockCoverage":false},{"functionName":"applyStyle","ranges":[{"startOffset":4264,"endOffset":5737,"count":19},{"startOffset":4472,"endOffset":4489,"count":0},{"startOffset":4509,"endOffset":4639,"count":0},{"startOffset":4660,"endOffset":4678,"count":0},{"startOffset":4679,"endOffset":4686,"count":0},{"startOffset":4711,"endOffset":4715,"count":0},{"startOffset":4725,"endOffset":5027,"count":0},{"startOffset":5029,"endOffset":5736,"count":0}],"isBlockCoverage":true},{"functionName":"chalkTag","ranges":[{"startOffset":5739,"endOffset":6224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"729","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/escape-string-regexp/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":79,"endOffset":224,"count":43},{"startOffset":126,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"730","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3574,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":81,"endOffset":197,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":97,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":220,"endOffset":344,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":236,"endOffset":344,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":367,"endOffset":512,"count":150}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":383,"endOffset":512,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":515,"endOffset":3456,"count":5},{"startOffset":1771,"endOffset":2251,"count":15},{"startOffset":1855,"endOffset":2070,"count":205},{"startOffset":2828,"endOffset":3437,"count":75},{"startOffset":2875,"endOffset":2893,"count":0},{"startOffset":2955,"endOffset":2977,"count":5},{"startOffset":3004,"endOffset":3126,"count":70},{"startOffset":3154,"endOffset":3286,"count":70},{"startOffset":3310,"endOffset":3434,"count":70}],"isBlockCoverage":true},{"functionName":"ansi2ansi","ranges":[{"startOffset":2272,"endOffset":2278,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":2297,"endOffset":2319,"count":0}],"isBlockCoverage":false}]},{"scriptId":"731","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/color-convert/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1725,"count":1}],"isBlockCoverage":true},{"functionName":"wrapRaw","ranges":[{"startOffset":136,"endOffset":509,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":176,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"wrapRounded","ranges":[{"startOffset":511,"endOffset":1187,"count":210}],"isBlockCoverage":true},{"functionName":"wrappedFn","ranges":[{"startOffset":555,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1204,"endOffset":1695,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1541,"endOffset":1691,"count":210}],"isBlockCoverage":true}]},{"scriptId":"732","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/color-convert/conversions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16850,"count":1},{"startOffset":312,"endOffset":401,"count":148},{"startOffset":1111,"endOffset":1793,"count":15},{"startOffset":1190,"endOffset":1254,"count":0},{"startOffset":1293,"endOffset":1363,"count":0},{"startOffset":1429,"endOffset":1501,"count":0}],"isBlockCoverage":true},{"functionName":"convert.rgb.hsl","ranges":[{"startOffset":1813,"endOffset":2432,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hsv","ranges":[{"startOffset":2453,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hwb","ranges":[{"startOffset":3122,"endOffset":3354,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.cmyk","ranges":[{"startOffset":3376,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"comparativeDistance","ranges":[{"startOffset":3776,"endOffset":3913,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.keyword","ranges":[{"startOffset":3937,"endOffset":4518,"count":0}],"isBlockCoverage":false},{"functionName":"convert.keyword.rgb","ranges":[{"startOffset":4543,"endOffset":4595,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.xyz","ranges":[{"startOffset":4616,"endOffset":5131,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.lab","ranges":[{"startOffset":5152,"endOffset":5603,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.rgb","ranges":[{"startOffset":5624,"endOffset":6283,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hsv","ranges":[{"startOffset":6304,"endOffset":6639,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.rgb","ranges":[{"startOffset":6660,"endOffset":7122,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hsl","ranges":[{"startOffset":7143,"endOffset":7437,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.rgb","ranges":[{"startOffset":7507,"endOffset":8206,"count":0}],"isBlockCoverage":false},{"functionName":"convert.cmyk.rgb","ranges":[{"startOffset":8228,"endOffset":8523,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.rgb","ranges":[{"startOffset":8544,"endOffset":9210,"count":0}],"isBlockCoverage":false},{"functionName":"convert.xyz.lab","ranges":[{"startOffset":9231,"endOffset":9649,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.xyz","ranges":[{"startOffset":9670,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lab.lch","ranges":[{"startOffset":10132,"endOffset":10362,"count":0}],"isBlockCoverage":false},{"functionName":"convert.lch.lab","ranges":[{"startOffset":10383,"endOffset":10573,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi16","ranges":[{"startOffset":10597,"endOffset":11000,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.ansi16","ranges":[{"startOffset":11024,"endOffset":11199,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.ansi256","ranges":[{"startOffset":11224,"endOffset":11712,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi16.rgb","ranges":[{"startOffset":11736,"endOffset":12128,"count":0}],"isBlockCoverage":false},{"functionName":"convert.ansi256.rgb","ranges":[{"startOffset":12153,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hex","ranges":[{"startOffset":12461,"endOffset":12709,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hex.rgb","ranges":[{"startOffset":12730,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.hcg","ranges":[{"startOffset":13189,"endOffset":13762,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsl.hcg","ranges":[{"startOffset":13783,"endOffset":14037,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hsv.hcg","ranges":[{"startOffset":14058,"endOffset":14233,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.rgb","ranges":[{"startOffset":14254,"endOffset":14993,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsv","ranges":[{"startOffset":15014,"endOffset":15189,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hsl","ranges":[{"startOffset":15210,"endOffset":15469,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hcg.hwb","ranges":[{"startOffset":15490,"endOffset":15630,"count":0}],"isBlockCoverage":false},{"functionName":"convert.hwb.hcg","ranges":[{"startOffset":15651,"endOffset":15839,"count":0}],"isBlockCoverage":false},{"functionName":"convert.apple.rgb","ranges":[{"startOffset":15862,"endOffset":15970,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.apple","ranges":[{"startOffset":15993,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.rgb","ranges":[{"startOffset":16115,"endOffset":16207,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hsl.convert.gray.hsv","ranges":[{"startOffset":16248,"endOffset":16292,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hwb","ranges":[{"startOffset":16314,"endOffset":16360,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.cmyk","ranges":[{"startOffset":16383,"endOffset":16430,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.lab","ranges":[{"startOffset":16452,"endOffset":16496,"count":0}],"isBlockCoverage":false},{"functionName":"convert.gray.hex","ranges":[{"startOffset":16518,"endOffset":16738,"count":0}],"isBlockCoverage":false},{"functionName":"convert.rgb.gray","ranges":[{"startOffset":16760,"endOffset":16848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"733","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/color-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4617,"count":1}],"isBlockCoverage":true}]},{"scriptId":"734","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/color-convert/route.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2227,"count":1}],"isBlockCoverage":true},{"functionName":"buildGraph","ranges":[{"startOffset":389,"endOffset":741,"count":15},{"startOffset":583,"endOffset":723,"count":225}],"isBlockCoverage":true},{"functionName":"deriveBFS","ranges":[{"startOffset":797,"endOffset":1337,"count":15},{"startOffset":965,"endOffset":1319,"count":225},{"startOffset":1106,"endOffset":1316,"count":660},{"startOffset":1201,"endOffset":1312,"count":210}],"isBlockCoverage":true},{"functionName":"link","ranges":[{"startOffset":1339,"endOffset":1421,"count":210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1373,"endOffset":1418,"count":0}],"isBlockCoverage":false},{"functionName":"wrapConversion","ranges":[{"startOffset":1423,"endOffset":1786,"count":210}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1805,"endOffset":2224,"count":15},{"startOffset":1972,"endOffset":2201,"count":225},{"startOffset":2059,"endOffset":2141,"count":15},{"startOffset":2141,"endOffset":2201,"count":210}],"isBlockCoverage":true}]},{"scriptId":"735","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2771,"count":1},{"startOffset":197,"endOffset":221,"count":0},{"startOffset":325,"endOffset":348,"count":0},{"startOffset":375,"endOffset":461,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":463,"endOffset":621,"count":2},{"startOffset":534,"endOffset":620,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":623,"endOffset":2524,"count":2},{"startOffset":683,"endOffset":699,"count":0},{"startOffset":787,"endOffset":803,"count":0},{"startOffset":832,"endOffset":848,"count":0},{"startOffset":919,"endOffset":948,"count":0},{"startOffset":949,"endOffset":952,"count":0},{"startOffset":990,"endOffset":2523,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1745,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2526,"endOffset":2631,"count":2}],"isBlockCoverage":true}]},{"scriptId":"736","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":318,"count":15},{"startOffset":116,"endOffset":120,"count":0},{"startOffset":142,"endOffset":147,"count":0},{"startOffset":261,"endOffset":315,"count":0}],"isBlockCoverage":true}]},{"scriptId":"737","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/chalk/templates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3133,"count":1}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":528,"endOffset":718,"count":0}],"isBlockCoverage":false},{"functionName":"parseArguments","ranges":[{"startOffset":720,"endOffset":1214,"count":0}],"isBlockCoverage":false},{"functionName":"parseStyle","ranges":[{"startOffset":1216,"endOffset":1564,"count":0}],"isBlockCoverage":false},{"functionName":"buildStyle","ranges":[{"startOffset":1566,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2181,"endOffset":3131,"count":0}],"isBlockCoverage":false}]},{"scriptId":"738","url":"readline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33840,"count":1}],"isBlockCoverage":false},{"functionName":"createInterface","ranges":[{"startOffset":2746,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":2873,"endOffset":7555,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7776,"endOffset":7891,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.setPrompt","ranges":[{"startOffset":7929,"endOffset":7974,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._setRawMode","ranges":[{"startOffset":8012,"endOffset":8186,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.prompt","ranges":[{"startOffset":8219,"endOffset":8456,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.question","ranges":[{"startOffset":8491,"endOffset":8749,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._onLine","ranges":[{"startOffset":8783,"endOffset":9002,"count":0}],"isBlockCoverage":false},{"functionName":"_writeToOutput","ranges":[{"startOffset":9042,"endOffset":9236,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._addHistory","ranges":[{"startOffset":9273,"endOffset":10022,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._refreshLine","ranges":[{"startOffset":10061,"endOffset":10996,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.close","ranges":[{"startOffset":11028,"endOffset":11185,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.pause","ranges":[{"startOffset":11217,"endOffset":11339,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.resume","ranges":[{"startOffset":11372,"endOffset":11498,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.write","ranges":[{"startOffset":11530,"endOffset":11676,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._normalWrite","ranges":[{"startOffset":11714,"endOffset":12722,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._insertString","ranges":[{"startOffset":12761,"endOffset":13197,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._tabComplete","ranges":[{"startOffset":13235,"endOffset":14933,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._wordLeft","ranges":[{"startOffset":14968,"endOffset":15322,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._wordRight","ranges":[{"startOffset":15359,"endOffset":15569,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteLeft","ranges":[{"startOffset":15606,"endOffset":15985,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteRight","ranges":[{"startOffset":16024,"endOffset":16352,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteWordLeft","ranges":[{"startOffset":16394,"endOffset":16905,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteWordRight","ranges":[{"startOffset":16948,"endOffset":17238,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteLineLeft","ranges":[{"startOffset":17280,"endOffset":17380,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._deleteLineRight","ranges":[{"startOffset":17423,"endOffset":17507,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.clearLine","ranges":[{"startOffset":17543,"endOffset":17677,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._line","ranges":[{"startOffset":17709,"endOffset":17800,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._historyNext","ranges":[{"startOffset":18255,"endOffset":18775,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._historyPrev","ranges":[{"startOffset":18813,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._getDisplayPos","ranges":[{"startOffset":19516,"endOffset":20318,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.getCursorPos","ranges":[{"startOffset":20402,"endOffset":20541,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._moveCursor","ranges":[{"startOffset":20759,"endOffset":21270,"count":0}],"isBlockCoverage":false},{"functionName":"_ttyWriteDumb","ranges":[{"startOffset":21273,"endOffset":22271,"count":0}],"isBlockCoverage":false},{"functionName":"Interface._ttyWrite","ranges":[{"startOffset":22336,"endOffset":28515,"count":0}],"isBlockCoverage":false},{"functionName":"Interface.<computed>","ranges":[{"startOffset":28561,"endOffset":29338,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeypressEvents","ranges":[{"startOffset":29424,"endOffset":31379,"count":0}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":31456,"endOffset":32055,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":32119,"endOffset":32667,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":32814,"endOffset":33269,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":33346,"endOffset":33705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"739","url":"internal/readline/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11056,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":182,"endOffset":376,"count":4},{"startOffset":341,"endOffset":356,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":755,"endOffset":979,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":981,"endOffset":1227,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":1956,"endOffset":10592,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":10622,"endOffset":10944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"740","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/src/prettyError.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":566,"count":0}],"isBlockCoverage":false}]},{"scriptId":"741","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/src/emoji.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1},{"startOffset":53,"endOffset":93,"count":0},{"startOffset":216,"endOffset":221,"count":0},{"startOffset":261,"endOffset":266,"count":0},{"startOffset":305,"endOffset":310,"count":0},{"startOffset":351,"endOffset":356,"count":0}],"isBlockCoverage":true}]},{"scriptId":"742","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/grapheme-breaker/src/GraphemeBreaker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":36,"endOffset":4165,"count":1}],"isBlockCoverage":true},{"functionName":"codePointAt","ranges":[{"startOffset":606,"endOffset":1209,"count":428},{"startOffset":664,"endOffset":668,"count":12},{"startOffset":726,"endOffset":743,"count":0},{"startOffset":746,"endOffset":945,"count":0},{"startOffset":970,"endOffset":987,"count":0},{"startOffset":990,"endOffset":1188,"count":0}],"isBlockCoverage":true},{"functionName":"shouldBreak","ranges":[{"startOffset":1228,"endOffset":2089,"count":214},{"startOffset":1282,"endOffset":1299,"count":0},{"startOffset":1301,"endOffset":1328,"count":0},{"startOffset":1398,"endOffset":1424,"count":0},{"startOffset":1491,"endOffset":1517,"count":0},{"startOffset":1542,"endOffset":1614,"count":0},{"startOffset":1616,"endOffset":1643,"count":0},{"startOffset":1689,"endOffset":1724,"count":0},{"startOffset":1726,"endOffset":1753,"count":0},{"startOffset":1800,"endOffset":1816,"count":0},{"startOffset":1818,"endOffset":1845,"count":0},{"startOffset":1887,"endOffset":1920,"count":0},{"startOffset":1922,"endOffset":1949,"count":0},{"startOffset":1979,"endOffset":2006,"count":0},{"startOffset":2041,"endOffset":2068,"count":0}],"isBlockCoverage":true},{"functionName":"exports.nextBreak","ranges":[{"startOffset":2114,"endOffset":2838,"count":226},{"startOffset":2218,"endOffset":2242,"count":0},{"startOffset":2262,"endOffset":2285,"count":0},{"startOffset":2322,"endOffset":2357,"count":12},{"startOffset":2357,"endOffset":2808,"count":214},{"startOffset":2555,"endOffset":2573,"count":0},{"startOffset":2575,"endOffset":2639,"count":0},{"startOffset":2641,"endOffset":2668,"count":0},{"startOffset":2783,"endOffset":2808,"count":0},{"startOffset":2808,"endOffset":2837,"count":0}],"isBlockCoverage":true},{"functionName":"exports.previousBreak","ranges":[{"startOffset":2867,"endOffset":3572,"count":0}],"isBlockCoverage":false},{"functionName":"exports.break","ranges":[{"startOffset":3596,"endOffset":3884,"count":0}],"isBlockCoverage":false},{"functionName":"exports.countBreaks","ranges":[{"startOffset":3911,"endOffset":4161,"count":12},{"startOffset":4047,"endOffset":4088,"count":214}],"isBlockCoverage":true}]},{"scriptId":"743","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-trie/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3001,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":113,"endOffset":2965,"count":1}],"isBlockCoverage":true},{"functionName":"UnicodeTrie","ranges":[{"startOffset":1070,"endOffset":2015,"count":1},{"startOffset":1252,"endOffset":1281,"count":0},{"startOffset":1491,"endOffset":1719,"count":0},{"startOffset":1901,"endOffset":2011,"count":0}],"isBlockCoverage":true},{"functionName":"UnicodeTrie.get","ranges":[{"startOffset":2047,"endOffset":2938,"count":428},{"startOffset":2131,"endOffset":2168,"count":0},{"startOffset":2196,"endOffset":2242,"count":0},{"startOffset":2372,"endOffset":2937,"count":0}],"isBlockCoverage":true}]},{"scriptId":"744","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/tiny-inflate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9183,"count":1}],"isBlockCoverage":true},{"functionName":"Tree","ranges":[{"startOffset":44,"endOffset":212,"count":7}],"isBlockCoverage":true},{"functionName":"Data","ranges":[{"startOffset":214,"endOffset":493,"count":2}],"isBlockCoverage":true},{"functionName":"tinf_build_bits_base","ranges":[{"startOffset":1383,"endOffset":1709,"count":2},{"startOffset":1511,"endOffset":1523,"count":6},{"startOffset":1559,"endOffset":1591,"count":54},{"startOffset":1658,"endOffset":1707,"count":60}],"isBlockCoverage":true},{"functionName":"tinf_build_fixed_trees","ranges":[{"startOffset":1747,"endOffset":2309,"count":1},{"startOffset":1857,"endOffset":1873,"count":7},{"startOffset":1965,"endOffset":1987,"count":24},{"startOffset":2016,"endOffset":2037,"count":144},{"startOffset":2064,"endOffset":2097,"count":8},{"startOffset":2126,"endOffset":2163,"count":112},{"startOffset":2225,"endOffset":2241,"count":5},{"startOffset":2291,"endOffset":2307,"count":32}],"isBlockCoverage":true},{"functionName":"tinf_build_tree","ranges":[{"startOffset":2395,"endOffset":2981,"count":3},{"startOffset":2524,"endOffset":2539,"count":48},{"startOffset":2625,"endOffset":2653,"count":332},{"startOffset":2761,"endOffset":2808,"count":48},{"startOffset":2909,"endOffset":2979,"count":332},{"startOffset":2937,"endOffset":2975,"count":222}],"isBlockCoverage":true},{"functionName":"tinf_getbit","ranges":[{"startOffset":3106,"endOffset":3357,"count":2}],"isBlockCoverage":true},{"functionName":"tinf_read_bits","ranges":[{"startOffset":3413,"endOffset":3697,"count":1229},{"startOffset":3469,"endOffset":3481,"count":379},{"startOffset":3481,"endOffset":3509,"count":850},{"startOffset":3509,"endOffset":3589,"count":526},{"startOffset":3589,"endOffset":3696,"count":850}],"isBlockCoverage":true},{"functionName":"tinf_decode_symbol","ranges":[{"startOffset":3753,"endOffset":4212,"count":1759},{"startOffset":3815,"endOffset":3895,"count":1022},{"startOffset":4009,"endOffset":4123,"count":8602}],"isBlockCoverage":true},{"functionName":"tinf_decode_trees","ranges":[{"startOffset":4270,"endOffset":5935,"count":1},{"startOffset":4593,"endOffset":4608,"count":19},{"startOffset":4691,"endOffset":4806,"count":16},{"startOffset":4973,"endOffset":5818,"count":271},{"startOffset":5049,"endOffset":5283,"count":6},{"startOffset":5224,"endOffset":5268,"count":20},{"startOffset":5290,"endOffset":5484,"count":12},{"startOffset":5428,"endOffset":5469,"count":40},{"startOffset":5491,"endOffset":5688,"count":0},{"startOffset":5695,"endOffset":5808,"count":253}],"isBlockCoverage":true},{"functionName":"tinf_inflate_block_data","ranges":[{"startOffset":6104,"endOffset":6848,"count":1},{"startOffset":6162,"endOffset":6846,"count":893},{"startOffset":6260,"endOffset":6289,"count":1},{"startOffset":6289,"endOffset":6310,"count":892},{"startOffset":6310,"endOffset":6350,"count":297},{"startOffset":6350,"endOffset":6842,"count":595},{"startOffset":6786,"endOffset":6836,"count":30135}],"isBlockCoverage":true},{"functionName":"tinf_inflate_uncompressed_block","ranges":[{"startOffset":6894,"endOffset":7648,"count":1},{"startOffset":7032,"endOffset":7079,"count":3},{"startOffset":7405,"endOffset":7428,"count":0},{"startOffset":7503,"endOffset":7551,"count":1544}],"isBlockCoverage":true},{"functionName":"tinf_uncompress","ranges":[{"startOffset":7691,"endOffset":8780,"count":2},{"startOffset":7989,"endOffset":8105,"count":1},{"startOffset":8112,"endOffset":8248,"count":0},{"startOffset":8255,"endOffset":8443,"count":1},{"startOffset":8450,"endOffset":8489,"count":0},{"startOffset":8528,"endOffset":8558,"count":0},{"startOffset":8615,"endOffset":8758,"count":1},{"startOffset":8701,"endOffset":8754,"count":0},{"startOffset":8758,"endOffset":8779,"count":1}],"isBlockCoverage":true}]},{"scriptId":"745","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":150,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":148,"count":12},{"startOffset":141,"endOffset":148,"count":0}],"isBlockCoverage":true}]},{"scriptId":"746","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":253,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":251,"count":12}],"isBlockCoverage":true}]},{"scriptId":"747","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/ora/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3865,"count":1}],"isBlockCoverage":true},{"functionName":"Ora","ranges":[{"startOffset":296,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"get text","ranges":[{"startOffset":1298,"endOffset":1334,"count":0}],"isBlockCoverage":false},{"functionName":"get isSpinning","ranges":[{"startOffset":1337,"endOffset":1385,"count":0}],"isBlockCoverage":false},{"functionName":"set text","ranges":[{"startOffset":1388,"endOffset":1632,"count":0}],"isBlockCoverage":false},{"functionName":"frame","ranges":[{"startOffset":1635,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":1880,"endOffset":2141,"count":0}],"isBlockCoverage":false},{"functionName":"render","ranges":[{"startOffset":2144,"endOffset":2262,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":2265,"endOffset":2542,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2545,"endOffset":2760,"count":0}],"isBlockCoverage":false},{"functionName":"succeed","ranges":[{"startOffset":2763,"endOffset":2847,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":2850,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":2932,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":3016,"endOffset":3094,"count":0}],"isBlockCoverage":false},{"functionName":"stopAndPersist","ranges":[{"startOffset":3097,"endOffset":3479,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":3500,"endOffset":3542,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.promise","ranges":[{"startOffset":3570,"endOffset":3863,"count":0}],"isBlockCoverage":false}]},{"scriptId":"748","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/cli-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"exports.show","ranges":[{"startOffset":100,"endOffset":224,"count":0}],"isBlockCoverage":false},{"functionName":"exports.hide","ranges":[{"startOffset":242,"endOffset":383,"count":0}],"isBlockCoverage":false},{"functionName":"exports.toggle","ranges":[{"startOffset":403,"endOffset":551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"749","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/restore-cursor/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":119,"endOffset":212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"750","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/onetime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":709,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":69,"endOffset":707,"count":1},{"startOffset":133,"endOffset":208,"count":0},{"startOffset":241,"endOffset":291,"count":0}],"isBlockCoverage":true},{"functionName":"onetime","ranges":[{"startOffset":423,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"751","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/mimic-fn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":304,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":302,"count":1},{"startOffset":203,"endOffset":287,"count":2}],"isBlockCoverage":true}]},{"scriptId":"752","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/cli-spinners/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":59,"count":1}],"isBlockCoverage":true}]},{"scriptId":"753","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/logger/node_modules/log-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1},{"startOffset":96,"endOffset":113,"count":0},{"startOffset":114,"endOffset":154,"count":0},{"startOffset":444,"endOffset":455,"count":0}],"isBlockCoverage":true}]},{"scriptId":"754","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/wcwidth/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3141,"count":1}],"isBlockCoverage":true},{"functionName":"wcwidth","ranges":[{"startOffset":149,"endOffset":207,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.config","ranges":[{"startOffset":233,"endOffset":359,"count":0}],"isBlockCoverage":false},{"functionName":"wcswidth","ranges":[{"startOffset":1462,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"wcwidth","ranges":[{"startOffset":1704,"endOffset":2783,"count":0}],"isBlockCoverage":false},{"functionName":"bisearch","ranges":[{"startOffset":2785,"endOffset":3140,"count":0}],"isBlockCoverage":false}]},{"scriptId":"755","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/defaults/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":277,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":48,"endOffset":276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"756","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4389,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13,"endOffset":4303,"count":1}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":867,"endOffset":3145,"count":0}],"isBlockCoverage":false},{"functionName":"clonePrototype","ranges":[{"startOffset":3413,"endOffset":3557,"count":0}],"isBlockCoverage":false},{"functionName":"__objToStr","ranges":[{"startOffset":3590,"endOffset":3660,"count":0}],"isBlockCoverage":false},{"functionName":"__isDate","ranges":[{"startOffset":3694,"endOffset":3787,"count":0}],"isBlockCoverage":false},{"functionName":"__isArray","ranges":[{"startOffset":3817,"endOffset":3912,"count":0}],"isBlockCoverage":false},{"functionName":"__isRegExp","ranges":[{"startOffset":3944,"endOffset":4041,"count":0}],"isBlockCoverage":false},{"functionName":"__getRegExpFlags","ranges":[{"startOffset":4075,"endOffset":4242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"757","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/wcwidth/combining.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3078,"count":1}],"isBlockCoverage":true}]},{"scriptId":"758","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/workers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":202,"count":1},{"startOffset":137,"endOffset":166,"count":0}],"isBlockCoverage":true}]},{"scriptId":"759","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/workers/src/WorkerFarm.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7206,"count":1}],"isBlockCoverage":true},{"functionName":"WorkerFarm","ranges":[{"startOffset":295,"endOffset":986,"count":1},{"startOffset":799,"endOffset":862,"count":0}],"isBlockCoverage":true},{"functionName":"warmupWorker","ranges":[{"startOffset":990,"endOffset":1554,"count":2},{"startOffset":1076,"endOffset":1097,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1368,"endOffset":1517,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1534,"endOffset":1542,"count":0}],"isBlockCoverage":false},{"functionName":"shouldStartRemoteWorkers","ranges":[{"startOffset":1558,"endOffset":1733,"count":3},{"startOffset":1644,"endOffset":1684,"count":0},{"startOffset":1685,"endOffset":1722,"count":0}],"isBlockCoverage":true},{"functionName":"mkhandle","ranges":[{"startOffset":1737,"endOffset":2269,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1767,"endOffset":2264,"count":2},{"startOffset":1993,"endOffset":2057,"count":0}],"isBlockCoverage":true},{"functionName":"onError","ranges":[{"startOffset":2273,"endOffset":2421,"count":0}],"isBlockCoverage":false},{"functionName":"startChild","ranges":[{"startOffset":2425,"endOffset":2883,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2573,"endOffset":2614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2641,"endOffset":2666,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2695,"endOffset":2720,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":2779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2806,"endOffset":2835,"count":4}],"isBlockCoverage":true},{"functionName":"stopWorker","ranges":[{"startOffset":2887,"endOffset":3336,"count":8},{"startOffset":2939,"endOffset":3332,"count":4},{"startOffset":3042,"endOffset":3177,"count":3},{"startOffset":3092,"endOffset":3169,"count":4}],"isBlockCoverage":true},{"functionName":"processQueue","ranges":[{"startOffset":3340,"endOffset":3853,"count":12},{"startOffset":3383,"endOffset":3408,"count":8},{"startOffset":3410,"endOffset":3417,"count":7},{"startOffset":3417,"endOffset":3482,"count":5},{"startOffset":3482,"endOffset":3514,"count":2},{"startOffset":3514,"endOffset":3562,"count":5},{"startOffset":3562,"endOffset":3849,"count":15},{"startOffset":3598,"endOffset":3622,"count":2},{"startOffset":3622,"endOffset":3648,"count":13},{"startOffset":3648,"endOffset":3665,"count":2},{"startOffset":3666,"endOffset":3686,"count":2},{"startOffset":3688,"endOffset":3715,"count":11},{"startOffset":3715,"endOffset":3843,"count":2},{"startOffset":3849,"endOffset":3852,"count":5}],"isBlockCoverage":true},{"functionName":"processRequest","ranges":[{"startOffset":3857,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"addCall","ranges":[{"startOffset":4643,"endOffset":4983,"count":2},{"startOffset":4688,"endOffset":4771,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4796,"endOffset":4977,"count":2}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":4987,"endOffset":5181,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5092,"endOffset":5125,"count":4}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":5185,"endOffset":5411,"count":1}],"isBlockCoverage":true},{"functionName":"persistBundlerOptions","ranges":[{"startOffset":5415,"endOffset":5538,"count":1},{"startOffset":5487,"endOffset":5534,"count":0}],"isBlockCoverage":true},{"functionName":"startMaxWorkers","ranges":[{"startOffset":5542,"endOffset":5843,"count":1},{"startOffset":5797,"endOffset":5833,"count":2}],"isBlockCoverage":true},{"functionName":"shouldUseRemoteWorkers","ranges":[{"startOffset":5847,"endOffset":6010,"count":2}],"isBlockCoverage":true},{"functionName":"getShared","ranges":[{"startOffset":6021,"endOffset":6532,"count":1},{"startOffset":6194,"endOffset":6208,"count":0},{"startOffset":6210,"endOffset":6264,"count":0},{"startOffset":6343,"endOffset":6397,"count":0},{"startOffset":6415,"endOffset":6426,"count":0},{"startOffset":6428,"endOffset":6508,"count":0}],"isBlockCoverage":true},{"functionName":"getNumWorkers","ranges":[{"startOffset":6543,"endOffset":6671,"count":1},{"startOffset":6605,"endOffset":6647,"count":0}],"isBlockCoverage":true},{"functionName":"callMaster","ranges":[{"startOffset":6682,"endOffset":6948,"count":0}],"isBlockCoverage":false},{"functionName":"isWorker","ranges":[{"startOffset":6959,"endOffset":7056,"count":1}],"isBlockCoverage":true},{"functionName":"getConcurrentCallsPerWorker","ranges":[{"startOffset":7067,"endOffset":7173,"count":1}],"isBlockCoverage":true}]},{"scriptId":"760","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/workers/src/Worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3769,"count":1}],"isBlockCoverage":true},{"functionName":"Worker","ranges":[{"startOffset":243,"endOffset":550,"count":4}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":554,"endOffset":1344,"count":4},{"startOffset":1302,"endOffset":1343,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":649,"endOffset":683,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":901,"endOffset":927,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":959,"endOffset":1033,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1064,"endOffset":1109,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1135,"endOffset":1300,"count":4}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":1348,"endOffset":1708,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1425,"endOffset":1702,"count":2}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":1559,"endOffset":1670,"count":2}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1712,"endOffset":2354,"count":8},{"startOffset":1753,"endOffset":1800,"count":0},{"startOffset":2253,"endOffset":2350,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1841,"endOffset":2199,"count":8},{"startOffset":1868,"endOffset":1893,"count":0},{"startOffset":1895,"endOffset":1980,"count":0},{"startOffset":2052,"endOffset":2193,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2158,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":2358,"endOffset":2633,"count":8},{"startOffset":2412,"endOffset":2433,"count":0}],"isBlockCoverage":true},{"functionName":"receive","ranges":[{"startOffset":2637,"endOffset":3337,"count":6},{"startOffset":2674,"endOffset":2692,"count":4},{"startOffset":2694,"endOffset":2715,"count":2},{"startOffset":2715,"endOffset":2868,"count":4},{"startOffset":2868,"endOffset":2909,"count":0},{"startOffset":2909,"endOffset":3333,"count":4},{"startOffset":2997,"endOffset":3115,"count":0},{"startOffset":3152,"endOffset":3215,"count":0}],"isBlockCoverage":true},{"functionName":"stop","ranges":[{"startOffset":3341,"endOffset":3740,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3512,"endOffset":3543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3620,"endOffset":3686,"count":4}],"isBlockCoverage":true}]},{"scriptId":"761","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/workers/src/cpuCount.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":44,"endOffset":195,"count":1},{"startOffset":125,"endOffset":172,"count":0},{"startOffset":188,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"762","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/assets/RawAsset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":228,"endOffset":237,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":241,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"generateHash","ranges":[{"startOffset":759,"endOffset":817,"count":0}],"isBlockCoverage":false}]},{"scriptId":"763","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Asset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7119,"count":1}],"isBlockCoverage":true},{"functionName":"Asset","ranges":[{"startOffset":748,"endOffset":1630,"count":5},{"startOffset":1171,"endOffset":1196,"count":1},{"startOffset":1197,"endOffset":1203,"count":4}],"isBlockCoverage":true},{"functionName":"shouldInvalidate","ranges":[{"startOffset":1634,"endOffset":1676,"count":0}],"isBlockCoverage":false},{"functionName":"loadIfNeeded","ranges":[{"startOffset":1680,"endOffset":1786,"count":9},{"startOffset":1734,"endOffset":1782,"count":2}],"isBlockCoverage":true},{"functionName":"parseIfNeeded","ranges":[{"startOffset":1790,"endOffset":1925,"count":3},{"startOffset":1864,"endOffset":1921,"count":1}],"isBlockCoverage":true},{"functionName":"getDependencies","ranges":[{"startOffset":1929,"endOffset":2252,"count":3},{"startOffset":1993,"endOffset":2050,"count":1},{"startOffset":2057,"endOffset":2078,"count":0}],"isBlockCoverage":true},{"functionName":"addDependency","ranges":[{"startOffset":2256,"endOffset":2349,"count":4}],"isBlockCoverage":true},{"functionName":"resolveDependency","ranges":[{"startOffset":2353,"endOffset":2929,"count":0}],"isBlockCoverage":false},{"functionName":"addURLDependency","ranges":[{"startOffset":2933,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"get package","ranges":[{"startOffset":3457,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"getPackage","ranges":[{"startOffset":3633,"endOffset":3796,"count":11},{"startOffset":3678,"endOffset":3765,"count":2}],"isBlockCoverage":true},{"functionName":"getConfig","ranges":[{"startOffset":3800,"endOffset":4456,"count":4},{"startOffset":3865,"endOffset":4006,"count":2},{"startOffset":3947,"endOffset":4000,"count":0},{"startOffset":4085,"endOffset":4097,"count":2},{"startOffset":4125,"endOffset":4434,"count":2},{"startOffset":4336,"endOffset":4366,"count":0},{"startOffset":4403,"endOffset":4415,"count":0},{"startOffset":4434,"endOffset":4455,"count":2}],"isBlockCoverage":true},{"functionName":"mightHaveDependencies","ranges":[{"startOffset":4460,"endOffset":4506,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":4510,"endOffset":4578,"count":2}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4582,"endOffset":4624,"count":1}],"isBlockCoverage":true},{"functionName":"collectDependencies","ranges":[{"startOffset":4628,"endOffset":4684,"count":1}],"isBlockCoverage":true},{"functionName":"pretransform","ranges":[{"startOffset":4688,"endOffset":4743,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":4747,"endOffset":4799,"count":1}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":4803,"endOffset":4878,"count":0}],"isBlockCoverage":false},{"functionName":"process","ranges":[{"startOffset":4882,"endOffset":5689,"count":3},{"startOffset":5259,"endOffset":5445,"count":2},{"startOffset":5346,"endOffset":5408,"count":0}],"isBlockCoverage":true},{"functionName":"postProcess","ranges":[{"startOffset":5693,"endOffset":5749,"count":3}],"isBlockCoverage":true},{"functionName":"generateHash","ranges":[{"startOffset":5753,"endOffset":5812,"count":3}],"isBlockCoverage":true},{"functionName":"invalidate","ranges":[{"startOffset":5816,"endOffset":6017,"count":0}],"isBlockCoverage":false},{"functionName":"invalidateBundle","ranges":[{"startOffset":6021,"endOffset":6130,"count":2}],"isBlockCoverage":true},{"functionName":"generateBundleName","ranges":[{"startOffset":6134,"endOffset":6325,"count":1}],"isBlockCoverage":true},{"functionName":"replaceBundleNames","ranges":[{"startOffset":6329,"endOffset":7040,"count":3},{"startOffset":6675,"endOffset":6739,"count":6},{"startOffset":6871,"endOffset":6881,"count":0},{"startOffset":6883,"endOffset":6981,"count":0}],"isBlockCoverage":true},{"functionName":"generateErrorMessage","ranges":[{"startOffset":7044,"endOffset":7091,"count":0}],"isBlockCoverage":false}]},{"scriptId":"764","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7293,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13,"endOffset":7207,"count":1},{"startOffset":166,"endOffset":323,"count":0},{"startOffset":367,"endOffset":408,"count":0},{"startOffset":464,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"_instanceof","ranges":[{"startOffset":41,"endOffset":122,"count":0}],"isBlockCoverage":false},{"functionName":"nativeMap","ranges":[{"startOffset":307,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"nativeSet","ranges":[{"startOffset":392,"endOffset":405,"count":0}],"isBlockCoverage":false},{"functionName":"nativePromise","ranges":[{"startOffset":493,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":1551,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"clonePrototype","ranges":[{"startOffset":6322,"endOffset":6466,"count":0}],"isBlockCoverage":false},{"functionName":"__objToStr","ranges":[{"startOffset":6499,"endOffset":6569,"count":0}],"isBlockCoverage":false},{"functionName":"__isDate","ranges":[{"startOffset":6602,"endOffset":6695,"count":0}],"isBlockCoverage":false},{"functionName":"__isArray","ranges":[{"startOffset":6724,"endOffset":6819,"count":0}],"isBlockCoverage":false},{"functionName":"__isRegExp","ranges":[{"startOffset":6850,"endOffset":6947,"count":0}],"isBlockCoverage":false},{"functionName":"__getRegExpFlags","ranges":[{"startOffset":6980,"endOffset":7147,"count":0}],"isBlockCoverage":false}]},{"scriptId":"765","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":486,"count":1}],"isBlockCoverage":true},{"functionName":"md5","ranges":[{"startOffset":61,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"md5.file","ranges":[{"startOffset":198,"endOffset":461,"count":0}],"isBlockCoverage":false}]},{"scriptId":"766","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/is-url.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":218,"endOffset":310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"767","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-url/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":856,"count":1}],"isBlockCoverage":true},{"functionName":"isUrl","ranges":[{"startOffset":429,"endOffset":855,"count":0}],"isBlockCoverage":false}]},{"scriptId":"768","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1529,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":220,"endOffset":788,"count":85},{"startOffset":404,"endOffset":449,"count":80},{"startOffset":451,"endOffset":473,"count":5},{"startOffset":473,"endOffset":511,"count":80},{"startOffset":511,"endOffset":740,"count":102},{"startOffset":604,"endOffset":627,"count":4},{"startOffset":634,"endOffset":657,"count":98},{"startOffset":658,"endOffset":675,"count":98},{"startOffset":675,"endOffset":736,"count":5},{"startOffset":740,"endOffset":787,"count":75}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":790,"endOffset":1479,"count":3},{"startOffset":1041,"endOffset":1093,"count":0},{"startOffset":1200,"endOffset":1215,"count":0},{"startOffset":1267,"endOffset":1273,"count":0},{"startOffset":1281,"endOffset":1457,"count":0},{"startOffset":1461,"endOffset":1478,"count":0}],"isBlockCoverage":true}]},{"scriptId":"769","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/json5/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":418,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":232,"endOffset":314,"count":2},{"startOffset":295,"endOffset":299,"count":0}],"isBlockCoverage":true}]},{"scriptId":"770","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/json5/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13014,"count":1},{"startOffset":176,"endOffset":300,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":144,"endOffset":176,"count":216}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":177,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":391,"endOffset":622,"count":1},{"startOffset":464,"endOffset":621,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":776,"endOffset":1072,"count":3},{"startOffset":922,"endOffset":961,"count":831},{"startOffset":1018,"endOffset":1060,"count":0}],"isBlockCoverage":true},{"functionName":"internalize","ranges":[{"startOffset":1072,"endOffset":1409,"count":0}],"isBlockCoverage":false},{"functionName":"lex","ranges":[{"startOffset":1500,"endOffset":1647,"count":831},{"startOffset":1577,"endOffset":1646,"count":8076},{"startOffset":1630,"endOffset":1645,"count":831}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":1647,"endOffset":1733,"count":16023},{"startOffset":1678,"endOffset":1732,"count":16017}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":1733,"endOffset":1862,"count":7905},{"startOffset":1774,"endOffset":1791,"count":252},{"startOffset":1791,"endOffset":1833,"count":7653},{"startOffset":1801,"endOffset":1819,"count":7650},{"startOffset":1819,"endOffset":1833,"count":3},{"startOffset":1838,"endOffset":1853,"count":7902}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1885,"endOffset":2195,"count":2175},{"startOffset":1915,"endOffset":1944,"count":0},{"startOffset":1944,"endOffset":1976,"count":1092},{"startOffset":1976,"endOffset":2034,"count":1344},{"startOffset":2034,"endOffset":2075,"count":0},{"startOffset":2075,"endOffset":2120,"count":3},{"startOffset":2121,"endOffset":2149,"count":828},{"startOffset":2149,"endOffset":2164,"count":0},{"startOffset":2164,"endOffset":2194,"count":828}],"isBlockCoverage":true},{"functionName":"comment","ranges":[{"startOffset":2204,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineComment","ranges":[{"startOffset":2379,"endOffset":2524,"count":0}],"isBlockCoverage":false},{"functionName":"multiLineCommentAsterisk","ranges":[{"startOffset":2550,"endOffset":2736,"count":0}],"isBlockCoverage":false},{"functionName":"singleLineComment","ranges":[{"startOffset":2755,"endOffset":2924,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":2931,"endOffset":3719,"count":213},{"startOffset":2958,"endOffset":2966,"count":21},{"startOffset":2966,"endOffset":3011,"count":36},{"startOffset":3011,"endOffset":3070,"count":0},{"startOffset":3070,"endOffset":3132,"count":6},{"startOffset":3132,"endOffset":3615,"count":0},{"startOffset":3615,"endOffset":3692,"count":171},{"startOffset":3693,"endOffset":3718,"count":0}],"isBlockCoverage":true},{"functionName":"identifierNameStartEscape","ranges":[{"startOffset":3746,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"identifierName","ranges":[{"startOffset":4002,"endOffset":4246,"count":0}],"isBlockCoverage":false},{"functionName":"identifierNameEscape","ranges":[{"startOffset":4268,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"sign","ranges":[{"startOffset":4538,"endOffset":4951,"count":0}],"isBlockCoverage":false},{"functionName":"zero","ranges":[{"startOffset":4957,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"decimalInteger","ranges":[{"startOffset":5215,"endOffset":5461,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPointLeading","ranges":[{"startOffset":5482,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"decimalPoint","ranges":[{"startOffset":5622,"endOffset":5839,"count":0}],"isBlockCoverage":false},{"functionName":"decimalFraction","ranges":[{"startOffset":5856,"endOffset":6049,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponent","ranges":[{"startOffset":6066,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentSign","ranges":[{"startOffset":6296,"endOffset":6429,"count":0}],"isBlockCoverage":false},{"functionName":"decimalExponentInteger","ranges":[{"startOffset":6453,"endOffset":6577,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimal","ranges":[{"startOffset":6590,"endOffset":6714,"count":0}],"isBlockCoverage":false},{"functionName":"hexadecimalInteger","ranges":[{"startOffset":6734,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"string","ranges":[{"startOffset":6865,"endOffset":7257,"count":5688},{"startOffset":6893,"endOffset":6933,"count":24},{"startOffset":6933,"endOffset":7019,"count":369},{"startOffset":6997,"endOffset":7019,"count":0},{"startOffset":7019,"endOffset":7241,"count":0},{"startOffset":7242,"endOffset":7256,"count":5295}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":7264,"endOffset":7362,"count":3},{"startOffset":7345,"endOffset":7361,"count":0}],"isBlockCoverage":true},{"functionName":"beforePropertyName","ranges":[{"startOffset":7382,"endOffset":7758,"count":198},{"startOffset":7422,"endOffset":7590,"count":0},{"startOffset":7658,"endOffset":7757,"count":0}],"isBlockCoverage":true},{"functionName":"afterPropertyName","ranges":[{"startOffset":7777,"endOffset":7881,"count":198},{"startOffset":7855,"endOffset":7880,"count":0}],"isBlockCoverage":true},{"functionName":"beforePropertyValue","ranges":[{"startOffset":7902,"endOffset":7950,"count":198}],"isBlockCoverage":true},{"functionName":"afterPropertyValue","ranges":[{"startOffset":7970,"endOffset":8090,"count":198},{"startOffset":8010,"endOffset":8018,"count":174},{"startOffset":8064,"endOffset":8089,"count":0}],"isBlockCoverage":true},{"functionName":"beforeArrayValue","ranges":[{"startOffset":8108,"endOffset":8202,"count":18},{"startOffset":8147,"endOffset":8185,"count":3},{"startOffset":8185,"endOffset":8201,"count":15}],"isBlockCoverage":true},{"functionName":"afterArrayValue","ranges":[{"startOffset":8219,"endOffset":8336,"count":15},{"startOffset":8256,"endOffset":8264,"count":3},{"startOffset":8310,"endOffset":8335,"count":0}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":8341,"endOffset":8382,"count":0}],"isBlockCoverage":false},{"functionName":"newToken","ranges":[{"startOffset":8384,"endOffset":8468,"count":831}],"isBlockCoverage":true},{"functionName":"literal","ranges":[{"startOffset":8468,"endOffset":8985,"count":6},{"startOffset":8719,"endOffset":8796,"count":18},{"startOffset":8762,"endOffset":8789,"count":0},{"startOffset":8797,"endOffset":8850,"count":0},{"startOffset":8891,"endOffset":8909,"count":0},{"startOffset":8910,"endOffset":8930,"count":0},{"startOffset":8960,"endOffset":8982,"count":0}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":8985,"endOffset":9588,"count":24},{"startOffset":9026,"endOffset":9573,"count":0}],"isBlockCoverage":true},{"functionName":"hexEscape","ranges":[{"startOffset":9588,"endOffset":9824,"count":0}],"isBlockCoverage":false},{"functionName":"unicodeEscape","ranges":[{"startOffset":9824,"endOffset":10023,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":10046,"endOffset":10112,"count":3},{"startOffset":10085,"endOffset":10105,"count":0}],"isBlockCoverage":true},{"functionName":"beforePropertyName","ranges":[{"startOffset":10132,"endOffset":10326,"count":198},{"startOffset":10181,"endOffset":10198,"count":0},{"startOffset":10265,"endOffset":10324,"count":0}],"isBlockCoverage":true},{"functionName":"afterPropertyName","ranges":[{"startOffset":10345,"endOffset":10449,"count":198},{"startOffset":10396,"endOffset":10416,"count":0}],"isBlockCoverage":true},{"functionName":"beforePropertyValue","ranges":[{"startOffset":10470,"endOffset":10550,"count":198},{"startOffset":10523,"endOffset":10543,"count":0}],"isBlockCoverage":true},{"functionName":"beforeArrayValue","ranges":[{"startOffset":10568,"endOffset":10707,"count":18},{"startOffset":10618,"endOffset":10638,"count":0},{"startOffset":10666,"endOffset":10685,"count":3},{"startOffset":10686,"endOffset":10700,"count":3},{"startOffset":10700,"endOffset":10706,"count":15}],"isBlockCoverage":true},{"functionName":"afterPropertyValue","ranges":[{"startOffset":10727,"endOffset":10882,"count":198},{"startOffset":10779,"endOffset":10799,"count":0},{"startOffset":10819,"endOffset":10866,"count":174},{"startOffset":10866,"endOffset":10880,"count":24}],"isBlockCoverage":true},{"functionName":"afterArrayValue","ranges":[{"startOffset":10899,"endOffset":11049,"count":15},{"startOffset":10948,"endOffset":10968,"count":0},{"startOffset":10988,"endOffset":11033,"count":3},{"startOffset":11033,"endOffset":11047,"count":12}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":11054,"endOffset":11070,"count":3}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":11072,"endOffset":11800,"count":216},{"startOffset":11124,"endOffset":11214,"count":39},{"startOffset":11161,"endOffset":11184,"count":24},{"startOffset":11184,"endOffset":11207,"count":15},{"startOffset":11214,"endOffset":11225,"count":0},{"startOffset":11225,"endOffset":11253,"count":6},{"startOffset":11253,"endOffset":11290,"count":177},{"startOffset":11311,"endOffset":11323,"count":3},{"startOffset":11323,"endOffset":11430,"count":213},{"startOffset":11386,"endOffset":11406,"count":15},{"startOffset":11406,"endOffset":11429,"count":198},{"startOffset":11474,"endOffset":11486,"count":0},{"startOffset":11514,"endOffset":11626,"count":39},{"startOffset":11557,"endOffset":11588,"count":15},{"startOffset":11588,"endOffset":11625,"count":24},{"startOffset":11626,"endOffset":11799,"count":177},{"startOffset":11682,"endOffset":11700,"count":0},{"startOffset":11731,"endOffset":11761,"count":15},{"startOffset":11761,"endOffset":11798,"count":162}],"isBlockCoverage":true},{"functionName":"pop","ranges":[{"startOffset":11800,"endOffset":11995,"count":39},{"startOffset":11878,"endOffset":11896,"count":3},{"startOffset":11896,"endOffset":11994,"count":36},{"startOffset":11927,"endOffset":11957,"count":0}],"isBlockCoverage":true},{"functionName":"invalidChar","ranges":[{"startOffset":11995,"endOffset":12196,"count":0}],"isBlockCoverage":false},{"functionName":"invalidEOF","ranges":[{"startOffset":12196,"endOffset":12288,"count":0}],"isBlockCoverage":false},{"functionName":"invalidIdentifier","ranges":[{"startOffset":12288,"endOffset":12405,"count":0}],"isBlockCoverage":false},{"functionName":"separatorChar","ranges":[{"startOffset":12405,"endOffset":12507,"count":0}],"isBlockCoverage":false},{"functionName":"formatChar","ranges":[{"startOffset":12507,"endOffset":12862,"count":0}],"isBlockCoverage":false},{"functionName":"syntaxError","ranges":[{"startOffset":12862,"endOffset":12980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"771","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/json5/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":329,"endOffset":560,"count":1},{"startOffset":402,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"isSpaceSeparator","ranges":[{"startOffset":560,"endOffset":628,"count":828}],"isBlockCoverage":true},{"functionName":"isIdStartChar","ranges":[{"startOffset":628,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"isIdContinueChar","ranges":[{"startOffset":736,"endOffset":894,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":894,"endOffset":937,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":937,"endOffset":989,"count":0}],"isBlockCoverage":false}]},{"scriptId":"772","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/json5/lib/unicode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15481,"count":1}],"isBlockCoverage":true}]},{"scriptId":"773","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/json5/lib/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6146,"count":1},{"startOffset":176,"endOffset":300,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":144,"endOffset":176,"count":0}],"isBlockCoverage":false},{"functionName":"_typeof","ranges":[{"startOffset":177,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":395,"endOffset":626,"count":1},{"startOffset":468,"endOffset":625,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":626,"endOffset":6112,"count":0}],"isBlockCoverage":false}]},{"scriptId":"774","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/toml.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true}]},{"scriptId":"775","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true}]},{"scriptId":"776","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/parse-string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":415,"count":1}],"isBlockCoverage":true},{"functionName":"parseString","ranges":[{"startOffset":150,"endOffset":414,"count":0}],"isBlockCoverage":false}]},{"scriptId":"777","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/toml-parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45566,"count":1},{"startOffset":4690,"endOffset":4759,"count":0},{"startOffset":4812,"endOffset":4824,"count":0}],"isBlockCoverage":true},{"functionName":"TomlError","ranges":[{"startOffset":231,"endOffset":451,"count":0}],"isBlockCoverage":false},{"functionName":"TomlError.wrap","ranges":[{"startOffset":471,"endOffset":581,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":2117,"endOffset":2180,"count":0}],"isBlockCoverage":false},{"functionName":"isHexit","ranges":[{"startOffset":2181,"endOffset":2314,"count":0}],"isBlockCoverage":false},{"functionName":"isBit","ranges":[{"startOffset":2315,"endOffset":2378,"count":0}],"isBlockCoverage":false},{"functionName":"isOctit","ranges":[{"startOffset":2379,"endOffset":2444,"count":0}],"isBlockCoverage":false},{"functionName":"isAlphaNumQuoteHyphen","ranges":[{"startOffset":2445,"endOffset":2712,"count":0}],"isBlockCoverage":false},{"functionName":"isAlphaNumHyphen","ranges":[{"startOffset":2713,"endOffset":2923,"count":0}],"isBlockCoverage":false},{"functionName":"hasKey","ranges":[{"startOffset":3184,"endOffset":3350,"count":0}],"isBlockCoverage":false},{"functionName":"InlineTable","ranges":[{"startOffset":3396,"endOffset":3502,"count":0}],"isBlockCoverage":false},{"functionName":"isInlineTable","ranges":[{"startOffset":3503,"endOffset":3634,"count":0}],"isBlockCoverage":false},{"functionName":"Table","ranges":[{"startOffset":3666,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"isTable","ranges":[{"startOffset":3809,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"InlineList","ranges":[{"startOffset":4015,"endOffset":4158,"count":0}],"isBlockCoverage":false},{"functionName":"isInlineList","ranges":[{"startOffset":4159,"endOffset":4288,"count":0}],"isBlockCoverage":false},{"functionName":"List","ranges":[{"startOffset":4318,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"isList","ranges":[{"startOffset":4410,"endOffset":4526,"count":0}],"isBlockCoverage":false},{"functionName":"BoxedBigInt","ranges":[{"startOffset":4848,"endOffset":5072,"count":0}],"isBlockCoverage":false},{"functionName":"isNaN","ranges":[{"startOffset":5075,"endOffset":5120,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5152,"endOffset":5199,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5231,"endOffset":5293,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":5296,"endOffset":5334,"count":0}],"isBlockCoverage":false},{"functionName":"Integer","ranges":[{"startOffset":5372,"endOffset":5872,"count":0}],"isBlockCoverage":false},{"functionName":"isInteger","ranges":[{"startOffset":5873,"endOffset":5995,"count":0}],"isBlockCoverage":false},{"functionName":"Float","ranges":[{"startOffset":6027,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"isFloat","ranges":[{"startOffset":6222,"endOffset":6340,"count":0}],"isBlockCoverage":false},{"functionName":"tomlType","ranges":[{"startOffset":6342,"endOffset":6969,"count":0}],"isBlockCoverage":false},{"functionName":"makeParserClass","ranges":[{"startOffset":6971,"endOffset":45565,"count":1}],"isBlockCoverage":true},{"functionName":"TOMLParser","ranges":[{"startOffset":7047,"endOffset":7119,"count":0}],"isBlockCoverage":false},{"functionName":"atEndOfWord","ranges":[{"startOffset":7148,"endOffset":7277,"count":0}],"isBlockCoverage":false},{"functionName":"atEndOfLine","ranges":[{"startOffset":7282,"endOffset":7390,"count":0}],"isBlockCoverage":false},{"functionName":"parseStart","ranges":[{"startOffset":7396,"endOffset":7995,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhitespaceToEOL","ranges":[{"startOffset":8128,"endOffset":8589,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignStatement","ranges":[{"startOffset":8629,"endOffset":8732,"count":0}],"isBlockCoverage":false},{"functionName":"recordAssignStatement","ranges":[{"startOffset":8737,"endOffset":9445,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssign","ranges":[{"startOffset":9529,"endOffset":9622,"count":0}],"isBlockCoverage":false},{"functionName":"recordAssignKeyword","ranges":[{"startOffset":9627,"endOffset":9853,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignKeywordPreDot","ranges":[{"startOffset":9858,"endOffset":10111,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignKeywordPostDot","ranges":[{"startOffset":10116,"endOffset":10292,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignEqual","ranges":[{"startOffset":10298,"endOffset":10513,"count":0}],"isBlockCoverage":false},{"functionName":"parseAssignPreValue","ranges":[{"startOffset":10518,"endOffset":10719,"count":0}],"isBlockCoverage":false},{"functionName":"recordAssignValue","ranges":[{"startOffset":10724,"endOffset":10830,"count":0}],"isBlockCoverage":false},{"functionName":"parseComment","ranges":[{"startOffset":10864,"endOffset":11035,"count":0}],"isBlockCoverage":false},{"functionName":"parseTableOrList","ranges":[{"startOffset":11087,"endOffset":11250,"count":0}],"isBlockCoverage":false},{"functionName":"parseTable","ranges":[{"startOffset":11286,"endOffset":11377,"count":0}],"isBlockCoverage":false},{"functionName":"parseTableNext","ranges":[{"startOffset":11382,"endOffset":11577,"count":0}],"isBlockCoverage":false},{"functionName":"parseTableMore","ranges":[{"startOffset":11582,"endOffset":12706,"count":0}],"isBlockCoverage":false},{"functionName":"parseList","ranges":[{"startOffset":12737,"endOffset":12826,"count":0}],"isBlockCoverage":false},{"functionName":"parseListNext","ranges":[{"startOffset":12831,"endOffset":13024,"count":0}],"isBlockCoverage":false},{"functionName":"parseListMore","ranges":[{"startOffset":13029,"endOffset":14547,"count":0}],"isBlockCoverage":false},{"functionName":"parseListEnd","ranges":[{"startOffset":14552,"endOffset":14787,"count":0}],"isBlockCoverage":false},{"functionName":"parseValue","ranges":[{"startOffset":14861,"endOffset":16026,"count":0}],"isBlockCoverage":false},{"functionName":"recordValue","ranges":[{"startOffset":16031,"endOffset":16093,"count":0}],"isBlockCoverage":false},{"functionName":"parseInf","ranges":[{"startOffset":16099,"endOffset":16314,"count":0}],"isBlockCoverage":false},{"functionName":"parseInf2","ranges":[{"startOffset":16319,"endOffset":16638,"count":0}],"isBlockCoverage":false},{"functionName":"parseNan","ranges":[{"startOffset":16644,"endOffset":16841,"count":0}],"isBlockCoverage":false},{"functionName":"parseNan2","ranges":[{"startOffset":16846,"endOffset":17035,"count":0}],"isBlockCoverage":false},{"functionName":"parseKeyword","ranges":[{"startOffset":17096,"endOffset":17365,"count":0}],"isBlockCoverage":false},{"functionName":"parseBareKey","ranges":[{"startOffset":17397,"endOffset":17835,"count":0}],"isBlockCoverage":false},{"functionName":"parseSingleString","ranges":[{"startOffset":17884,"endOffset":18082,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralString","ranges":[{"startOffset":18087,"endOffset":18541,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralMultiStringMaybe","ranges":[{"startOffset":18546,"endOffset":18732,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralMultiString","ranges":[{"startOffset":18737,"endOffset":19013,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralMultiStringContent","ranges":[{"startOffset":19018,"endOffset":19572,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralMultiEnd","ranges":[{"startOffset":19577,"endOffset":19813,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteralMultiEnd2","ranges":[{"startOffset":19818,"endOffset":20032,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoubleString","ranges":[{"startOffset":20070,"endOffset":20259,"count":0}],"isBlockCoverage":false},{"functionName":"parseBasicString","ranges":[{"startOffset":20264,"endOffset":20837,"count":0}],"isBlockCoverage":false},{"functionName":"recordEscapeReplacement","ranges":[{"startOffset":20842,"endOffset":20969,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiStringMaybe","ranges":[{"startOffset":20974,"endOffset":21146,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiString","ranges":[{"startOffset":21151,"endOffset":21406,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiStringContent","ranges":[{"startOffset":21411,"endOffset":22082,"count":0}],"isBlockCoverage":false},{"functionName":"errorControlCharInString","ranges":[{"startOffset":22087,"endOffset":22402,"count":0}],"isBlockCoverage":false},{"functionName":"recordMultiEscapeReplacement","ranges":[{"startOffset":22407,"endOffset":22546,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiEnd","ranges":[{"startOffset":22551,"endOffset":22766,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiEnd2","ranges":[{"startOffset":22771,"endOffset":22971,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiEscape","ranges":[{"startOffset":22976,"endOffset":23288,"count":0}],"isBlockCoverage":false},{"functionName":"parsePreMultiTrim","ranges":[{"startOffset":23293,"endOffset":23601,"count":0}],"isBlockCoverage":false},{"functionName":"parseMultiTrim","ranges":[{"startOffset":23606,"endOffset":23891,"count":0}],"isBlockCoverage":false},{"functionName":"parseEscape","ranges":[{"startOffset":23896,"endOffset":24334,"count":0}],"isBlockCoverage":false},{"functionName":"parseUnicodeReturn","ranges":[{"startOffset":24339,"endOffset":24762,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmallUnicode","ranges":[{"startOffset":24767,"endOffset":25030,"count":0}],"isBlockCoverage":false},{"functionName":"parseLargeUnicode","ranges":[{"startOffset":25035,"endOffset":25298,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberSign","ranges":[{"startOffset":25322,"endOffset":25423,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeSignedInfOrNan","ranges":[{"startOffset":25428,"endOffset":25718,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberIntegerStart","ranges":[{"startOffset":25723,"endOffset":25954,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberIntegerExponentOrDecimal","ranges":[{"startOffset":25959,"endOffset":26355,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberInteger","ranges":[{"startOffset":26360,"endOffset":27073,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoUnder","ranges":[{"startOffset":27078,"endOffset":27435,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoUnderHexOctBinLiteral","ranges":[{"startOffset":27440,"endOffset":27765,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberFloat","ranges":[{"startOffset":27770,"endOffset":28184,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberExponentSign","ranges":[{"startOffset":28189,"endOffset":28576,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberExponent","ranges":[{"startOffset":28581,"endOffset":28832,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberOrDateTime","ranges":[{"startOffset":28870,"endOffset":29096,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberOrDateTimeOnly","ranges":[{"startOffset":29101,"endOffset":29987,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTimeOnly","ranges":[{"startOffset":29992,"endOffset":30579,"count":0}],"isBlockCoverage":false},{"functionName":"parseNumberBaseOrDateTime","ranges":[{"startOffset":30584,"endOffset":31313,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntegerHex","ranges":[{"startOffset":31318,"endOffset":31765,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntegerOct","ranges":[{"startOffset":31770,"endOffset":32217,"count":0}],"isBlockCoverage":false},{"functionName":"parseIntegerBin","ranges":[{"startOffset":32222,"endOffset":32667,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTime","ranges":[{"startOffset":32692,"endOffset":33062,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateMonth","ranges":[{"startOffset":33067,"endOffset":33555,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateDay","ranges":[{"startOffset":33560,"endOffset":34193,"count":0}],"isBlockCoverage":false},{"functionName":"parseStartTimeHour","ranges":[{"startOffset":34198,"endOffset":34388,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeHour","ranges":[{"startOffset":34393,"endOffset":34878,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeMin","ranges":[{"startOffset":34883,"endOffset":35274,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeSec","ranges":[{"startOffset":35279,"endOffset":35635,"count":0}],"isBlockCoverage":false},{"functionName":"parseOnlyTimeHour","ranges":[{"startOffset":35641,"endOffset":36094,"count":0}],"isBlockCoverage":false},{"functionName":"parseOnlyTimeMin","ranges":[{"startOffset":36099,"endOffset":36494,"count":0}],"isBlockCoverage":false},{"functionName":"parseOnlyTimeSec","ranges":[{"startOffset":36499,"endOffset":36776,"count":0}],"isBlockCoverage":false},{"functionName":"parseOnlyTimeFractionMaybe","ranges":[{"startOffset":36781,"endOffset":37060,"count":0}],"isBlockCoverage":false},{"functionName":"parseOnlyTimeFraction","ranges":[{"startOffset":37065,"endOffset":37528,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeZoneOrFraction","ranges":[{"startOffset":37534,"endOffset":38229,"count":0}],"isBlockCoverage":false},{"functionName":"parseDateTimeFraction","ranges":[{"startOffset":38234,"endOffset":38996,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeZoneHour","ranges":[{"startOffset":39001,"endOffset":39315,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeZoneSep","ranges":[{"startOffset":39320,"endOffset":39564,"count":0}],"isBlockCoverage":false},{"functionName":"parseTimeZoneMin","ranges":[{"startOffset":39569,"endOffset":39879,"count":0}],"isBlockCoverage":false},{"functionName":"parseBoolean","ranges":[{"startOffset":39903,"endOffset":40175,"count":0}],"isBlockCoverage":false},{"functionName":"parseTrue_r","ranges":[{"startOffset":40180,"endOffset":40408,"count":0}],"isBlockCoverage":false},{"functionName":"parseTrue_u","ranges":[{"startOffset":40413,"endOffset":40641,"count":0}],"isBlockCoverage":false},{"functionName":"parseTrue_e","ranges":[{"startOffset":40646,"endOffset":40841,"count":0}],"isBlockCoverage":false},{"functionName":"parseFalse_a","ranges":[{"startOffset":40847,"endOffset":41077,"count":0}],"isBlockCoverage":false},{"functionName":"parseFalse_l","ranges":[{"startOffset":41083,"endOffset":41313,"count":0}],"isBlockCoverage":false},{"functionName":"parseFalse_s","ranges":[{"startOffset":41319,"endOffset":41549,"count":0}],"isBlockCoverage":false},{"functionName":"parseFalse_e","ranges":[{"startOffset":41555,"endOffset":41752,"count":0}],"isBlockCoverage":false},{"functionName":"parseInlineList","ranges":[{"startOffset":41781,"endOffset":42340,"count":0}],"isBlockCoverage":false},{"functionName":"recordInlineListValue","ranges":[{"startOffset":42345,"endOffset":43035,"count":0}],"isBlockCoverage":false},{"functionName":"parseInlineListNext","ranges":[{"startOffset":43040,"endOffset":43604,"count":0}],"isBlockCoverage":false},{"functionName":"parseInlineTable","ranges":[{"startOffset":43633,"endOffset":44213,"count":0}],"isBlockCoverage":false},{"functionName":"recordInlineTableValue","ranges":[{"startOffset":44218,"endOffset":44914,"count":0}],"isBlockCoverage":false},{"functionName":"parseInlineTableNext","ranges":[{"startOffset":44919,"endOffset":45539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"778","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2975,"count":1}],"isBlockCoverage":true},{"functionName":"ParserError","ranges":[{"startOffset":105,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"State","ranges":[{"startOffset":361,"endOffset":532,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":552,"endOffset":786,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":790,"endOffset":1082,"count":0}],"isBlockCoverage":false},{"functionName":"nextChar","ranges":[{"startOffset":1085,"endOffset":1296,"count":0}],"isBlockCoverage":false},{"functionName":"haveBuffer","ranges":[{"startOffset":1299,"endOffset":1356,"count":0}],"isBlockCoverage":false},{"functionName":"runOne","ranges":[{"startOffset":1359,"endOffset":1435,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":1438,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":1681,"endOffset":1877,"count":0}],"isBlockCoverage":false},{"functionName":"goto","ranges":[{"startOffset":1880,"endOffset":1938,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":1941,"endOffset":2073,"count":0}],"isBlockCoverage":false},{"functionName":"callNow","ranges":[{"startOffset":2076,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"return","ranges":[{"startOffset":2164,"endOffset":2419,"count":0}],"isBlockCoverage":false},{"functionName":"returnNow","ranges":[{"startOffset":2422,"endOffset":2493,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":2496,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":2682,"endOffset":2785,"count":0}],"isBlockCoverage":false},{"functionName":"parseStart","ranges":[{"startOffset":2817,"endOffset":2898,"count":0}],"isBlockCoverage":false}]},{"scriptId":"779","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/create-datetime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"780","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/create-datetime-float.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":663,"count":1}],"isBlockCoverage":true},{"functionName":"FloatingDateTime","ranges":[{"startOffset":91,"endOffset":166,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":169,"endOffset":463,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":484,"endOffset":662,"count":0}],"isBlockCoverage":false}]},{"scriptId":"781","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/format-num.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":30,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"782","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/create-date.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":485,"count":1}],"isBlockCoverage":true},{"functionName":"Date","ranges":[{"startOffset":112,"endOffset":177,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":180,"endOffset":297,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":318,"endOffset":484,"count":0}],"isBlockCoverage":false}]},{"scriptId":"783","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/lib/create-time.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":508,"count":1}],"isBlockCoverage":true},{"functionName":"Time","ranges":[{"startOffset":79,"endOffset":161,"count":0}],"isBlockCoverage":false},{"functionName":"toISOString","ranges":[{"startOffset":164,"endOffset":320,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":341,"endOffset":507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"784","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"785","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/parse-pretty-error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1045,"count":1}],"isBlockCoverage":true},{"functionName":"prettyError","ranges":[{"startOffset":43,"endOffset":1044,"count":0}],"isBlockCoverage":false}]},{"scriptId":"786","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/parse-async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":863,"count":1}],"isBlockCoverage":true},{"functionName":"parseAsync","ranges":[{"startOffset":149,"endOffset":862,"count":0}],"isBlockCoverage":false}]},{"scriptId":"787","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/parse-stream.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1625,"count":1}],"isBlockCoverage":true},{"functionName":"parseStream","ranges":[{"startOffset":128,"endOffset":247,"count":0}],"isBlockCoverage":false},{"functionName":"parseReadable","ranges":[{"startOffset":249,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"parseTransform","ranges":[{"startOffset":1181,"endOffset":1624,"count":0}],"isBlockCoverage":false}]},{"scriptId":"788","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@iarna/toml/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8292,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":80,"endOffset":468,"count":0}],"isBlockCoverage":false},{"functionName":"typeError","ranges":[{"startOffset":470,"endOffset":561,"count":0}],"isBlockCoverage":false},{"functionName":"arrayOneTypeError","ranges":[{"startOffset":563,"endOffset":654,"count":0}],"isBlockCoverage":false},{"functionName":"getInlineKeys","ranges":[{"startOffset":656,"endOffset":748,"count":0}],"isBlockCoverage":false},{"functionName":"getComplexKeys","ranges":[{"startOffset":749,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":845,"endOffset":1237,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyObject","ranges":[{"startOffset":1239,"endOffset":1940,"count":0}],"isBlockCoverage":false},{"functionName":"isInline","ranges":[{"startOffset":1942,"endOffset":2385,"count":0}],"isBlockCoverage":false},{"functionName":"tomlType","ranges":[{"startOffset":2387,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyKey","ranges":[{"startOffset":3039,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyBasicString","ranges":[{"startOffset":3213,"endOffset":3312,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyLiteralString","ranges":[{"startOffset":3314,"endOffset":3380,"count":0}],"isBlockCoverage":false},{"functionName":"numpad","ranges":[{"startOffset":3382,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"escapeString","ranges":[{"startOffset":3470,"endOffset":3852,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyMultilineString","ranges":[{"startOffset":3854,"endOffset":4100,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyAnyInline","ranges":[{"startOffset":4102,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyInline","ranges":[{"startOffset":4431,"endOffset":5270,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyInteger","ranges":[{"startOffset":5272,"endOffset":5422,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyFloat","ranges":[{"startOffset":5424,"endOffset":5804,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyBoolean","ranges":[{"startOffset":5806,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyDatetime","ranges":[{"startOffset":5868,"endOffset":5935,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":5937,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"arrayType","ranges":[{"startOffset":6014,"endOffset":6279,"count":0}],"isBlockCoverage":false},{"functionName":"validateArray","ranges":[{"startOffset":6280,"endOffset":6422,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyInlineArray","ranges":[{"startOffset":6424,"endOffset":6854,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyInlineTable","ranges":[{"startOffset":6856,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyComplex","ranges":[{"startOffset":7140,"endOffset":7499,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyArrayOfTables","ranges":[{"startOffset":7501,"endOffset":8011,"count":0}],"isBlockCoverage":false},{"functionName":"stringifyComplexTable","ranges":[{"startOffset":8013,"endOffset":8291,"count":0}],"isBlockCoverage":false}]},{"scriptId":"789","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/syncPromise.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"syncPromise","ranges":[{"startOffset":141,"endOffset":442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"790","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/deasync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1634,"count":1},{"startOffset":329,"endOffset":342,"count":0},{"startOffset":869,"endOffset":927,"count":0}],"isBlockCoverage":true},{"functionName":"deasync","ranges":[{"startOffset":931,"endOffset":1292,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":963,"endOffset":1289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1355,"endOffset":1412,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.runLoopOnce","ranges":[{"startOffset":1446,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.loopWhile","ranges":[{"startOffset":1535,"endOffset":1634,"count":0}],"isBlockCoverage":false}]},{"scriptId":"791","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/objectHash.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":378,"count":1}],"isBlockCoverage":true},{"functionName":"objectHash","ranges":[{"startOffset":35,"endOffset":347,"count":3369},{"startOffset":150,"endOffset":315,"count":10074},{"startOffset":211,"endOffset":217,"count":3366},{"startOffset":219,"endOffset":268,"count":3363},{"startOffset":268,"endOffset":311,"count":6711}],"isBlockCoverage":true}]},{"scriptId":"792","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22418,"count":1},{"startOffset":10932,"endOffset":10957,"count":145},{"startOffset":14138,"endOffset":14157,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2063,"endOffset":2130,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2215,"endOffset":2275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2357,"endOffset":2414,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2495,"endOffset":2551,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2637,"endOffset":2698,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2783,"endOffset":2843,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2943,"endOffset":3018,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3112,"endOffset":3181,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3277,"endOffset":3348,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3441,"endOffset":3509,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3601,"endOffset":3668,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3753,"endOffset":3813,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3905,"endOffset":3972,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4063,"endOffset":4129,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4220,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4370,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4510,"endOffset":4566,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4654,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4803,"endOffset":4864,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5905,"endOffset":5971,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6066,"endOffset":6137,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6260,"endOffset":6314,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6395,"endOffset":6452,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6538,"endOffset":6600,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6674,"endOffset":6724,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6806,"endOffset":6864,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6938,"endOffset":6988,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7075,"endOffset":7138,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7214,"endOffset":7266,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7346,"endOffset":7402,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7488,"endOffset":7550,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7677,"endOffset":7735,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7824,"endOffset":7889,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7968,"endOffset":8023,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8104,"endOffset":8161,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8253,"endOffset":8321,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8401,"endOffset":8457,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8538,"endOffset":8595,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8671,"endOffset":8723,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8803,"endOffset":8859,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8986,"endOffset":9050,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9139,"endOffset":9198,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9300,"endOffset":9372,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":9832,"endOffset":10101,"count":1},{"startOffset":9914,"endOffset":10099,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":10103,"endOffset":10198,"count":7},{"startOffset":10171,"endOffset":10176,"count":4},{"startOffset":10177,"endOffset":10195,"count":3}],"isBlockCoverage":true},{"functionName":"registerType","ranges":[{"startOffset":10218,"endOffset":10621,"count":180},{"startOffset":10286,"endOffset":10385,"count":179}],"isBlockCoverage":true},{"functionName":"t.<computed>","ranges":[{"startOffset":10314,"endOffset":10380,"count":0}],"isBlockCoverage":false},{"functionName":"t.<computed>","ranges":[{"startOffset":10410,"endOffset":10618,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11029,"endOffset":11205,"count":145}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11076,"endOffset":11201,"count":316},{"startOffset":11169,"endOffset":11174,"count":35}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11259,"endOffset":11365,"count":35}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":11532,"endOffset":11773,"count":0}],"isBlockCoverage":false},{"functionName":"isType","ranges":[{"startOffset":11775,"endOffset":12496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12542,"endOffset":13654,"count":145}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":12598,"endOffset":13576,"count":0}],"isBlockCoverage":false},{"functionName":"_loop","ranges":[{"startOffset":13670,"endOffset":14098,"count":2}],"isBlockCoverage":true},{"functionName":"proxy","ranges":[{"startOffset":13739,"endOffset":13918,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13771,"endOffset":13913,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":14159,"endOffset":14431,"count":0}],"isBlockCoverage":false},{"functionName":"shallowEqual","ranges":[{"startOffset":14433,"endOffset":15006,"count":0}],"isBlockCoverage":false},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":15008,"endOffset":15235,"count":0}],"isBlockCoverage":false},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":15237,"endOffset":15371,"count":0}],"isBlockCoverage":false},{"functionName":"ensureBlock","ranges":[{"startOffset":15373,"endOffset":15541,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":15543,"endOffset":15725,"count":0}],"isBlockCoverage":false},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":15727,"endOffset":15830,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDeep","ranges":[{"startOffset":15832,"endOffset":16200,"count":0}],"isBlockCoverage":false},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":16202,"endOffset":17135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16303,"endOffset":17132,"count":0}],"isBlockCoverage":false},{"functionName":"removeComments","ranges":[{"startOffset":17137,"endOffset":17619,"count":0}],"isBlockCoverage":false},{"functionName":"inheritsComments","ranges":[{"startOffset":17621,"endOffset":17803,"count":0}],"isBlockCoverage":false},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":17805,"endOffset":17911,"count":0}],"isBlockCoverage":false},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":17913,"endOffset":18017,"count":0}],"isBlockCoverage":false},{"functionName":"inheritInnerComments","ranges":[{"startOffset":18019,"endOffset":18119,"count":0}],"isBlockCoverage":false},{"functionName":"_inheritComments","ranges":[{"startOffset":18121,"endOffset":18289,"count":0}],"isBlockCoverage":false},{"functionName":"inherits","ranges":[{"startOffset":18291,"endOffset":19457,"count":0}],"isBlockCoverage":false},{"functionName":"assertNode","ranges":[{"startOffset":19459,"endOffset":19583,"count":0}],"isBlockCoverage":false},{"functionName":"isNode","ranges":[{"startOffset":19585,"endOffset":19669,"count":0}],"isBlockCoverage":false},{"functionName":"traverseFast","ranges":[{"startOffset":19757,"endOffset":20952,"count":0}],"isBlockCoverage":false},{"functionName":"removeProperties","ranges":[{"startOffset":21114,"endOffset":22310,"count":0}],"isBlockCoverage":false},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":22312,"endOffset":22418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"793","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/object/get-own-property-symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true}]},{"scriptId":"794","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/object/get-own-property-symbols.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":115,"count":1}],"isBlockCoverage":true}]},{"scriptId":"795","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9284,"count":1},{"startOffset":1736,"endOffset":1758,"count":0},{"startOffset":1759,"endOffset":1791,"count":0},{"startOffset":2040,"endOffset":2241,"count":0},{"startOffset":2487,"endOffset":2538,"count":0},{"startOffset":4822,"endOffset":5882,"count":0},{"startOffset":6266,"endOffset":6287,"count":11},{"startOffset":6372,"endOffset":6405,"count":12},{"startOffset":8979,"endOffset":9062,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1915,"endOffset":2038,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1969,"endOffset":2022,"count":1}],"isBlockCoverage":true},{"functionName":"setSymbolDesc","ranges":[{"startOffset":2042,"endOffset":2241,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":2260,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2437,"endOffset":2486,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbol","ranges":[{"startOffset":2489,"endOffset":2538,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":2563,"endOffset":3086,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperties","ranges":[{"startOffset":3112,"endOffset":3327,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":3343,"endOffset":3445,"count":0}],"isBlockCoverage":false},{"functionName":"propertyIsEnumerable","ranges":[{"startOffset":3475,"endOffset":3771,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":3805,"endOffset":4119,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyNames","ranges":[{"startOffset":4148,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertySymbols","ranges":[{"startOffset":4435,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"Symbol","ranges":[{"startOffset":4836,"endOffset":5368,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":5413,"endOffset":5458,"count":0}],"isBlockCoverage":false},{"functionName":"wksExt.f","ranges":[{"startOffset":5830,"endOffset":5879,"count":0}],"isBlockCoverage":false},{"functionName":"for","ranges":[{"startOffset":6503,"endOffset":6637,"count":0}],"isBlockCoverage":false},{"functionName":"keyFor","ranges":[{"startOffset":6682,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"useSetter","ranges":[{"startOffset":6872,"endOffset":6902,"count":0}],"isBlockCoverage":false},{"functionName":"useSimple","ranges":[{"startOffset":6917,"endOffset":6948,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7712,"endOffset":7739,"count":1}],"isBlockCoverage":true},{"functionName":"getOwnPropertySymbols","ranges":[{"startOffset":7833,"endOffset":7907,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8032,"endOffset":8304,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":8331,"endOffset":8890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"796","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_global.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":369,"count":1},{"startOffset":131,"endOffset":153,"count":0},{"startOffset":156,"endOffset":164,"count":0},{"startOffset":194,"endOffset":214,"count":0},{"startOffset":215,"endOffset":221,"count":0},{"startOffset":323,"endOffset":336,"count":0}],"isBlockCoverage":true}]},{"scriptId":"797","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":38,"count":1}],"isBlockCoverage":true}]},{"scriptId":"798","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_has.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":57,"endOffset":118,"count":24}],"isBlockCoverage":true}]},{"scriptId":"799","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_descriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":184,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":143,"endOffset":168,"count":1}],"isBlockCoverage":true}]},{"scriptId":"800","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_fails.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":102,"count":6},{"startOffset":68,"endOffset":100,"count":0}],"isBlockCoverage":true}]},{"scriptId":"801","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_export.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2349,"count":1}],"isBlockCoverage":true},{"functionName":"$export","ranges":[{"startOffset":199,"endOffset":2072,"count":9},{"startOffset":468,"endOffset":474,"count":1},{"startOffset":475,"endOffset":508,"count":8},{"startOffset":488,"endOffset":508,"count":4},{"startOffset":572,"endOffset":580,"count":1},{"startOffset":581,"endOffset":641,"count":8},{"startOffset":593,"endOffset":607,"count":7},{"startOffset":608,"endOffset":641,"count":1},{"startOffset":624,"endOffset":629,"count":0},{"startOffset":681,"endOffset":695,"count":1},{"startOffset":718,"endOffset":2070,"count":19},{"startOffset":819,"endOffset":839,"count":17},{"startOffset":841,"endOffset":850,"count":2},{"startOffset":850,"endOffset":896,"count":17},{"startOffset":896,"endOffset":909,"count":15},{"startOffset":910,"endOffset":923,"count":2},{"startOffset":1001,"endOffset":1036,"count":1},{"startOffset":1037,"endOffset":1050,"count":0},{"startOffset":1113,"endOffset":1759,"count":17},{"startOffset":1123,"endOffset":1129,"count":0},{"startOffset":1130,"endOffset":1148,"count":0},{"startOffset":1230,"endOffset":1251,"count":1},{"startOffset":1252,"endOffset":1688,"count":1},{"startOffset":1689,"endOffset":1759,"count":16},{"startOffset":1700,"endOffset":1727,"count":3},{"startOffset":1728,"endOffset":1753,"count":3},{"startOffset":1754,"endOffset":1759,"count":13},{"startOffset":1844,"endOffset":2066,"count":3},{"startOffset":1869,"endOffset":1894,"count":1},{"startOffset":2004,"endOffset":2015,"count":0},{"startOffset":2016,"endOffset":2033,"count":0},{"startOffset":2035,"endOffset":2060,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1255,"endOffset":1682,"count":1}],"isBlockCoverage":true},{"functionName":"F","ranges":[{"startOffset":1284,"endOffset":1574,"count":0}],"isBlockCoverage":false}]},{"scriptId":"802","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1},{"startOffset":79,"endOffset":90,"count":0}],"isBlockCoverage":true}]},{"scriptId":"803","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_ctx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":520,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":96,"endOffset":518,"count":3},{"startOffset":169,"endOffset":179,"count":0},{"startOffset":204,"endOffset":271,"count":0},{"startOffset":276,"endOffset":349,"count":0},{"startOffset":354,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":219,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":291,"endOffset":348,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":369,"endOffset":432,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":447,"endOffset":515,"count":0}],"isBlockCoverage":false}]},{"scriptId":"804","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_a-function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":123,"count":3},{"startOffset":64,"endOffset":108,"count":0}],"isBlockCoverage":true}]},{"scriptId":"805","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_hide.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":286,"count":1},{"startOffset":209,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":125,"endOffset":208,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":211,"endOffset":284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"806","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-dp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1},{"startOffset":232,"endOffset":598,"count":0}],"isBlockCoverage":true},{"functionName":"defineProperty","ranges":[{"startOffset":234,"endOffset":598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"807","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_an-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":57,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"808","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_is-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":108,"count":0}],"isBlockCoverage":false}]},{"scriptId":"809","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_ie8-dom-define.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":199,"count":1},{"startOffset":44,"endOffset":197,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":68,"endOffset":196,"count":0}],"isBlockCoverage":false}]},{"scriptId":"810","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-primitive.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":655,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":241,"endOffset":653,"count":0}],"isBlockCoverage":false}]},{"scriptId":"811","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_property-desc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":171,"count":3}],"isBlockCoverage":true}]},{"scriptId":"812","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_redefine.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"813","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_meta.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1558,"count":1},{"startOffset":199,"endOffset":232,"count":0}],"isBlockCoverage":true},{"functionName":"isExtensible","ranges":[{"startOffset":202,"endOffset":232,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":268,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"setMeta","ranges":[{"startOffset":353,"endOffset":484,"count":0}],"isBlockCoverage":false},{"functionName":"fastKey","ranges":[{"startOffset":500,"endOffset":929,"count":0}],"isBlockCoverage":false},{"functionName":"getWeak","ranges":[{"startOffset":945,"endOffset":1260,"count":0}],"isBlockCoverage":false},{"functionName":"onFreeze","ranges":[{"startOffset":1326,"endOffset":1434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"814","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_uid.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":53,"endOffset":160,"count":2},{"startOffset":114,"endOffset":118,"count":0}],"isBlockCoverage":true}]},{"scriptId":"815","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_shared.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":427,"count":1},{"startOffset":359,"endOffset":369,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":173,"endOffset":270,"count":6},{"startOffset":254,"endOffset":261,"count":1},{"startOffset":262,"endOffset":266,"count":5}],"isBlockCoverage":true}]},{"scriptId":"816","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_library.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23,"count":1}],"isBlockCoverage":true}]},{"scriptId":"817","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_set-to-string-tag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":262,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":128,"endOffset":260,"count":7},{"startOffset":182,"endOffset":186,"count":4},{"startOffset":187,"endOffset":201,"count":3},{"startOffset":209,"endOffset":258,"count":2}],"isBlockCoverage":true}]},{"scriptId":"818","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_wks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":358,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":191,"endOffset":331,"count":33},{"startOffset":230,"endOffset":328,"count":14},{"startOffset":279,"endOffset":327,"count":2},{"startOffset":303,"endOffset":308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"819","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_wks-ext.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31,"count":1}],"isBlockCoverage":true}]},{"scriptId":"820","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_wks-define.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":417,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":204,"endOffset":415,"count":14},{"startOffset":250,"endOffset":303,"count":0},{"startOffset":333,"endOffset":354,"count":13},{"startOffset":356,"endOffset":413,"count":13}],"isBlockCoverage":true}]},{"scriptId":"821","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_enum-keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":469,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":180,"endOffset":467,"count":0}],"isBlockCoverage":false}]},{"scriptId":"822","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1},{"startOffset":165,"endOffset":220,"count":0}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":168,"endOffset":220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"823","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-keys-internal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":537,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":198,"endOffset":535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"824","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-iobject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":167,"endOffset":215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"825","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_iobject.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":289,"count":1},{"startOffset":210,"endOffset":287,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":212,"endOffset":287,"count":0}],"isBlockCoverage":false}]},{"scriptId":"826","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_cof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":106,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":46,"endOffset":104,"count":1}],"isBlockCoverage":true}]},{"scriptId":"827","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_defined.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":59,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"828","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_array-includes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":924,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":207,"endOffset":922,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":241,"endOffset":919,"count":0}],"isBlockCoverage":false}]},{"scriptId":"829","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-length.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":98,"endOffset":213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"830","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-integer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":82,"endOffset":159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"831","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-absolute-index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":223,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":99,"endOffset":221,"count":0}],"isBlockCoverage":false}]},{"scriptId":"832","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_shared-key.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":89,"endOffset":157,"count":3},{"startOffset":127,"endOffset":154,"count":1}],"isBlockCoverage":true}]},{"scriptId":"833","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_enum-bug-keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":160,"count":1}],"isBlockCoverage":true}]},{"scriptId":"834","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-gops.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42,"count":1}],"isBlockCoverage":true}]},{"scriptId":"835","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-pie.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":37,"count":1}],"isBlockCoverage":true}]},{"scriptId":"836","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_is-array.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1},{"startOffset":87,"endOffset":145,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":90,"endOffset":145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"837","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_to-object.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":83,"endOffset":130,"count":0}],"isBlockCoverage":false}]},{"scriptId":"838","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1505,"count":1},{"startOffset":1155,"endOffset":1503,"count":0}],"isBlockCoverage":true},{"functionName":"Empty","ranges":[{"startOffset":243,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"createDict","ranges":[{"startOffset":405,"endOffset":1121,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1158,"endOffset":1503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"839","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-dps.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":404,"count":1},{"startOffset":185,"endOffset":402,"count":0}],"isBlockCoverage":true},{"functionName":"defineProperties","ranges":[{"startOffset":187,"endOffset":402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"840","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-gopn-ext.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":604,"count":1},{"startOffset":232,"endOffset":241,"count":0},{"startOffset":242,"endOffset":271,"count":0},{"startOffset":274,"endOffset":310,"count":0}],"isBlockCoverage":true},{"functionName":"getWindowNames","ranges":[{"startOffset":339,"endOffset":437,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyNames","ranges":[{"startOffset":459,"endOffset":602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"841","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-gopn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":288,"count":1},{"startOffset":217,"endOffset":286,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyNames","ranges":[{"startOffset":220,"endOffset":286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"842","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-gopd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1},{"startOffset":340,"endOffset":575,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":342,"endOffset":575,"count":0}],"isBlockCoverage":false}]},{"scriptId":"843","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/get-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":93,"count":1}],"isBlockCoverage":true}]},{"scriptId":"844","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/get-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":141,"count":1}],"isBlockCoverage":true}]},{"scriptId":"845","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/web.dom.iterable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1},{"startOffset":743,"endOffset":968,"count":31},{"startOffset":833,"endOffset":856,"count":0},{"startOffset":870,"endOffset":894,"count":0},{"startOffset":896,"endOffset":929,"count":0}],"isBlockCoverage":true}]},{"scriptId":"846","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.array.iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1116,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":405,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":613,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"847","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_add-to-unscopables.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":46,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":44,"count":3}],"isBlockCoverage":true}]},{"scriptId":"848","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_iter-step.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":86,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":84,"count":0}],"isBlockCoverage":false}]},{"scriptId":"849","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_iterators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":21,"count":1}],"isBlockCoverage":true}]},{"scriptId":"850","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_iter-define.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2779,"count":1}],"isBlockCoverage":true},{"functionName":"returnThis","ranges":[{"startOffset":570,"endOffset":598,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":618,"endOffset":2777,"count":2},{"startOffset":1237,"endOffset":1258,"count":0},{"startOffset":1259,"endOffset":1287,"count":0},{"startOffset":1314,"endOffset":1335,"count":0},{"startOffset":1362,"endOffset":1409,"count":1},{"startOffset":1376,"endOffset":1386,"count":0},{"startOffset":1410,"endOffset":1421,"count":1},{"startOffset":1458,"endOffset":1484,"count":1},{"startOffset":1474,"endOffset":1484,"count":0},{"startOffset":1485,"endOffset":1494,"count":1},{"startOffset":1868,"endOffset":1919,"count":0},{"startOffset":1921,"endOffset":1967,"count":0},{"startOffset":2047,"endOffset":2057,"count":1},{"startOffset":2058,"endOffset":2084,"count":1},{"startOffset":2086,"endOffset":2179,"count":0},{"startOffset":2228,"endOffset":2272,"count":0},{"startOffset":2274,"endOffset":2316,"count":0},{"startOffset":2415,"endOffset":2757,"count":1},{"startOffset":2469,"endOffset":2488,"count":0},{"startOffset":2509,"endOffset":2519,"count":0},{"startOffset":2586,"endOffset":2677,"count":0}],"isBlockCoverage":true},{"functionName":"getMethod","ranges":[{"startOffset":744,"endOffset":1077,"count":2},{"startOffset":814,"endOffset":915,"count":0},{"startOffset":922,"endOffset":1000,"count":0},{"startOffset":1006,"endOffset":1076,"count":0}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":859,"endOffset":914,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":942,"endOffset":999,"count":0}],"isBlockCoverage":false},{"functionName":"entries","ranges":[{"startOffset":1014,"endOffset":1072,"count":0}],"isBlockCoverage":false},{"functionName":"values","ranges":[{"startOffset":2126,"endOffset":2174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"851","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_iter-create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":302,"endOffset":330,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":351,"endOffset":524,"count":2}],"isBlockCoverage":true}]},{"scriptId":"852","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-gpo.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":493,"count":1},{"startOffset":246,"endOffset":491,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":249,"endOffset":491,"count":0}],"isBlockCoverage":false}]},{"scriptId":"853","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.string.iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":531,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":144,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":300,"endOffset":528,"count":0}],"isBlockCoverage":false}]},{"scriptId":"854","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_string-at.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":620,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":149,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":181,"endOffset":615,"count":0}],"isBlockCoverage":false}]},{"scriptId":"855","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/core.get-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.require.getIterator","ranges":[{"startOffset":139,"endOffset":294,"count":0}],"isBlockCoverage":false}]},{"scriptId":"856","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/core.get-iterator-method.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":297,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.require.getIteratorMethod","ranges":[{"startOffset":180,"endOffset":295,"count":0}],"isBlockCoverage":false}]},{"scriptId":"857","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_classof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":718,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":162,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"tryGet","ranges":[{"startOffset":277,"endOffset":357,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":377,"endOffset":716,"count":0}],"isBlockCoverage":false}]},{"scriptId":"858","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/object/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":92,"count":1}],"isBlockCoverage":true}]},{"scriptId":"859","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/object/keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true}]},{"scriptId":"860","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.object.keys.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":141,"endOffset":222,"count":1}],"isBlockCoverage":true},{"functionName":"keys","ranges":[{"startOffset":164,"endOffset":219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"861","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/_object-sap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":370,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":172,"endOffset":368,"count":1},{"startOffset":219,"endOffset":224,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":326,"endOffset":348,"count":1}],"isBlockCoverage":true}]},{"scriptId":"862","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/json/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":95,"count":1}],"isBlockCoverage":true}]},{"scriptId":"863","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/json/stringify.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":246,"count":1},{"startOffset":65,"endOffset":111,"count":0}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":130,"endOffset":244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"864","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2768,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":736,"endOffset":831,"count":1},{"startOffset":810,"endOffset":828,"count":0}],"isBlockCoverage":true}]},{"scriptId":"865","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/symbol/for.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":91,"count":1}],"isBlockCoverage":true}]},{"scriptId":"866","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/symbol/for.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":100,"count":1}],"isBlockCoverage":true}]},{"scriptId":"867","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/retrievers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2874,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":352,"endOffset":621,"count":1},{"startOffset":434,"endOffset":619,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":623,"endOffset":718,"count":1},{"startOffset":697,"endOffset":715,"count":0}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":720,"endOffset":1733,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":2761,"endOffset":2874,"count":0}],"isBlockCoverage":false}]},{"scriptId":"868","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/object/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":94,"count":1}],"isBlockCoverage":true}]},{"scriptId":"869","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/object/create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":172,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":114,"endOffset":170,"count":0}],"isBlockCoverage":false}]},{"scriptId":"870","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.object.create.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true}]},{"scriptId":"871","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/validators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6688,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":990,"endOffset":1259,"count":1},{"startOffset":1072,"endOffset":1257,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1261,"endOffset":1356,"count":4},{"startOffset":1329,"endOffset":1334,"count":3},{"startOffset":1335,"endOffset":1353,"count":1}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":1358,"endOffset":1742,"count":0}],"isBlockCoverage":false},{"functionName":"isReferenced","ranges":[{"startOffset":1744,"endOffset":4121,"count":0}],"isBlockCoverage":false},{"functionName":"isValidIdentifier","ranges":[{"startOffset":4123,"endOffset":4400,"count":0}],"isBlockCoverage":false},{"functionName":"isLet","ranges":[{"startOffset":4402,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScoped","ranges":[{"startOffset":4533,"endOffset":4652,"count":0}],"isBlockCoverage":false},{"functionName":"isVar","ranges":[{"startOffset":4654,"endOffset":4776,"count":0}],"isBlockCoverage":false},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":4778,"endOffset":4949,"count":0}],"isBlockCoverage":false},{"functionName":"isScope","ranges":[{"startOffset":4951,"endOffset":5111,"count":0}],"isBlockCoverage":false},{"functionName":"isImmutable","ranges":[{"startOffset":5113,"endOffset":5343,"count":0}],"isBlockCoverage":false},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":5345,"endOffset":6688,"count":0}],"isBlockCoverage":false}]},{"scriptId":"872","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/helpers/typeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1069,"count":1},{"startOffset":381,"endOffset":557,"count":0},{"startOffset":845,"endOffset":1068,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":343,"endOffset":380,"count":10}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":383,"endOffset":557,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":560,"endOffset":655,"count":2},{"startOffset":634,"endOffset":652,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":760,"endOffset":844,"count":9},{"startOffset":813,"endOffset":826,"count":0}],"isBlockCoverage":true},{"functionName":"exports.default","ranges":[{"startOffset":847,"endOffset":1068,"count":0}],"isBlockCoverage":false}]},{"scriptId":"873","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/symbol/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":96,"count":1}],"isBlockCoverage":true}]},{"scriptId":"874","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/symbol/iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":155,"count":1}],"isBlockCoverage":true}]},{"scriptId":"875","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/symbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":87,"count":1}],"isBlockCoverage":true}]},{"scriptId":"876","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/symbol/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":240,"count":1}],"isBlockCoverage":true}]},{"scriptId":"878","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es7.symbol.async-iterator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43,"count":1}],"isBlockCoverage":true}]},{"scriptId":"879","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es7.symbol.observable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"880","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/converters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8673,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1087,"endOffset":1356,"count":1},{"startOffset":1169,"endOffset":1354,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1358,"endOffset":1453,"count":5},{"startOffset":1426,"endOffset":1431,"count":3},{"startOffset":1432,"endOffset":1450,"count":2}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":1455,"endOffset":1699,"count":0}],"isBlockCoverage":false},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":1701,"endOffset":4154,"count":0}],"isBlockCoverage":false},{"functionName":"toSequenceExpression","ranges":[{"startOffset":4156,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias","ranges":[{"startOffset":4804,"endOffset":5393,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":5439,"endOffset":5581,"count":0}],"isBlockCoverage":false},{"functionName":"toIdentifier","ranges":[{"startOffset":5584,"endOffset":5913,"count":0}],"isBlockCoverage":false},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":5915,"endOffset":6067,"count":0}],"isBlockCoverage":false},{"functionName":"toStatement","ranges":[{"startOffset":6069,"endOffset":6726,"count":0}],"isBlockCoverage":false},{"functionName":"toExpression","ranges":[{"startOffset":6728,"endOffset":7143,"count":0}],"isBlockCoverage":false},{"functionName":"toBlock","ranges":[{"startOffset":7145,"endOffset":7556,"count":0}],"isBlockCoverage":false},{"functionName":"valueToNode","ranges":[{"startOffset":7558,"endOffset":8673,"count":0}],"isBlockCoverage":false}]},{"scriptId":"881","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-runtime/core-js/number/max-safe-integer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":104,"count":1}],"isBlockCoverage":true}]},{"scriptId":"882","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/fn/number/max-safe-integer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":89,"count":1}],"isBlockCoverage":true}]},{"scriptId":"883","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js/library/modules/es6.number.max-safe-integer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":143,"count":1}],"isBlockCoverage":true}]},{"scriptId":"884","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1},{"startOffset":602,"endOffset":616,"count":0}],"isBlockCoverage":true}]},{"scriptId":"885","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsRegExp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":511,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsRegExp","ranges":[{"startOffset":382,"endOffset":478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"886","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2799,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":314,"endOffset":583,"count":1},{"startOffset":396,"endOffset":581,"count":0}],"isBlockCoverage":true},{"functionName":"createUnionTypeAnnotation","ranges":[{"startOffset":585,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":797,"endOffset":2119,"count":0}],"isBlockCoverage":false},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":2121,"endOffset":2799,"count":0}],"isBlockCoverage":false}]},{"scriptId":"887","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":294,"count":1}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":31,"endOffset":293,"count":2},{"startOffset":240,"endOffset":292,"count":0}],"isBlockCoverage":true},{"functionName":"Sub","ranges":[{"startOffset":63,"endOffset":80,"count":2}],"isBlockCoverage":true},{"functionName":"ic","ranges":[{"startOffset":151,"endOffset":196,"count":4}],"isBlockCoverage":true}]},{"scriptId":"888","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/uniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":688,"count":1}],"isBlockCoverage":true},{"functionName":"uniq","ranges":[{"startOffset":582,"endOffset":663,"count":3},{"startOffset":638,"endOffset":655,"count":0}],"isBlockCoverage":true}]},{"scriptId":"889","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseUniq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1909,"count":1}],"isBlockCoverage":true},{"functionName":"baseUniq","ranges":[{"startOffset":704,"endOffset":1880,"count":0}],"isBlockCoverage":false}]},{"scriptId":"890","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_SetCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"SetCache","ranges":[{"startOffset":277,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"891","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_setCacheAdd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheAdd","ranges":[{"startOffset":302,"endOffset":392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"892","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_setCacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":316,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheHas","ranges":[{"startOffset":218,"endOffset":284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"893","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayIncludes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludes","ranges":[{"startOffset":347,"endOffset":492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"894","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"baseIndexOf","ranges":[{"startOffset":458,"endOffset":627,"count":2},{"startOffset":580,"endOffset":624,"count":0}],"isBlockCoverage":true}]},{"scriptId":"895","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseFindIndex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"baseFindIndex","ranges":[{"startOffset":443,"endOffset":732,"count":0}],"isBlockCoverage":false}]},{"scriptId":"896","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsNaN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsNaN","ranges":[{"startOffset":211,"endOffset":266,"count":0}],"isBlockCoverage":false}]},{"scriptId":"897","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_strictIndexOf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"strictIndexOf","ranges":[{"startOffset":350,"endOffset":566,"count":2},{"startOffset":486,"endOffset":551,"count":67},{"startOffset":520,"endOffset":547,"count":0}],"isBlockCoverage":true}]},{"scriptId":"898","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayIncludesWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":615,"count":1}],"isBlockCoverage":true},{"functionName":"arrayIncludesWith","ranges":[{"startOffset":336,"endOffset":577,"count":0}],"isBlockCoverage":false}]},{"scriptId":"899","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_cacheHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":337,"count":1}],"isBlockCoverage":true},{"functionName":"cacheHas","ranges":[{"startOffset":250,"endOffset":308,"count":0}],"isBlockCoverage":false}]},{"scriptId":"900","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_createSet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":501,"count":1},{"startOffset":415,"endOffset":421,"count":0}],"isBlockCoverage":true},{"functionName":"createSet","ranges":[{"startOffset":424,"endOffset":470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"901","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/noop.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":177,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"902","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_setToArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"setToArray","ranges":[{"startOffset":151,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":243,"endOffset":293,"count":2}],"isBlockCoverage":true}]},{"scriptId":"903","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/init.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true}]},{"scriptId":"904","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7002,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":864,"endOffset":1133,"count":1},{"startOffset":946,"endOffset":1131,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1135,"endOffset":1230,"count":3},{"startOffset":1209,"endOffset":1227,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1463,"endOffset":1739,"count":3},{"startOffset":1513,"endOffset":1538,"count":0},{"startOffset":1562,"endOffset":1586,"count":0},{"startOffset":1615,"endOffset":1644,"count":0},{"startOffset":1690,"endOffset":1703,"count":0}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":1741,"endOffset":2004,"count":34}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":1775,"endOffset":1953,"count":0}],"isBlockCoverage":false},{"functionName":"assertOneOf","ranges":[{"startOffset":2006,"endOffset":2446,"count":8},{"startOffset":2118,"endOffset":2157,"count":48}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2161,"endOffset":2398,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":2448,"endOffset":3453,"count":140},{"startOffset":2570,"endOffset":2612,"count":171}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2616,"endOffset":3395,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3455,"endOffset":4520,"count":1},{"startOffset":3584,"endOffset":3626,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3630,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4522,"endOffset":4812,"count":69}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4557,"endOffset":4765,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":4814,"endOffset":5503,"count":37},{"startOffset":4925,"endOffset":4965,"count":74}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4969,"endOffset":5456,"count":0}],"isBlockCoverage":false},{"functionName":"defineType","ranges":[{"startOffset":5505,"endOffset":6985,"count":145},{"startOffset":5612,"endOffset":5616,"count":0},{"startOffset":5650,"endOffset":5673,"count":2},{"startOffset":5674,"endOffset":5679,"count":143},{"startOffset":5710,"endOffset":5728,"count":11},{"startOffset":5729,"endOffset":5734,"count":11},{"startOffset":5766,"endOffset":5785,"count":30},{"startOffset":5786,"endOffset":5791,"count":28},{"startOffset":5823,"endOffset":5842,"count":9},{"startOffset":5843,"endOffset":5848,"count":9},{"startOffset":5880,"endOffset":5899,"count":115},{"startOffset":5900,"endOffset":5915,"count":113},{"startOffset":5916,"endOffset":5921,"count":0},{"startOffset":5952,"endOffset":6007,"count":2},{"startOffset":6152,"endOffset":6192,"count":0},{"startOffset":6196,"endOffset":6492,"count":644},{"startOffset":6271,"endOffset":6277,"count":145},{"startOffset":6277,"endOffset":6316,"count":499},{"startOffset":6316,"endOffset":6412,"count":0},{"startOffset":6412,"endOffset":6482,"count":499},{"startOffset":6482,"endOffset":6487,"count":103},{"startOffset":6525,"endOffset":6815,"count":290},{"startOffset":6604,"endOffset":6640,"count":32},{"startOffset":6678,"endOffset":6713,"count":263},{"startOffset":6713,"endOffset":6811,"count":27},{"startOffset":6740,"endOffset":6811,"count":3}],"isBlockCoverage":true}]},{"scriptId":"905","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18905,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":218,"endOffset":313,"count":1},{"startOffset":292,"endOffset":310,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":315,"endOffset":584,"count":1},{"startOffset":397,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":7757,"endOffset":7842,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":10560,"endOffset":10742,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":12451,"endOffset":12686,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":13599,"endOffset":13834,"count":0}],"isBlockCoverage":false}]},{"scriptId":"906","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10086,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":96,"endOffset":191,"count":1},{"startOffset":170,"endOffset":188,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":7353,"endOffset":7587,"count":0}],"isBlockCoverage":false}]},{"scriptId":"907","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6584,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":96,"endOffset":191,"count":1},{"startOffset":170,"endOffset":188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"908","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3675,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":96,"endOffset":191,"count":1},{"startOffset":170,"endOffset":188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"909","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":96,"endOffset":191,"count":1},{"startOffset":170,"endOffset":188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"910","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2185,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":96,"endOffset":191,"count":1},{"startOffset":170,"endOffset":188,"count":0}],"isBlockCoverage":true}]},{"scriptId":"911","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-types/lib/react.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1953,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":231,"endOffset":500,"count":1},{"startOffset":313,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":602,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":686,"endOffset":1549,"count":0}],"isBlockCoverage":false},{"functionName":"buildChildren","ranges":[{"startOffset":1551,"endOffset":1953,"count":0}],"isBlockCoverage":false}]},{"scriptId":"912","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/urlJoin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":469,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":190,"endOffset":467,"count":1}],"isBlockCoverage":true}]},{"scriptId":"913","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/assets/GlobAsset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1915,"count":1}],"isBlockCoverage":true},{"functionName":"GlobAsset","ranges":[{"startOffset":183,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":322,"endOffset":1077,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":1081,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":1224,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1658,"endOffset":1885,"count":0}],"isBlockCoverage":false}]},{"scriptId":"914","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Bundle.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8269,"count":1}],"isBlockCoverage":true},{"functionName":"Bundle","ranges":[{"startOffset":390,"endOffset":803,"count":3}],"isBlockCoverage":true},{"functionName":"createWithAsset","ranges":[{"startOffset":814,"endOffset":1099,"count":1}],"isBlockCoverage":true},{"functionName":"addAsset","ranges":[{"startOffset":1103,"endOffset":1374,"count":10},{"startOffset":1212,"endOffset":1244,"count":5},{"startOffset":1245,"endOffset":1278,"count":5},{"startOffset":1279,"endOffset":1304,"count":5},{"startOffset":1311,"endOffset":1370,"count":5}],"isBlockCoverage":true},{"functionName":"removeAsset","ranges":[{"startOffset":1378,"endOffset":1465,"count":0}],"isBlockCoverage":false},{"functionName":"addOffset","ranges":[{"startOffset":1469,"endOffset":1554,"count":2}],"isBlockCoverage":true},{"functionName":"getOffset","ranges":[{"startOffset":1558,"endOffset":1626,"count":2},{"startOffset":1612,"endOffset":1621,"count":0}],"isBlockCoverage":true},{"functionName":"getSiblingBundle","ranges":[{"startOffset":1630,"endOffset":2347,"count":8},{"startOffset":1692,"endOffset":1718,"count":3},{"startOffset":1718,"endOffset":1763,"count":5},{"startOffset":1763,"endOffset":2297,"count":1},{"startOffset":2069,"endOffset":2133,"count":0},{"startOffset":2297,"endOffset":2346,"count":5}],"isBlockCoverage":true},{"functionName":"createChildBundle","ranges":[{"startOffset":2351,"endOffset":2522,"count":1}],"isBlockCoverage":true},{"functionName":"createSiblingBundle","ranges":[{"startOffset":2526,"endOffset":2695,"count":0}],"isBlockCoverage":false},{"functionName":"get isEmpty","ranges":[{"startOffset":2699,"endOffset":2753,"count":4}],"isBlockCoverage":true},{"functionName":"getBundleNameMap","ranges":[{"startOffset":2757,"endOffset":3153,"count":2},{"startOffset":3071,"endOffset":3129,"count":1}],"isBlockCoverage":true},{"functionName":"getHashedBundleName","ranges":[{"startOffset":3157,"endOffset":5204,"count":3},{"startOffset":3391,"endOffset":3472,"count":1},{"startOffset":3472,"endOffset":3592,"count":2},{"startOffset":3592,"endOffset":3608,"count":0},{"startOffset":3615,"endOffset":3646,"count":2},{"startOffset":3725,"endOffset":3751,"count":0},{"startOffset":3753,"endOffset":3804,"count":0},{"startOffset":3804,"endOffset":4079,"count":2},{"startOffset":4079,"endOffset":4144,"count":0},{"startOffset":4258,"endOffset":4287,"count":2},{"startOffset":4289,"endOffset":4559,"count":2},{"startOffset":4414,"endOffset":4419,"count":0},{"startOffset":4495,"endOffset":4553,"count":0},{"startOffset":4559,"endOffset":4912,"count":2},{"startOffset":4912,"endOffset":5203,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4127,"endOffset":4143,"count":0}],"isBlockCoverage":false},{"functionName":"package","ranges":[{"startOffset":5208,"endOffset":5911,"count":2},{"startOffset":5432,"endOffset":5468,"count":0},{"startOffset":5585,"endOffset":5751,"count":1},{"startOffset":5660,"endOffset":5745,"count":0},{"startOffset":5819,"endOffset":5885,"count":1}],"isBlockCoverage":true},{"functionName":"_package","ranges":[{"startOffset":5915,"endOffset":6767,"count":2},{"startOffset":6197,"endOffset":6258,"count":4},{"startOffset":6434,"endOffset":6437,"count":1},{"startOffset":6446,"endOffset":6513,"count":1},{"startOffset":6572,"endOffset":6575,"count":1},{"startOffset":6584,"endOffset":6645,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6464,"endOffset":6499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6602,"endOffset":6633,"count":1}],"isBlockCoverage":true},{"functionName":"_addDeps","ranges":[{"startOffset":6771,"endOffset":7210,"count":6},{"startOffset":6871,"endOffset":6892,"count":2},{"startOffset":6892,"endOffset":6971,"count":4},{"startOffset":6971,"endOffset":7035,"count":2},{"startOffset":7035,"endOffset":7156,"count":4},{"startOffset":7156,"endOffset":7206,"count":2},{"startOffset":7206,"endOffset":7209,"count":4}],"isBlockCoverage":true},{"functionName":"addAssetSize","ranges":[{"startOffset":7214,"endOffset":7303,"count":2}],"isBlockCoverage":true},{"functionName":"getParents","ranges":[{"startOffset":7307,"endOffset":7483,"count":0}],"isBlockCoverage":false},{"functionName":"findCommonAncestor","ranges":[{"startOffset":7487,"endOffset":8074,"count":0}],"isBlockCoverage":false},{"functionName":"getHash","ranges":[{"startOffset":8078,"endOffset":8240,"count":2},{"startOffset":8166,"endOffset":8204,"count":4}],"isBlockCoverage":true}]},{"scriptId":"915","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/watcher/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1},{"startOffset":137,"endOffset":163,"count":0}],"isBlockCoverage":true}]},{"scriptId":"916","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/watcher/src/Watcher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6534,"count":1}],"isBlockCoverage":true},{"functionName":"Watcher","ranges":[{"startOffset":642,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"startchild","ranges":[{"startOffset":1461,"endOffset":2203,"count":0}],"isBlockCoverage":false},{"functionName":"handleClosed","ranges":[{"startOffset":2207,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"handleEmit","ranges":[{"startOffset":2394,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"sendCommand","ranges":[{"startOffset":2541,"endOffset":2760,"count":0}],"isBlockCoverage":false},{"functionName":"_addPath","ranges":[{"startOffset":2764,"endOffset":2884,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2888,"endOffset":3156,"count":0}],"isBlockCoverage":false},{"functionName":"_closePath","ranges":[{"startOffset":3160,"endOffset":3309,"count":0}],"isBlockCoverage":false},{"functionName":"_emulateChildDead","ranges":[{"startOffset":3313,"endOffset":3430,"count":0}],"isBlockCoverage":false},{"functionName":"_emulateChildError","ranges":[{"startOffset":3434,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"getWatched","ranges":[{"startOffset":3566,"endOffset":3793,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedParent","ranges":[{"startOffset":3873,"endOffset":4133,"count":0}],"isBlockCoverage":false},{"functionName":"getWatchedChildren","ranges":[{"startOffset":4223,"endOffset":4456,"count":0}],"isBlockCoverage":false},{"functionName":"watch","ranges":[{"startOffset":4503,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"_unwatch","ranges":[{"startOffset":5447,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"unwatch","ranges":[{"startOffset":5802,"endOffset":6291,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":6336,"endOffset":6504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"917","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@parcel/watcher/src/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":925,"count":1}],"isBlockCoverage":true},{"functionName":"type","ranges":[{"startOffset":0,"endOffset":89,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":91,"endOffset":614,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":616,"endOffset":873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"918","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/FSCache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3503,"count":1}],"isBlockCoverage":true},{"functionName":"FSCache","ranges":[{"startOffset":487,"endOffset":777,"count":0}],"isBlockCoverage":false},{"functionName":"ensureDirExists","ranges":[{"startOffset":781,"endOffset":1204,"count":0}],"isBlockCoverage":false},{"functionName":"getCacheFile","ranges":[{"startOffset":1208,"endOffset":1360,"count":0}],"isBlockCoverage":false},{"functionName":"getLastModified","ranges":[{"startOffset":1364,"endOffset":1720,"count":0}],"isBlockCoverage":false},{"functionName":"writeDepMtimes","ranges":[{"startOffset":1724,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":1992,"endOffset":2316,"count":0}],"isBlockCoverage":false},{"functionName":"checkDepMtimes","ranges":[{"startOffset":2320,"endOffset":2674,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2678,"endOffset":3223,"count":0}],"isBlockCoverage":false},{"functionName":"invalidate","ranges":[{"startOffset":3227,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":3293,"endOffset":3473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"919","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/HMRServer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2794,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":284,"endOffset":1286,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":1290,"endOffset":1349,"count":0}],"isBlockCoverage":false},{"functionName":"emitError","ranges":[{"startOffset":1353,"endOffset":1706,"count":0}],"isBlockCoverage":false},{"functionName":"emitUpdate","ranges":[{"startOffset":1710,"endOffset":2459,"count":0}],"isBlockCoverage":false},{"functionName":"handleSocketError","ranges":[{"startOffset":2463,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"broadcast","ranges":[{"startOffset":2638,"endOffset":2762,"count":0}],"isBlockCoverage":false}]},{"scriptId":"920","url":"http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2725,"count":1}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":1639,"endOffset":1731,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":1733,"endOffset":1817,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1819,"endOffset":1921,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2307,"endOffset":2516,"count":5},{"startOffset":2352,"endOffset":2485,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2620,"endOffset":2665,"count":5}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":2669,"endOffset":2720,"count":0}],"isBlockCoverage":false}]},{"scriptId":"921","url":"_http_agent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13178,"count":1}],"isBlockCoverage":false},{"functionName":"ReusedHandle","ranges":[{"startOffset":2127,"endOffset":2206,"count":0}],"isBlockCoverage":false},{"functionName":"freeSocketErrorListener","ranges":[{"startOffset":2210,"endOffset":2389,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":2391,"endOffset":4711,"count":2},{"startOffset":2453,"endOffset":2479,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3029,"endOffset":4594,"count":0}],"isBlockCoverage":false},{"functionName":"maybeEnableKeylog","ranges":[{"startOffset":4819,"endOffset":5300,"count":0}],"isBlockCoverage":false},{"functionName":"getName","ranges":[{"startOffset":5473,"endOffset":5956,"count":0}],"isBlockCoverage":false},{"functionName":"addRequest","ranges":[{"startOffset":5988,"endOffset":8031,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":8065,"endOffset":8877,"count":0}],"isBlockCoverage":false},{"functionName":"calculateServerName","ranges":[{"startOffset":8880,"endOffset":9749,"count":0}],"isBlockCoverage":false},{"functionName":"installListeners","ranges":[{"startOffset":9751,"endOffset":11159,"count":0}],"isBlockCoverage":false},{"functionName":"removeSocket","ranges":[{"startOffset":11192,"endOffset":12150,"count":0}],"isBlockCoverage":false},{"functionName":"keepSocketAlive","ranges":[{"startOffset":12187,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"reuseSocket","ranges":[{"startOffset":12473,"endOffset":12641,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":12670,"endOffset":12874,"count":0}],"isBlockCoverage":false},{"functionName":"setRequestSocket","ranges":[{"startOffset":12877,"endOffset":13118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"922","url":"_http_client.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25543,"count":1}],"isBlockCoverage":false},{"functionName":"validateHost","ranges":[{"startOffset":2394,"endOffset":2687,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPClientAsyncResource","ranges":[{"startOffset":2723,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"ClientRequest","ranges":[{"startOffset":2828,"endOffset":10116,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":10280,"endOffset":10399,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":10444,"endOffset":10656,"count":0}],"isBlockCoverage":false},{"functionName":"abort","ranges":[{"startOffset":10691,"endOffset":10829,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":10866,"endOffset":11296,"count":0}],"isBlockCoverage":false},{"functionName":"_destroy","ranges":[{"startOffset":11299,"endOffset":11845,"count":0}],"isBlockCoverage":false},{"functionName":"emitAbortNT","ranges":[{"startOffset":11847,"endOffset":11897,"count":0}],"isBlockCoverage":false},{"functionName":"ondrain","ranges":[{"startOffset":11899,"endOffset":12059,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseListener","ranges":[{"startOffset":12061,"endOffset":13527,"count":0}],"isBlockCoverage":false},{"functionName":"socketErrorListener","ranges":[{"startOffset":13529,"endOffset":14170,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":14172,"endOffset":14658,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":14660,"endOffset":16850,"count":0}],"isBlockCoverage":false},{"functionName":"statusIsInformational","ranges":[{"startOffset":16852,"endOffset":17087,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncomingClient","ranges":[{"startOffset":17099,"endOffset":19368,"count":0}],"isBlockCoverage":false},{"functionName":"responseKeepAlive","ranges":[{"startOffset":19380,"endOffset":20479,"count":0}],"isBlockCoverage":false},{"functionName":"responseOnEnd","ranges":[{"startOffset":20481,"endOffset":21333,"count":0}],"isBlockCoverage":false},{"functionName":"requestOnPrefinish","ranges":[{"startOffset":21335,"endOffset":21458,"count":0}],"isBlockCoverage":false},{"functionName":"emitFreeNT","ranges":[{"startOffset":21460,"endOffset":21611,"count":0}],"isBlockCoverage":false},{"functionName":"tickOnSocket","ranges":[{"startOffset":21613,"endOffset":22719,"count":0}],"isBlockCoverage":false},{"functionName":"emitRequestTimeout","ranges":[{"startOffset":22721,"endOffset":22829,"count":0}],"isBlockCoverage":false},{"functionName":"listenSocketTimeout","ranges":[{"startOffset":22831,"endOffset":23222,"count":0}],"isBlockCoverage":false},{"functionName":"onSocket","ranges":[{"startOffset":23259,"endOffset":23430,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketNT","ranges":[{"startOffset":23433,"endOffset":23659,"count":0}],"isBlockCoverage":false},{"functionName":"_deferToConnect","ranges":[{"startOffset":23720,"endOffset":24515,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":24554,"endOffset":24919,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketTimeout","ranges":[{"startOffset":24922,"endOffset":25108,"count":0}],"isBlockCoverage":false},{"functionName":"setNoDelay","ranges":[{"startOffset":25147,"endOffset":25228,"count":0}],"isBlockCoverage":false},{"functionName":"setSocketKeepAlive","ranges":[{"startOffset":25280,"endOffset":25405,"count":0}],"isBlockCoverage":false},{"functionName":"clearTimeout","ranges":[{"startOffset":25447,"endOffset":25502,"count":0}],"isBlockCoverage":false}]},{"scriptId":"923","url":"_http_common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8041,"count":1}],"isBlockCoverage":false},{"functionName":"parserOnHeaders","ranges":[{"startOffset":2285,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnHeadersComplete","ranges":[{"startOffset":2760,"endOffset":4157,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnBody","ranges":[{"startOffset":4159,"endOffset":4550,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnMessageComplete","ranges":[{"startOffset":4552,"endOffset":5039,"count":0}],"isBlockCoverage":false},{"functionName":"parsersCb","ranges":[{"startOffset":5088,"endOffset":5376,"count":0}],"isBlockCoverage":false},{"functionName":"closeParserInstance","ranges":[{"startOffset":5380,"endOffset":5436,"count":0}],"isBlockCoverage":false},{"functionName":"freeParser","ranges":[{"startOffset":5759,"endOffset":6363,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsHttpToken","ranges":[{"startOffset":6575,"endOffset":6641,"count":0}],"isBlockCoverage":false},{"functionName":"checkInvalidHeaderChar","ranges":[{"startOffset":6903,"endOffset":6979,"count":0}],"isBlockCoverage":false},{"functionName":"cleanParser","ranges":[{"startOffset":6981,"endOffset":7291,"count":0}],"isBlockCoverage":false},{"functionName":"prepareError","ranges":[{"startOffset":7293,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"isLenient","ranges":[{"startOffset":7516,"endOffset":7701,"count":0}],"isBlockCoverage":false}]},{"scriptId":"924","url":"internal/freelist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":476,"count":1}],"isBlockCoverage":false},{"functionName":"FreeList","ranges":[{"startOffset":76,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":198,"endOffset":317,"count":0}],"isBlockCoverage":false},{"functionName":"free","ranges":[{"startOffset":321,"endOffset":445,"count":0}],"isBlockCoverage":false}]},{"scriptId":"925","url":"_http_incoming.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10438,"count":1}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":1258,"endOffset":1361,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":1363,"endOffset":1426,"count":0}],"isBlockCoverage":false},{"functionName":"IncomingMessage","ranges":[{"startOffset":1492,"endOffset":2409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2614,"endOffset":2654,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":2663,"endOffset":2705,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":2750,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":2926,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3546,"endOffset":3698,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLines","ranges":[{"startOffset":3763,"endOffset":4127,"count":0}],"isBlockCoverage":false},{"functionName":"matchKnownFields","ranges":[{"startOffset":4849,"endOffset":8729,"count":0}],"isBlockCoverage":false},{"functionName":"_addHeaderLine","ranges":[{"startOffset":9340,"endOffset":10006,"count":0}],"isBlockCoverage":false},{"functionName":"_dump","ranges":[{"startOffset":10129,"endOffset":10370,"count":0}],"isBlockCoverage":false}]},{"scriptId":"926","url":"_http_outgoing.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26419,"count":1}],"isBlockCoverage":false},{"functionName":"isCookieField","ranges":[{"startOffset":2737,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"noopPendingOutput","ranges":[{"startOffset":2825,"endOffset":2862,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage","ranges":[{"startOffset":2864,"endOffset":4007,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4195,"endOffset":4337,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4417,"endOffset":4446,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4522,"endOffset":4610,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4693,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4858,"endOffset":4969,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5067,"endOffset":5113,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5209,"endOffset":5680,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5821,"endOffset":5861,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5870,"endOffset":5912,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6014,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6570,"endOffset":7020,"count":0}],"isBlockCoverage":false},{"functionName":"_renderHeaders","ranges":[{"startOffset":7138,"endOffset":7642,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.cork","ranges":[{"startOffset":7678,"endOffset":7773,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.uncork","ranges":[{"startOffset":7811,"endOffset":7927,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":7969,"endOffset":8263,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":8506,"endOffset":8770,"count":0}],"isBlockCoverage":false},{"functionName":"_send","ranges":[{"startOffset":8880,"endOffset":9627,"count":0}],"isBlockCoverage":false},{"functionName":"_writeRaw","ranges":[{"startOffset":9680,"endOffset":10519,"count":0}],"isBlockCoverage":false},{"functionName":"_storeHeader","ranges":[{"startOffset":10577,"endOffset":14330,"count":0}],"isBlockCoverage":false},{"functionName":"processHeader","ranges":[{"startOffset":14332,"endOffset":14836,"count":0}],"isBlockCoverage":false},{"functionName":"storeHeader","ranges":[{"startOffset":14838,"endOffset":15035,"count":0}],"isBlockCoverage":false},{"functionName":"matchHeader","ranges":[{"startOffset":15037,"endOffset":15780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15825,"endOffset":15971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16019,"endOffset":16289,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":16331,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"getHeader","ranges":[{"startOffset":16704,"endOffset":16912,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":17025,"endOffset":17128,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaders","ranges":[{"startOffset":17230,"endOffset":17639,"count":0}],"isBlockCoverage":false},{"functionName":"hasHeader","ranges":[{"startOffset":17681,"endOffset":17825,"count":0}],"isBlockCoverage":false},{"functionName":"removeHeader","ranges":[{"startOffset":17870,"endOffset":18421,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":18469,"endOffset":18560,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18677,"endOffset":18714,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":18794,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":18909,"endOffset":19071,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEnd","ranges":[{"startOffset":19074,"endOffset":19488,"count":0}],"isBlockCoverage":false},{"functionName":"write_","ranges":[{"startOffset":19490,"endOffset":20686,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterEndNT","ranges":[{"startOffset":20689,"endOffset":20794,"count":0}],"isBlockCoverage":false},{"functionName":"connectionCorkNT","ranges":[{"startOffset":20797,"endOffset":20849,"count":0}],"isBlockCoverage":false},{"functionName":"addTrailers","ranges":[{"startOffset":20892,"endOffset":21738,"count":0}],"isBlockCoverage":false},{"functionName":"onFinish","ranges":[{"startOffset":21741,"endOffset":21861,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":21895,"endOffset":23773,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":23813,"endOffset":23884,"count":0}],"isBlockCoverage":false},{"functionName":"_flush","ranges":[{"startOffset":24685,"endOffset":25115,"count":0}],"isBlockCoverage":false},{"functionName":"_flushOutput","ranges":[{"startOffset":25159,"endOffset":25802,"count":0}],"isBlockCoverage":false},{"functionName":"flushHeaders","ranges":[{"startOffset":25847,"endOffset":25978,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":26014,"endOffset":26156,"count":0}],"isBlockCoverage":false},{"functionName":"OutgoingMessage.<computed>","ranges":[{"startOffset":26214,"endOffset":26259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"927","url":"internal/http.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1171,"count":1}],"isBlockCoverage":false},{"functionName":"nowDate","ranges":[{"startOffset":206,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"utcDate","ranges":[{"startOffset":275,"endOffset":342,"count":0}],"isBlockCoverage":false},{"functionName":"cache","ranges":[{"startOffset":344,"endOffset":503,"count":0}],"isBlockCoverage":false},{"functionName":"resetCache","ranges":[{"startOffset":505,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"HttpRequestTiming","ranges":[{"startOffset":633,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"emitStatistics","ranges":[{"startOffset":942,"endOffset":1034,"count":0}],"isBlockCoverage":false}]},{"scriptId":"928","url":"_http_server.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26295,"count":1}],"isBlockCoverage":false},{"functionName":"HTTPServerAsyncResource","ranges":[{"startOffset":4663,"endOffset":4742,"count":0}],"isBlockCoverage":false},{"functionName":"ServerResponse","ranges":[{"startOffset":4746,"endOffset":5317,"count":0}],"isBlockCoverage":false},{"functionName":"_finish","ranges":[{"startOffset":5484,"endOffset":5710,"count":0}],"isBlockCoverage":false},{"functionName":"onServerResponseClose","ranges":[{"startOffset":5810,"endOffset":6837,"count":0}],"isBlockCoverage":false},{"functionName":"assignSocket","ranges":[{"startOffset":6879,"endOffset":7091,"count":0}],"isBlockCoverage":false},{"functionName":"detachSocket","ranges":[{"startOffset":7134,"endOffset":7316,"count":0}],"isBlockCoverage":false},{"functionName":"writeContinue","ranges":[{"startOffset":7360,"endOffset":7484,"count":0}],"isBlockCoverage":false},{"functionName":"writeProcessing","ranges":[{"startOffset":7530,"endOffset":7634,"count":0}],"isBlockCoverage":false},{"functionName":"_implicitHeader","ranges":[{"startOffset":7680,"endOffset":7745,"count":0}],"isBlockCoverage":false},{"functionName":"writeHead","ranges":[{"startOffset":7796,"endOffset":10132,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":10243,"endOffset":11807,"count":0}],"isBlockCoverage":false},{"functionName":"setTimeout","ranges":[{"startOffset":11944,"endOffset":12073,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":12122,"endOffset":12647,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListener","ranges":[{"startOffset":12650,"endOffset":12794,"count":0}],"isBlockCoverage":false},{"functionName":"connectionListenerInternal","ranges":[{"startOffset":12796,"endOffset":15868,"count":0}],"isBlockCoverage":false},{"functionName":"updateOutgoingData","ranges":[{"startOffset":15870,"endOffset":15986,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnDrain","ranges":[{"startOffset":15988,"endOffset":16442,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnTimeout","ranges":[{"startOffset":16444,"endOffset":16817,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":16819,"endOffset":17032,"count":0}],"isBlockCoverage":false},{"functionName":"abortIncoming","ranges":[{"startOffset":17034,"endOffset":17267,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":17269,"endOffset":17801,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":17803,"endOffset":18032,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecute","ranges":[{"startOffset":18034,"endOffset":18243,"count":0}],"isBlockCoverage":false},{"functionName":"onParserTimeout","ranges":[{"startOffset":18245,"endOffset":18390,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":18405,"endOffset":18413,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":18702,"endOffset":19091,"count":0}],"isBlockCoverage":false},{"functionName":"onParserExecuteCommon","ranges":[{"startOffset":19093,"endOffset":20638,"count":0}],"isBlockCoverage":false},{"functionName":"clearIncoming","ranges":[{"startOffset":20640,"endOffset":21091,"count":0}],"isBlockCoverage":false},{"functionName":"resOnFinish","ranges":[{"startOffset":21093,"endOffset":22249,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":22251,"endOffset":22328,"count":0}],"isBlockCoverage":false},{"functionName":"parserOnIncoming","ranges":[{"startOffset":22494,"endOffset":24565,"count":0}],"isBlockCoverage":false},{"functionName":"resetSocketTimeout","ranges":[{"startOffset":24567,"endOffset":24747,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketResume","ranges":[{"startOffset":24749,"endOffset":25271,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketPause","ranges":[{"startOffset":25273,"endOffset":25414,"count":0}],"isBlockCoverage":false},{"functionName":"unconsume","ranges":[{"startOffset":25416,"endOffset":25668,"count":0}],"isBlockCoverage":false},{"functionName":"generateSocketListenerWrapper","ranges":[{"startOffset":25670,"endOffset":26166,"count":0}],"isBlockCoverage":false}]},{"scriptId":"929","url":"https.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8400,"count":1}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":1775,"endOffset":2844,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":3014,"endOffset":3106,"count":0}],"isBlockCoverage":false},{"functionName":"createConnection","ranges":[{"startOffset":3127,"endOffset":4224,"count":0}],"isBlockCoverage":false},{"functionName":"Agent","ranges":[{"startOffset":4227,"endOffset":4599,"count":1},{"startOffset":4289,"endOffset":4315,"count":0}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":4780,"endOffset":6208,"count":0}],"isBlockCoverage":false},{"functionName":"_getSession","ranges":[{"startOffset":6241,"endOffset":6308,"count":0}],"isBlockCoverage":false},{"functionName":"_cacheSession","ranges":[{"startOffset":6343,"endOffset":6888,"count":0}],"isBlockCoverage":false},{"functionName":"_evictSession","ranges":[{"startOffset":6923,"endOffset":7123,"count":0}],"isBlockCoverage":false},{"functionName":"request","ranges":[{"startOffset":7191,"endOffset":8201,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8203,"endOffset":8309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"930","url":"tls.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10765,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3117,"endOffset":3181,"count":0}],"isBlockCoverage":false},{"functionName":"cacheRootCertificates","ranges":[{"startOffset":3209,"endOffset":3303,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3407,"endOffset":3558,"count":2},{"startOffset":3501,"endOffset":3525,"count":1}],"isBlockCoverage":true},{"functionName":"convertProtocols","ranges":[{"startOffset":3668,"endOffset":4265,"count":0}],"isBlockCoverage":false},{"functionName":"convertALPNProtocols","ranges":[{"startOffset":4298,"endOffset":4635,"count":0}],"isBlockCoverage":false},{"functionName":"unfqdn","ranges":[{"startOffset":4638,"endOffset":4698,"count":0}],"isBlockCoverage":false},{"functionName":"splitHost","ranges":[{"startOffset":4700,"endOffset":4969,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":4971,"endOffset":6833,"count":0}],"isBlockCoverage":false},{"functionName":"checkServerIdentity","ranges":[{"startOffset":6896,"endOffset":9352,"count":0}],"isBlockCoverage":false},{"functionName":"SecurePair","ranges":[{"startOffset":9398,"endOffset":9994,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":9998,"endOffset":10073,"count":0}],"isBlockCoverage":false},{"functionName":"createSecurePair","ranges":[{"startOffset":10591,"endOffset":10667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"931","url":"internal/tls.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":671,"count":1}],"isBlockCoverage":false},{"functionName":"parseCertString","ranges":[{"startOffset":164,"endOffset":629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"932","url":"internal/streams/duplexpair.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":975,"count":1}],"isBlockCoverage":false},{"functionName":"DuplexSocket","ranges":[{"startOffset":203,"endOffset":292,"count":0}],"isBlockCoverage":false},{"functionName":"_read","ranges":[{"startOffset":296,"endOffset":421,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":425,"endOffset":629,"count":0}],"isBlockCoverage":false},{"functionName":"_final","ranges":[{"startOffset":633,"endOffset":730,"count":0}],"isBlockCoverage":false},{"functionName":"DuplexPair","ranges":[{"startOffset":755,"endOffset":942,"count":0}],"isBlockCoverage":false}]},{"scriptId":"933","url":"_tls_common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10980,"count":1}],"isBlockCoverage":false},{"functionName":"toV","ranges":[{"startOffset":1778,"endOffset":2071,"count":0}],"isBlockCoverage":false},{"functionName":"SecureContext","ranges":[{"startOffset":2147,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"validateKeyOrCertOption","ranges":[{"startOffset":2923,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"createSecureContext","ranges":[{"startOffset":3247,"endOffset":10024,"count":0}],"isBlockCoverage":false},{"functionName":"translatePeerCertificate","ranges":[{"startOffset":10299,"endOffset":10978,"count":0}],"isBlockCoverage":false}]},{"scriptId":"934","url":"_tls_wrap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":47076,"count":1}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3413,"endOffset":3421,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakestart","ranges":[{"startOffset":3597,"endOffset":4380,"count":0}],"isBlockCoverage":false},{"functionName":"onhandshakedone","ranges":[{"startOffset":4382,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"loadSession","ranges":[{"startOffset":4678,"endOffset":5882,"count":0}],"isBlockCoverage":false},{"functionName":"loadSNI","ranges":[{"startOffset":5885,"endOffset":6538,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSP","ranges":[{"startOffset":6541,"endOffset":7863,"count":0}],"isBlockCoverage":false},{"functionName":"requestOCSPDone","ranges":[{"startOffset":7865,"endOffset":8060,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsessionclient","ranges":[{"startOffset":8062,"endOffset":8215,"count":0}],"isBlockCoverage":false},{"functionName":"onnewsession","ranges":[{"startOffset":8217,"endOffset":9053,"count":0}],"isBlockCoverage":false},{"functionName":"onPskServerCallback","ranges":[{"startOffset":9055,"endOffset":9703,"count":0}],"isBlockCoverage":false},{"functionName":"onPskClientCallback","ranges":[{"startOffset":9705,"endOffset":10469,"count":0}],"isBlockCoverage":false},{"functionName":"onkeylog","ranges":[{"startOffset":10471,"endOffset":10562,"count":0}],"isBlockCoverage":false},{"functionName":"onocspresponse","ranges":[{"startOffset":10564,"endOffset":10680,"count":0}],"isBlockCoverage":false},{"functionName":"onerror","ranges":[{"startOffset":10682,"endOffset":11458,"count":0}],"isBlockCoverage":false},{"functionName":"initRead","ranges":[{"startOffset":11602,"endOffset":12148,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket","ranges":[{"startOffset":12226,"endOffset":14497,"count":0}],"isBlockCoverage":false},{"functionName":"makeMethodProxy","ranges":[{"startOffset":14940,"endOffset":15107,"count":15}],"isBlockCoverage":true},{"functionName":"methodProxy","ranges":[{"startOffset":14982,"endOffset":15104,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":15274,"endOffset":15967,"count":0}],"isBlockCoverage":false},{"functionName":"disableRenegotiation","ranges":[{"startOffset":16013,"endOffset":16086,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._wrapHandle","ranges":[{"startOffset":16123,"endOffset":17126,"count":0}],"isBlockCoverage":false},{"functionName":"defineHandleReading","ranges":[{"startOffset":17265,"endOffset":17486,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketCloseDestroySSL","ranges":[{"startOffset":17488,"endOffset":17635,"count":0}],"isBlockCoverage":false},{"functionName":"destroySSL","ranges":[{"startOffset":17637,"endOffset":17688,"count":0}],"isBlockCoverage":false},{"functionName":"_destroySSL","ranges":[{"startOffset":17724,"endOffset":17955,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._init","ranges":[{"startOffset":18094,"endOffset":22918,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.renegotiate","ranges":[{"startOffset":22955,"endOffset":24314,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.exportKeyingMaterial","ranges":[{"startOffset":24360,"endOffset":24682,"count":0}],"isBlockCoverage":false},{"functionName":"setMaxSendFragment","ranges":[{"startOffset":24726,"endOffset":24817,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._handleTimeout","ranges":[{"startOffset":24857,"endOffset":24926,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._emitTLSError","ranges":[{"startOffset":24965,"endOffset":25051,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._tlsError","ranges":[{"startOffset":25086,"endOffset":25194,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._releaseControl","ranges":[{"startOffset":25235,"endOffset":25391,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._finishInit","ranges":[{"startOffset":25428,"endOffset":26487,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket._start","ranges":[{"startOffset":26519,"endOffset":27018,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setServername","ranges":[{"startOffset":27057,"endOffset":27225,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.setSession","ranges":[{"startOffset":27261,"endOffset":27399,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getPeerCertificate","ranges":[{"startOffset":27443,"endOffset":27607,"count":0}],"isBlockCoverage":false},{"functionName":"TLSSocket.getCertificate","ranges":[{"startOffset":27647,"endOffset":27853,"count":0}],"isBlockCoverage":false},{"functionName":"makeSocketMethodProxy","ranges":[{"startOffset":27890,"endOffset":28080,"count":10}],"isBlockCoverage":true},{"functionName":"socketMethodProxy","ranges":[{"startOffset":27938,"endOffset":28077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28283,"endOffset":28361,"count":10}],"isBlockCoverage":true},{"functionName":"onServerSocketSecure","ranges":[{"startOffset":28403,"endOffset":28898,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketTLSError","ranges":[{"startOffset":28900,"endOffset":29136,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketKeylog","ranges":[{"startOffset":29138,"endOffset":29225,"count":0}],"isBlockCoverage":false},{"functionName":"onSocketClose","ranges":[{"startOffset":29227,"endOffset":29580,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnectionListener","ranges":[{"startOffset":29582,"endOffset":30431,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":33197,"endOffset":35103,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":35257,"endOffset":35341,"count":0}],"isBlockCoverage":false},{"functionName":"Server.setSecureContext","ranges":[{"startOffset":35381,"endOffset":38194,"count":0}],"isBlockCoverage":false},{"functionName":"Server._getServerData","ranges":[{"startOffset":38232,"endOffset":38315,"count":0}],"isBlockCoverage":false},{"functionName":"Server._setServerData","ranges":[{"startOffset":38353,"endOffset":38430,"count":0}],"isBlockCoverage":false},{"functionName":"getTicketKeys","ranges":[{"startOffset":38467,"endOffset":38547,"count":0}],"isBlockCoverage":false},{"functionName":"setTicketKeys","ranges":[{"startOffset":38584,"endOffset":38665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":38709,"endOffset":40557,"count":0}],"isBlockCoverage":false},{"functionName":"Server.addContext","ranges":[{"startOffset":40680,"endOffset":41045,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":41094,"endOffset":41328,"count":0}],"isBlockCoverage":false},{"functionName":"SNICallback","ranges":[{"startOffset":41331,"endOffset":41574,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeConnectArgs","ranges":[{"startOffset":41807,"endOffset":42535,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectSecure","ranges":[{"startOffset":42537,"endOffset":44149,"count":0}],"isBlockCoverage":false},{"functionName":"onConnectEnd","ranges":[{"startOffset":44151,"endOffset":44700,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":44766,"endOffset":47074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"935","url":"internal/js_stream_socket.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7414,"count":1}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":658,"endOffset":721,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstart","ranges":[{"startOffset":723,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"onreadstop","ranges":[{"startOffset":790,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"onshutdown","ranges":[{"startOffset":855,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"onwrite","ranges":[{"startOffset":928,"endOffset":1005,"count":0}],"isBlockCoverage":false},{"functionName":"JSStreamSocket","ranges":[{"startOffset":1765,"endOffset":3460,"count":0}],"isBlockCoverage":false},{"functionName":"get StreamWrap","ranges":[{"startOffset":3600,"endOffset":3649,"count":0}],"isBlockCoverage":false},{"functionName":"isClosing","ranges":[{"startOffset":3653,"endOffset":3715,"count":0}],"isBlockCoverage":false},{"functionName":"readStart","ranges":[{"startOffset":3719,"endOffset":3776,"count":0}],"isBlockCoverage":false},{"functionName":"readStop","ranges":[{"startOffset":3780,"endOffset":3835,"count":0}],"isBlockCoverage":false},{"functionName":"doShutdown","ranges":[{"startOffset":3839,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"finishShutdown","ranges":[{"startOffset":4903,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"doWrite","ranges":[{"startOffset":5199,"endOffset":6121,"count":0}],"isBlockCoverage":false},{"functionName":"finishWrite","ranges":[{"startOffset":6189,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":6636,"endOffset":7377,"count":0}],"isBlockCoverage":false}]},{"scriptId":"936","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":237,"count":1}],"isBlockCoverage":true}]},{"scriptId":"937","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/websocket.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22898,"count":1}],"isBlockCoverage":true},{"functionName":"WebSocket","ranges":[{"startOffset":1075,"endOffset":1860,"count":0}],"isBlockCoverage":false},{"functionName":"get CONNECTING","ranges":[{"startOffset":1864,"endOffset":1914,"count":0}],"isBlockCoverage":false},{"functionName":"get CLOSING","ranges":[{"startOffset":1917,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"get CLOSED","ranges":[{"startOffset":1964,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"get OPEN","ranges":[{"startOffset":2009,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"get binaryType","ranges":[{"startOffset":2244,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"set binaryType","ranges":[{"startOffset":2300,"endOffset":2537,"count":0}],"isBlockCoverage":false},{"functionName":"get bufferedAmount","ranges":[{"startOffset":2573,"endOffset":2788,"count":0}],"isBlockCoverage":false},{"functionName":"get extensions","ranges":[{"startOffset":2824,"endOffset":2896,"count":0}],"isBlockCoverage":false},{"functionName":"setSocket","ranges":[{"startOffset":3194,"endOffset":4102,"count":0}],"isBlockCoverage":false},{"functionName":"emitClose","ranges":[{"startOffset":4168,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":5404,"endOffset":6497,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":6729,"endOffset":7361,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":7593,"endOffset":8225,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":8767,"endOffset":9516,"count":0}],"isBlockCoverage":false},{"functionName":"terminate","ranges":[{"startOffset":9586,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9975,"endOffset":10030,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10238,"endOffset":11144,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10469,"endOffset":10657,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10792,"endOffset":11136,"count":0}],"isBlockCoverage":false},{"functionName":"initAsClient","ranges":[{"startOffset":11903,"endOffset":17335,"count":0}],"isBlockCoverage":false},{"functionName":"netConnect","ranges":[{"startOffset":17536,"endOffset":17673,"count":0}],"isBlockCoverage":false},{"functionName":"tlsConnect","ranges":[{"startOffset":17880,"endOffset":18076,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake","ranges":[{"startOffset":18347,"endOffset":18844,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnConclude","ranges":[{"startOffset":19012,"endOffset":19372,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnDrain","ranges":[{"startOffset":19448,"endOffset":19516,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnError","ranges":[{"startOffset":19645,"endOffset":19937,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnFinish","ranges":[{"startOffset":20014,"endOffset":20078,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnMessage","ranges":[{"startOffset":20222,"endOffset":20301,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPing","ranges":[{"startOffset":20436,"endOffset":20603,"count":0}],"isBlockCoverage":false},{"functionName":"receiverOnPong","ranges":[{"startOffset":20738,"endOffset":20811,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnClose","ranges":[{"startOffset":20889,"endOffset":22126,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnData","ranges":[{"startOffset":22244,"endOffset":22349,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnEnd","ranges":[{"startOffset":22425,"endOffset":22578,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":22656,"endOffset":22897,"count":0}],"isBlockCoverage":false}]},{"scriptId":"938","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/permessage-deflate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14531,"count":1}],"isBlockCoverage":true},{"functionName":"PerMessageDeflate","ranges":[{"startOffset":2096,"endOffset":2642,"count":0}],"isBlockCoverage":false},{"functionName":"get extensionName","ranges":[{"startOffset":2685,"endOffset":2744,"count":0}],"isBlockCoverage":false},{"functionName":"offer","ranges":[{"startOffset":2865,"endOffset":3481,"count":0}],"isBlockCoverage":false},{"functionName":"accept","ranges":[{"startOffset":3689,"endOffset":3925,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":4010,"endOffset":4436,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsServer","ranges":[{"startOffset":4621,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"acceptAsClient","ranges":[{"startOffset":6158,"endOffset":6952,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeParams","ranges":[{"startOffset":7158,"endOffset":8699,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":8953,"endOffset":9142,"count":0}],"isBlockCoverage":false},{"functionName":"compress","ranges":[{"startOffset":9395,"endOffset":9580,"count":0}],"isBlockCoverage":false},{"functionName":"_decompress","ranges":[{"startOffset":9797,"endOffset":11306,"count":0}],"isBlockCoverage":false},{"functionName":"_compress","ranges":[{"startOffset":11522,"endOffset":13321,"count":0}],"isBlockCoverage":false},{"functionName":"deflateOnData","ranges":[{"startOffset":13490,"endOffset":13592,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnData","ranges":[{"startOffset":13722,"endOffset":14138,"count":0}],"isBlockCoverage":false},{"functionName":"inflateOnError","ranges":[{"startOffset":14268,"endOffset":14530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"939","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/async-limiter/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1234,"count":1}],"isBlockCoverage":true},{"functionName":"Queue","ranges":[{"startOffset":15,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":368,"endOffset":552,"count":3}],"isBlockCoverage":true},{"functionName":"Queue.<computed>","ranges":[{"startOffset":415,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":614,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"Queue._run","ranges":[{"startOffset":703,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"Queue.onDone","ranges":[{"startOffset":1059,"endOffset":1153,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1156,"endOffset":1208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"940","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/buffer-util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1904,"count":1},{"startOffset":1440,"endOffset":1453,"count":0}],"isBlockCoverage":true},{"functionName":"concat","ranges":[{"startOffset":255,"endOffset":508,"count":0}],"isBlockCoverage":false},{"functionName":"_mask","ranges":[{"startOffset":838,"endOffset":986,"count":0}],"isBlockCoverage":false},{"functionName":"_unmask","ranges":[{"startOffset":1139,"endOffset":1353,"count":0}],"isBlockCoverage":false},{"functionName":"mask","ranges":[{"startOffset":1481,"endOffset":1658,"count":0}],"isBlockCoverage":false},{"functionName":"unmask","ranges":[{"startOffset":1664,"endOffset":1782,"count":0}],"isBlockCoverage":false}]},{"scriptId":"941","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"NOOP","ranges":[{"startOffset":256,"endOffset":264,"count":0}],"isBlockCoverage":false}]},{"scriptId":"942","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/event-target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3948,"count":1}],"isBlockCoverage":true},{"functionName":"Event","ranges":[{"startOffset":266,"endOffset":346,"count":0}],"isBlockCoverage":false},{"functionName":"MessageEvent","ranges":[{"startOffset":683,"endOffset":768,"count":0}],"isBlockCoverage":false},{"functionName":"CloseEvent","ranges":[{"startOffset":1206,"endOffset":1397,"count":0}],"isBlockCoverage":false},{"functionName":"OpenEvent","ranges":[{"startOffset":1652,"endOffset":1705,"count":0}],"isBlockCoverage":false},{"functionName":"ErrorEvent","ranges":[{"startOffset":2026,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"addEventListener","ranges":[{"startOffset":2496,"endOffset":3434,"count":0}],"isBlockCoverage":false},{"functionName":"removeEventListener","ranges":[{"startOffset":3630,"endOffset":3913,"count":0}],"isBlockCoverage":false}]},{"scriptId":"943","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6619,"count":1}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":1098,"endOffset":1241,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":1423,"endOffset":5822,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":6043,"endOffset":6581,"count":0}],"isBlockCoverage":false}]},{"scriptId":"944","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/receiver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12630,"count":1}],"isBlockCoverage":true},{"functionName":"Receiver","ranges":[{"startOffset":758,"endOffset":1396,"count":0}],"isBlockCoverage":false},{"functionName":"_write","ranges":[{"startOffset":1617,"endOffset":1792,"count":0}],"isBlockCoverage":false},{"functionName":"consume","ranges":[{"startOffset":1970,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"startLoop","ranges":[{"startOffset":2682,"endOffset":3309,"count":0}],"isBlockCoverage":false},{"functionName":"getInfo","ranges":[{"startOffset":3442,"endOffset":5614,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength16","ranges":[{"startOffset":5746,"endOffset":5944,"count":0}],"isBlockCoverage":false},{"functionName":"getPayloadLength64","ranges":[{"startOffset":6076,"endOffset":6723,"count":0}],"isBlockCoverage":false},{"functionName":"haveLength","ranges":[{"startOffset":6848,"endOffset":7255,"count":0}],"isBlockCoverage":false},{"functionName":"getMask","ranges":[{"startOffset":7313,"endOffset":7473,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":7627,"endOffset":8398,"count":0}],"isBlockCoverage":false},{"functionName":"decompress","ranges":[{"startOffset":8534,"endOffset":9124,"count":0}],"isBlockCoverage":false},{"functionName":"dataMessage","ranges":[{"startOffset":9238,"endOffset":10179,"count":0}],"isBlockCoverage":false},{"functionName":"controlMessage","ranges":[{"startOffset":10348,"endOffset":11221,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":11595,"endOffset":11846,"count":0}],"isBlockCoverage":false},{"functionName":"toBuffer","ranges":[{"startOffset":12069,"endOffset":12281,"count":0}],"isBlockCoverage":false},{"functionName":"toArrayBuffer","ranges":[{"startOffset":12419,"endOffset":12629,"count":0}],"isBlockCoverage":false}]},{"scriptId":"945","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/validation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":687,"count":1},{"startOffset":131,"endOffset":167,"count":0},{"startOffset":197,"endOffset":210,"count":0}],"isBlockCoverage":true},{"functionName":"exports.isValidUTF8","ranges":[{"startOffset":277,"endOffset":287,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isValidStatusCode","ranges":[{"startOffset":508,"endOffset":685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"946","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/sender.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10585,"count":1}],"isBlockCoverage":true},{"functionName":"Sender","ranges":[{"startOffset":479,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"frame","ranges":[{"startOffset":1358,"endOffset":2689,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3012,"endOffset":3681,"count":0}],"isBlockCoverage":false},{"functionName":"doClose","ranges":[{"startOffset":3903,"endOffset":4076,"count":0}],"isBlockCoverage":false},{"functionName":"ping","ranges":[{"startOffset":4298,"endOffset":4782,"count":0}],"isBlockCoverage":false},{"functionName":"doPing","ranges":[{"startOffset":5070,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"pong","ranges":[{"startOffset":5467,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"doPong","ranges":[{"startOffset":6239,"endOffset":6414,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":6932,"endOffset":8256,"count":0}],"isBlockCoverage":false},{"functionName":"dispatch","ranges":[{"startOffset":8883,"endOffset":9345,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":9418,"endOffset":9629,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":9750,"endOffset":9847,"count":0}],"isBlockCoverage":false},{"functionName":"sendFrame","ranges":[{"startOffset":9983,"endOffset":10170,"count":0}],"isBlockCoverage":false},{"functionName":"viewToBuffer","ranges":[{"startOffset":10366,"endOffset":10584,"count":0}],"isBlockCoverage":false}]},{"scriptId":"947","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ws/lib/websocket-server.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10385,"count":1}],"isBlockCoverage":true},{"functionName":"WebSocketServer","ranges":[{"startOffset":1392,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"address","ranges":[{"startOffset":3329,"endOffset":3525,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3617,"endOffset":4081,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHandle","ranges":[{"startOffset":4319,"endOffset":4469,"count":0}],"isBlockCoverage":false},{"functionName":"handleUpgrade","ranges":[{"startOffset":4779,"endOffset":6626,"count":0}],"isBlockCoverage":false},{"functionName":"completeUpgrade","ranges":[{"startOffset":6999,"endOffset":8800,"count":0}],"isBlockCoverage":false},{"functionName":"addListeners","ranges":[{"startOffset":9144,"endOffset":9396,"count":0}],"isBlockCoverage":false},{"functionName":"socketOnError","ranges":[{"startOffset":9456,"endOffset":9503,"count":0}],"isBlockCoverage":false},{"functionName":"abortHandshake","ranges":[{"startOffset":9822,"endOffset":10384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"948","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/generateCertificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2820,"count":1}],"isBlockCoverage":true},{"functionName":"generateCertificate","ranges":[{"startOffset":170,"endOffset":2780,"count":0}],"isBlockCoverage":false}]},{"scriptId":"949","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":679,"count":1}],"isBlockCoverage":true}]},{"scriptId":"950","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/forge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":200,"count":1}],"isBlockCoverage":true}]},{"scriptId":"951","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/aes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39026,"count":1}],"isBlockCoverage":true},{"functionName":"forge.aes.startEncrypting","ranges":[{"startOffset":1285,"endOffset":1463,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes.createEncryptionCipher","ranges":[{"startOffset":1925,"endOffset":2046,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes.startDecrypting","ranges":[{"startOffset":2725,"endOffset":2902,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes.createDecryptionCipher","ranges":[{"startOffset":3368,"endOffset":3488,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes.Algorithm","ranges":[{"startOffset":3694,"endOffset":4119,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes.Algorithm.initialize","ranges":[{"startOffset":4438,"endOffset":6090,"count":0}],"isBlockCoverage":false},{"functionName":"forge.aes._expandKey","ranges":[{"startOffset":6353,"endOffset":6450,"count":0}],"isBlockCoverage":false},{"functionName":"registerAlgorithm","ranges":[{"startOffset":7119,"endOffset":7292,"count":6}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":7176,"endOffset":7240,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":14918,"endOffset":23349,"count":0}],"isBlockCoverage":false},{"functionName":"_expandKey","ranges":[{"startOffset":24323,"endOffset":29381,"count":0}],"isBlockCoverage":false},{"functionName":"_updateBlock","ranges":[{"startOffset":29697,"endOffset":37611,"count":0}],"isBlockCoverage":false},{"functionName":"_createCipher","ranges":[{"startOffset":38261,"endOffset":39025,"count":0}],"isBlockCoverage":false}]},{"scriptId":"952","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/cipher.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6668,"count":1}],"isBlockCoverage":true},{"functionName":"forge.cipher.createCipher","ranges":[{"startOffset":796,"endOffset":1166,"count":0}],"isBlockCoverage":false},{"functionName":"forge.cipher.createDecipher","ranges":[{"startOffset":1675,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"forge.cipher.registerAlgorithm","ranges":[{"startOffset":2299,"endOffset":2402,"count":16}],"isBlockCoverage":true},{"functionName":"forge.cipher.getAlgorithm","ranges":[{"startOffset":2578,"endOffset":2726,"count":0}],"isBlockCoverage":false},{"functionName":"forge.cipher.BlockCipher","ranges":[{"startOffset":2774,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"BlockCipher.start","ranges":[{"startOffset":4533,"endOffset":4845,"count":0}],"isBlockCoverage":false},{"functionName":"BlockCipher.update","ranges":[{"startOffset":4987,"endOffset":5350,"count":0}],"isBlockCoverage":false},{"functionName":"BlockCipher.finish","ranges":[{"startOffset":5605,"endOffset":6666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"953","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":78359,"count":1},{"startOffset":3469,"endOffset":3552,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":311,"endOffset":3286,"count":1},{"startOffset":701,"endOffset":882,"count":0},{"startOffset":898,"endOffset":1659,"count":0},{"startOffset":1661,"endOffset":3285,"count":0}],"isBlockCoverage":true},{"functionName":"util.setImmediate","ranges":[{"startOffset":1015,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"util.nextTick","ranges":[{"startOffset":1100,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"util.setImmediate","ranges":[{"startOffset":1480,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"util.setImmediate","ranges":[{"startOffset":1747,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"handler","ranges":[{"startOffset":1992,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"MutationObserver.observe.attributes","ranges":[{"startOffset":2600,"endOffset":2752,"count":0}],"isBlockCoverage":false},{"functionName":"util.setImmediate","ranges":[{"startOffset":2857,"endOffset":3241,"count":0}],"isBlockCoverage":false},{"functionName":"util.isArray","ranges":[{"startOffset":3472,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"util.isArrayBuffer","ranges":[{"startOffset":3600,"endOffset":3688,"count":65}],"isBlockCoverage":true},{"functionName":"util.isArrayBufferView","ranges":[{"startOffset":3744,"endOffset":3833,"count":65},{"startOffset":3769,"endOffset":3800,"count":0},{"startOffset":3801,"endOffset":3830,"count":0}],"isBlockCoverage":true},{"functionName":"_checkBitsParam","ranges":[{"startOffset":4117,"endOffset":4274,"count":0}],"isBlockCoverage":false},{"functionName":"ByteStringBuffer","ranges":[{"startOffset":4600,"endOffset":5636,"count":65},{"startOffset":4813,"endOffset":4837,"count":0},{"startOffset":4898,"endOffset":5350,"count":0},{"startOffset":5419,"endOffset":5448,"count":0},{"startOffset":5449,"endOffset":5482,"count":0},{"startOffset":5485,"endOffset":5566,"count":0}],"isBlockCoverage":true},{"functionName":"util.ByteStringBuffer._optimizeConstructedString","ranges":[{"startOffset":6475,"endOffset":6735,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.length","ranges":[{"startOffset":6881,"endOffset":6934,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.isEmpty","ranges":[{"startOffset":7090,"endOffset":7133,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putByte","ranges":[{"startOffset":7276,"endOffset":7339,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.fillWithByte","ranges":[{"startOffset":7546,"endOffset":7792,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putBytes","ranges":[{"startOffset":7968,"endOffset":8073,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putString","ranges":[{"startOffset":8241,"endOffset":8304,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt16","ranges":[{"startOffset":8481,"endOffset":8597,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt24","ranges":[{"startOffset":8774,"endOffset":8932,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt32","ranges":[{"startOffset":9109,"endOffset":9309,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt16Le","ranges":[{"startOffset":9491,"endOffset":9607,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt24Le","ranges":[{"startOffset":9789,"endOffset":9947,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt32Le","ranges":[{"startOffset":10129,"endOffset":10329,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putInt","ranges":[{"startOffset":10569,"endOffset":10746,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putSignedInt","ranges":[{"startOffset":11042,"endOffset":11150,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.putBuffer","ranges":[{"startOffset":11328,"endOffset":11391,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getByte","ranges":[{"startOffset":11536,"endOffset":11594,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt16","ranges":[{"startOffset":11767,"endOffset":11914,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt24","ranges":[{"startOffset":12087,"endOffset":12282,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt32","ranges":[{"startOffset":12453,"endOffset":12696,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt16Le","ranges":[{"startOffset":12874,"endOffset":13021,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt24Le","ranges":[{"startOffset":13199,"endOffset":13394,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt32Le","ranges":[{"startOffset":13570,"endOffset":13813,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getInt","ranges":[{"startOffset":14070,"endOffset":14304,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getSignedInt","ranges":[{"startOffset":14592,"endOffset":14732,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.getBytes","ranges":[{"startOffset":14972,"endOffset":15385,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.bytes","ranges":[{"startOffset":15657,"endOffset":15803,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.at","ranges":[{"startOffset":15976,"endOffset":16037,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.setAt","ranges":[{"startOffset":16245,"endOffset":16399,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.last","ranges":[{"startOffset":16536,"endOffset":16603,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.copy","ranges":[{"startOffset":16711,"endOffset":16799,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.compact","ranges":[{"startOffset":16904,"endOffset":17022,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.clear","ranges":[{"startOffset":17123,"endOffset":17187,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.truncate","ranges":[{"startOffset":17392,"endOffset":17539,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.toHex","ranges":[{"startOffset":17675,"endOffset":17886,"count":0}],"isBlockCoverage":false},{"functionName":"util.ByteStringBuffer.toString","ranges":[{"startOffset":18044,"endOffset":18098,"count":0}],"isBlockCoverage":false},{"functionName":"DataBuffer","ranges":[{"startOffset":19462,"endOffset":20561,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.length","ranges":[{"startOffset":20730,"endOffset":20777,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.isEmpty","ranges":[{"startOffset":20927,"endOffset":20970,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.accommodate","ranges":[{"startOffset":21490,"endOffset":21870,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putByte","ranges":[{"startOffset":22007,"endOffset":22099,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.fillWithByte","ranges":[{"startOffset":22300,"endOffset":22418,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putBytes","ranges":[{"startOffset":22789,"endOffset":25534,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putBuffer","ranges":[{"startOffset":25706,"endOffset":25784,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putString","ranges":[{"startOffset":26000,"endOffset":26055,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt16","ranges":[{"startOffset":26226,"endOffset":26335,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt24","ranges":[{"startOffset":26506,"endOffset":26678,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt32","ranges":[{"startOffset":26849,"endOffset":26958,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt16Le","ranges":[{"startOffset":27134,"endOffset":27249,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt24Le","ranges":[{"startOffset":27425,"endOffset":27603,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt32Le","ranges":[{"startOffset":27779,"endOffset":27894,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putInt","ranges":[{"startOffset":28128,"endOffset":28301,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.putSignedInt","ranges":[{"startOffset":28572,"endOffset":28708,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getByte","ranges":[{"startOffset":28847,"endOffset":28902,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt16","ranges":[{"startOffset":29069,"endOffset":29160,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt24","ranges":[{"startOffset":29327,"endOffset":29469,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt32","ranges":[{"startOffset":29634,"endOffset":29725,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt16Le","ranges":[{"startOffset":29897,"endOffset":29994,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt24Le","ranges":[{"startOffset":30166,"endOffset":30314,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt32Le","ranges":[{"startOffset":30484,"endOffset":30581,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getInt","ranges":[{"startOffset":30826,"endOffset":31057,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getSignedInt","ranges":[{"startOffset":31339,"endOffset":31479,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.getBytes","ranges":[{"startOffset":31713,"endOffset":32275,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.bytes","ranges":[{"startOffset":32541,"endOffset":32759,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.at","ranges":[{"startOffset":32926,"endOffset":32985,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.setAt","ranges":[{"startOffset":33187,"endOffset":33248,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.last","ranges":[{"startOffset":33379,"endOffset":33438,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.copy","ranges":[{"startOffset":33540,"endOffset":33590,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.compact","ranges":[{"startOffset":33689,"endOffset":33950,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.clear","ranges":[{"startOffset":34045,"endOffset":34152,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.truncate","ranges":[{"startOffset":34351,"endOffset":34483,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.toHex","ranges":[{"startOffset":34613,"endOffset":34826,"count":0}],"isBlockCoverage":false},{"functionName":"util.DataBuffer.toString","ranges":[{"startOffset":35175,"endOffset":35786,"count":0}],"isBlockCoverage":false},{"functionName":"util.createBuffer","ranges":[{"startOffset":36241,"endOffset":36481,"count":65},{"startOffset":36377,"endOffset":36399,"count":0},{"startOffset":36401,"endOffset":36442,"count":0}],"isBlockCoverage":true},{"functionName":"util.fillString","ranges":[{"startOffset":36861,"endOffset":37012,"count":1},{"startOffset":36907,"endOffset":36998,"count":7},{"startOffset":36923,"endOffset":36944,"count":1},{"startOffset":36973,"endOffset":36994,"count":6}],"isBlockCoverage":true},{"functionName":"util.xorBytes","ranges":[{"startOffset":37287,"endOffset":37587,"count":0}],"isBlockCoverage":false},{"functionName":"util.hexToBytes","ranges":[{"startOffset":37784,"endOffset":38227,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesToHex","ranges":[{"startOffset":38410,"endOffset":38544,"count":0}],"isBlockCoverage":false},{"functionName":"util.int32ToBytes","ranges":[{"startOffset":38693,"endOffset":38880,"count":0}],"isBlockCoverage":false},{"functionName":"util.encode64","ranges":[{"startOffset":40216,"endOffset":41015,"count":0}],"isBlockCoverage":false},{"functionName":"util.decode64","ranges":[{"startOffset":41196,"endOffset":42019,"count":0}],"isBlockCoverage":false},{"functionName":"util.encodeUtf8","ranges":[{"startOffset":42289,"endOffset":42350,"count":0}],"isBlockCoverage":false},{"functionName":"util.decodeUtf8","ranges":[{"startOffset":42544,"endOffset":42603,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.raw.encode","ranges":[{"startOffset":43056,"endOffset":43124,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.raw.decode","ranges":[{"startOffset":43618,"endOffset":43884,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.hex.decode","ranges":[{"startOffset":44570,"endOffset":45048,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.base64.encode","ranges":[{"startOffset":45318,"endOffset":46013,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.base64.decode","ranges":[{"startOffset":46440,"endOffset":47343,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.base58.encode","ranges":[{"startOffset":47440,"endOffset":47528,"count":0}],"isBlockCoverage":false},{"functionName":"util.binary.base58.decode","ranges":[{"startOffset":47558,"endOffset":47646,"count":0}],"isBlockCoverage":false},{"functionName":"util.text.utf8.encode","ranges":[{"startOffset":48172,"endOffset":48468,"count":0}],"isBlockCoverage":false},{"functionName":"util.text.utf8.decode","ranges":[{"startOffset":48633,"endOffset":48718,"count":0}],"isBlockCoverage":false},{"functionName":"util.text.utf16.encode","ranges":[{"startOffset":49132,"endOffset":49475,"count":0}],"isBlockCoverage":false},{"functionName":"util.text.utf16.decode","ranges":[{"startOffset":49642,"endOffset":49734,"count":0}],"isBlockCoverage":false},{"functionName":"util.deflate","ranges":[{"startOffset":50027,"endOffset":50555,"count":0}],"isBlockCoverage":false},{"functionName":"util.inflate","ranges":[{"startOffset":50864,"endOffset":51062,"count":0}],"isBlockCoverage":false},{"functionName":"_setStorageObject","ranges":[{"startOffset":51249,"endOffset":51771,"count":0}],"isBlockCoverage":false},{"functionName":"_getStorageObject","ranges":[{"startOffset":51971,"endOffset":52910,"count":0}],"isBlockCoverage":false},{"functionName":"_setItem","ranges":[{"startOffset":53156,"endOffset":53421,"count":0}],"isBlockCoverage":false},{"functionName":"_getItem","ranges":[{"startOffset":53619,"endOffset":53823,"count":0}],"isBlockCoverage":false},{"functionName":"_removeItem","ranges":[{"startOffset":54003,"endOffset":54458,"count":0}],"isBlockCoverage":false},{"functionName":"_clearItems","ranges":[{"startOffset":54624,"endOffset":54681,"count":0}],"isBlockCoverage":false},{"functionName":"_callStorageFunction","ranges":[{"startOffset":54927,"endOffset":55778,"count":0}],"isBlockCoverage":false},{"functionName":"util.setItem","ranges":[{"startOffset":56892,"endOffset":56989,"count":0}],"isBlockCoverage":false},{"functionName":"util.getItem","ranges":[{"startOffset":57331,"endOffset":57429,"count":0}],"isBlockCoverage":false},{"functionName":"util.removeItem","ranges":[{"startOffset":57724,"endOffset":57818,"count":0}],"isBlockCoverage":false},{"functionName":"util.clearItems","ranges":[{"startOffset":58126,"endOffset":58215,"count":0}],"isBlockCoverage":false},{"functionName":"util.parseUrl","ranges":[{"startOffset":58400,"endOffset":59145,"count":0}],"isBlockCoverage":false},{"functionName":"util.getQueryVariables","ranges":[{"startOffset":60019,"endOffset":61200,"count":1},{"startOffset":60820,"endOffset":60838,"count":0},{"startOffset":60839,"endOffset":60864,"count":0},{"startOffset":60866,"endOffset":60987,"count":0},{"startOffset":61118,"endOffset":61182,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":60051,"endOffset":60649,"count":0}],"isBlockCoverage":false},{"functionName":"util.parseFragment","ranges":[{"startOffset":61560,"endOffset":62177,"count":0}],"isBlockCoverage":false},{"functionName":"util.makeRequest","ranges":[{"startOffset":63072,"endOffset":64266,"count":0}],"isBlockCoverage":false},{"functionName":"util.makeLink","ranges":[{"startOffset":64697,"endOffset":65003,"count":0}],"isBlockCoverage":false},{"functionName":"util.setPath","ranges":[{"startOffset":65463,"endOffset":66031,"count":0}],"isBlockCoverage":false},{"functionName":"util.getPath","ranges":[{"startOffset":66484,"endOffset":66817,"count":0}],"isBlockCoverage":false},{"functionName":"util.deletePath","ranges":[{"startOffset":67107,"endOffset":67603,"count":0}],"isBlockCoverage":false},{"functionName":"util.isEmpty","ranges":[{"startOffset":67834,"endOffset":67956,"count":0}],"isBlockCoverage":false},{"functionName":"util.format","ranges":[{"startOffset":68205,"endOffset":69282,"count":0}],"isBlockCoverage":false},{"functionName":"util.formatNumber","ranges":[{"startOffset":69411,"endOffset":70453,"count":0}],"isBlockCoverage":false},{"functionName":"util.formatSize","ranges":[{"startOffset":70600,"endOffset":70976,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesFromIP","ranges":[{"startOffset":71245,"endOffset":71416,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesFromIPv4","ranges":[{"startOffset":71639,"endOffset":71920,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesFromIPv6","ranges":[{"startOffset":72144,"endOffset":72635,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesToIP","ranges":[{"startOffset":72969,"endOffset":73138,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesToIPv4","ranges":[{"startOffset":73384,"endOffset":73569,"count":0}],"isBlockCoverage":false},{"functionName":"util.bytesToIPv6","ranges":[{"startOffset":73818,"endOffset":74969,"count":0}],"isBlockCoverage":false},{"functionName":"util.estimateCores","ranges":[{"startOffset":75343,"endOffset":78357,"count":0}],"isBlockCoverage":false}]},{"scriptId":"954","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/baseN.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5068,"count":1}],"isBlockCoverage":true},{"functionName":"api.encode","ranges":[{"startOffset":1683,"endOffset":2921,"count":0}],"isBlockCoverage":false},{"functionName":"api.decode","ranges":[{"startOffset":3107,"endOffset":4333,"count":0}],"isBlockCoverage":false},{"functionName":"_encodeWithByteBuffer","ranges":[{"startOffset":4336,"endOffset":5067,"count":0}],"isBlockCoverage":false}]},{"scriptId":"955","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/cipherModes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28610,"count":1},{"startOffset":193,"endOffset":198,"count":0}],"isBlockCoverage":true},{"functionName":"modes.ecb","ranges":[{"startOffset":385,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ecb.start","ranges":[{"startOffset":679,"endOffset":699,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ecb.encrypt","ranges":[{"startOffset":732,"endOffset":1179,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ecb.decrypt","ranges":[{"startOffset":1212,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ecb.pad","ranges":[{"startOffset":1688,"endOffset":1975,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ecb.unpad","ranges":[{"startOffset":2006,"endOffset":2381,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc","ranges":[{"startOffset":2433,"endOffset":2696,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc.start","ranges":[{"startOffset":2727,"endOffset":3253,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc.encrypt","ranges":[{"startOffset":3286,"endOffset":3854,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc.decrypt","ranges":[{"startOffset":3887,"endOffset":4473,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc.pad","ranges":[{"startOffset":4502,"endOffset":4789,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cbc.unpad","ranges":[{"startOffset":4820,"endOffset":5195,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cfb","ranges":[{"startOffset":5241,"endOffset":5610,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cfb.start","ranges":[{"startOffset":5641,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cfb.encrypt","ranges":[{"startOffset":5900,"endOffset":7565,"count":0}],"isBlockCoverage":false},{"functionName":"modes.cfb.decrypt","ranges":[{"startOffset":7598,"endOffset":9297,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ofb","ranges":[{"startOffset":9343,"endOffset":9666,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ofb.start","ranges":[{"startOffset":9697,"endOffset":9923,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ofb.encrypt","ranges":[{"startOffset":9956,"endOffset":11572,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ctr","ranges":[{"startOffset":11670,"endOffset":11993,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ctr.start","ranges":[{"startOffset":12024,"endOffset":12250,"count":0}],"isBlockCoverage":false},{"functionName":"modes.ctr.encrypt","ranges":[{"startOffset":12283,"endOffset":13815,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm","ranges":[{"startOffset":13925,"endOffset":14488,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.start","ranges":[{"startOffset":14519,"endOffset":17498,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.encrypt","ranges":[{"startOffset":17531,"endOffset":19765,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.decrypt","ranges":[{"startOffset":19798,"endOffset":20743,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.afterFinish","ranges":[{"startOffset":20780,"endOffset":21634,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.multiply","ranges":[{"startOffset":22889,"endOffset":23476,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.pow","ranges":[{"startOffset":23505,"endOffset":24240,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.tableMultiply","ranges":[{"startOffset":24279,"endOffset":24588,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.ghash","ranges":[{"startOffset":24958,"endOffset":25107,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.generateHashTable","ranges":[{"startOffset":25845,"endOffset":26431,"count":0}],"isBlockCoverage":false},{"functionName":"modes.gcm.generateSubHashTable","ranges":[{"startOffset":26738,"endOffset":27764,"count":0}],"isBlockCoverage":false},{"functionName":"transformIV","ranges":[{"startOffset":27793,"endOffset":28340,"count":0}],"isBlockCoverage":false},{"functionName":"inc32","ranges":[{"startOffset":28342,"endOffset":28481,"count":0}],"isBlockCoverage":false},{"functionName":"from64To32","ranges":[{"startOffset":28483,"endOffset":28609,"count":0}],"isBlockCoverage":false}]},{"scriptId":"956","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/aesCipherSuites.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9136,"count":1}],"isBlockCoverage":true},{"functionName":"initSecurityParameters","ranges":[{"startOffset":432,"endOffset":769,"count":0}],"isBlockCoverage":false},{"functionName":"initSecurityParameters","ranges":[{"startOffset":955,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"initConnectionState","ranges":[{"startOffset":1341,"endOffset":2196,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt_aes_cbc_sha1","ranges":[{"startOffset":2443,"endOffset":3614,"count":0}],"isBlockCoverage":false},{"functionName":"encrypt_aes_cbc_sha1_padding","ranges":[{"startOffset":3862,"endOffset":5311,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt_aes_cbc_sha1_padding","ranges":[{"startOffset":5561,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"decrypt_aes_cbc_sha1","ranges":[{"startOffset":6619,"endOffset":8382,"count":0}],"isBlockCoverage":false},{"functionName":"compareMacs","ranges":[{"startOffset":8868,"endOffset":9135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"957","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/tls.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132470,"count":1},{"startOffset":126584,"endOffset":126661,"count":56},{"startOffset":126623,"endOffset":126659,"count":15}],"isBlockCoverage":true},{"functionName":"prf_TLS1","ranges":[{"startOffset":11329,"endOffset":13173,"count":0}],"isBlockCoverage":false},{"functionName":"prf_sha256","ranges":[{"startOffset":13490,"endOffset":13569,"count":0}],"isBlockCoverage":false},{"functionName":"hmac_sha1","ranges":[{"startOffset":13844,"endOffset":14435,"count":0}],"isBlockCoverage":false},{"functionName":"deflate","ranges":[{"startOffset":14736,"endOffset":15018,"count":0}],"isBlockCoverage":false},{"functionName":"inflate","ranges":[{"startOffset":15324,"endOffset":15606,"count":0}],"isBlockCoverage":false},{"functionName":"readVector","ranges":[{"startOffset":16312,"endOffset":16649,"count":0}],"isBlockCoverage":false},{"functionName":"writeVector","ranges":[{"startOffset":16872,"endOffset":17131,"count":0}],"isBlockCoverage":false},{"functionName":"tls.getCipherSuite","ranges":[{"startOffset":21664,"endOffset":21924,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleUnexpected","ranges":[{"startOffset":22070,"endOffset":22486,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleHelloRequest","ranges":[{"startOffset":22692,"endOffset":23134,"count":0}],"isBlockCoverage":false},{"functionName":"tls.parseHelloMessage","ranges":[{"startOffset":23312,"endOffset":27393,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createSecurityParameters","ranges":[{"startOffset":27596,"endOffset":28639,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleServerHello","ranges":[{"startOffset":29465,"endOffset":30731,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleClientHello","ranges":[{"startOffset":31276,"endOffset":34814,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleCertificate","ranges":[{"startOffset":35821,"endOffset":38249,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleServerKeyExchange","ranges":[{"startOffset":39887,"endOffset":40393,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleClientKeyExchange","ranges":[{"startOffset":40609,"endOffset":43016,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleCertificateRequest","ranges":[{"startOffset":44032,"endOffset":44763,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleCertificateVerify","ranges":[{"startOffset":44979,"endOffset":46607,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleServerHelloDone","ranges":[{"startOffset":47496,"endOffset":50728,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleChangeCipherSpec","ranges":[{"startOffset":50882,"endOffset":51916,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleFinished","ranges":[{"startOffset":53405,"endOffset":55695,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleAlert","ranges":[{"startOffset":55828,"endOffset":58610,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleHandshake","ranges":[{"startOffset":58750,"endOffset":60917,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleApplicationData","ranges":[{"startOffset":61070,"endOffset":61218,"count":0}],"isBlockCoverage":false},{"functionName":"tls.handleHeartbeat","ranges":[{"startOffset":61358,"endOffset":62422,"count":0}],"isBlockCoverage":false},{"functionName":"tls.generateKeys","ranges":[{"startOffset":71865,"endOffset":73815,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createConnectionState","ranges":[{"startOffset":75076,"endOffset":78491,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createRandom","ranges":[{"startOffset":79274,"endOffset":79505,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createRecord","ranges":[{"startOffset":79750,"endOffset":80023,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createAlert","ranges":[{"startOffset":80249,"endOffset":80448,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createClientHello","ranges":[{"startOffset":82382,"endOffset":85884,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createServerHello","ranges":[{"startOffset":86027,"endOffset":86986,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createCertificate","ranges":[{"startOffset":87795,"endOffset":90335,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createClientKeyExchange","ranges":[{"startOffset":92331,"endOffset":93514,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createServerKeyExchange","ranges":[{"startOffset":93675,"endOffset":94046,"count":0}],"isBlockCoverage":false},{"functionName":"tls.getClientSignature","ranges":[{"startOffset":94300,"endOffset":95528,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createCertificateVerify","ranges":[{"startOffset":97760,"endOffset":98391,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createCertificateRequest","ranges":[{"startOffset":98555,"endOffset":99439,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createServerHelloDone","ranges":[{"startOffset":99594,"endOffset":99764,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createChangeCipherSpec","ranges":[{"startOffset":100260,"endOffset":100351,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createFinished","ranges":[{"startOffset":101169,"endOffset":101804,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createHeartbeat","ranges":[{"startOffset":103465,"endOffset":104017,"count":0}],"isBlockCoverage":false},{"functionName":"tls.queue","ranges":[{"startOffset":104179,"endOffset":105833,"count":0}],"isBlockCoverage":false},{"functionName":"tls.flush","ranges":[{"startOffset":106052,"endOffset":106457,"count":0}],"isBlockCoverage":false},{"functionName":"_certErrorToAlertDesc","ranges":[{"startOffset":106629,"endOffset":107397,"count":0}],"isBlockCoverage":false},{"functionName":"_alertDescToCertError","ranges":[{"startOffset":107573,"endOffset":108344,"count":0}],"isBlockCoverage":false},{"functionName":"tls.verifyCertificateChain","ranges":[{"startOffset":108670,"endOffset":110405,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createSessionCache","ranges":[{"startOffset":110649,"endOffset":112367,"count":0}],"isBlockCoverage":false},{"functionName":"tls.createConnection","ranges":[{"startOffset":112585,"endOffset":126476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"958","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/asn1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42041,"count":1}],"isBlockCoverage":true},{"functionName":"asn1.create","ranges":[{"startOffset":7600,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.copy","ranges":[{"startOffset":8900,"endOffset":9565,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.equals","ranges":[{"startOffset":9925,"endOffset":10736,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.getBerValueLength","ranges":[{"startOffset":11056,"endOffset":11644,"count":0}],"isBlockCoverage":false},{"functionName":"_checkBufferLength","ranges":[{"startOffset":11899,"endOffset":12148,"count":0}],"isBlockCoverage":false},{"functionName":"_getValueLength","ranges":[{"startOffset":12485,"endOffset":13400,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.fromDer","ranges":[{"startOffset":14313,"endOffset":14875,"count":0}],"isBlockCoverage":false},{"functionName":"_fromDer","ranges":[{"startOffset":15219,"endOffset":20646,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.toDer","ranges":[{"startOffset":20829,"endOffset":23758,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.oidToDer","ranges":[{"startOffset":24006,"endOffset":25026,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.derToOid","ranges":[{"startOffset":25297,"endOffset":25945,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.utcTimeToDate","ranges":[{"startOffset":26235,"endOffset":28216,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.generalizedTimeToDate","ranges":[{"startOffset":28386,"endOffset":30451,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.dateToUtcTime","ranges":[{"startOffset":30754,"endOffset":31424,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.dateToGeneralizedTime","ranges":[{"startOffset":31603,"endOffset":32263,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.integerToDer","ranges":[{"startOffset":32463,"endOffset":32928,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.derToInteger","ranges":[{"startOffset":33151,"endOffset":33423,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.validate","ranges":[{"startOffset":34490,"endOffset":37153,"count":0}],"isBlockCoverage":false},{"functionName":"asn1.prettyPrint","ranges":[{"startOffset":37472,"endOffset":42039,"count":0}],"isBlockCoverage":false}]},{"scriptId":"959","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/oids.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6025,"count":1}],"isBlockCoverage":true},{"functionName":"_IN","ranges":[{"startOffset":299,"endOffset":363,"count":82}],"isBlockCoverage":true},{"functionName":"_I_","ranges":[{"startOffset":395,"endOffset":440,"count":30}],"isBlockCoverage":true}]},{"scriptId":"960","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/hmac.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3833,"count":1}],"isBlockCoverage":true},{"functionName":"hmac.create","ranges":[{"startOffset":540,"endOffset":3831,"count":0}],"isBlockCoverage":false}]},{"scriptId":"961","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/md.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":253,"count":1}],"isBlockCoverage":true}]},{"scriptId":"962","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/md5.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7983,"count":1}],"isBlockCoverage":true},{"functionName":"md5.create","ranges":[{"startOffset":431,"endOffset":5408,"count":0}],"isBlockCoverage":false},{"functionName":"_init","ranges":[{"startOffset":5596,"endOffset":6525,"count":0}],"isBlockCoverage":false},{"functionName":"_update","ranges":[{"startOffset":6720,"endOffset":7982,"count":0}],"isBlockCoverage":false}]},{"scriptId":"963","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6456,"count":1}],"isBlockCoverage":true},{"functionName":"pem.encode","ranges":[{"startOffset":1349,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"pem.decode","ranges":[{"startOffset":2580,"endOffset":5419,"count":0}],"isBlockCoverage":false},{"functionName":"foldHeader","ranges":[{"startOffset":5422,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"ltrim","ranges":[{"startOffset":6398,"endOffset":6455,"count":0}],"isBlockCoverage":false}]},{"scriptId":"964","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pki.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2651,"count":1},{"startOffset":583,"endOffset":588,"count":0}],"isBlockCoverage":true},{"functionName":"pki.pemToDer","ranges":[{"startOffset":797,"endOffset":1030,"count":0}],"isBlockCoverage":false},{"functionName":"pki.privateKeyFromPem","ranges":[{"startOffset":1192,"endOffset":1764,"count":0}],"isBlockCoverage":false},{"functionName":"pki.privateKeyToPem","ranges":[{"startOffset":1989,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"pki.privateKeyInfoToPem","ranges":[{"startOffset":2453,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"965","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pbe.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":30999,"count":1},{"startOffset":960,"endOffset":965,"count":0}],"isBlockCoverage":true},{"functionName":"pki.encryptPrivateKeyInfo","ranges":[{"startOffset":6198,"endOffset":10621,"count":0}],"isBlockCoverage":false},{"functionName":"pki.decryptPrivateKeyInfo","ranges":[{"startOffset":10879,"endOffset":11587,"count":0}],"isBlockCoverage":false},{"functionName":"pki.encryptedPrivateKeyToPem","ranges":[{"startOffset":11851,"endOffset":12059,"count":0}],"isBlockCoverage":false},{"functionName":"pki.encryptedPrivateKeyFromPem","ranges":[{"startOffset":12311,"endOffset":12833,"count":0}],"isBlockCoverage":false},{"functionName":"pki.encryptRsaPrivateKey","ranges":[{"startOffset":14078,"endOffset":16086,"count":0}],"isBlockCoverage":false},{"functionName":"pki.decryptRsaPrivateKey","ranges":[{"startOffset":16322,"endOffset":18796,"count":0}],"isBlockCoverage":false},{"functionName":"pki.pbe.generatePkcs12Key","ranges":[{"startOffset":19314,"endOffset":22474,"count":0}],"isBlockCoverage":false},{"functionName":"pki.pbe.getCipher","ranges":[{"startOffset":22726,"endOffset":23302,"count":0}],"isBlockCoverage":false},{"functionName":"pki.pbe.getCipherForPBES2","ranges":[{"startOffset":23712,"endOffset":25872,"count":0}],"isBlockCoverage":false},{"functionName":"pki.pbe.getCipherForPKCS12PBE","ranges":[{"startOffset":26313,"endOffset":27721,"count":0}],"isBlockCoverage":false},{"functionName":"pki.pbe.opensslDeriveBytes","ranges":[{"startOffset":28141,"endOffset":28625,"count":0}],"isBlockCoverage":false},{"functionName":"hash","ranges":[{"startOffset":28628,"endOffset":28711,"count":0}],"isBlockCoverage":false},{"functionName":"prfOidToMessageDigest","ranges":[{"startOffset":28713,"endOffset":29245,"count":0}],"isBlockCoverage":false},{"functionName":"prfAlgorithmToMessageDigest","ranges":[{"startOffset":29247,"endOffset":29980,"count":0}],"isBlockCoverage":false},{"functionName":"createPbkdf2Params","ranges":[{"startOffset":29982,"endOffset":30998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"966","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/des.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20442,"count":1}],"isBlockCoverage":true},{"functionName":"forge.des.startEncrypting","ranges":[{"startOffset":2130,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"forge.des.createEncryptionCipher","ranges":[{"startOffset":2786,"endOffset":2907,"count":0}],"isBlockCoverage":false},{"functionName":"forge.des.startDecrypting","ranges":[{"startOffset":3612,"endOffset":3822,"count":0}],"isBlockCoverage":false},{"functionName":"forge.des.createDecryptionCipher","ranges":[{"startOffset":4271,"endOffset":4391,"count":0}],"isBlockCoverage":false},{"functionName":"forge.des.Algorithm","ranges":[{"startOffset":4597,"endOffset":4991,"count":0}],"isBlockCoverage":false},{"functionName":"forge.des.Algorithm.initialize","ranges":[{"startOffset":5310,"endOffset":5692,"count":0}],"isBlockCoverage":false},{"functionName":"registerAlgorithm","ranges":[{"startOffset":6275,"endOffset":6448,"count":10}],"isBlockCoverage":true},{"functionName":"factory","ranges":[{"startOffset":6332,"endOffset":6396,"count":0}],"isBlockCoverage":false},{"functionName":"_createKeys","ranges":[{"startOffset":11166,"endOffset":16169,"count":0}],"isBlockCoverage":false},{"functionName":"_updateBlock","ranges":[{"startOffset":16487,"endOffset":19051,"count":0}],"isBlockCoverage":false},{"functionName":"_createCipher","ranges":[{"startOffset":19677,"endOffset":20441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"967","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pbkdf2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5807,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.forge.pbkdf2.pkcs5.pbkdf2","ranges":[{"startOffset":1188,"endOffset":5805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"968","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/random.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5435,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":733,"endOffset":5430,"count":1},{"startOffset":795,"endOffset":819,"count":0},{"startOffset":821,"endOffset":867,"count":0},{"startOffset":5410,"endOffset":5418,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":870,"endOffset":5377,"count":1},{"startOffset":3551,"endOffset":3739,"count":0},{"startOffset":3802,"endOffset":3821,"count":0},{"startOffset":3824,"endOffset":5108,"count":0},{"startOffset":5171,"endOffset":5279,"count":0}],"isBlockCoverage":true},{"functionName":"prng_aes.formatKey","ranges":[{"startOffset":1058,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"prng_aes.formatSeed","ranges":[{"startOffset":1386,"endOffset":1636,"count":0}],"isBlockCoverage":false},{"functionName":"prng_aes.cipher","ranges":[{"startOffset":1656,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"prng_aes.increment","ranges":[{"startOffset":2002,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"spawnPrng","ranges":[{"startOffset":2166,"endOffset":3277,"count":1}],"isBlockCoverage":true},{"functionName":"ctx.getBytes","ranges":[{"startOffset":2743,"endOffset":2816,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.getBytesSync","ranges":[{"startOffset":3206,"endOffset":3259,"count":0}],"isBlockCoverage":false},{"functionName":"getRandomValues","ranges":[{"startOffset":3668,"endOffset":3732,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4857,"endOffset":4978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5043,"endOffset":5100,"count":0}],"isBlockCoverage":false}]},{"scriptId":"969","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/sha256.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9574,"count":1}],"isBlockCoverage":true},{"functionName":"sha256.create","ranges":[{"startOffset":488,"endOffset":5868,"count":32},{"startOffset":557,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"md.start","ranges":[{"startOffset":1175,"endOffset":1776,"count":32},{"startOffset":1477,"endOffset":1520,"count":64}],"isBlockCoverage":true},{"functionName":"md.update","ranges":[{"startOffset":2238,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"md.digest","ranges":[{"startOffset":3153,"endOffset":5851,"count":0}],"isBlockCoverage":false},{"functionName":"_init","ranges":[{"startOffset":6046,"endOffset":7113,"count":1}],"isBlockCoverage":true},{"functionName":"_update","ranges":[{"startOffset":7315,"endOffset":9573,"count":0}],"isBlockCoverage":false}]},{"scriptId":"970","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/prng.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12349,"count":1}],"isBlockCoverage":true},{"functionName":"prng.create","ranges":[{"startOffset":1345,"endOffset":12347,"count":1},{"startOffset":1738,"endOffset":1771,"count":32},{"startOffset":10035,"endOffset":10250,"count":0}],"isBlockCoverage":true},{"functionName":"ctx.generate","ranges":[{"startOffset":2273,"endOffset":3819,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.generateSync","ranges":[{"startOffset":4011,"endOffset":5155,"count":0}],"isBlockCoverage":false},{"functionName":"_reseed","ranges":[{"startOffset":5303,"endOffset":5681,"count":0}],"isBlockCoverage":false},{"functionName":"_reseedSync","ranges":[{"startOffset":5759,"endOffset":6002,"count":0}],"isBlockCoverage":false},{"functionName":"_seed","ranges":[{"startOffset":6096,"endOffset":7315,"count":0}],"isBlockCoverage":false},{"functionName":"defaultSeedFile","ranges":[{"startOffset":7527,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.seedFile","ranges":[{"startOffset":9698,"endOffset":9901,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.seedFileSync","ranges":[{"startOffset":9953,"endOffset":10030,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.seedFile","ranges":[{"startOffset":10062,"endOffset":10205,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.collect","ranges":[{"startOffset":10384,"endOffset":10645,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.collectInt","ranges":[{"startOffset":10804,"endOffset":10963,"count":0}],"isBlockCoverage":false},{"functionName":"ctx.registerWorker","ranges":[{"startOffset":11335,"endOffset":12329,"count":0}],"isBlockCoverage":false}]},{"scriptId":"971","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/rc2.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11949,"count":1}],"isBlockCoverage":true},{"functionName":"rol","ranges":[{"startOffset":2155,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"ror","ranges":[{"startOffset":2525,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"forge.rc2.expandKey","ranges":[{"startOffset":2963,"endOffset":3555,"count":0}],"isBlockCoverage":false},{"functionName":"createCipher","ranges":[{"startOffset":3825,"endOffset":9748,"count":0}],"isBlockCoverage":false},{"functionName":"forge.rc2.startEncrypting","ranges":[{"startOffset":10274,"endOffset":10407,"count":0}],"isBlockCoverage":false},{"functionName":"forge.rc2.createEncryptionCipher","ranges":[{"startOffset":10784,"endOffset":10847,"count":0}],"isBlockCoverage":false},{"functionName":"forge.rc2.startDecrypting","ranges":[{"startOffset":11373,"endOffset":11506,"count":0}],"isBlockCoverage":false},{"functionName":"forge.rc2.createDecryptionCipher","ranges":[{"startOffset":11883,"endOffset":11947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"972","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/rsa.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":55193,"count":1},{"startOffset":2228,"endOffset":2233,"count":0}],"isBlockCoverage":true},{"functionName":"emsaPkcs1v15encode","ranges":[{"startOffset":7472,"endOffset":8449,"count":0}],"isBlockCoverage":false},{"functionName":"_modPow","ranges":[{"startOffset":8710,"endOffset":13016,"count":0}],"isBlockCoverage":false},{"functionName":"pki.rsa.encrypt","ranges":[{"startOffset":14081,"endOffset":15094,"count":0}],"isBlockCoverage":false},{"functionName":"pki.rsa.decrypt","ranges":[{"startOffset":15796,"endOffset":17168,"count":0}],"isBlockCoverage":false},{"functionName":"pki.rsa.createKeyPairGenerationState","ranges":[{"startOffset":17829,"endOffset":18955,"count":0}],"isBlockCoverage":false},{"functionName":"pki.rsa.stepKeyPairGenerationState","ranges":[{"startOffset":20127,"endOffset":24561,"count":0}],"isBlockCoverage":false},{"functionName":"pki.rsa.generateKeyPair","ranges":[{"startOffset":26054,"endOffset":29748,"count":0}],"isBlockCoverage":false},{"functionName":"pki.setRsaPublicKey.pki.rsa.setPublicKey","ranges":[{"startOffset":29953,"endOffset":34079,"count":0}],"isBlockCoverage":false},{"functionName":"pki.setRsaPrivateKey.pki.rsa.setPrivateKey","ranges":[{"startOffset":34586,"endOffset":37730,"count":0}],"isBlockCoverage":false},{"functionName":"pki.wrapRsaPrivateKey","ranges":[{"startOffset":37924,"endOffset":38587,"count":0}],"isBlockCoverage":false},{"functionName":"pki.privateKeyFromAsn1","ranges":[{"startOffset":38825,"endOffset":40331,"count":0}],"isBlockCoverage":false},{"functionName":"pki.privateKeyToAsn1.pki.privateKeyToRSAPrivateKey","ranges":[{"startOffset":40544,"endOffset":41757,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyFromAsn1","ranges":[{"startOffset":41983,"endOffset":42968,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyToAsn1.pki.publicKeyToSubjectPublicKeyInfo","ranges":[{"startOffset":43196,"endOffset":43789,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyToRSAPublicKey","ranges":[{"startOffset":43971,"endOffset":44307,"count":0}],"isBlockCoverage":false},{"functionName":"_encodePkcs1_v1_5","ranges":[{"startOffset":44581,"endOffset":46522,"count":0}],"isBlockCoverage":false},{"functionName":"_decodePkcs1_v1_5","ranges":[{"startOffset":46804,"endOffset":48636,"count":0}],"isBlockCoverage":false},{"functionName":"_generateKeyPair","ranges":[{"startOffset":49321,"endOffset":51948,"count":0}],"isBlockCoverage":false},{"functionName":"_bnToBytes","ranges":[{"startOffset":52098,"endOffset":52641,"count":0}],"isBlockCoverage":false},{"functionName":"_getMillerRabinTests","ranges":[{"startOffset":52912,"endOffset":53276,"count":0}],"isBlockCoverage":false},{"functionName":"_detectSubtleCrypto","ranges":[{"startOffset":53443,"endOffset":53664,"count":0}],"isBlockCoverage":false},{"functionName":"_detectSubtleMsCrypto","ranges":[{"startOffset":53983,"endOffset":54212,"count":0}],"isBlockCoverage":false},{"functionName":"_intToUint8Array","ranges":[{"startOffset":54214,"endOffset":54444,"count":0}],"isBlockCoverage":false},{"functionName":"_privateKeyFromJwk","ranges":[{"startOffset":54446,"endOffset":54872,"count":0}],"isBlockCoverage":false},{"functionName":"_publicKeyFromJwk","ranges":[{"startOffset":54874,"endOffset":55079,"count":0}],"isBlockCoverage":false},{"functionName":"_base64ToBigInt","ranges":[{"startOffset":55081,"endOffset":55192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"973","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/jsbn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":35188,"count":1},{"startOffset":3825,"endOffset":4144,"count":0},{"startOffset":4562,"endOffset":4579,"count":10},{"startOffset":4632,"endOffset":4649,"count":26},{"startOffset":4702,"endOffset":4719,"count":26}],"isBlockCoverage":true},{"functionName":"BigInteger","ranges":[{"startOffset":1961,"endOffset":2180,"count":3},{"startOffset":2028,"endOffset":2178,"count":0}],"isBlockCoverage":true},{"functionName":"nbi","ranges":[{"startOffset":2250,"endOffset":2297,"count":2}],"isBlockCoverage":true},{"functionName":"am1","ranges":[{"startOffset":2664,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"am2","ranges":[{"startOffset":2995,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"am3","ranges":[{"startOffset":3419,"endOffset":3709,"count":0}],"isBlockCoverage":false},{"functionName":"int2char","ranges":[{"startOffset":4721,"endOffset":4769,"count":0}],"isBlockCoverage":false},{"functionName":"intAt","ranges":[{"startOffset":4770,"endOffset":4852,"count":0}],"isBlockCoverage":false},{"functionName":"bnpCopyTo","ranges":[{"startOffset":4884,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"bnpFromInt","ranges":[{"startOffset":5061,"endOffset":5217,"count":3},{"startOffset":5116,"endOffset":5119,"count":0},{"startOffset":5135,"endOffset":5152,"count":2},{"startOffset":5152,"endOffset":5215,"count":1},{"startOffset":5171,"endOffset":5196,"count":0}],"isBlockCoverage":true},{"functionName":"nbv","ranges":[{"startOffset":5257,"endOffset":5315,"count":2}],"isBlockCoverage":true},{"functionName":"bnpFromString","ranges":[{"startOffset":5358,"endOffset":6289,"count":0}],"isBlockCoverage":false},{"functionName":"bnpClamp","ranges":[{"startOffset":6334,"endOffset":6441,"count":0}],"isBlockCoverage":false},{"functionName":"bnToString","ranges":[{"startOffset":6499,"endOffset":7243,"count":0}],"isBlockCoverage":false},{"functionName":"bnNegate","ranges":[{"startOffset":7263,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"bnAbs","ranges":[{"startOffset":7363,"endOffset":7421,"count":0}],"isBlockCoverage":false},{"functionName":"bnCompareTo","ranges":[{"startOffset":7483,"endOffset":7699,"count":0}],"isBlockCoverage":false},{"functionName":"nbits","ranges":[{"startOffset":7740,"endOffset":7987,"count":0}],"isBlockCoverage":false},{"functionName":"bnBitLength","ranges":[{"startOffset":8037,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"bnpDLShiftTo","ranges":[{"startOffset":8198,"endOffset":8375,"count":0}],"isBlockCoverage":false},{"functionName":"bnpDRShiftTo","ranges":[{"startOffset":8409,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"bnpLShiftTo","ranges":[{"startOffset":8578,"endOffset":8965,"count":0}],"isBlockCoverage":false},{"functionName":"bnpRShiftTo","ranges":[{"startOffset":8996,"endOffset":9428,"count":0}],"isBlockCoverage":false},{"functionName":"bnpSubTo","ranges":[{"startOffset":9458,"endOffset":10054,"count":0}],"isBlockCoverage":false},{"functionName":"bnpMultiplyTo","ranges":[{"startOffset":10160,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"bnpSquareTo","ranges":[{"startOffset":10484,"endOffset":10886,"count":0}],"isBlockCoverage":false},{"functionName":"bnpDivRemTo","ranges":[{"startOffset":11007,"endOffset":12408,"count":0}],"isBlockCoverage":false},{"functionName":"bnMod","ranges":[{"startOffset":12433,"endOffset":12583,"count":0}],"isBlockCoverage":false},{"functionName":"Classic","ranges":[{"startOffset":12632,"endOffset":12667,"count":0}],"isBlockCoverage":false},{"functionName":"cConvert","ranges":[{"startOffset":12668,"endOffset":12773,"count":0}],"isBlockCoverage":false},{"functionName":"cRevert","ranges":[{"startOffset":12774,"endOffset":12807,"count":0}],"isBlockCoverage":false},{"functionName":"cReduce","ranges":[{"startOffset":12808,"endOffset":12858,"count":0}],"isBlockCoverage":false},{"functionName":"cMulTo","ranges":[{"startOffset":12859,"endOffset":12920,"count":0}],"isBlockCoverage":false},{"functionName":"cSqrTo","ranges":[{"startOffset":12921,"endOffset":12976,"count":0}],"isBlockCoverage":false},{"functionName":"bnpInvDigit","ranges":[{"startOffset":13572,"endOffset":14148,"count":0}],"isBlockCoverage":false},{"functionName":"Montgomery","ranges":[{"startOffset":14174,"endOffset":14345,"count":0}],"isBlockCoverage":false},{"functionName":"montConvert","ranges":[{"startOffset":14359,"endOffset":14546,"count":0}],"isBlockCoverage":false},{"functionName":"montRevert","ranges":[{"startOffset":14561,"endOffset":14649,"count":0}],"isBlockCoverage":false},{"functionName":"montReduce","ranges":[{"startOffset":14680,"endOffset":15318,"count":0}],"isBlockCoverage":false},{"functionName":"montSqrTo","ranges":[{"startOffset":15349,"endOffset":15407,"count":0}],"isBlockCoverage":false},{"functionName":"montMulTo","ranges":[{"startOffset":15439,"endOffset":15503,"count":0}],"isBlockCoverage":false},{"functionName":"bnpIsEven","ranges":[{"startOffset":15751,"endOffset":15825,"count":0}],"isBlockCoverage":false},{"functionName":"bnpExp","ranges":[{"startOffset":15899,"endOffset":16202,"count":0}],"isBlockCoverage":false},{"functionName":"bnModPowInt","ranges":[{"startOffset":16242,"endOffset":16380,"count":0}],"isBlockCoverage":false},{"functionName":"bnClone","ranges":[{"startOffset":17686,"endOffset":17749,"count":0}],"isBlockCoverage":false},{"functionName":"bnIntValue","ranges":[{"startOffset":17786,"endOffset":18075,"count":0}],"isBlockCoverage":false},{"functionName":"bnByteValue","ranges":[{"startOffset":18109,"endOffset":18185,"count":0}],"isBlockCoverage":false},{"functionName":"bnShortValue","ranges":[{"startOffset":18237,"endOffset":18314,"count":0}],"isBlockCoverage":false},{"functionName":"bnpChunkSize","ranges":[{"startOffset":18353,"endOffset":18430,"count":0}],"isBlockCoverage":false},{"functionName":"bnSigNum","ranges":[{"startOffset":18473,"endOffset":18606,"count":0}],"isBlockCoverage":false},{"functionName":"bnpToRadix","ranges":[{"startOffset":18646,"endOffset":19000,"count":0}],"isBlockCoverage":false},{"functionName":"bnpFromRadix","ranges":[{"startOffset":19042,"endOffset":19545,"count":0}],"isBlockCoverage":false},{"functionName":"bnpFromNumber","ranges":[{"startOffset":19583,"endOffset":20229,"count":0}],"isBlockCoverage":false},{"functionName":"bnToByteArray","ranges":[{"startOffset":20274,"endOffset":20853,"count":0}],"isBlockCoverage":false},{"functionName":"bnEquals","ranges":[{"startOffset":20855,"endOffset":20909,"count":0}],"isBlockCoverage":false},{"functionName":"bnMin","ranges":[{"startOffset":20910,"endOffset":20967,"count":0}],"isBlockCoverage":false},{"functionName":"bnMax","ranges":[{"startOffset":20968,"endOffset":21025,"count":0}],"isBlockCoverage":false},{"functionName":"bnpBitwiseTo","ranges":[{"startOffset":21065,"endOffset":21442,"count":0}],"isBlockCoverage":false},{"functionName":"op_and","ranges":[{"startOffset":21464,"endOffset":21500,"count":0}],"isBlockCoverage":false},{"functionName":"bnAnd","ranges":[{"startOffset":21501,"endOffset":21575,"count":0}],"isBlockCoverage":false},{"functionName":"op_or","ranges":[{"startOffset":21597,"endOffset":21632,"count":0}],"isBlockCoverage":false},{"functionName":"bnOr","ranges":[{"startOffset":21633,"endOffset":21705,"count":0}],"isBlockCoverage":false},{"functionName":"op_xor","ranges":[{"startOffset":21727,"endOffset":21763,"count":0}],"isBlockCoverage":false},{"functionName":"bnXor","ranges":[{"startOffset":21764,"endOffset":21838,"count":0}],"isBlockCoverage":false},{"functionName":"op_andnot","ranges":[{"startOffset":21861,"endOffset":21901,"count":0}],"isBlockCoverage":false},{"functionName":"bnAndNot","ranges":[{"startOffset":21902,"endOffset":21982,"count":0}],"isBlockCoverage":false},{"functionName":"bnNot","ranges":[{"startOffset":22001,"endOffset":22142,"count":0}],"isBlockCoverage":false},{"functionName":"bnShiftLeft","ranges":[{"startOffset":22165,"endOffset":22273,"count":0}],"isBlockCoverage":false},{"functionName":"bnShiftRight","ranges":[{"startOffset":22296,"endOffset":22405,"count":0}],"isBlockCoverage":false},{"functionName":"lbit","ranges":[{"startOffset":22453,"endOffset":22692,"count":0}],"isBlockCoverage":false},{"functionName":"bnGetLowestSetBit","ranges":[{"startOffset":22751,"endOffset":22924,"count":0}],"isBlockCoverage":false},{"functionName":"cbit","ranges":[{"startOffset":22957,"endOffset":23031,"count":0}],"isBlockCoverage":false},{"functionName":"bnBitCount","ranges":[{"startOffset":23070,"endOffset":23195,"count":0}],"isBlockCoverage":false},{"functionName":"bnTestBit","ranges":[{"startOffset":23232,"endOffset":23367,"count":0}],"isBlockCoverage":false},{"functionName":"bnpChangeBit","ranges":[{"startOffset":23398,"endOffset":23500,"count":0}],"isBlockCoverage":false},{"functionName":"bnSetBit","ranges":[{"startOffset":23527,"endOffset":23583,"count":0}],"isBlockCoverage":false},{"functionName":"bnClearBit","ranges":[{"startOffset":23611,"endOffset":23673,"count":0}],"isBlockCoverage":false},{"functionName":"bnFlipBit","ranges":[{"startOffset":23700,"endOffset":23758,"count":0}],"isBlockCoverage":false},{"functionName":"bnpAddTo","ranges":[{"startOffset":23787,"endOffset":24310,"count":0}],"isBlockCoverage":false},{"functionName":"bnAdd","ranges":[{"startOffset":24332,"endOffset":24395,"count":0}],"isBlockCoverage":false},{"functionName":"bnSubtract","ranges":[{"startOffset":24417,"endOffset":24485,"count":0}],"isBlockCoverage":false},{"functionName":"bnMultiply","ranges":[{"startOffset":24507,"endOffset":24580,"count":0}],"isBlockCoverage":false},{"functionName":"bnDivide","ranges":[{"startOffset":24602,"endOffset":24676,"count":0}],"isBlockCoverage":false},{"functionName":"bnRemainder","ranges":[{"startOffset":24698,"endOffset":24775,"count":0}],"isBlockCoverage":false},{"functionName":"bnDivideAndRemainder","ranges":[{"startOffset":24804,"endOffset":24911,"count":0}],"isBlockCoverage":false},{"functionName":"bnpDMultiply","ranges":[{"startOffset":24960,"endOffset":25064,"count":0}],"isBlockCoverage":false},{"functionName":"bnpDAddOffset","ranges":[{"startOffset":25112,"endOffset":25347,"count":0}],"isBlockCoverage":false},{"functionName":"NullExp","ranges":[{"startOffset":25368,"endOffset":25389,"count":0}],"isBlockCoverage":false},{"functionName":"nNop","ranges":[{"startOffset":25390,"endOffset":25420,"count":0}],"isBlockCoverage":false},{"functionName":"nMulTo","ranges":[{"startOffset":25421,"endOffset":25466,"count":0}],"isBlockCoverage":false},{"functionName":"nSqrTo","ranges":[{"startOffset":25467,"endOffset":25506,"count":0}],"isBlockCoverage":false},{"functionName":"bnPow","ranges":[{"startOffset":25662,"endOffset":25717,"count":0}],"isBlockCoverage":false},{"functionName":"bnpMultiplyLowerTo","ranges":[{"startOffset":25825,"endOffset":26139,"count":0}],"isBlockCoverage":false},{"functionName":"bnpMultiplyUpperTo","ranges":[{"startOffset":26249,"endOffset":26519,"count":0}],"isBlockCoverage":false},{"functionName":"Barrett","ranges":[{"startOffset":26549,"endOffset":26705,"count":0}],"isBlockCoverage":false},{"functionName":"barrettConvert","ranges":[{"startOffset":26707,"endOffset":26897,"count":0}],"isBlockCoverage":false},{"functionName":"barrettRevert","ranges":[{"startOffset":26899,"endOffset":26938,"count":0}],"isBlockCoverage":false},{"functionName":"barrettReduce","ranges":[{"startOffset":26966,"endOffset":27318,"count":0}],"isBlockCoverage":false},{"functionName":"barrettSqrTo","ranges":[{"startOffset":27344,"endOffset":27405,"count":0}],"isBlockCoverage":false},{"functionName":"barrettMulTo","ranges":[{"startOffset":27433,"endOffset":27500,"count":0}],"isBlockCoverage":false},{"functionName":"bnModPow","ranges":[{"startOffset":27745,"endOffset":28982,"count":0}],"isBlockCoverage":false},{"functionName":"bnGCD","ranges":[{"startOffset":29019,"endOffset":29599,"count":0}],"isBlockCoverage":false},{"functionName":"bnpModInt","ranges":[{"startOffset":29634,"endOffset":29845,"count":0}],"isBlockCoverage":false},{"functionName":"bnModInverse","ranges":[{"startOffset":29881,"endOffset":30895,"count":0}],"isBlockCoverage":false},{"functionName":"bnIsProbablePrime","ranges":[{"startOffset":31378,"endOffset":31857,"count":0}],"isBlockCoverage":false},{"functionName":"bnpMillerRabin","ranges":[{"startOffset":31921,"endOffset":32609,"count":0}],"isBlockCoverage":false},{"functionName":"bnGetPrng","ranges":[{"startOffset":32649,"endOffset":32929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"974","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pkcs1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8376,"count":1}],"isBlockCoverage":true},{"functionName":"pkcs1.encode_rsa_oaep","ranges":[{"startOffset":2804,"endOffset":4767,"count":0}],"isBlockCoverage":false},{"functionName":"pkcs1.decode_rsa_oaep","ranges":[{"startOffset":5379,"endOffset":7907,"count":0}],"isBlockCoverage":false},{"functionName":"rsa_mgf1","ranges":[{"startOffset":7910,"endOffset":8375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"975","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/sha1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9095,"count":1}],"isBlockCoverage":true},{"functionName":"sha1.create","ranges":[{"startOffset":436,"endOffset":5608,"count":0}],"isBlockCoverage":false},{"functionName":"_init","ranges":[{"startOffset":5746,"endOffset":5938,"count":0}],"isBlockCoverage":false},{"functionName":"_update","ranges":[{"startOffset":6136,"endOffset":9094,"count":0}],"isBlockCoverage":false}]},{"scriptId":"976","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/prime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":206,"endOffset":8771,"count":1},{"startOffset":267,"endOffset":312,"count":0}],"isBlockCoverage":true},{"functionName":"op_or","ranges":[{"startOffset":603,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"prime.generateProbablePrime","ranges":[{"startOffset":1789,"endOffset":2665,"count":0}],"isBlockCoverage":false},{"functionName":"primeincFindPrime","ranges":[{"startOffset":2668,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"primeincFindPrimeWithoutWorkers","ranges":[{"startOffset":2906,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"_primeinc","ranges":[{"startOffset":3933,"endOffset":4569,"count":0}],"isBlockCoverage":false},{"functionName":"primeincFindPrimeWithWorkers","ranges":[{"startOffset":4819,"endOffset":7598,"count":0}],"isBlockCoverage":false},{"functionName":"generateRandom","ranges":[{"startOffset":7813,"endOffset":8134,"count":0}],"isBlockCoverage":false},{"functionName":"getMillerRabinTests","ranges":[{"startOffset":8405,"endOffset":8768,"count":0}],"isBlockCoverage":false}]},{"scriptId":"977","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pkcs12.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33347,"count":1}],"isBlockCoverage":true},{"functionName":"_getBagsByAttribute","ranges":[{"startOffset":7497,"endOffset":8146,"count":0}],"isBlockCoverage":false},{"functionName":"p12.pkcs12FromAsn1","ranges":[{"startOffset":8471,"endOffset":13569,"count":0}],"isBlockCoverage":false},{"functionName":"_decodePkcs7Data","ranges":[{"startOffset":14093,"endOffset":14516,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeAuthenticatedSafe","ranges":[{"startOffset":14900,"endOffset":16505,"count":0}],"isBlockCoverage":false},{"functionName":"_decryptSafeContents","ranges":[{"startOffset":16723,"endOffset":17691,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeSafeContents","ranges":[{"startOffset":18068,"endOffset":21663,"count":0}],"isBlockCoverage":false},{"functionName":"_decodeBagAttributes","ranges":[{"startOffset":21839,"endOffset":22609,"count":0}],"isBlockCoverage":false},{"functionName":"p12.toPkcs12Asn1","ranges":[{"startOffset":23950,"endOffset":32810,"count":0}],"isBlockCoverage":false}]},{"scriptId":"978","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pkcs7asn1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11462,"count":1}],"isBlockCoverage":true}]},{"scriptId":"979","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/x509.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102600,"count":1},{"startOffset":3601,"endOffset":3606,"count":0}],"isBlockCoverage":true},{"functionName":"pki.RDNAttributesAsArray","ranges":[{"startOffset":15343,"endOffset":16329,"count":0}],"isBlockCoverage":false},{"functionName":"pki.CRIAttributesAsArray","ranges":[{"startOffset":16520,"endOffset":17657,"count":0}],"isBlockCoverage":false},{"functionName":"_getAttribute","ranges":[{"startOffset":18022,"endOffset":18538,"count":0}],"isBlockCoverage":false},{"functionName":"_readSignatureParameters","ranges":[{"startOffset":19528,"endOffset":20652,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateFromPem","ranges":[{"startOffset":21262,"endOffset":21949,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateToPem","ranges":[{"startOffset":22178,"endOffset":22411,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyFromPem","ranges":[{"startOffset":22569,"endOffset":23134,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyToPem","ranges":[{"startOffset":23386,"endOffset":23614,"count":0}],"isBlockCoverage":false},{"functionName":"pki.publicKeyToRSAPublicKeyPem","ranges":[{"startOffset":23871,"endOffset":24111,"count":0}],"isBlockCoverage":false},{"functionName":"pki.getPublicKeyFingerprint","ranges":[{"startOffset":24791,"endOffset":25722,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificationRequestFromPem","ranges":[{"startOffset":26394,"endOffset":27010,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificationRequestToPem","ranges":[{"startOffset":27284,"endOffset":27532,"count":0}],"isBlockCoverage":false},{"functionName":"pki.createCertificate","ranges":[{"startOffset":27643,"endOffset":38119,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateFromAsn1","ranges":[{"startOffset":38666,"endOffset":43428,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateExtensionsFromAsn1","ranges":[{"startOffset":45084,"endOffset":45377,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateExtensionFromAsn1","ranges":[{"startOffset":45573,"endOffset":50069,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificationRequestFromAsn1","ranges":[{"startOffset":50682,"endOffset":53963,"count":0}],"isBlockCoverage":false},{"functionName":"pki.createCertificationRequest","ranges":[{"startOffset":54224,"endOffset":59789,"count":0}],"isBlockCoverage":false},{"functionName":"_dnToAsn1","ranges":[{"startOffset":59962,"endOffset":61200,"count":0}],"isBlockCoverage":false},{"functionName":"_getAttributesAsJson","ranges":[{"startOffset":61394,"endOffset":62130,"count":0}],"isBlockCoverage":false},{"functionName":"_fillMissingFields","ranges":[{"startOffset":62243,"endOffset":63773,"count":0}],"isBlockCoverage":false},{"functionName":"_fillMissingExtensionFields","ranges":[{"startOffset":63995,"endOffset":71696,"count":0}],"isBlockCoverage":false},{"functionName":"_signatureParametersToAsn1","ranges":[{"startOffset":71910,"endOffset":73512,"count":0}],"isBlockCoverage":false},{"functionName":"_CRIAttributesToAsn1","ranges":[{"startOffset":73694,"endOffset":75194,"count":0}],"isBlockCoverage":false},{"functionName":"pki.getTBSCertificate","ranges":[{"startOffset":75367,"endOffset":77579,"count":0}],"isBlockCoverage":false},{"functionName":"pki.getCertificationRequestInfo","ranges":[{"startOffset":77803,"endOffset":78233,"count":0}],"isBlockCoverage":false},{"functionName":"pki.distinguishedNameToAsn1","ranges":[{"startOffset":78447,"endOffset":78487,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateToAsn1","ranges":[{"startOffset":78685,"endOffset":79463,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateExtensionsToAsn1","ranges":[{"startOffset":79652,"endOffset":80075,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificateExtensionToAsn1","ranges":[{"startOffset":80260,"endOffset":81038,"count":0}],"isBlockCoverage":false},{"functionName":"pki.certificationRequestToAsn1","ranges":[{"startOffset":81256,"endOffset":82044,"count":0}],"isBlockCoverage":false},{"functionName":"pki.createCaStore","ranges":[{"startOffset":82259,"endOffset":87323,"count":0}],"isBlockCoverage":false},{"functionName":"pki.verifyCertificateChain","ranges":[{"startOffset":88790,"endOffset":102598,"count":0}],"isBlockCoverage":false}]},{"scriptId":"980","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/mgf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":274,"count":1},{"startOffset":238,"endOffset":243,"count":0}],"isBlockCoverage":true}]},{"scriptId":"981","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/mgf1.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1645,"count":1}],"isBlockCoverage":true},{"functionName":"mgf1.create","ranges":[{"startOffset":582,"endOffset":1643,"count":0}],"isBlockCoverage":false}]},{"scriptId":"982","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pss.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7854,"count":1}],"isBlockCoverage":true},{"functionName":"pss.create","ranges":[{"startOffset":1086,"endOffset":7852,"count":0}],"isBlockCoverage":false}]},{"scriptId":"983","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2076,"count":1}],"isBlockCoverage":true},{"functionName":"forge.debug.get","ranges":[{"startOffset":954,"endOffset":1260,"count":0}],"isBlockCoverage":false},{"functionName":"forge.debug.set","ranges":[{"startOffset":1418,"endOffset":1565,"count":2},{"startOffset":1482,"endOffset":1522,"count":1}],"isBlockCoverage":true},{"functionName":"forge.debug.clear","ranges":[{"startOffset":1797,"endOffset":2074,"count":0}],"isBlockCoverage":false}]},{"scriptId":"984","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/ed25519.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22213,"count":1},{"startOffset":566,"endOffset":578,"count":0},{"startOffset":695,"endOffset":700,"count":0}],"isBlockCoverage":true},{"functionName":"ed25519.generateKeyPair","ranges":[{"startOffset":1075,"endOffset":1994,"count":0}],"isBlockCoverage":false},{"functionName":"ed25519.publicKeyFromPrivateKey","ranges":[{"startOffset":2031,"endOffset":2550,"count":0}],"isBlockCoverage":false},{"functionName":"ed25519.sign","ranges":[{"startOffset":2568,"endOffset":3273,"count":0}],"isBlockCoverage":false},{"functionName":"ed25519.verify","ranges":[{"startOffset":3293,"endOffset":4578,"count":0}],"isBlockCoverage":false},{"functionName":"messageToNativeBuffer","ranges":[{"startOffset":4581,"endOffset":5782,"count":0}],"isBlockCoverage":false},{"functionName":"sha512","ranges":[{"startOffset":6865,"endOffset":7329,"count":0}],"isBlockCoverage":false},{"functionName":"crypto_sign_keypair","ranges":[{"startOffset":7331,"endOffset":7594,"count":0}],"isBlockCoverage":false},{"functionName":"crypto_sign","ranges":[{"startOffset":7665,"endOffset":8416,"count":0}],"isBlockCoverage":false},{"functionName":"crypto_sign_open","ranges":[{"startOffset":8418,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"modL","ranges":[{"startOffset":9104,"endOffset":9660,"count":0}],"isBlockCoverage":false},{"functionName":"reduce","ranges":[{"startOffset":9662,"endOffset":9797,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":9799,"endOffset":10232,"count":0}],"isBlockCoverage":false},{"functionName":"cswap","ranges":[{"startOffset":10234,"endOffset":10325,"count":0}],"isBlockCoverage":false},{"functionName":"pack","ranges":[{"startOffset":10327,"endOffset":10499,"count":0}],"isBlockCoverage":false},{"functionName":"pack25519","ranges":[{"startOffset":10501,"endOffset":11050,"count":0}],"isBlockCoverage":false},{"functionName":"unpackneg","ranges":[{"startOffset":11052,"endOffset":11762,"count":0}],"isBlockCoverage":false},{"functionName":"unpack25519","ranges":[{"startOffset":11764,"endOffset":11897,"count":0}],"isBlockCoverage":false},{"functionName":"pow2523","ranges":[{"startOffset":11899,"endOffset":12137,"count":0}],"isBlockCoverage":false},{"functionName":"neq25519","ranges":[{"startOffset":12139,"endOffset":12307,"count":0}],"isBlockCoverage":false},{"functionName":"crypto_verify_32","ranges":[{"startOffset":12309,"endOffset":12383,"count":0}],"isBlockCoverage":false},{"functionName":"vn","ranges":[{"startOffset":12385,"endOffset":12532,"count":0}],"isBlockCoverage":false},{"functionName":"par25519","ranges":[{"startOffset":12534,"endOffset":12628,"count":0}],"isBlockCoverage":false},{"functionName":"scalarmult","ranges":[{"startOffset":12630,"endOffset":12909,"count":0}],"isBlockCoverage":false},{"functionName":"scalarbase","ranges":[{"startOffset":12911,"endOffset":13081,"count":0}],"isBlockCoverage":false},{"functionName":"set25519","ranges":[{"startOffset":13083,"endOffset":13172,"count":0}],"isBlockCoverage":false},{"functionName":"inv25519","ranges":[{"startOffset":13174,"endOffset":13424,"count":0}],"isBlockCoverage":false},{"functionName":"car25519","ranges":[{"startOffset":13426,"endOffset":13616,"count":0}],"isBlockCoverage":false},{"functionName":"sel25519","ranges":[{"startOffset":13618,"endOffset":13764,"count":0}],"isBlockCoverage":false},{"functionName":"gf","ranges":[{"startOffset":13766,"endOffset":13918,"count":7},{"startOffset":13832,"endOffset":13904,"count":6},{"startOffset":13871,"endOffset":13900,"count":81}],"isBlockCoverage":true},{"functionName":"A","ranges":[{"startOffset":13920,"endOffset":14003,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":14005,"endOffset":14088,"count":0}],"isBlockCoverage":false},{"functionName":"S","ranges":[{"startOffset":14090,"endOffset":14124,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":14126,"endOffset":22212,"count":0}],"isBlockCoverage":false}]},{"scriptId":"985","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/sha512.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17134,"count":1}],"isBlockCoverage":true},{"functionName":"sha384.create","ranges":[{"startOffset":616,"endOffset":665,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":795,"endOffset":852,"count":0}],"isBlockCoverage":false},{"functionName":"create","ranges":[{"startOffset":1013,"endOffset":1070,"count":0}],"isBlockCoverage":false},{"functionName":"sha512.create","ranges":[{"startOffset":1366,"endOffset":7417,"count":0}],"isBlockCoverage":false},{"functionName":"_init","ranges":[{"startOffset":7639,"endOffset":11244,"count":0}],"isBlockCoverage":false},{"functionName":"_update","ranges":[{"startOffset":11446,"endOffset":17133,"count":0}],"isBlockCoverage":false}]},{"scriptId":"986","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/kem.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5210,"count":1}],"isBlockCoverage":true},{"functionName":"forge.kem.rsa.create","ranges":[{"startOffset":1202,"endOffset":3107,"count":0}],"isBlockCoverage":false},{"functionName":"forge.kem.kdf1","ranges":[{"startOffset":3474,"endOffset":3564,"count":0}],"isBlockCoverage":false},{"functionName":"forge.kem.kdf2","ranges":[{"startOffset":3867,"endOffset":3957,"count":0}],"isBlockCoverage":false},{"functionName":"_createKDF","ranges":[{"startOffset":4185,"endOffset":5209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"987","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/log.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9170,"count":1},{"startOffset":2155,"endOffset":2266,"count":7},{"startOffset":4353,"endOffset":5131,"count":5},{"startOffset":7732,"endOffset":7960,"count":0},{"startOffset":8059,"endOffset":8222,"count":0},{"startOffset":8782,"endOffset":8898,"count":0},{"startOffset":8929,"endOffset":9081,"count":0}],"isBlockCoverage":true},{"functionName":"forge.log.logMessage","ranges":[{"startOffset":2411,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"forge.log.prepareStandard","ranges":[{"startOffset":3078,"endOffset":3295,"count":0}],"isBlockCoverage":false},{"functionName":"forge.log.prepareFull","ranges":[{"startOffset":3501,"endOffset":3772,"count":0}],"isBlockCoverage":false},{"functionName":"forge.log.prepareStandardFull","ranges":[{"startOffset":3970,"endOffset":4163,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4423,"endOffset":5114,"count":5}],"isBlockCoverage":true},{"functionName":"forge.log.<computed>","ranges":[{"startOffset":4506,"endOffset":5107,"count":0}],"isBlockCoverage":false},{"functionName":"forge.log.makeLogger","ranges":[{"startOffset":5682,"endOffset":5817,"count":1}],"isBlockCoverage":true},{"functionName":"forge.log.setLevel","ranges":[{"startOffset":6027,"endOffset":6387,"count":2},{"startOffset":6185,"endOffset":6365,"count":6},{"startOffset":6263,"endOffset":6359,"count":2}],"isBlockCoverage":true},{"functionName":"forge.log.lock","ranges":[{"startOffset":6551,"endOffset":6725,"count":0}],"isBlockCoverage":false},{"functionName":"forge.log.addLogger","ranges":[{"startOffset":6815,"endOffset":6860,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":7340,"endOffset":7689,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":7797,"endOffset":7917,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":8202,"endOffset":8215,"count":0}],"isBlockCoverage":false}]},{"scriptId":"988","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/md.all.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":251,"count":1}],"isBlockCoverage":true}]},{"scriptId":"989","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/pkcs7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39777,"count":1},{"startOffset":1000,"endOffset":1005,"count":0}],"isBlockCoverage":true},{"functionName":"p7.messageFromPem","ranges":[{"startOffset":1167,"endOffset":1675,"count":0}],"isBlockCoverage":false},{"functionName":"p7.messageToPem","ranges":[{"startOffset":1906,"endOffset":2123,"count":0}],"isBlockCoverage":false},{"functionName":"p7.messageFromAsn1","ranges":[{"startOffset":2300,"endOffset":3206,"count":0}],"isBlockCoverage":false},{"functionName":"p7.createSignedData","ranges":[{"startOffset":3231,"endOffset":17261,"count":0}],"isBlockCoverage":false},{"functionName":"p7.createEncryptedData","ranges":[{"startOffset":17382,"endOffset":18153,"count":0}],"isBlockCoverage":false},{"functionName":"p7.createEnvelopedData","ranges":[{"startOffset":18274,"endOffset":25577,"count":0}],"isBlockCoverage":false},{"functionName":"_recipientFromAsn1","ranges":[{"startOffset":25719,"endOffset":26445,"count":0}],"isBlockCoverage":false},{"functionName":"_recipientToAsn1","ranges":[{"startOffset":26591,"endOffset":27659,"count":0}],"isBlockCoverage":false},{"functionName":"_recipientsFromAsn1","ranges":[{"startOffset":27862,"endOffset":28021,"count":0}],"isBlockCoverage":false},{"functionName":"_recipientsToAsn1","ranges":[{"startOffset":28207,"endOffset":28377,"count":0}],"isBlockCoverage":false},{"functionName":"_signerFromAsn1","ranges":[{"startOffset":28529,"endOffset":29510,"count":0}],"isBlockCoverage":false},{"functionName":"_signerToAsn1","ranges":[{"startOffset":29675,"endOffset":31652,"count":0}],"isBlockCoverage":false},{"functionName":"_signersFromAsn1","ranges":[{"startOffset":31851,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"_signersToAsn1","ranges":[{"startOffset":32190,"endOffset":32345,"count":0}],"isBlockCoverage":false},{"functionName":"_attributeToAsn1","ranges":[{"startOffset":32484,"endOffset":34857,"count":0}],"isBlockCoverage":false},{"functionName":"_encryptedContentToAsn1","ranges":[{"startOffset":35057,"endOffset":35842,"count":0}],"isBlockCoverage":false},{"functionName":"_fromAsn1","ranges":[{"startOffset":36524,"endOffset":38443,"count":0}],"isBlockCoverage":false},{"functionName":"_decryptContent","ranges":[{"startOffset":38814,"endOffset":39776,"count":0}],"isBlockCoverage":false}]},{"scriptId":"990","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/ssh.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7163,"count":1}],"isBlockCoverage":true},{"functionName":"ssh.privateKeyToPutty","ranges":[{"startOffset":860,"endOffset":3937,"count":0}],"isBlockCoverage":false},{"functionName":"ssh.publicKeyToOpenSSH","ranges":[{"startOffset":4124,"endOffset":4438,"count":0}],"isBlockCoverage":false},{"functionName":"ssh.privateKeyToOpenSSH","ranges":[{"startOffset":4678,"endOffset":4953,"count":0}],"isBlockCoverage":false},{"functionName":"ssh.getPublicKeyFingerprint","ranges":[{"startOffset":5503,"endOffset":6260,"count":0}],"isBlockCoverage":false},{"functionName":"_addBigIntegerToBuffer","ranges":[{"startOffset":6381,"endOffset":6653,"count":0}],"isBlockCoverage":false},{"functionName":"_addStringToBuffer","ranges":[{"startOffset":6768,"endOffset":6868,"count":0}],"isBlockCoverage":false},{"functionName":"_sha1","ranges":[{"startOffset":6985,"endOffset":7162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"991","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/node-forge/lib/task.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19780,"count":1}],"isBlockCoverage":true},{"functionName":"Task","ranges":[{"startOffset":4413,"endOffset":5271,"count":0}],"isBlockCoverage":false},{"functionName":"Task.debug","ranges":[{"startOffset":5366,"endOffset":5545,"count":0}],"isBlockCoverage":false},{"functionName":"Task.next","ranges":[{"startOffset":5879,"endOffset":6494,"count":0}],"isBlockCoverage":false},{"functionName":"Task.parallel","ranges":[{"startOffset":6846,"endOffset":8164,"count":0}],"isBlockCoverage":false},{"functionName":"Task.stop","ranges":[{"startOffset":8222,"endOffset":8282,"count":0}],"isBlockCoverage":false},{"functionName":"Task.start","ranges":[{"startOffset":8342,"endOffset":8552,"count":0}],"isBlockCoverage":false},{"functionName":"Task.block","ranges":[{"startOffset":8825,"endOffset":8978,"count":0}],"isBlockCoverage":false},{"functionName":"Task.unblock","ranges":[{"startOffset":9553,"endOffset":9752,"count":0}],"isBlockCoverage":false},{"functionName":"Task.sleep","ranges":[{"startOffset":9900,"endOffset":10149,"count":0}],"isBlockCoverage":false},{"functionName":"Task.wait","ranges":[{"startOffset":10477,"endOffset":10514,"count":0}],"isBlockCoverage":false},{"functionName":"Task.wakeup","ranges":[{"startOffset":10600,"endOffset":10760,"count":0}],"isBlockCoverage":false},{"functionName":"Task.cancel","ranges":[{"startOffset":10842,"endOffset":11119,"count":0}],"isBlockCoverage":false},{"functionName":"Task.fail","ranges":[{"startOffset":11777,"endOffset":12591,"count":0}],"isBlockCoverage":false},{"functionName":"start","ranges":[{"startOffset":12683,"endOffset":12925,"count":0}],"isBlockCoverage":false},{"functionName":"runNext","ranges":[{"startOffset":13073,"endOffset":14540,"count":0}],"isBlockCoverage":false},{"functionName":"finish","ranges":[{"startOffset":14728,"endOffset":16805,"count":0}],"isBlockCoverage":false},{"functionName":"forge.task.start","ranges":[{"startOffset":17679,"endOffset":18404,"count":0}],"isBlockCoverage":false},{"functionName":"forge.task.cancel","ranges":[{"startOffset":18546,"endOffset":18722,"count":0}],"isBlockCoverage":false},{"functionName":"forge.task.createCondition","ranges":[{"startOffset":18997,"endOffset":19778,"count":0}],"isBlockCoverage":false}]},{"scriptId":"992","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/getCertificate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"getCertificate","ranges":[{"startOffset":35,"endOffset":282,"count":0}],"isBlockCoverage":false}]},{"scriptId":"993","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Server.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4713,"count":1}],"isBlockCoverage":true},{"functionName":"setHeaders","ranges":[{"startOffset":597,"endOffset":644,"count":0}],"isBlockCoverage":false},{"functionName":"enableCors","ranges":[{"startOffset":646,"endOffset":952,"count":0}],"isBlockCoverage":false},{"functionName":"middleware","ranges":[{"startOffset":954,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"serve","ranges":[{"startOffset":3508,"endOffset":4655,"count":0}],"isBlockCoverage":false}]},{"scriptId":"994","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/serve-static/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4570,"count":1}],"isBlockCoverage":true},{"functionName":"serveStatic","ranges":[{"startOffset":621,"endOffset":2702,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":2776,"endOffset":2978,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":3088,"endOffset":3383,"count":0}],"isBlockCoverage":false},{"functionName":"createNotFoundDirectoryListener","ranges":[{"startOffset":3453,"endOffset":3556,"count":0}],"isBlockCoverage":false},{"functionName":"createRedirectDirectoryListener","ranges":[{"startOffset":3636,"endOffset":4569,"count":0}],"isBlockCoverage":false}]},{"scriptId":"995","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/encodeurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1586,"count":1}],"isBlockCoverage":true},{"functionName":"encodeUrl","ranges":[{"startOffset":1411,"endOffset":1585,"count":0}],"isBlockCoverage":false}]},{"scriptId":"996","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/escape-html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1362,"count":1}],"isBlockCoverage":true},{"functionName":"escapeHtml","ranges":[{"startOffset":493,"endOffset":1361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"997","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parseurl/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2809,"count":1}],"isBlockCoverage":true},{"functionName":"parseurl","ranges":[{"startOffset":467,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"originalurl","ranges":[{"startOffset":945,"endOffset":1313,"count":0}],"isBlockCoverage":false},{"functionName":"fastparse","ranges":[{"startOffset":1432,"endOffset":2477,"count":0}],"isBlockCoverage":false},{"functionName":"fresh","ranges":[{"startOffset":2623,"endOffset":2808,"count":0}],"isBlockCoverage":false}]},{"scriptId":"998","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/send/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":23287,"count":1}],"isBlockCoverage":true},{"functionName":"send","ranges":[{"startOffset":1552,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"SendStream","ranges":[{"startOffset":1789,"endOffset":3540,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":3773,"endOffset":3869,"count":0}],"isBlockCoverage":false},{"functionName":"hidden","ranges":[{"startOffset":4074,"endOffset":4207,"count":0}],"isBlockCoverage":false},{"functionName":"index","ranges":[{"startOffset":4456,"endOffset":4612,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":4774,"endOffset":4880,"count":0}],"isBlockCoverage":false},{"functionName":"maxage","ranges":[{"startOffset":5258,"endOffset":5518,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":5691,"endOffset":6461,"count":0}],"isBlockCoverage":false},{"functionName":"hasTrailingSlash","ranges":[{"startOffset":6588,"endOffset":6669,"count":0}],"isBlockCoverage":false},{"functionName":"isConditionalGET","ranges":[{"startOffset":6807,"endOffset":7010,"count":0}],"isBlockCoverage":false},{"functionName":"isPreconditionFailure","ranges":[{"startOffset":7148,"endOffset":7794,"count":0}],"isBlockCoverage":false},{"functionName":"removeContentHeaderFields","ranges":[{"startOffset":7903,"endOffset":8195,"count":0}],"isBlockCoverage":false},{"functionName":"notModified","ranges":[{"startOffset":8294,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"headersAlreadySent","ranges":[{"startOffset":8550,"endOffset":8704,"count":0}],"isBlockCoverage":false},{"functionName":"isCachable","ranges":[{"startOffset":8894,"endOffset":9034,"count":0}],"isBlockCoverage":false},{"functionName":"onStatError","ranges":[{"startOffset":9143,"endOffset":9362,"count":0}],"isBlockCoverage":false},{"functionName":"isFresh","ranges":[{"startOffset":9476,"endOffset":9636,"count":0}],"isBlockCoverage":false},{"functionName":"isRangeFresh","ranges":[{"startOffset":9755,"endOffset":10182,"count":0}],"isBlockCoverage":false},{"functionName":"redirect","ranges":[{"startOffset":10285,"endOffset":11014,"count":0}],"isBlockCoverage":false},{"functionName":"pipe","ranges":[{"startOffset":11135,"endOffset":12802,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":12903,"endOffset":15126,"count":0}],"isBlockCoverage":false},{"functionName":"sendFile","ranges":[{"startOffset":15240,"endOffset":16095,"count":0}],"isBlockCoverage":false},{"functionName":"sendIndex","ranges":[{"startOffset":16211,"endOffset":16672,"count":0}],"isBlockCoverage":false},{"functionName":"stream","ranges":[{"startOffset":16817,"endOffset":17517,"count":0}],"isBlockCoverage":false},{"functionName":"type","ranges":[{"startOffset":17672,"endOffset":18012,"count":0}],"isBlockCoverage":false},{"functionName":"setHeader","ranges":[{"startOffset":18189,"endOffset":19058,"count":0}],"isBlockCoverage":false},{"functionName":"clearHeaders","ranges":[{"startOffset":19145,"endOffset":19295,"count":0}],"isBlockCoverage":false},{"functionName":"collapseLeadingSlashes","ranges":[{"startOffset":19395,"endOffset":19577,"count":0}],"isBlockCoverage":false},{"functionName":"containsDotFile","ranges":[{"startOffset":19653,"endOffset":19846,"count":0}],"isBlockCoverage":false},{"functionName":"contentRange","ranges":[{"startOffset":19968,"endOffset":20094,"count":0}],"isBlockCoverage":false},{"functionName":"createHtmlDocument","ranges":[{"startOffset":20204,"endOffset":20499,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":20648,"endOffset":20754,"count":0}],"isBlockCoverage":false},{"functionName":"getHeaderNames","ranges":[{"startOffset":20869,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"hasListeners","ranges":[{"startOffset":21327,"endOffset":21517,"count":0}],"isBlockCoverage":false},{"functionName":"headersSent","ranges":[{"startOffset":21641,"endOffset":21766,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeList","ranges":[{"startOffset":21898,"endOffset":22148,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":22235,"endOffset":22377,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":22454,"endOffset":22989,"count":0}],"isBlockCoverage":false},{"functionName":"setHeaders","ranges":[{"startOffset":23108,"endOffset":23286,"count":0}],"isBlockCoverage":false}]},{"scriptId":"999","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/http-errors/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5878,"count":1}],"isBlockCoverage":true},{"functionName":"codeClass","ranges":[{"startOffset":702,"endOffset":782,"count":64}],"isBlockCoverage":true},{"functionName":"createError","ranges":[{"startOffset":855,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"createHttpErrorConstructor","ranges":[{"startOffset":2420,"endOffset":2601,"count":1}],"isBlockCoverage":true},{"functionName":"HttpError","ranges":[{"startOffset":2463,"endOffset":2549,"count":0}],"isBlockCoverage":false},{"functionName":"createClientErrorConstructor","ranges":[{"startOffset":2668,"endOffset":3714,"count":29},{"startOffset":2771,"endOffset":2777,"count":0}],"isBlockCoverage":true},{"functionName":"ClientError","ranges":[{"startOffset":2798,"endOffset":3500,"count":0}],"isBlockCoverage":false},{"functionName":"createServerErrorConstructor","ranges":[{"startOffset":3781,"endOffset":4828,"count":12},{"startOffset":3884,"endOffset":3890,"count":1},{"startOffset":3891,"endOffset":3907,"count":11}],"isBlockCoverage":true},{"functionName":"ServerError","ranges":[{"startOffset":3911,"endOffset":4613,"count":0}],"isBlockCoverage":false},{"functionName":"nameFunc","ranges":[{"startOffset":4895,"endOffset":5096,"count":41}],"isBlockCoverage":true},{"functionName":"populateConstructorExports","ranges":[{"startOffset":5191,"endOffset":5877,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":5273,"endOffset":5734,"count":64},{"startOffset":5403,"endOffset":5498,"count":29},{"startOffset":5505,"endOffset":5600,"count":12},{"startOffset":5627,"endOffset":5730,"count":41}],"isBlockCoverage":true}]},{"scriptId":"1000","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/depd/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10669,"count":1}],"isBlockCoverage":true},{"functionName":"containsNamespace","ranges":[{"startOffset":479,"endOffset":798,"count":4},{"startOffset":705,"endOffset":749,"count":0},{"startOffset":751,"endOffset":776,"count":0}],"isBlockCoverage":true},{"functionName":"convertDataDescriptorToAccessor","ranges":[{"startOffset":862,"endOffset":1303,"count":0}],"isBlockCoverage":false},{"functionName":"createArgumentsString","ranges":[{"startOffset":1356,"endOffset":1501,"count":7}],"isBlockCoverage":true},{"functionName":"createStackString","ranges":[{"startOffset":1547,"endOffset":1813,"count":0}],"isBlockCoverage":false},{"functionName":"depd","ranges":[{"startOffset":1869,"endOffset":2447,"count":2},{"startOffset":1915,"endOffset":1978,"count":0}],"isBlockCoverage":true},{"functionName":"deprecate","ranges":[{"startOffset":2069,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"isignored","ranges":[{"startOffset":2496,"endOffset":2783,"count":2},{"startOffset":2615,"endOffset":2668,"count":0}],"isBlockCoverage":true},{"functionName":"istraced","ranges":[{"startOffset":2831,"endOffset":3125,"count":2},{"startOffset":2952,"endOffset":3008,"count":0}],"isBlockCoverage":true},{"functionName":"log","ranges":[{"startOffset":3168,"endOffset":4875,"count":0}],"isBlockCoverage":false},{"functionName":"callSiteLocation","ranges":[{"startOffset":4922,"endOffset":5292,"count":9},{"startOffset":4997,"endOffset":5013,"count":0},{"startOffset":5118,"endOffset":5173,"count":0}],"isBlockCoverage":true},{"functionName":"defaultMessage","ranges":[{"startOffset":5348,"endOffset":5931,"count":0}],"isBlockCoverage":false},{"functionName":"formatPlain","ranges":[{"startOffset":5987,"endOffset":6430,"count":0}],"isBlockCoverage":false},{"functionName":"formatColor","ranges":[{"startOffset":6483,"endOffset":7033,"count":0}],"isBlockCoverage":false},{"functionName":"formatLocation","ranges":[{"startOffset":7074,"endOffset":7201,"count":0}],"isBlockCoverage":false},{"functionName":"getStack","ranges":[{"startOffset":7253,"endOffset":7672,"count":9}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":7719,"endOffset":7783,"count":9}],"isBlockCoverage":true},{"functionName":"wrapfunction","ranges":[{"startOffset":7849,"endOffset":8423,"count":7},{"startOffset":7919,"endOffset":7982,"count":0}],"isBlockCoverage":true},{"functionName":"wrapproperty","ranges":[{"startOffset":8477,"endOffset":9638,"count":0}],"isBlockCoverage":false},{"functionName":"DeprecationError","ranges":[{"startOffset":9692,"endOffset":10668,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1001","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/depd/lib/compat/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1421,"count":1}],"isBlockCoverage":true},{"functionName":"callSiteToString","ranges":[{"startOffset":284,"endOffset":804,"count":1},{"startOffset":770,"endOffset":802,"count":0}],"isBlockCoverage":true},{"functionName":"prepareObjectStackTrace","ranges":[{"startOffset":406,"endOffset":474,"count":1}],"isBlockCoverage":true},{"functionName":"eventListenerCount","ranges":[{"startOffset":858,"endOffset":965,"count":1},{"startOffset":927,"endOffset":963,"count":0}],"isBlockCoverage":true},{"functionName":"lazyProperty","ranges":[{"startOffset":1004,"endOffset":1328,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1050,"endOffset":1224,"count":2}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1369,"endOffset":1420,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1002","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/setprototypeof/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":384,"count":1},{"startOffset":77,"endOffset":147,"count":0}],"isBlockCoverage":true},{"functionName":"setProtoOf","ranges":[{"startOffset":149,"endOffset":222,"count":0}],"isBlockCoverage":false},{"functionName":"mixinProperties","ranges":[{"startOffset":224,"endOffset":383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1003","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/statuses/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2088,"count":1}],"isBlockCoverage":true},{"functionName":"populateStatusesMap","ranges":[{"startOffset":827,"endOffset":1208,"count":1}],"isBlockCoverage":true},{"functionName":"forEachCode","ranges":[{"startOffset":921,"endOffset":1191,"count":64}],"isBlockCoverage":true},{"functionName":"status","ranges":[{"startOffset":1583,"endOffset":2087,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1004","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/toidentifier/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":284,"endOffset":489,"count":64}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":352,"endOffset":438,"count":134}],"isBlockCoverage":true}]},{"scriptId":"1005","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1006","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/destroy/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1043,"count":1}],"isBlockCoverage":true},{"functionName":"destroy","ranges":[{"startOffset":338,"endOffset":594,"count":0}],"isBlockCoverage":false},{"functionName":"destroyReadStream","ranges":[{"startOffset":671,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"onOpenClose","ranges":[{"startOffset":924,"endOffset":1042,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1007","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/etag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2479,"count":1}],"isBlockCoverage":true},{"functionName":"entitytag","ranges":[{"startOffset":459,"endOffset":918,"count":0}],"isBlockCoverage":false},{"functionName":"etag","ranges":[{"startOffset":1091,"endOffset":1679,"count":0}],"isBlockCoverage":false},{"functionName":"isstats","ranges":[{"startOffset":1795,"endOffset":2226,"count":0}],"isBlockCoverage":false},{"functionName":"stattag","ranges":[{"startOffset":2326,"endOffset":2478,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1008","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/fresh/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2711,"count":1}],"isBlockCoverage":true},{"functionName":"fresh","ranges":[{"startOffset":522,"endOffset":1800,"count":0}],"isBlockCoverage":false},{"functionName":"parseHttpDate","ranges":[{"startOffset":1887,"endOffset":2098,"count":0}],"isBlockCoverage":false},{"functionName":"parseTokenList","ranges":[{"startOffset":2175,"endOffset":2710,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1009","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/mime/mime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2726,"count":1}],"isBlockCoverage":true},{"functionName":"Mime","ranges":[{"startOffset":53,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"Mime.define","ranges":[{"startOffset":562,"endOffset":1094,"count":2},{"startOffset":603,"endOffset":1092,"count":845},{"startOffset":673,"endOffset":953,"count":1070},{"startOffset":708,"endOffset":730,"count":0},{"startOffset":732,"endOffset":912,"count":0},{"startOffset":1042,"endOffset":1088,"count":844}],"isBlockCoverage":true},{"functionName":"Mime.load","ranges":[{"startOffset":1346,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"Mime.lookup","ranges":[{"startOffset":1852,"endOffset":1999,"count":1},{"startOffset":1964,"endOffset":1975,"count":0},{"startOffset":1976,"endOffset":1996,"count":0}],"isBlockCoverage":true},{"functionName":"Mime.extension","ranges":[{"startOffset":2090,"endOffset":2217,"count":0}],"isBlockCoverage":false},{"functionName":"lookup","ranges":[{"startOffset":2538,"endOffset":2698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1010","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/send/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3034,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":922,"endOffset":2009,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2107,"endOffset":2424,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2521,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2893,"endOffset":3033,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1011","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/on-finished/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3686,"count":1},{"startOffset":449,"endOffset":513,"count":0}],"isBlockCoverage":true},{"functionName":"defer","ranges":[{"startOffset":451,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"onFinished","ranges":[{"startOffset":710,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"isFinished","ranges":[{"startOffset":1034,"endOffset":1429,"count":0}],"isBlockCoverage":false},{"functionName":"attachFinishedListener","ranges":[{"startOffset":1554,"endOffset":2392,"count":0}],"isBlockCoverage":false},{"functionName":"attachListener","ranges":[{"startOffset":2502,"endOffset":2799,"count":0}],"isBlockCoverage":false},{"functionName":"createListener","ranges":[{"startOffset":2901,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"patchAssignSocket","ranges":[{"startOffset":3387,"endOffset":3685,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1012","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ee-first/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1684,"count":1}],"isBlockCoverage":true},{"functionName":"first","ranges":[{"startOffset":288,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"listener","ranges":[{"startOffset":1327,"endOffset":1683,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1013","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/range-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2900,"count":1}],"isBlockCoverage":true},{"functionName":"rangeParser","ranges":[{"startOffset":401,"endOffset":1535,"count":0}],"isBlockCoverage":false},{"functionName":"combineRanges","ranges":[{"startOffset":1600,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithIndex","ranges":[{"startOffset":2350,"endOffset":2466,"count":0}],"isBlockCoverage":false},{"functionName":"mapWithoutIndex","ranges":[{"startOffset":2540,"endOffset":2634,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeIndex","ranges":[{"startOffset":2699,"endOffset":2762,"count":0}],"isBlockCoverage":false},{"functionName":"sortByRangeStart","ranges":[{"startOffset":2836,"endOffset":2899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1014","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1015","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/get-port/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":590,"count":1}],"isBlockCoverage":true},{"functionName":"getPort","ranges":[{"startOffset":59,"endOffset":492,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":512,"endOffset":588,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1016","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/customErrors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":463,"count":1}],"isBlockCoverage":true},{"functionName":"serverErrors","ranges":[{"startOffset":169,"endOffset":417,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1017","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ansi-to-html/lib/ansi_to_html.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14668,"count":1}],"isBlockCoverage":true},{"functionName":"_classCallCheck","ranges":[{"startOffset":15,"endOffset":168,"count":1},{"startOffset":105,"endOffset":166,"count":0}],"isBlockCoverage":true},{"functionName":"_defineProperties","ranges":[{"startOffset":170,"endOffset":487,"count":1}],"isBlockCoverage":true},{"functionName":"_createClass","ranges":[{"startOffset":489,"endOffset":704,"count":1},{"startOffset":638,"endOffset":682,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultColors","ranges":[{"startOffset":876,"endOffset":1541,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1195,"endOffset":1376,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1236,"endOffset":1370,"count":36}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1281,"endOffset":1362,"count":216}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1402,"endOffset":1520,"count":24}],"isBlockCoverage":true},{"functionName":"setStyleColor","ranges":[{"startOffset":1650,"endOffset":1912,"count":216},{"startOffset":1763,"endOffset":1778,"count":180},{"startOffset":1779,"endOffset":1782,"count":36},{"startOffset":1804,"endOffset":1821,"count":180},{"startOffset":1822,"endOffset":1825,"count":36},{"startOffset":1846,"endOffset":1862,"count":180},{"startOffset":1863,"endOffset":1866,"count":36}],"isBlockCoverage":true},{"functionName":"toHexString","ranges":[{"startOffset":2026,"endOffset":2153,"count":672},{"startOffset":2110,"endOffset":2136,"count":109}],"isBlockCoverage":true},{"functionName":"toColorHexString","ranges":[{"startOffset":2302,"endOffset":3034,"count":216},{"startOffset":2625,"endOffset":2695,"count":648},{"startOffset":2700,"endOffset":2773,"count":0},{"startOffset":2831,"endOffset":2861,"count":0},{"startOffset":2863,"endOffset":2903,"count":0},{"startOffset":2949,"endOffset":2988,"count":0}],"isBlockCoverage":true},{"functionName":"generateOutput","ranges":[{"startOffset":3140,"endOffset":3552,"count":0}],"isBlockCoverage":false},{"functionName":"handleRgb","ranges":[{"startOffset":3627,"endOffset":3987,"count":0}],"isBlockCoverage":false},{"functionName":"handleDisplay","ranges":[{"startOffset":4089,"endOffset":5767,"count":0}],"isBlockCoverage":false},{"functionName":"resetStyles","ranges":[{"startOffset":5823,"endOffset":6004,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":6190,"endOffset":6322,"count":44},{"startOffset":6275,"endOffset":6301,"count":282}],"isBlockCoverage":true},{"functionName":"notCategory","ranges":[{"startOffset":6457,"endOffset":6601,"count":0}],"isBlockCoverage":false},{"functionName":"categoryForCode","ranges":[{"startOffset":6700,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"pushText","ranges":[{"startOffset":7425,"endOffset":7545,"count":0}],"isBlockCoverage":false},{"functionName":"pushTag","ranges":[{"startOffset":7654,"endOffset":7828,"count":0}],"isBlockCoverage":false},{"functionName":"pushStyle","ranges":[{"startOffset":7909,"endOffset":7985,"count":0}],"isBlockCoverage":false},{"functionName":"pushForegroundColor","ranges":[{"startOffset":7987,"endOffset":8084,"count":0}],"isBlockCoverage":false},{"functionName":"pushBackgroundColor","ranges":[{"startOffset":8086,"endOffset":8194,"count":0}],"isBlockCoverage":false},{"functionName":"closeTag","ranges":[{"startOffset":8275,"endOffset":8439,"count":0}],"isBlockCoverage":false},{"functionName":"tokenize","ranges":[{"startOffset":8551,"endOffset":12240,"count":0}],"isBlockCoverage":false},{"functionName":"updateStickyStack","ranges":[{"startOffset":12392,"endOffset":12682,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12711,"endOffset":14639,"count":1}],"isBlockCoverage":true},{"functionName":"Filter","ranges":[{"startOffset":13343,"endOffset":13652,"count":1},{"startOffset":13428,"endOffset":13433,"count":0},{"startOffset":13460,"endOffset":13542,"count":0}],"isBlockCoverage":true},{"functionName":"toHtml","ranges":[{"startOffset":13784,"endOffset":14612,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1018","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/entities/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":819,"count":1}],"isBlockCoverage":true},{"functionName":"exports.decode","ranges":[{"startOffset":100,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodeStrict","ranges":[{"startOffset":219,"endOffset":318,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encode","ranges":[{"startOffset":338,"endOffset":431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1019","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/entities/lib/encode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2086,"count":1}],"isBlockCoverage":true},{"functionName":"getInverseObj","ranges":[{"startOffset":339,"endOffset":551,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":429,"endOffset":543,"count":2130}],"isBlockCoverage":true},{"functionName":"getInverseReplacer","ranges":[{"startOffset":553,"endOffset":938,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":670,"endOffset":811,"count":1521},{"startOffset":712,"endOffset":758,"count":1323},{"startOffset":758,"endOffset":805,"count":198}],"isBlockCoverage":true},{"functionName":"singleCharReplacer","ranges":[{"startOffset":1032,"endOffset":1206,"count":0}],"isBlockCoverage":false},{"functionName":"astralReplacer","ranges":[{"startOffset":1208,"endOffset":1510,"count":0}],"isBlockCoverage":false},{"functionName":"getInverse","ranges":[{"startOffset":1512,"endOffset":1807,"count":2}],"isBlockCoverage":true},{"functionName":"func","ranges":[{"startOffset":1551,"endOffset":1608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1621,"endOffset":1804,"count":0}],"isBlockCoverage":false},{"functionName":"escapeXML","ranges":[{"startOffset":1860,"endOffset":2056,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1020","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/entities/lib/decode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1833,"count":1}],"isBlockCoverage":true},{"functionName":"getStrictDecoder","ranges":[{"startOffset":298,"endOffset":589,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":516,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":609,"endOffset":1298,"count":1},{"startOffset":779,"endOffset":924,"count":2125},{"startOffset":816,"endOffset":873,"count":106},{"startOffset":873,"endOffset":918,"count":2019}],"isBlockCoverage":true},{"functionName":"replacer","ranges":[{"startOffset":1062,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1224,"endOffset":1295,"count":0}],"isBlockCoverage":false},{"functionName":"sorter","ranges":[{"startOffset":1304,"endOffset":1356,"count":11274},{"startOffset":1345,"endOffset":1348,"count":2484},{"startOffset":1349,"endOffset":1353,"count":8790}],"isBlockCoverage":true},{"functionName":"getReplacer","ranges":[{"startOffset":1358,"endOffset":1728,"count":3}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":1397,"endOffset":1725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1021","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/entities/lib/decode_codepoint.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"decodeCodePoint","ranges":[{"startOffset":174,"endOffset":690,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1022","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":885,"count":1}],"isBlockCoverage":true},{"functionName":"PackagerRegistry","ranges":[{"startOffset":326,"endOffset":567,"count":1},{"startOffset":530,"endOffset":548,"count":0}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":571,"endOffset":719,"count":4},{"startOffset":631,"endOffset":674,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":723,"endOffset":775,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":779,"endOffset":846,"count":3},{"startOffset":827,"endOffset":841,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1023","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/JSConcatPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17041,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":723,"endOffset":2252,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":2256,"endOffset":2324,"count":0}],"isBlockCoverage":false},{"functionName":"getSize","ranges":[{"startOffset":2328,"endOffset":2365,"count":0}],"isBlockCoverage":false},{"functionName":"markUsedExports","ranges":[{"startOffset":2369,"endOffset":2812,"count":0}],"isBlockCoverage":false},{"functionName":"markUsed","ranges":[{"startOffset":2816,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"getExportIdentifier","ranges":[{"startOffset":3220,"endOffset":3401,"count":0}],"isBlockCoverage":false},{"functionName":"addAsset","ranges":[{"startOffset":3405,"endOffset":5037,"count":0}],"isBlockCoverage":false},{"functionName":"shouldWrap","ranges":[{"startOffset":5041,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"addDeps","ranges":[{"startOffset":5810,"endOffset":7567,"count":0}],"isBlockCoverage":false},{"functionName":"wrapModule","ranges":[{"startOffset":7571,"endOffset":10043,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":10047,"endOffset":10219,"count":0}],"isBlockCoverage":false},{"functionName":"findRequires","ranges":[{"startOffset":10223,"endOffset":10643,"count":0}],"isBlockCoverage":false},{"functionName":"getBundleSpecifier","ranges":[{"startOffset":10647,"endOffset":10850,"count":0}],"isBlockCoverage":false},{"functionName":"addAssetToBundle","ranges":[{"startOffset":10854,"endOffset":11279,"count":0}],"isBlockCoverage":false},{"functionName":"addBundleLoader","ranges":[{"startOffset":11283,"endOffset":12440,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":12444,"endOffset":15638,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModule","ranges":[{"startOffset":15642,"endOffset":15773,"count":0}],"isBlockCoverage":false},{"functionName":"findExportModule","ranges":[{"startOffset":15777,"endOffset":17002,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1024","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/Packager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1}],"isBlockCoverage":true},{"functionName":"Packager","ranges":[{"startOffset":162,"endOffset":286,"count":2}],"isBlockCoverage":true},{"functionName":"shouldAddAsset","ranges":[{"startOffset":297,"endOffset":336,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":340,"endOffset":689,"count":2}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":693,"endOffset":753,"count":6}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":757,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"addAsset","ranges":[{"startOffset":822,"endOffset":907,"count":0}],"isBlockCoverage":false},{"functionName":"getSize","ranges":[{"startOffset":911,"endOffset":961,"count":6}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":965,"endOffset":1009,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1025","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/concat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11638,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":710,"endOffset":11636,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1026","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":333,"endOffset":428,"count":1},{"startOffset":407,"endOffset":425,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":430,"endOffset":616,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":618,"endOffset":1361,"count":1},{"startOffset":700,"endOffset":773,"count":0},{"startOffset":775,"endOffset":871,"count":0},{"startOffset":873,"endOffset":1001,"count":0},{"startOffset":1024,"endOffset":1360,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1027","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/formatters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1462,"count":1}],"isBlockCoverage":true},{"functionName":"makeStatementFormatter","ranges":[{"startOffset":185,"endOffset":386,"count":3}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":244,"endOffset":283,"count":40}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":299,"endOffset":307,"count":2}],"isBlockCoverage":true},{"functionName":"unwrap","ranges":[{"startOffset":321,"endOffset":379,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":425,"endOffset":513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":581,"endOffset":593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":670,"endOffset":875,"count":1},{"startOffset":705,"endOffset":759,"count":0},{"startOffset":784,"endOffset":854,"count":0}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":938,"endOffset":959,"count":3}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":973,"endOffset":1258,"count":1},{"startOffset":1031,"endOffset":1105,"count":0},{"startOffset":1191,"endOffset":1254,"count":0}],"isBlockCoverage":true},{"functionName":"unwrap","ranges":[{"startOffset":1270,"endOffset":1307,"count":1}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":1370,"endOffset":1380,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":1394,"endOffset":1402,"count":0}],"isBlockCoverage":false},{"functionName":"unwrap","ranges":[{"startOffset":1414,"endOffset":1432,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1028","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2579,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":282,"endOffset":377,"count":2},{"startOffset":356,"endOffset":374,"count":0}],"isBlockCoverage":true},{"functionName":"createTemplateBuilder","ranges":[{"startOffset":460,"endOffset":2222,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":689,"endOffset":1522,"count":43},{"startOffset":742,"endOffset":953,"count":40},{"startOffset":771,"endOffset":815,"count":0},{"startOffset":953,"endOffset":1453,"count":3},{"startOffset":1223,"endOffset":1453,"count":0},{"startOffset":1453,"endOffset":1521,"count":0}],"isBlockCoverage":true},{"functionName":"ast","ranges":[{"startOffset":1535,"endOffset":2214,"count":0}],"isBlockCoverage":false},{"functionName":"extendedTrace","ranges":[{"startOffset":2224,"endOffset":2579,"count":43}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2433,"endOffset":2576,"count":2},{"startOffset":2480,"endOffset":2572,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1029","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3041,"count":1}],"isBlockCoverage":true},{"functionName":"_objectWithoutPropertiesLoose","ranges":[{"startOffset":188,"endOffset":495,"count":46},{"startOffset":267,"endOffset":277,"count":0},{"startOffset":385,"endOffset":478,"count":1},{"startOffset":449,"endOffset":478,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":497,"endOffset":898,"count":40}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":900,"endOffset":2627,"count":46},{"startOffset":945,"endOffset":972,"count":1},{"startOffset":974,"endOffset":1029,"count":0},{"startOffset":1051,"endOffset":1056,"count":45},{"startOffset":1361,"endOffset":1402,"count":0},{"startOffset":1404,"endOffset":1491,"count":0},{"startOffset":1526,"endOffset":1568,"count":1},{"startOffset":1569,"endOffset":1600,"count":1},{"startOffset":1602,"endOffset":1697,"count":0},{"startOffset":1730,"endOffset":1770,"count":0},{"startOffset":1772,"endOffset":1859,"count":0},{"startOffset":1897,"endOffset":1942,"count":0},{"startOffset":1944,"endOffset":2036,"count":0},{"startOffset":2075,"endOffset":2138,"count":0},{"startOffset":2140,"endOffset":2278,"count":0},{"startOffset":2415,"endOffset":2426,"count":45},{"startOffset":2427,"endOffset":2447,"count":1},{"startOffset":2508,"endOffset":2526,"count":0},{"startOffset":2597,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeReplacements","ranges":[{"startOffset":2629,"endOffset":3041,"count":2},{"startOffset":2711,"endOffset":2838,"count":0},{"startOffset":2881,"endOffset":2904,"count":0},{"startOffset":2932,"endOffset":2944,"count":0},{"startOffset":2949,"endOffset":3040,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2744,"endOffset":2828,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1030","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/string.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":710,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":275,"endOffset":370,"count":2},{"startOffset":349,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"stringTemplate","ranges":[{"startOffset":372,"endOffset":710,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":477,"endOffset":707,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1031","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5310,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":270,"endOffset":456,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":458,"endOffset":1201,"count":1},{"startOffset":540,"endOffset":613,"count":0},{"startOffset":615,"endOffset":711,"count":0},{"startOffset":713,"endOffset":841,"count":0},{"startOffset":864,"endOffset":1200,"count":0}],"isBlockCoverage":true},{"functionName":"parseAndBuildMetadata","ranges":[{"startOffset":1237,"endOffset":2037,"count":3},{"startOffset":2022,"endOffset":2033,"count":0}],"isBlockCoverage":true},{"functionName":"placeholderVisitorHandler","ranges":[{"startOffset":2039,"endOffset":4237,"count":133},{"startOffset":2172,"endOffset":2425,"count":0},{"startOffset":2501,"endOffset":2518,"count":0},{"startOffset":2549,"endOffset":2575,"count":88},{"startOffset":2577,"endOffset":2640,"count":45},{"startOffset":2640,"endOffset":2762,"count":88},{"startOffset":2675,"endOffset":2739,"count":3},{"startOffset":2739,"endOffset":2762,"count":85},{"startOffset":2762,"endOffset":2795,"count":48},{"startOffset":2795,"endOffset":2870,"count":0},{"startOffset":2872,"endOffset":3010,"count":0},{"startOffset":3010,"endOffset":3134,"count":48},{"startOffset":3135,"endOffset":3244,"count":40},{"startOffset":3201,"endOffset":3209,"count":0},{"startOffset":3246,"endOffset":3263,"count":40},{"startOffset":3263,"endOffset":3481,"count":8},{"startOffset":3483,"endOffset":3509,"count":0},{"startOffset":3509,"endOffset":3945,"count":8},{"startOffset":3545,"endOffset":3567,"count":0},{"startOffset":3598,"endOffset":3620,"count":4},{"startOffset":3621,"endOffset":3664,"count":7},{"startOffset":3645,"endOffset":3664,"count":1},{"startOffset":3666,"endOffset":3691,"count":1},{"startOffset":3691,"endOffset":3945,"count":7},{"startOffset":3733,"endOffset":3758,"count":0},{"startOffset":3760,"endOffset":3829,"count":0},{"startOffset":3859,"endOffset":3883,"count":0},{"startOffset":3885,"endOffset":3914,"count":0},{"startOffset":3945,"endOffset":4040,"count":8},{"startOffset":4041,"endOffset":4058,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4115,"endOffset":4154,"count":4}],"isBlockCoverage":true},{"functionName":"resolveAncestors","ranges":[{"startOffset":4239,"endOffset":4647,"count":4},{"startOffset":4353,"endOffset":4529,"count":14},{"startOffset":4442,"endOffset":4477,"count":10},{"startOffset":4477,"endOffset":4525,"count":4}],"isBlockCoverage":true},{"functionName":"parseWithCodeFrame","ranges":[{"startOffset":4649,"endOffset":5310,"count":3},{"startOffset":5083,"endOffset":5308,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1032","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16683,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1564,"endOffset":1613,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1715,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1881,"endOffset":1939,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2027,"endOffset":2085,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2171,"endOffset":2227,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2305,"endOffset":2353,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2427,"endOffset":2471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2549,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2685,"endOffset":2743,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2827,"endOffset":2881,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2960,"endOffset":3009,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3089,"endOffset":3139,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3228,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3378,"endOffset":3439,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3524,"endOffset":3579,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3671,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3816,"endOffset":3869,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3949,"endOffset":3999,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4091,"endOffset":4153,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4229,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4357,"endOffset":4409,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4490,"endOffset":4541,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4622,"endOffset":4673,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4752,"endOffset":4801,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4890,"endOffset":4949,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5029,"endOffset":5079,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5159,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5302,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5442,"endOffset":5489,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5583,"endOffset":5647,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5732,"endOffset":5787,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5876,"endOffset":5935,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6024,"endOffset":6083,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6173,"endOffset":6233,"count":163}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6328,"endOffset":6393,"count":142}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6470,"endOffset":6517,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6598,"endOffset":6649,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":6730,"endOffset":6781,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6852,"endOffset":6893,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6971,"endOffset":7019,"count":11}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7101,"endOffset":7153,"count":1387}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7233,"endOffset":7283,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7357,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7476,"endOffset":7521,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7607,"endOffset":7663,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7749,"endOffset":7805,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7886,"endOffset":7937,"count":703}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8013,"endOffset":8059,"count":8348}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8146,"endOffset":8203,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8278,"endOffset":8323,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8412,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8557,"endOffset":8613,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8687,"endOffset":8731,"count":6}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8814,"endOffset":8867,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":8944,"endOffset":8991,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9086,"endOffset":9151,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9612,"endOffset":9885,"count":287},{"startOffset":9678,"endOffset":9685,"count":0},{"startOffset":9749,"endOffset":9756,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":9828,"endOffset":9877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10304,"endOffset":10578,"count":560},{"startOffset":10370,"endOffset":10377,"count":0},{"startOffset":10441,"endOffset":10448,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10520,"endOffset":10570,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11683,"endOffset":11957,"count":45},{"startOffset":11749,"endOffset":11756,"count":0},{"startOffset":11820,"endOffset":11827,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":11899,"endOffset":11949,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12035,"endOffset":12308,"count":20},{"startOffset":12101,"endOffset":12108,"count":0},{"startOffset":12172,"endOffset":12179,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":12251,"endOffset":12300,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13242,"endOffset":13517,"count":11},{"startOffset":13308,"endOffset":13315,"count":0},{"startOffset":13379,"endOffset":13386,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13458,"endOffset":13509,"count":5010}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16143,"endOffset":16417,"count":287},{"startOffset":16209,"endOffset":16216,"count":0},{"startOffset":16280,"endOffset":16287,"count":1},{"startOffset":16287,"endOffset":16416,"count":286}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":16359,"endOffset":16409,"count":6709}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16421,"endOffset":16516,"count":58},{"startOffset":16495,"endOffset":16513,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1033","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/react/isReactComponent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":208,"endOffset":303,"count":1},{"startOffset":282,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1034","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":472,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"buildMatchMemberExpression","ranges":[{"startOffset":300,"endOffset":472,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":402,"endOffset":469,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1035","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/matchesPattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1002,"count":1}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":157,"endOffset":1002,"count":2},{"startOffset":263,"endOffset":276,"count":0},{"startOffset":322,"endOffset":340,"count":0},{"startOffset":565,"endOffset":616,"count":0},{"startOffset":618,"endOffset":1001,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1036","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116118,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":13938,"endOffset":14033,"count":1},{"startOffset":14012,"endOffset":14030,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayExpression","ranges":[{"startOffset":14035,"endOffset":14326,"count":12},{"startOffset":14089,"endOffset":14102,"count":0},{"startOffset":14172,"endOffset":14307,"count":0}],"isBlockCoverage":true},{"functionName":"isAssignmentExpression","ranges":[{"startOffset":14328,"endOffset":14629,"count":210},{"startOffset":14387,"endOffset":14400,"count":68},{"startOffset":14400,"endOffset":14475,"count":142},{"startOffset":14475,"endOffset":14610,"count":0},{"startOffset":14610,"endOffset":14628,"count":142}],"isBlockCoverage":true},{"functionName":"isBinaryExpression","ranges":[{"startOffset":14631,"endOffset":14924,"count":45},{"startOffset":14686,"endOffset":14699,"count":0},{"startOffset":14770,"endOffset":14905,"count":4},{"startOffset":14809,"endOffset":14901,"count":2},{"startOffset":14905,"endOffset":14923,"count":41}],"isBlockCoverage":true},{"functionName":"isInterpreterDirective","ranges":[{"startOffset":14926,"endOffset":15227,"count":0}],"isBlockCoverage":false},{"functionName":"isDirective","ranges":[{"startOffset":15229,"endOffset":15508,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectiveLiteral","ranges":[{"startOffset":15510,"endOffset":15803,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockStatement","ranges":[{"startOffset":15805,"endOffset":16094,"count":16034},{"startOffset":15858,"endOffset":15871,"count":14},{"startOffset":15871,"endOffset":15940,"count":16020},{"startOffset":15940,"endOffset":16075,"count":1256},{"startOffset":16005,"endOffset":16071,"count":0},{"startOffset":16075,"endOffset":16093,"count":14764}],"isBlockCoverage":true},{"functionName":"isBreakStatement","ranges":[{"startOffset":16096,"endOffset":16385,"count":0}],"isBlockCoverage":false},{"functionName":"isCallExpression","ranges":[{"startOffset":16387,"endOffset":16676,"count":348},{"startOffset":16440,"endOffset":16453,"count":68},{"startOffset":16453,"endOffset":16522,"count":280},{"startOffset":16522,"endOffset":16657,"count":77},{"startOffset":16587,"endOffset":16653,"count":0},{"startOffset":16657,"endOffset":16675,"count":203}],"isBlockCoverage":true},{"functionName":"isCatchClause","ranges":[{"startOffset":16678,"endOffset":16961,"count":274},{"startOffset":16728,"endOffset":16741,"count":0},{"startOffset":16807,"endOffset":16942,"count":48},{"startOffset":16846,"endOffset":16872,"count":0},{"startOffset":16942,"endOffset":16960,"count":226}],"isBlockCoverage":true},{"functionName":"isConditionalExpression","ranges":[{"startOffset":16963,"endOffset":17266,"count":36},{"startOffset":17023,"endOffset":17036,"count":0},{"startOffset":17112,"endOffset":17247,"count":3},{"startOffset":17151,"endOffset":17177,"count":2},{"startOffset":17177,"endOffset":17243,"count":1},{"startOffset":17247,"endOffset":17265,"count":33}],"isBlockCoverage":true},{"functionName":"isContinueStatement","ranges":[{"startOffset":17268,"endOffset":17563,"count":0}],"isBlockCoverage":false},{"functionName":"isDebuggerStatement","ranges":[{"startOffset":17565,"endOffset":17860,"count":0}],"isBlockCoverage":false},{"functionName":"isDoWhileStatement","ranges":[{"startOffset":17862,"endOffset":18155,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyStatement","ranges":[{"startOffset":18157,"endOffset":18446,"count":1},{"startOffset":18210,"endOffset":18223,"count":0},{"startOffset":18292,"endOffset":18427,"count":0}],"isBlockCoverage":true},{"functionName":"isExpressionStatement","ranges":[{"startOffset":18448,"endOffset":18747,"count":209},{"startOffset":18506,"endOffset":18519,"count":0},{"startOffset":18593,"endOffset":18728,"count":58},{"startOffset":18632,"endOffset":18658,"count":57},{"startOffset":18658,"endOffset":18724,"count":1},{"startOffset":18728,"endOffset":18746,"count":151}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":18749,"endOffset":19018,"count":508},{"startOffset":18792,"endOffset":18805,"count":0},{"startOffset":18864,"endOffset":18999,"count":2},{"startOffset":18929,"endOffset":18995,"count":0},{"startOffset":18999,"endOffset":19017,"count":506}],"isBlockCoverage":true},{"functionName":"isForInStatement","ranges":[{"startOffset":19020,"endOffset":19309,"count":1},{"startOffset":19073,"endOffset":19086,"count":0},{"startOffset":19155,"endOffset":19290,"count":0}],"isBlockCoverage":true},{"functionName":"isForStatement","ranges":[{"startOffset":19311,"endOffset":19596,"count":4},{"startOffset":19362,"endOffset":19375,"count":0},{"startOffset":19442,"endOffset":19577,"count":1},{"startOffset":19507,"endOffset":19573,"count":0},{"startOffset":19577,"endOffset":19595,"count":3}],"isBlockCoverage":true},{"functionName":"isFunctionDeclaration","ranges":[{"startOffset":19598,"endOffset":19897,"count":1693},{"startOffset":19656,"endOffset":19669,"count":0},{"startOffset":19743,"endOffset":19878,"count":66},{"startOffset":19808,"endOffset":19874,"count":0},{"startOffset":19878,"endOffset":19896,"count":1627}],"isBlockCoverage":true},{"functionName":"isFunctionExpression","ranges":[{"startOffset":19899,"endOffset":20196,"count":129},{"startOffset":19956,"endOffset":19969,"count":0},{"startOffset":20042,"endOffset":20177,"count":12},{"startOffset":20107,"endOffset":20173,"count":0},{"startOffset":20177,"endOffset":20195,"count":117}],"isBlockCoverage":true},{"functionName":"isIdentifier","ranges":[{"startOffset":20198,"endOffset":20479,"count":1776},{"startOffset":20247,"endOffset":20260,"count":68},{"startOffset":20260,"endOffset":20325,"count":1708},{"startOffset":20325,"endOffset":20460,"count":1228},{"startOffset":20390,"endOffset":20456,"count":0},{"startOffset":20460,"endOffset":20478,"count":480}],"isBlockCoverage":true},{"functionName":"isIfStatement","ranges":[{"startOffset":20481,"endOffset":20764,"count":23},{"startOffset":20531,"endOffset":20544,"count":0},{"startOffset":20610,"endOffset":20745,"count":0}],"isBlockCoverage":true},{"functionName":"isLabeledStatement","ranges":[{"startOffset":20766,"endOffset":21059,"count":48},{"startOffset":20821,"endOffset":20834,"count":0},{"startOffset":20905,"endOffset":21040,"count":0}],"isBlockCoverage":true},{"functionName":"isStringLiteral","ranges":[{"startOffset":21061,"endOffset":21348,"count":119},{"startOffset":21113,"endOffset":21126,"count":0},{"startOffset":21194,"endOffset":21329,"count":7},{"startOffset":21259,"endOffset":21325,"count":0},{"startOffset":21329,"endOffset":21347,"count":112}],"isBlockCoverage":true},{"functionName":"isNumericLiteral","ranges":[{"startOffset":21350,"endOffset":21639,"count":2},{"startOffset":21403,"endOffset":21416,"count":0},{"startOffset":21485,"endOffset":21620,"count":0}],"isBlockCoverage":true},{"functionName":"isNullLiteral","ranges":[{"startOffset":21641,"endOffset":21924,"count":4},{"startOffset":21691,"endOffset":21704,"count":0},{"startOffset":21770,"endOffset":21905,"count":2},{"startOffset":21835,"endOffset":21901,"count":0},{"startOffset":21905,"endOffset":21923,"count":2}],"isBlockCoverage":true},{"functionName":"isBooleanLiteral","ranges":[{"startOffset":21926,"endOffset":22215,"count":8},{"startOffset":21979,"endOffset":21992,"count":0},{"startOffset":22061,"endOffset":22196,"count":0}],"isBlockCoverage":true},{"functionName":"isRegExpLiteral","ranges":[{"startOffset":22217,"endOffset":22504,"count":2},{"startOffset":22269,"endOffset":22282,"count":0},{"startOffset":22350,"endOffset":22485,"count":0}],"isBlockCoverage":true},{"functionName":"isLogicalExpression","ranges":[{"startOffset":22506,"endOffset":22801,"count":9},{"startOffset":22562,"endOffset":22575,"count":0},{"startOffset":22647,"endOffset":22782,"count":1},{"startOffset":22686,"endOffset":22712,"count":0},{"startOffset":22782,"endOffset":22800,"count":8}],"isBlockCoverage":true},{"functionName":"isMemberExpression","ranges":[{"startOffset":22803,"endOffset":23096,"count":591},{"startOffset":22858,"endOffset":22871,"count":68},{"startOffset":22871,"endOffset":22942,"count":523},{"startOffset":22942,"endOffset":23077,"count":62},{"startOffset":23007,"endOffset":23073,"count":0},{"startOffset":23077,"endOffset":23095,"count":461}],"isBlockCoverage":true},{"functionName":"isNewExpression","ranges":[{"startOffset":23098,"endOffset":23385,"count":591},{"startOffset":23150,"endOffset":23163,"count":0},{"startOffset":23231,"endOffset":23366,"count":0}],"isBlockCoverage":true},{"functionName":"isProgram","ranges":[{"startOffset":23387,"endOffset":23662,"count":1097},{"startOffset":23433,"endOffset":23446,"count":0},{"startOffset":23508,"endOffset":23643,"count":184},{"startOffset":23573,"endOffset":23639,"count":0},{"startOffset":23643,"endOffset":23661,"count":913}],"isBlockCoverage":true},{"functionName":"isObjectExpression","ranges":[{"startOffset":23664,"endOffset":23957,"count":4},{"startOffset":23719,"endOffset":23732,"count":0},{"startOffset":23803,"endOffset":23938,"count":0}],"isBlockCoverage":true},{"functionName":"isObjectMethod","ranges":[{"startOffset":23959,"endOffset":24244,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectProperty","ranges":[{"startOffset":24246,"endOffset":24535,"count":0}],"isBlockCoverage":false},{"functionName":"isRestElement","ranges":[{"startOffset":24537,"endOffset":24820,"count":0}],"isBlockCoverage":false},{"functionName":"isReturnStatement","ranges":[{"startOffset":24822,"endOffset":25113,"count":1},{"startOffset":24876,"endOffset":24889,"count":0},{"startOffset":24959,"endOffset":25094,"count":0}],"isBlockCoverage":true},{"functionName":"isSequenceExpression","ranges":[{"startOffset":25115,"endOffset":25412,"count":11},{"startOffset":25172,"endOffset":25185,"count":0},{"startOffset":25258,"endOffset":25393,"count":0}],"isBlockCoverage":true},{"functionName":"isParenthesizedExpression","ranges":[{"startOffset":25414,"endOffset":25721,"count":2},{"startOffset":25476,"endOffset":25489,"count":0},{"startOffset":25567,"endOffset":25702,"count":0}],"isBlockCoverage":true},{"functionName":"isSwitchCase","ranges":[{"startOffset":25723,"endOffset":26004,"count":0}],"isBlockCoverage":false},{"functionName":"isSwitchStatement","ranges":[{"startOffset":26006,"endOffset":26297,"count":1},{"startOffset":26060,"endOffset":26073,"count":0},{"startOffset":26143,"endOffset":26278,"count":0}],"isBlockCoverage":true},{"functionName":"isThisExpression","ranges":[{"startOffset":26299,"endOffset":26588,"count":0}],"isBlockCoverage":false},{"functionName":"isThrowStatement","ranges":[{"startOffset":26590,"endOffset":26879,"count":2},{"startOffset":26643,"endOffset":26656,"count":0},{"startOffset":26725,"endOffset":26860,"count":1},{"startOffset":26790,"endOffset":26856,"count":0},{"startOffset":26860,"endOffset":26878,"count":1}],"isBlockCoverage":true},{"functionName":"isTryStatement","ranges":[{"startOffset":26881,"endOffset":27166,"count":14},{"startOffset":26932,"endOffset":26945,"count":0},{"startOffset":27012,"endOffset":27147,"count":1},{"startOffset":27077,"endOffset":27143,"count":0},{"startOffset":27147,"endOffset":27165,"count":13}],"isBlockCoverage":true},{"functionName":"isUnaryExpression","ranges":[{"startOffset":27168,"endOffset":27459,"count":2},{"startOffset":27222,"endOffset":27235,"count":0},{"startOffset":27305,"endOffset":27440,"count":0}],"isBlockCoverage":true},{"functionName":"isUpdateExpression","ranges":[{"startOffset":27461,"endOffset":27754,"count":0}],"isBlockCoverage":false},{"functionName":"isVariableDeclaration","ranges":[{"startOffset":27756,"endOffset":28055,"count":1565},{"startOffset":27814,"endOffset":27827,"count":5},{"startOffset":27827,"endOffset":27901,"count":1560},{"startOffset":27901,"endOffset":28036,"count":79},{"startOffset":27966,"endOffset":28032,"count":0},{"startOffset":28036,"endOffset":28054,"count":1481}],"isBlockCoverage":true},{"functionName":"isVariableDeclarator","ranges":[{"startOffset":28057,"endOffset":28354,"count":1},{"startOffset":28114,"endOffset":28127,"count":0},{"startOffset":28200,"endOffset":28335,"count":0}],"isBlockCoverage":true},{"functionName":"isWhileStatement","ranges":[{"startOffset":28356,"endOffset":28645,"count":1},{"startOffset":28409,"endOffset":28422,"count":0},{"startOffset":28491,"endOffset":28626,"count":0}],"isBlockCoverage":true},{"functionName":"isWithStatement","ranges":[{"startOffset":28647,"endOffset":28934,"count":0}],"isBlockCoverage":false},{"functionName":"isAssignmentPattern","ranges":[{"startOffset":28936,"endOffset":29231,"count":8},{"startOffset":28992,"endOffset":29005,"count":0},{"startOffset":29077,"endOffset":29212,"count":0}],"isBlockCoverage":true},{"functionName":"isArrayPattern","ranges":[{"startOffset":29233,"endOffset":29518,"count":3},{"startOffset":29284,"endOffset":29297,"count":0},{"startOffset":29364,"endOffset":29499,"count":0}],"isBlockCoverage":true},{"functionName":"isArrowFunctionExpression","ranges":[{"startOffset":29520,"endOffset":29827,"count":35},{"startOffset":29582,"endOffset":29595,"count":0},{"startOffset":29673,"endOffset":29808,"count":0}],"isBlockCoverage":true},{"functionName":"isClassBody","ranges":[{"startOffset":29829,"endOffset":30108,"count":0}],"isBlockCoverage":false},{"functionName":"isClassExpression","ranges":[{"startOffset":30110,"endOffset":30401,"count":73},{"startOffset":30164,"endOffset":30177,"count":0},{"startOffset":30247,"endOffset":30382,"count":0}],"isBlockCoverage":true},{"functionName":"isClassDeclaration","ranges":[{"startOffset":30403,"endOffset":30696,"count":1454},{"startOffset":30458,"endOffset":30471,"count":0},{"startOffset":30542,"endOffset":30677,"count":0}],"isBlockCoverage":true},{"functionName":"isExportAllDeclaration","ranges":[{"startOffset":30698,"endOffset":30999,"count":3},{"startOffset":30757,"endOffset":30770,"count":0},{"startOffset":30845,"endOffset":30980,"count":0}],"isBlockCoverage":true},{"functionName":"isExportDefaultDeclaration","ranges":[{"startOffset":31001,"endOffset":31310,"count":12},{"startOffset":31064,"endOffset":31077,"count":0},{"startOffset":31156,"endOffset":31291,"count":2},{"startOffset":31221,"endOffset":31287,"count":0},{"startOffset":31291,"endOffset":31309,"count":10}],"isBlockCoverage":true},{"functionName":"isExportNamedDeclaration","ranges":[{"startOffset":31312,"endOffset":31617,"count":11},{"startOffset":31373,"endOffset":31386,"count":0},{"startOffset":31463,"endOffset":31598,"count":5},{"startOffset":31528,"endOffset":31594,"count":0},{"startOffset":31598,"endOffset":31616,"count":6}],"isBlockCoverage":true},{"functionName":"isExportSpecifier","ranges":[{"startOffset":31619,"endOffset":31910,"count":0}],"isBlockCoverage":false},{"functionName":"isForOfStatement","ranges":[{"startOffset":31912,"endOffset":32201,"count":0}],"isBlockCoverage":false},{"functionName":"isImportDeclaration","ranges":[{"startOffset":32203,"endOffset":32498,"count":6},{"startOffset":32259,"endOffset":32272,"count":0},{"startOffset":32344,"endOffset":32479,"count":0}],"isBlockCoverage":true},{"functionName":"isImportDefaultSpecifier","ranges":[{"startOffset":32500,"endOffset":32805,"count":0}],"isBlockCoverage":false},{"functionName":"isImportNamespaceSpecifier","ranges":[{"startOffset":32807,"endOffset":33116,"count":0}],"isBlockCoverage":false},{"functionName":"isImportSpecifier","ranges":[{"startOffset":33118,"endOffset":33409,"count":0}],"isBlockCoverage":false},{"functionName":"isMetaProperty","ranges":[{"startOffset":33411,"endOffset":33696,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":33698,"endOffset":33981,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectPattern","ranges":[{"startOffset":33983,"endOffset":34270,"count":76},{"startOffset":34035,"endOffset":34048,"count":0},{"startOffset":34116,"endOffset":34251,"count":0}],"isBlockCoverage":true},{"functionName":"isSpreadElement","ranges":[{"startOffset":34272,"endOffset":34559,"count":6},{"startOffset":34324,"endOffset":34337,"count":0},{"startOffset":34405,"endOffset":34540,"count":0}],"isBlockCoverage":true},{"functionName":"isSuper","ranges":[{"startOffset":34561,"endOffset":34832,"count":0}],"isBlockCoverage":false},{"functionName":"isTaggedTemplateExpression","ranges":[{"startOffset":34834,"endOffset":35143,"count":81},{"startOffset":34897,"endOffset":34910,"count":0},{"startOffset":34989,"endOffset":35124,"count":0}],"isBlockCoverage":true},{"functionName":"isTemplateElement","ranges":[{"startOffset":35145,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"isTemplateLiteral","ranges":[{"startOffset":35438,"endOffset":35729,"count":2},{"startOffset":35492,"endOffset":35505,"count":0},{"startOffset":35575,"endOffset":35710,"count":0}],"isBlockCoverage":true},{"functionName":"isYieldExpression","ranges":[{"startOffset":35731,"endOffset":36022,"count":0}],"isBlockCoverage":false},{"functionName":"isAnyTypeAnnotation","ranges":[{"startOffset":36024,"endOffset":36319,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayTypeAnnotation","ranges":[{"startOffset":36321,"endOffset":36620,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanTypeAnnotation","ranges":[{"startOffset":36622,"endOffset":36925,"count":0}],"isBlockCoverage":false},{"functionName":"isBooleanLiteralTypeAnnotation","ranges":[{"startOffset":36927,"endOffset":37244,"count":0}],"isBlockCoverage":false},{"functionName":"isNullLiteralTypeAnnotation","ranges":[{"startOffset":37246,"endOffset":37557,"count":0}],"isBlockCoverage":false},{"functionName":"isClassImplements","ranges":[{"startOffset":37559,"endOffset":37850,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareClass","ranges":[{"startOffset":37852,"endOffset":38137,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareFunction","ranges":[{"startOffset":38139,"endOffset":38430,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareInterface","ranges":[{"startOffset":38432,"endOffset":38725,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModule","ranges":[{"startOffset":38727,"endOffset":39014,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareModuleExports","ranges":[{"startOffset":39016,"endOffset":39317,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareTypeAlias","ranges":[{"startOffset":39319,"endOffset":39612,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareOpaqueType","ranges":[{"startOffset":39614,"endOffset":39909,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareVariable","ranges":[{"startOffset":39911,"endOffset":40202,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportDeclaration","ranges":[{"startOffset":40204,"endOffset":40513,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclareExportAllDeclaration","ranges":[{"startOffset":40515,"endOffset":40830,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaredPredicate","ranges":[{"startOffset":40832,"endOffset":41127,"count":0}],"isBlockCoverage":false},{"functionName":"isExistsTypeAnnotation","ranges":[{"startOffset":41129,"endOffset":41430,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeAnnotation","ranges":[{"startOffset":41432,"endOffset":41737,"count":0}],"isBlockCoverage":false},{"functionName":"isFunctionTypeParam","ranges":[{"startOffset":41739,"endOffset":42034,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericTypeAnnotation","ranges":[{"startOffset":42036,"endOffset":42339,"count":0}],"isBlockCoverage":false},{"functionName":"isInferredPredicate","ranges":[{"startOffset":42341,"endOffset":42636,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceExtends","ranges":[{"startOffset":42638,"endOffset":42931,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceDeclaration","ranges":[{"startOffset":42933,"endOffset":43234,"count":0}],"isBlockCoverage":false},{"functionName":"isInterfaceTypeAnnotation","ranges":[{"startOffset":43236,"endOffset":43543,"count":0}],"isBlockCoverage":false},{"functionName":"isIntersectionTypeAnnotation","ranges":[{"startOffset":43545,"endOffset":43858,"count":0}],"isBlockCoverage":false},{"functionName":"isMixedTypeAnnotation","ranges":[{"startOffset":43860,"endOffset":44159,"count":0}],"isBlockCoverage":false},{"functionName":"isEmptyTypeAnnotation","ranges":[{"startOffset":44161,"endOffset":44460,"count":0}],"isBlockCoverage":false},{"functionName":"isNullableTypeAnnotation","ranges":[{"startOffset":44462,"endOffset":44767,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteralTypeAnnotation","ranges":[{"startOffset":44769,"endOffset":45084,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberTypeAnnotation","ranges":[{"startOffset":45086,"endOffset":45387,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeAnnotation","ranges":[{"startOffset":45389,"endOffset":45690,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeInternalSlot","ranges":[{"startOffset":45692,"endOffset":45997,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeCallProperty","ranges":[{"startOffset":45999,"endOffset":46304,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeIndexer","ranges":[{"startOffset":46306,"endOffset":46601,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeProperty","ranges":[{"startOffset":46603,"endOffset":46900,"count":0}],"isBlockCoverage":false},{"functionName":"isObjectTypeSpreadProperty","ranges":[{"startOffset":46902,"endOffset":47211,"count":0}],"isBlockCoverage":false},{"functionName":"isOpaqueType","ranges":[{"startOffset":47213,"endOffset":47494,"count":0}],"isBlockCoverage":false},{"functionName":"isQualifiedTypeIdentifier","ranges":[{"startOffset":47496,"endOffset":47803,"count":0}],"isBlockCoverage":false},{"functionName":"isStringLiteralTypeAnnotation","ranges":[{"startOffset":47805,"endOffset":48120,"count":0}],"isBlockCoverage":false},{"functionName":"isStringTypeAnnotation","ranges":[{"startOffset":48122,"endOffset":48423,"count":0}],"isBlockCoverage":false},{"functionName":"isSymbolTypeAnnotation","ranges":[{"startOffset":48425,"endOffset":48726,"count":0}],"isBlockCoverage":false},{"functionName":"isThisTypeAnnotation","ranges":[{"startOffset":48728,"endOffset":49025,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleTypeAnnotation","ranges":[{"startOffset":49027,"endOffset":49326,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeofTypeAnnotation","ranges":[{"startOffset":49328,"endOffset":49629,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAlias","ranges":[{"startOffset":49631,"endOffset":49910,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeAnnotation","ranges":[{"startOffset":49912,"endOffset":50201,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeCastExpression","ranges":[{"startOffset":50203,"endOffset":50500,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameter","ranges":[{"startOffset":50502,"endOffset":50789,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterDeclaration","ranges":[{"startOffset":50791,"endOffset":51100,"count":0}],"isBlockCoverage":false},{"functionName":"isTypeParameterInstantiation","ranges":[{"startOffset":51102,"endOffset":51415,"count":0}],"isBlockCoverage":false},{"functionName":"isUnionTypeAnnotation","ranges":[{"startOffset":51417,"endOffset":51716,"count":0}],"isBlockCoverage":false},{"functionName":"isVariance","ranges":[{"startOffset":51718,"endOffset":51995,"count":0}],"isBlockCoverage":false},{"functionName":"isVoidTypeAnnotation","ranges":[{"startOffset":51997,"endOffset":52294,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDeclaration","ranges":[{"startOffset":52296,"endOffset":52587,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanBody","ranges":[{"startOffset":52589,"endOffset":52880,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberBody","ranges":[{"startOffset":52882,"endOffset":53171,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringBody","ranges":[{"startOffset":53173,"endOffset":53462,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumSymbolBody","ranges":[{"startOffset":53464,"endOffset":53753,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBooleanMember","ranges":[{"startOffset":53755,"endOffset":54050,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumNumberMember","ranges":[{"startOffset":54052,"endOffset":54345,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumStringMember","ranges":[{"startOffset":54347,"endOffset":54640,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumDefaultedMember","ranges":[{"startOffset":54642,"endOffset":54941,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXAttribute","ranges":[{"startOffset":54943,"endOffset":55228,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingElement","ranges":[{"startOffset":55230,"endOffset":55525,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXElement","ranges":[{"startOffset":55527,"endOffset":55808,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXEmptyExpression","ranges":[{"startOffset":55810,"endOffset":56107,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXExpressionContainer","ranges":[{"startOffset":56109,"endOffset":56414,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadChild","ranges":[{"startOffset":56416,"endOffset":56705,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXIdentifier","ranges":[{"startOffset":56707,"endOffset":56994,"count":88},{"startOffset":56759,"endOffset":56772,"count":0},{"startOffset":56840,"endOffset":56975,"count":0}],"isBlockCoverage":true},{"functionName":"isJSXMemberExpression","ranges":[{"startOffset":56996,"endOffset":57295,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXNamespacedName","ranges":[{"startOffset":57297,"endOffset":57592,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningElement","ranges":[{"startOffset":57594,"endOffset":57889,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXSpreadAttribute","ranges":[{"startOffset":57891,"endOffset":58188,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXText","ranges":[{"startOffset":58190,"endOffset":58465,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXFragment","ranges":[{"startOffset":58467,"endOffset":58750,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXOpeningFragment","ranges":[{"startOffset":58752,"endOffset":59049,"count":0}],"isBlockCoverage":false},{"functionName":"isJSXClosingFragment","ranges":[{"startOffset":59051,"endOffset":59348,"count":0}],"isBlockCoverage":false},{"functionName":"isNoop","ranges":[{"startOffset":59350,"endOffset":59619,"count":0}],"isBlockCoverage":false},{"functionName":"isPlaceholder","ranges":[{"startOffset":59621,"endOffset":59904,"count":141},{"startOffset":59671,"endOffset":59684,"count":0},{"startOffset":59750,"endOffset":59885,"count":0}],"isBlockCoverage":true},{"functionName":"isV8IntrinsicIdentifier","ranges":[{"startOffset":59906,"endOffset":60209,"count":0}],"isBlockCoverage":false},{"functionName":"isArgumentPlaceholder","ranges":[{"startOffset":60211,"endOffset":60510,"count":0}],"isBlockCoverage":false},{"functionName":"isAwaitExpression","ranges":[{"startOffset":60512,"endOffset":60803,"count":65},{"startOffset":60566,"endOffset":60579,"count":0},{"startOffset":60649,"endOffset":60784,"count":0}],"isBlockCoverage":true},{"functionName":"isBindExpression","ranges":[{"startOffset":60805,"endOffset":61094,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":61096,"endOffset":61383,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalMemberExpression","ranges":[{"startOffset":61385,"endOffset":61694,"count":244},{"startOffset":61448,"endOffset":61461,"count":12},{"startOffset":61461,"endOffset":61540,"count":232},{"startOffset":61540,"endOffset":61675,"count":0},{"startOffset":61675,"endOffset":61693,"count":232}],"isBlockCoverage":true},{"functionName":"isPipelineTopicExpression","ranges":[{"startOffset":61696,"endOffset":62003,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelineBareFunction","ranges":[{"startOffset":62005,"endOffset":62306,"count":0}],"isBlockCoverage":false},{"functionName":"isPipelinePrimaryTopicReference","ranges":[{"startOffset":62308,"endOffset":62627,"count":0}],"isBlockCoverage":false},{"functionName":"isOptionalCallExpression","ranges":[{"startOffset":62629,"endOffset":62934,"count":183},{"startOffset":62690,"endOffset":62703,"count":12},{"startOffset":62703,"endOffset":62780,"count":171},{"startOffset":62780,"endOffset":62915,"count":0},{"startOffset":62915,"endOffset":62933,"count":171}],"isBlockCoverage":true},{"functionName":"isClassPrivateProperty","ranges":[{"startOffset":62936,"endOffset":63237,"count":0}],"isBlockCoverage":false},{"functionName":"isClassPrivateMethod","ranges":[{"startOffset":63239,"endOffset":63536,"count":0}],"isBlockCoverage":false},{"functionName":"isImport","ranges":[{"startOffset":63538,"endOffset":63811,"count":0}],"isBlockCoverage":false},{"functionName":"isImportAttribute","ranges":[{"startOffset":63813,"endOffset":64104,"count":0}],"isBlockCoverage":false},{"functionName":"isDecorator","ranges":[{"startOffset":64106,"endOffset":64385,"count":0}],"isBlockCoverage":false},{"functionName":"isDoExpression","ranges":[{"startOffset":64387,"endOffset":64672,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":64674,"endOffset":64979,"count":0}],"isBlockCoverage":false},{"functionName":"isExportNamespaceSpecifier","ranges":[{"startOffset":64981,"endOffset":65290,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivateName","ranges":[{"startOffset":65292,"endOffset":65575,"count":0}],"isBlockCoverage":false},{"functionName":"isBigIntLiteral","ranges":[{"startOffset":65577,"endOffset":65864,"count":0}],"isBlockCoverage":false},{"functionName":"isRecordExpression","ranges":[{"startOffset":65866,"endOffset":66159,"count":0}],"isBlockCoverage":false},{"functionName":"isTupleExpression","ranges":[{"startOffset":66161,"endOffset":66452,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParameterProperty","ranges":[{"startOffset":66454,"endOffset":66753,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareFunction","ranges":[{"startOffset":66755,"endOffset":67050,"count":0}],"isBlockCoverage":false},{"functionName":"isTSDeclareMethod","ranges":[{"startOffset":67052,"endOffset":67343,"count":0}],"isBlockCoverage":false},{"functionName":"isTSQualifiedName","ranges":[{"startOffset":67345,"endOffset":67636,"count":0}],"isBlockCoverage":false},{"functionName":"isTSCallSignatureDeclaration","ranges":[{"startOffset":67638,"endOffset":67951,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructSignatureDeclaration","ranges":[{"startOffset":67953,"endOffset":68276,"count":0}],"isBlockCoverage":false},{"functionName":"isTSPropertySignature","ranges":[{"startOffset":68278,"endOffset":68577,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMethodSignature","ranges":[{"startOffset":68579,"endOffset":68874,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexSignature","ranges":[{"startOffset":68876,"endOffset":69169,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAnyKeyword","ranges":[{"startOffset":69171,"endOffset":69456,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBooleanKeyword","ranges":[{"startOffset":69458,"endOffset":69751,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBigIntKeyword","ranges":[{"startOffset":69753,"endOffset":70044,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNeverKeyword","ranges":[{"startOffset":70046,"endOffset":70335,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNullKeyword","ranges":[{"startOffset":70337,"endOffset":70624,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNumberKeyword","ranges":[{"startOffset":70626,"endOffset":70917,"count":0}],"isBlockCoverage":false},{"functionName":"isTSObjectKeyword","ranges":[{"startOffset":70919,"endOffset":71210,"count":0}],"isBlockCoverage":false},{"functionName":"isTSStringKeyword","ranges":[{"startOffset":71212,"endOffset":71503,"count":0}],"isBlockCoverage":false},{"functionName":"isTSSymbolKeyword","ranges":[{"startOffset":71505,"endOffset":71796,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUndefinedKeyword","ranges":[{"startOffset":71798,"endOffset":72095,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnknownKeyword","ranges":[{"startOffset":72097,"endOffset":72390,"count":0}],"isBlockCoverage":false},{"functionName":"isTSVoidKeyword","ranges":[{"startOffset":72392,"endOffset":72679,"count":0}],"isBlockCoverage":false},{"functionName":"isTSThisType","ranges":[{"startOffset":72681,"endOffset":72962,"count":0}],"isBlockCoverage":false},{"functionName":"isTSFunctionType","ranges":[{"startOffset":72964,"endOffset":73253,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConstructorType","ranges":[{"startOffset":73255,"endOffset":73550,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeReference","ranges":[{"startOffset":73552,"endOffset":73843,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypePredicate","ranges":[{"startOffset":73845,"endOffset":74136,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeQuery","ranges":[{"startOffset":74138,"endOffset":74421,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeLiteral","ranges":[{"startOffset":74423,"endOffset":74710,"count":0}],"isBlockCoverage":false},{"functionName":"isTSArrayType","ranges":[{"startOffset":74712,"endOffset":74995,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTupleType","ranges":[{"startOffset":74997,"endOffset":75280,"count":0}],"isBlockCoverage":false},{"functionName":"isTSOptionalType","ranges":[{"startOffset":75282,"endOffset":75571,"count":0}],"isBlockCoverage":false},{"functionName":"isTSRestType","ranges":[{"startOffset":75573,"endOffset":75854,"count":0}],"isBlockCoverage":false},{"functionName":"isTSUnionType","ranges":[{"startOffset":75856,"endOffset":76139,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIntersectionType","ranges":[{"startOffset":76141,"endOffset":76438,"count":0}],"isBlockCoverage":false},{"functionName":"isTSConditionalType","ranges":[{"startOffset":76440,"endOffset":76735,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInferType","ranges":[{"startOffset":76737,"endOffset":77020,"count":0}],"isBlockCoverage":false},{"functionName":"isTSParenthesizedType","ranges":[{"startOffset":77022,"endOffset":77321,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeOperator","ranges":[{"startOffset":77323,"endOffset":77612,"count":0}],"isBlockCoverage":false},{"functionName":"isTSIndexedAccessType","ranges":[{"startOffset":77614,"endOffset":77913,"count":0}],"isBlockCoverage":false},{"functionName":"isTSMappedType","ranges":[{"startOffset":77915,"endOffset":78200,"count":0}],"isBlockCoverage":false},{"functionName":"isTSLiteralType","ranges":[{"startOffset":78202,"endOffset":78489,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExpressionWithTypeArguments","ranges":[{"startOffset":78491,"endOffset":78810,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceDeclaration","ranges":[{"startOffset":78812,"endOffset":79117,"count":0}],"isBlockCoverage":false},{"functionName":"isTSInterfaceBody","ranges":[{"startOffset":79119,"endOffset":79410,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAliasDeclaration","ranges":[{"startOffset":79412,"endOffset":79717,"count":0}],"isBlockCoverage":false},{"functionName":"isTSAsExpression","ranges":[{"startOffset":79719,"endOffset":80008,"count":30},{"startOffset":79772,"endOffset":79785,"count":0},{"startOffset":79854,"endOffset":79989,"count":0}],"isBlockCoverage":true},{"functionName":"isTSTypeAssertion","ranges":[{"startOffset":80010,"endOffset":80301,"count":30},{"startOffset":80064,"endOffset":80077,"count":0},{"startOffset":80147,"endOffset":80282,"count":0}],"isBlockCoverage":true},{"functionName":"isTSEnumDeclaration","ranges":[{"startOffset":80303,"endOffset":80598,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEnumMember","ranges":[{"startOffset":80600,"endOffset":80885,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleDeclaration","ranges":[{"startOffset":80887,"endOffset":81186,"count":0}],"isBlockCoverage":false},{"functionName":"isTSModuleBlock","ranges":[{"startOffset":81188,"endOffset":81475,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportType","ranges":[{"startOffset":81477,"endOffset":81762,"count":0}],"isBlockCoverage":false},{"functionName":"isTSImportEqualsDeclaration","ranges":[{"startOffset":81764,"endOffset":82075,"count":0}],"isBlockCoverage":false},{"functionName":"isTSExternalModuleReference","ranges":[{"startOffset":82077,"endOffset":82388,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNonNullExpression","ranges":[{"startOffset":82390,"endOffset":82689,"count":81},{"startOffset":82448,"endOffset":82461,"count":0},{"startOffset":82535,"endOffset":82670,"count":0}],"isBlockCoverage":true},{"functionName":"isTSExportAssignment","ranges":[{"startOffset":82691,"endOffset":82988,"count":0}],"isBlockCoverage":false},{"functionName":"isTSNamespaceExportDeclaration","ranges":[{"startOffset":82990,"endOffset":83307,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeAnnotation","ranges":[{"startOffset":83309,"endOffset":83602,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterInstantiation","ranges":[{"startOffset":83604,"endOffset":83921,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameterDeclaration","ranges":[{"startOffset":83923,"endOffset":84236,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeParameter","ranges":[{"startOffset":84238,"endOffset":84529,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":84531,"endOffset":86486,"count":3},{"startOffset":84580,"endOffset":84593,"count":0},{"startOffset":84838,"endOffset":84874,"count":1},{"startOffset":84875,"endOffset":84903,"count":1},{"startOffset":84904,"endOffset":84935,"count":1},{"startOffset":84936,"endOffset":84968,"count":1},{"startOffset":84969,"endOffset":84998,"count":1},{"startOffset":84999,"endOffset":85031,"count":1},{"startOffset":85032,"endOffset":85063,"count":1},{"startOffset":85064,"endOffset":85099,"count":1},{"startOffset":85100,"endOffset":85134,"count":1},{"startOffset":85135,"endOffset":85166,"count":1},{"startOffset":85167,"endOffset":85201,"count":1},{"startOffset":85202,"endOffset":85238,"count":1},{"startOffset":85239,"endOffset":85280,"count":1},{"startOffset":85281,"endOffset":85313,"count":1},{"startOffset":85314,"endOffset":85347,"count":1},{"startOffset":85348,"endOffset":85382,"count":1},{"startOffset":85383,"endOffset":85424,"count":1},{"startOffset":85425,"endOffset":85458,"count":1},{"startOffset":85459,"endOffset":85489,"count":1},{"startOffset":85490,"endOffset":85513,"count":1},{"startOffset":85514,"endOffset":85556,"count":1},{"startOffset":85557,"endOffset":85590,"count":1},{"startOffset":85591,"endOffset":85624,"count":1},{"startOffset":85625,"endOffset":85661,"count":1},{"startOffset":85662,"endOffset":85690,"count":1},{"startOffset":85691,"endOffset":85720,"count":1},{"startOffset":85721,"endOffset":85754,"count":1},{"startOffset":85755,"endOffset":85787,"count":1},{"startOffset":85788,"endOffset":85830,"count":1},{"startOffset":85831,"endOffset":85878,"count":1},{"startOffset":85879,"endOffset":85919,"count":1},{"startOffset":85920,"endOffset":85944,"count":1},{"startOffset":85945,"endOffset":85975,"count":1},{"startOffset":85976,"endOffset":86007,"count":1},{"startOffset":86008,"endOffset":86042,"count":1},{"startOffset":86043,"endOffset":86076,"count":1},{"startOffset":86077,"endOffset":86109,"count":1},{"startOffset":86110,"endOffset":86143,"count":1},{"startOffset":86144,"endOffset":86181,"count":1},{"startOffset":86182,"endOffset":86330,"count":1},{"startOffset":86212,"endOffset":86330,"count":0},{"startOffset":86332,"endOffset":86467,"count":2},{"startOffset":86397,"endOffset":86463,"count":0},{"startOffset":86467,"endOffset":86485,"count":1}],"isBlockCoverage":true},{"functionName":"isBinary","ranges":[{"startOffset":86488,"endOffset":86832,"count":317},{"startOffset":86533,"endOffset":86546,"count":68},{"startOffset":86546,"endOffset":86640,"count":249},{"startOffset":86641,"endOffset":86676,"count":208},{"startOffset":86678,"endOffset":86813,"count":54},{"startOffset":86717,"endOffset":86743,"count":53},{"startOffset":86743,"endOffset":86809,"count":1},{"startOffset":86813,"endOffset":86831,"count":195}],"isBlockCoverage":true},{"functionName":"isScopable","ranges":[{"startOffset":86834,"endOffset":87787,"count":7595},{"startOffset":86881,"endOffset":86894,"count":7},{"startOffset":86894,"endOffset":86988,"count":7588},{"startOffset":86989,"endOffset":87018,"count":7362},{"startOffset":87019,"endOffset":87053,"count":7314},{"startOffset":87054,"endOffset":87086,"count":7314},{"startOffset":87087,"endOffset":87117,"count":7314},{"startOffset":87118,"endOffset":87155,"count":7206},{"startOffset":87156,"endOffset":87192,"count":6515},{"startOffset":87193,"endOffset":87218,"count":6477},{"startOffset":87219,"endOffset":87249,"count":6240},{"startOffset":87250,"endOffset":87283,"count":6240},{"startOffset":87284,"endOffset":87316,"count":6221},{"startOffset":87317,"endOffset":87358,"count":6221},{"startOffset":87359,"endOffset":87392,"count":6221},{"startOffset":87393,"endOffset":87427,"count":6221},{"startOffset":87428,"endOffset":87460,"count":6221},{"startOffset":87461,"endOffset":87490,"count":6221},{"startOffset":87491,"endOffset":87527,"count":6221},{"startOffset":87528,"endOffset":87559,"count":6221},{"startOffset":87560,"endOffset":87631,"count":6221},{"startOffset":87590,"endOffset":87631,"count":0},{"startOffset":87633,"endOffset":87768,"count":1367},{"startOffset":87698,"endOffset":87764,"count":0},{"startOffset":87768,"endOffset":87786,"count":6221}],"isBlockCoverage":true},{"functionName":"isBlockParent","ranges":[{"startOffset":87789,"endOffset":88679,"count":21},{"startOffset":87839,"endOffset":87852,"count":0},{"startOffset":88117,"endOffset":88153,"count":3},{"startOffset":88154,"endOffset":88179,"count":3},{"startOffset":88180,"endOffset":88210,"count":0},{"startOffset":88211,"endOffset":88244,"count":0},{"startOffset":88245,"endOffset":88277,"count":0},{"startOffset":88278,"endOffset":88319,"count":0},{"startOffset":88320,"endOffset":88352,"count":0},{"startOffset":88353,"endOffset":88382,"count":0},{"startOffset":88383,"endOffset":88419,"count":0},{"startOffset":88420,"endOffset":88451,"count":0},{"startOffset":88452,"endOffset":88523,"count":0},{"startOffset":88590,"endOffset":88656,"count":0},{"startOffset":88660,"endOffset":88678,"count":0}],"isBlockCoverage":true},{"functionName":"isBlock","ranges":[{"startOffset":88681,"endOffset":89115,"count":34},{"startOffset":88725,"endOffset":88738,"count":0},{"startOffset":88918,"endOffset":88959,"count":0},{"startOffset":88961,"endOffset":89096,"count":0}],"isBlockCoverage":true},{"functionName":"isStatement","ranges":[{"startOffset":89117,"endOffset":91234,"count":7},{"startOffset":89165,"endOffset":89178,"count":0},{"startOffset":90959,"endOffset":91078,"count":0},{"startOffset":91080,"endOffset":91215,"count":0}],"isBlockCoverage":true},{"functionName":"isTerminatorless","ranges":[{"startOffset":91236,"endOffset":91729,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionStatement","ranges":[{"startOffset":91731,"endOffset":92166,"count":0}],"isBlockCoverage":false},{"functionName":"isConditional","ranges":[{"startOffset":92168,"endOffset":92521,"count":8},{"startOffset":92218,"endOffset":92231,"count":0},{"startOffset":92336,"endOffset":92365,"count":7},{"startOffset":92367,"endOffset":92502,"count":1},{"startOffset":92406,"endOffset":92432,"count":0},{"startOffset":92502,"endOffset":92520,"count":7}],"isBlockCoverage":true},{"functionName":"isLoop","ranges":[{"startOffset":92523,"endOffset":92957,"count":0}],"isBlockCoverage":false},{"functionName":"isWhile","ranges":[{"startOffset":92959,"endOffset":93298,"count":0}],"isBlockCoverage":false},{"functionName":"isExpressionWrapper","ranges":[{"startOffset":93300,"endOffset":93712,"count":0}],"isBlockCoverage":false},{"functionName":"isFor","ranges":[{"startOffset":93714,"endOffset":94078,"count":19},{"startOffset":93756,"endOffset":93769,"count":0},{"startOffset":93924,"endOffset":94059,"count":0}],"isBlockCoverage":true},{"functionName":"isForXStatement","ranges":[{"startOffset":94080,"endOffset":94433,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":94435,"endOffset":94927,"count":1158},{"startOffset":94482,"endOffset":94495,"count":12},{"startOffset":94495,"endOffset":94594,"count":1146},{"startOffset":94595,"endOffset":94631,"count":468},{"startOffset":94632,"endOffset":94662,"count":425},{"startOffset":94663,"endOffset":94704,"count":425},{"startOffset":94705,"endOffset":94734,"count":425},{"startOffset":94735,"endOffset":94771,"count":425},{"startOffset":94773,"endOffset":94908,"count":721},{"startOffset":94812,"endOffset":94838,"count":16},{"startOffset":94838,"endOffset":94904,"count":705},{"startOffset":94908,"endOffset":94926,"count":425}],"isBlockCoverage":true},{"functionName":"isFunctionParent","ranges":[{"startOffset":94929,"endOffset":95433,"count":28},{"startOffset":94982,"endOffset":94995,"count":0},{"startOffset":95101,"endOffset":95137,"count":7},{"startOffset":95138,"endOffset":95168,"count":4},{"startOffset":95169,"endOffset":95210,"count":4},{"startOffset":95211,"endOffset":95240,"count":4},{"startOffset":95241,"endOffset":95277,"count":4},{"startOffset":95279,"endOffset":95414,"count":24},{"startOffset":95344,"endOffset":95410,"count":0},{"startOffset":95414,"endOffset":95432,"count":4}],"isBlockCoverage":true},{"functionName":"isPureish","ranges":[{"startOffset":95435,"endOffset":96090,"count":0}],"isBlockCoverage":false},{"functionName":"isDeclaration","ranges":[{"startOffset":96092,"endOffset":97401,"count":3},{"startOffset":96142,"endOffset":96155,"count":1},{"startOffset":96155,"endOffset":96257,"count":2},{"startOffset":96258,"endOffset":96295,"count":0},{"startOffset":96296,"endOffset":96330,"count":0},{"startOffset":96331,"endOffset":96369,"count":0},{"startOffset":96370,"endOffset":96412,"count":0},{"startOffset":96413,"endOffset":96453,"count":0},{"startOffset":96454,"endOffset":96489,"count":0},{"startOffset":96490,"endOffset":96520,"count":0},{"startOffset":96521,"endOffset":96554,"count":0},{"startOffset":96555,"endOffset":96589,"count":0},{"startOffset":96590,"endOffset":96621,"count":0},{"startOffset":96622,"endOffset":96660,"count":0},{"startOffset":96661,"endOffset":96695,"count":0},{"startOffset":96696,"endOffset":96731,"count":0},{"startOffset":96732,"endOffset":96765,"count":0},{"startOffset":96766,"endOffset":96808,"count":0},{"startOffset":96809,"endOffset":96854,"count":0},{"startOffset":96855,"endOffset":96893,"count":0},{"startOffset":96894,"endOffset":96922,"count":0},{"startOffset":96923,"endOffset":96950,"count":0},{"startOffset":96951,"endOffset":96984,"count":0},{"startOffset":96985,"endOffset":97020,"count":0},{"startOffset":97021,"endOffset":97061,"count":0},{"startOffset":97062,"endOffset":97102,"count":0},{"startOffset":97103,"endOffset":97138,"count":0},{"startOffset":97139,"endOffset":97176,"count":0},{"startOffset":97177,"endOffset":97245,"count":0},{"startOffset":97247,"endOffset":97382,"count":2},{"startOffset":97312,"endOffset":97378,"count":0},{"startOffset":97382,"endOffset":97400,"count":0}],"isBlockCoverage":true},{"functionName":"isPatternLike","ranges":[{"startOffset":97403,"endOffset":97949,"count":0}],"isBlockCoverage":false},{"functionName":"isLVal","ranges":[{"startOffset":97951,"endOffset":98556,"count":0}],"isBlockCoverage":false},{"functionName":"isTSEntityName","ranges":[{"startOffset":98558,"endOffset":98974,"count":0}],"isBlockCoverage":false},{"functionName":"isLiteral","ranges":[{"startOffset":98976,"endOffset":99548,"count":28},{"startOffset":99022,"endOffset":99035,"count":0},{"startOffset":99352,"endOffset":99392,"count":0},{"startOffset":99394,"endOffset":99529,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":99550,"endOffset":100396,"count":0}],"isBlockCoverage":false},{"functionName":"isUserWhitespacable","ranges":[{"startOffset":100398,"endOffset":100955,"count":0}],"isBlockCoverage":false},{"functionName":"isMethod","ranges":[{"startOffset":100957,"endOffset":101328,"count":1},{"startOffset":101002,"endOffset":101015,"count":0},{"startOffset":101174,"endOffset":101309,"count":0}],"isBlockCoverage":true},{"functionName":"isObjectMember","ranges":[{"startOffset":101330,"endOffset":101679,"count":0}],"isBlockCoverage":false},{"functionName":"isProperty","ranges":[{"startOffset":101681,"endOffset":102062,"count":0}],"isBlockCoverage":false},{"functionName":"isUnaryLike","ranges":[{"startOffset":102064,"endOffset":102409,"count":70},{"startOffset":102112,"endOffset":102125,"count":0},{"startOffset":102222,"endOffset":102253,"count":68},{"startOffset":102255,"endOffset":102390,"count":2},{"startOffset":102320,"endOffset":102386,"count":0},{"startOffset":102390,"endOffset":102408,"count":68}],"isBlockCoverage":true},{"functionName":"isPattern","ranges":[{"startOffset":102411,"endOffset":102850,"count":7912},{"startOffset":102457,"endOffset":102470,"count":7},{"startOffset":102470,"endOffset":102566,"count":7905},{"startOffset":102567,"endOffset":102597,"count":7905},{"startOffset":102598,"endOffset":102629,"count":7905},{"startOffset":102630,"endOffset":102694,"count":7905},{"startOffset":102660,"endOffset":102694,"count":0},{"startOffset":102696,"endOffset":102831,"count":0},{"startOffset":102831,"endOffset":102849,"count":7905}],"isBlockCoverage":true},{"functionName":"isClass","ranges":[{"startOffset":102852,"endOffset":103192,"count":0}],"isBlockCoverage":false},{"functionName":"isModuleDeclaration","ranges":[{"startOffset":103194,"endOffset":103648,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDeclaration","ranges":[{"startOffset":103650,"endOffset":104068,"count":277},{"startOffset":103706,"endOffset":103719,"count":0},{"startOffset":103872,"endOffset":103912,"count":274},{"startOffset":103914,"endOffset":104049,"count":4},{"startOffset":103979,"endOffset":104045,"count":0},{"startOffset":104049,"endOffset":104067,"count":273}],"isBlockCoverage":true},{"functionName":"isModuleSpecifier","ranges":[{"startOffset":104070,"endOffset":104597,"count":0}],"isBlockCoverage":false},{"functionName":"isFlow","ranges":[{"startOffset":104599,"endOffset":106929,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowType","ranges":[{"startOffset":106931,"endOffset":108174,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowBaseAnnotation","ranges":[{"startOffset":108176,"endOffset":108860,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowDeclaration","ranges":[{"startOffset":108862,"endOffset":109614,"count":0}],"isBlockCoverage":false},{"functionName":"isFlowPredicate","ranges":[{"startOffset":109616,"endOffset":109975,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumBody","ranges":[{"startOffset":109977,"endOffset":110387,"count":0}],"isBlockCoverage":false},{"functionName":"isEnumMember","ranges":[{"startOffset":110389,"endOffset":110814,"count":0}],"isBlockCoverage":false},{"functionName":"isJSX","ranges":[{"startOffset":110816,"endOffset":111599,"count":0}],"isBlockCoverage":false},{"functionName":"isPrivate","ranges":[{"startOffset":111601,"endOffset":111982,"count":0}],"isBlockCoverage":false},{"functionName":"isTSTypeElement","ranges":[{"startOffset":111984,"endOffset":112475,"count":0}],"isBlockCoverage":false},{"functionName":"isTSType","ranges":[{"startOffset":112477,"endOffset":113889,"count":0}],"isBlockCoverage":false},{"functionName":"isTSBaseType","ranges":[{"startOffset":113891,"endOffset":114638,"count":0}],"isBlockCoverage":false},{"functionName":"isNumberLiteral","ranges":[{"startOffset":114640,"endOffset":115010,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexLiteral","ranges":[{"startOffset":115012,"endOffset":115378,"count":0}],"isBlockCoverage":false},{"functionName":"isRestProperty","ranges":[{"startOffset":115380,"endOffset":115744,"count":0}],"isBlockCoverage":false},{"functionName":"isSpreadProperty","ranges":[{"startOffset":115746,"endOffset":116118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1037","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/utils/shallowEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":310,"count":1}],"isBlockCoverage":true},{"functionName":"shallowEqual","ranges":[{"startOffset":113,"endOffset":310,"count":760},{"startOffset":261,"endOffset":288,"count":6},{"startOffset":292,"endOffset":309,"count":754}],"isBlockCoverage":true}]},{"scriptId":"1038","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/react/isCompatTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"isCompatTag","ranges":[{"startOffset":112,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1039","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/react/buildChildren.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":289,"endOffset":384,"count":1},{"startOffset":363,"endOffset":381,"count":0}],"isBlockCoverage":true},{"functionName":"buildChildren","ranges":[{"startOffset":386,"endOffset":857,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1040","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1060,"count":1}],"isBlockCoverage":true},{"functionName":"cleanJSXElementLiteralChild","ranges":[{"startOffset":183,"endOffset":1060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1041","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45132,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":20042,"endOffset":20137,"count":1},{"startOffset":20116,"endOffset":20134,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":20139,"endOffset":20236,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":20238,"endOffset":20345,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":20347,"endOffset":20446,"count":0}],"isBlockCoverage":false},{"functionName":"InterpreterDirective","ranges":[{"startOffset":20448,"endOffset":20555,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":20557,"endOffset":20642,"count":1}],"isBlockCoverage":true},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":20644,"endOffset":20743,"count":1}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":20745,"endOffset":20840,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement","ranges":[{"startOffset":20842,"endOffset":20937,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":20939,"endOffset":21034,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":21036,"endOffset":21125,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":21127,"endOffset":21236,"count":0}],"isBlockCoverage":false},{"functionName":"ContinueStatement","ranges":[{"startOffset":21238,"endOffset":21339,"count":0}],"isBlockCoverage":false},{"functionName":"DebuggerStatement","ranges":[{"startOffset":21341,"endOffset":21442,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":21444,"endOffset":21543,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":21545,"endOffset":21640,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":21642,"endOffset":21747,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":21749,"endOffset":21824,"count":0}],"isBlockCoverage":false},{"functionName":"ForInStatement","ranges":[{"startOffset":21826,"endOffset":21921,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":21923,"endOffset":22014,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":22016,"endOffset":22121,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":22123,"endOffset":22226,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":22228,"endOffset":22315,"count":8}],"isBlockCoverage":true},{"functionName":"IfStatement","ranges":[{"startOffset":22317,"endOffset":22406,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":22408,"endOffset":22507,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":22509,"endOffset":22602,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":22604,"endOffset":22699,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":22701,"endOffset":22790,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":22792,"endOffset":22887,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":22889,"endOffset":22982,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":22984,"endOffset":23085,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":23087,"endOffset":23186,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":23188,"endOffset":23281,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":23283,"endOffset":23364,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":23366,"endOffset":23465,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectMethod","ranges":[{"startOffset":23467,"endOffset":23558,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":23560,"endOffset":23655,"count":1}],"isBlockCoverage":true},{"functionName":"RestElement","ranges":[{"startOffset":23657,"endOffset":23746,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":23748,"endOffset":23845,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":23847,"endOffset":23950,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":23952,"endOffset":24065,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":24067,"endOffset":24154,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchStatement","ranges":[{"startOffset":24156,"endOffset":24253,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":24255,"endOffset":24350,"count":0}],"isBlockCoverage":false},{"functionName":"ThrowStatement","ranges":[{"startOffset":24352,"endOffset":24447,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":24449,"endOffset":24540,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":24542,"endOffset":24639,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":24641,"endOffset":24740,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":24742,"endOffset":24847,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":24849,"endOffset":24952,"count":0}],"isBlockCoverage":false},{"functionName":"WhileStatement","ranges":[{"startOffset":24954,"endOffset":25049,"count":0}],"isBlockCoverage":false},{"functionName":"WithStatement","ranges":[{"startOffset":25051,"endOffset":25144,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":25146,"endOffset":25247,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPattern","ranges":[{"startOffset":25249,"endOffset":25340,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":25342,"endOffset":25455,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":25457,"endOffset":25542,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":25544,"endOffset":25641,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":25643,"endOffset":25742,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":25744,"endOffset":25851,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":25853,"endOffset":25968,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":25970,"endOffset":26081,"count":1}],"isBlockCoverage":true},{"functionName":"ExportSpecifier","ranges":[{"startOffset":26083,"endOffset":26180,"count":1}],"isBlockCoverage":true},{"functionName":"ForOfStatement","ranges":[{"startOffset":26182,"endOffset":26277,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":26279,"endOffset":26380,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":26382,"endOffset":26493,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":26495,"endOffset":26610,"count":0}],"isBlockCoverage":false},{"functionName":"ImportSpecifier","ranges":[{"startOffset":26612,"endOffset":26709,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":26711,"endOffset":26802,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":26804,"endOffset":26893,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":26895,"endOffset":26988,"count":1}],"isBlockCoverage":true},{"functionName":"SpreadElement","ranges":[{"startOffset":26990,"endOffset":27083,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":27085,"endOffset":27162,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":27164,"endOffset":27279,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":27281,"endOffset":27378,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":27380,"endOffset":27477,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":27479,"endOffset":27576,"count":0}],"isBlockCoverage":false},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":27578,"endOffset":27679,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":27681,"endOffset":27786,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":27788,"endOffset":27897,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":27899,"endOffset":28022,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":28024,"endOffset":28141,"count":0}],"isBlockCoverage":false},{"functionName":"ClassImplements","ranges":[{"startOffset":28143,"endOffset":28240,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":28242,"endOffset":28333,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":28335,"endOffset":28432,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":28434,"endOffset":28533,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":28535,"endOffset":28628,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":28630,"endOffset":28737,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":28739,"endOffset":28838,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":28840,"endOffset":28941,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":28943,"endOffset":29040,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":29042,"endOffset":29157,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":29159,"endOffset":29280,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":29282,"endOffset":29383,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":29385,"endOffset":29492,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":29494,"endOffset":29605,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":29607,"endOffset":29708,"count":0}],"isBlockCoverage":false},{"functionName":"GenericTypeAnnotation","ranges":[{"startOffset":29710,"endOffset":29819,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":29821,"endOffset":29922,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":29924,"endOffset":30023,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":30025,"endOffset":30132,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":30134,"endOffset":30247,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":30249,"endOffset":30368,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":30370,"endOffset":30475,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":30477,"endOffset":30582,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":30584,"endOffset":30695,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteralTypeAnnotation","ranges":[{"startOffset":30697,"endOffset":30818,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":30820,"endOffset":30927,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":30929,"endOffset":31036,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":31038,"endOffset":31149,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":31151,"endOffset":31262,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":31264,"endOffset":31365,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":31367,"endOffset":31470,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":31472,"endOffset":31587,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":31589,"endOffset":31676,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":31678,"endOffset":31791,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteralTypeAnnotation","ranges":[{"startOffset":31793,"endOffset":31914,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":31916,"endOffset":32023,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":32025,"endOffset":32132,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":32134,"endOffset":32237,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":32239,"endOffset":32344,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":32346,"endOffset":32453,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":32455,"endOffset":32540,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":32542,"endOffset":32637,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":32639,"endOffset":32742,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":32744,"endOffset":32837,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterDeclaration","ranges":[{"startOffset":32839,"endOffset":32954,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":32956,"endOffset":33075,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":33077,"endOffset":33182,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":33184,"endOffset":33267,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":33269,"endOffset":33372,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":33374,"endOffset":33471,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":33473,"endOffset":33570,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":33572,"endOffset":33667,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":33669,"endOffset":33764,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":33766,"endOffset":33861,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":33863,"endOffset":33964,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":33966,"endOffset":34065,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":34067,"endOffset":34166,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":34168,"endOffset":34273,"count":0}],"isBlockCoverage":false},{"functionName":"JSXAttribute","ranges":[{"startOffset":34275,"endOffset":34366,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":34368,"endOffset":34469,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":34471,"endOffset":34558,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":34560,"endOffset":34663,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":34665,"endOffset":34776,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":34778,"endOffset":34873,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":34875,"endOffset":34968,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":34970,"endOffset":35075,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":35077,"endOffset":35178,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":35180,"endOffset":35281,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":35283,"endOffset":35386,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":35388,"endOffset":35469,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":35471,"endOffset":35560,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":35562,"endOffset":35665,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":35667,"endOffset":35770,"count":0}],"isBlockCoverage":false},{"functionName":"Noop","ranges":[{"startOffset":35772,"endOffset":35847,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":35849,"endOffset":35938,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":35940,"endOffset":36049,"count":0}],"isBlockCoverage":false},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":36051,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":36158,"endOffset":36255,"count":0}],"isBlockCoverage":false},{"functionName":"BindExpression","ranges":[{"startOffset":36257,"endOffset":36352,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":36354,"endOffset":36447,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":36449,"endOffset":36564,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":36566,"endOffset":36679,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":36681,"endOffset":36788,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":36790,"endOffset":36915,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":36917,"endOffset":37028,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":37030,"endOffset":37137,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":37139,"endOffset":37242,"count":0}],"isBlockCoverage":false},{"functionName":"Import","ranges":[{"startOffset":37244,"endOffset":37323,"count":0}],"isBlockCoverage":false},{"functionName":"ImportAttribute","ranges":[{"startOffset":37325,"endOffset":37422,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":37424,"endOffset":37509,"count":0}],"isBlockCoverage":false},{"functionName":"DoExpression","ranges":[{"startOffset":37511,"endOffset":37602,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":37604,"endOffset":37715,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":37717,"endOffset":37832,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":37834,"endOffset":37923,"count":0}],"isBlockCoverage":false},{"functionName":"BigIntLiteral","ranges":[{"startOffset":37925,"endOffset":38018,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":38020,"endOffset":38119,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":38121,"endOffset":38218,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":38220,"endOffset":38325,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":38327,"endOffset":38428,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":38430,"endOffset":38527,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":38529,"endOffset":38626,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":38628,"endOffset":38747,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":38749,"endOffset":38878,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":38880,"endOffset":38985,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":38987,"endOffset":39088,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":39090,"endOffset":39189,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":39191,"endOffset":39282,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":39284,"endOffset":39383,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":39385,"endOffset":39482,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":39484,"endOffset":39579,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":39581,"endOffset":39674,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":39676,"endOffset":39773,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":39775,"endOffset":39872,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":39874,"endOffset":39971,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":39973,"endOffset":40070,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":40072,"endOffset":40175,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":40177,"endOffset":40276,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":40278,"endOffset":40371,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":40373,"endOffset":40460,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":40462,"endOffset":40557,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":40559,"endOffset":40660,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":40662,"endOffset":40759,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":40761,"endOffset":40858,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":40860,"endOffset":40949,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":40951,"endOffset":41044,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":41046,"endOffset":41135,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":41137,"endOffset":41226,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":41228,"endOffset":41323,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":41325,"endOffset":41412,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":41414,"endOffset":41503,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":41505,"endOffset":41608,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":41610,"endOffset":41711,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":41713,"endOffset":41802,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":41804,"endOffset":41909,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":41911,"endOffset":42006,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":42008,"endOffset":42113,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":42115,"endOffset":42206,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":42208,"endOffset":42301,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":42303,"endOffset":42428,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":42430,"endOffset":42541,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":42543,"endOffset":42640,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":42642,"endOffset":42753,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":42755,"endOffset":42850,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":42852,"endOffset":42949,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":42951,"endOffset":43052,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":43054,"endOffset":43145,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":43147,"endOffset":43252,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":43254,"endOffset":43347,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":43349,"endOffset":43440,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":43442,"endOffset":43559,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":43561,"endOffset":43678,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":43680,"endOffset":43785,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":43787,"endOffset":43890,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":43892,"endOffset":44015,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":44017,"endOffset":44116,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":44118,"endOffset":44241,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterDeclaration","ranges":[{"startOffset":44243,"endOffset":44362,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":44364,"endOffset":44461,"count":0}],"isBlockCoverage":false},{"functionName":"NumberLiteral","ranges":[{"startOffset":44463,"endOffset":44631,"count":0}],"isBlockCoverage":false},{"functionName":"RegexLiteral","ranges":[{"startOffset":44633,"endOffset":44796,"count":0}],"isBlockCoverage":false},{"functionName":"RestProperty","ranges":[{"startOffset":44798,"endOffset":44959,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadProperty","ranges":[{"startOffset":44961,"endOffset":45132,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1042","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1063,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":294,"endOffset":389,"count":2},{"startOffset":362,"endOffset":367,"count":1},{"startOffset":368,"endOffset":386,"count":1}],"isBlockCoverage":true},{"functionName":"builder","ranges":[{"startOffset":391,"endOffset":1063,"count":15},{"startOffset":538,"endOffset":669,"count":0},{"startOffset":990,"endOffset":1045,"count":37}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":730,"endOffset":947,"count":22},{"startOffset":830,"endOffset":844,"count":18},{"startOffset":872,"endOffset":913,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1043","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2539,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":156,"endOffset":205,"count":6732}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":284,"endOffset":331,"count":11}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":418,"endOffset":473,"count":222}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":553,"endOffset":601,"count":94}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":682,"endOffset":731,"count":15}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":815,"endOffset":867,"count":99}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":959,"endOffset":1019,"count":53}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1100,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1243,"endOffset":1305,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1400,"endOffset":1470,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1817,"endOffset":1912,"count":1},{"startOffset":1885,"endOffset":1890,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1044","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/to-fast-properties/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1001,"count":1}],"isBlockCoverage":true},{"functionName":"FastObject","ranges":[{"startOffset":349,"endOffset":856,"count":18},{"startOffset":635,"endOffset":663,"count":9},{"startOffset":665,"endOffset":804,"count":9},{"startOffset":804,"endOffset":825,"count":1},{"startOffset":826,"endOffset":829,"count":8}],"isBlockCoverage":true},{"functionName":"toFastproperties","ranges":[{"startOffset":944,"endOffset":999,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1045","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28709,"count":1},{"startOffset":1884,"endOffset":1895,"count":0},{"startOffset":2626,"endOffset":2721,"count":0},{"startOffset":5651,"endOffset":5655,"count":0},{"startOffset":7948,"endOffset":8031,"count":0},{"startOffset":8505,"endOffset":8623,"count":0},{"startOffset":17391,"endOffset":17395,"count":0},{"startOffset":19011,"endOffset":19015,"count":0},{"startOffset":20203,"endOffset":20207,"count":0},{"startOffset":22612,"endOffset":22685,"count":0},{"startOffset":26264,"endOffset":26326,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":558,"endOffset":744,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":746,"endOffset":1489,"count":1},{"startOffset":828,"endOffset":901,"count":0},{"startOffset":903,"endOffset":999,"count":0},{"startOffset":1001,"endOffset":1129,"count":0},{"startOffset":1152,"endOffset":1488,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1491,"endOffset":1586,"count":2},{"startOffset":1565,"endOffset":1583,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2515,"count":1},{"startOffset":2182,"endOffset":2514,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2341,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3131,"endOffset":3567,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":3319,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"fields.comments.validate.process.env.BABEL_TYPES_8_BREAKING.Object.assign.each.oneOfNodeTypes","ranges":[{"startOffset":7843,"endOffset":7851,"count":0}],"isBlockCoverage":false},{"functionName":"fields.tokens.validate.Object.assign.type","ranges":[{"startOffset":8128,"endOffset":8136,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10871,"endOffset":11180,"count":1},{"startOffset":10946,"endOffset":11179,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10937,"endOffset":10945,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11023,"endOffset":11175,"count":0}],"isBlockCoverage":false},{"functionName":"fields.Object.assign.name.validate.Object.assign.type","ranges":[{"startOffset":12302,"endOffset":12539,"count":8},{"startOffset":12386,"endOffset":12531,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":12691,"endOffset":13892,"count":15},{"startOffset":12773,"endOffset":13783,"count":0},{"startOffset":13785,"endOffset":13808,"count":0},{"startOffset":13810,"endOffset":13888,"count":0}],"isBlockCoverage":true},{"functionName":"fields.flags.validate.Object.assign.type","ranges":[{"startOffset":15704,"endOffset":15954,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16751,"endOffset":17192,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":16939,"endOffset":17076,"count":1},{"startOffset":17009,"endOffset":17019,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19089,"endOffset":19570,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":19297,"endOffset":19434,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20294,"endOffset":20775,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":20502,"endOffset":20639,"count":1},{"startOffset":20572,"endOffset":20582,"count":0}],"isBlockCoverage":true},{"functionName":"fields.shorthand.validate.Object.assign.type","ranges":[{"startOffset":20982,"endOffset":21227,"count":1},{"startOffset":21066,"endOffset":21100,"count":0},{"startOffset":21102,"endOffset":21219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21265,"endOffset":21546,"count":1},{"startOffset":21349,"endOffset":21411,"count":0},{"startOffset":21413,"endOffset":21538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21882,"endOffset":22275,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22045,"endOffset":22270,"count":1},{"startOffset":22130,"endOffset":22206,"count":0},{"startOffset":22207,"endOffset":22219,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":22701,"endOffset":23068,"count":0}],"isBlockCoverage":false},{"functionName":"fields.block.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":25108,"endOffset":25343,"count":0}],"isBlockCoverage":false},{"functionName":"validate","ranges":[{"startOffset":27013,"endOffset":27354,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27469,"endOffset":27918,"count":1},{"startOffset":27596,"endOffset":27917,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27777,"endOffset":27909,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1046","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/is.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":916,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":371,"endOffset":466,"count":3},{"startOffset":445,"endOffset":463,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":468,"endOffset":916,"count":15},{"startOffset":513,"endOffset":526,"count":0},{"startOffset":601,"endOffset":793,"count":1},{"startOffset":648,"endOffset":690,"count":0},{"startOffset":692,"endOffset":770,"count":0},{"startOffset":793,"endOffset":852,"count":14},{"startOffset":852,"endOffset":914,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1047","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":154,"endOffset":529,"count":18},{"startOffset":225,"endOffset":237,"count":7},{"startOffset":237,"endOffset":281,"count":11},{"startOffset":281,"endOffset":294,"count":1},{"startOffset":294,"endOffset":510,"count":10},{"startOffset":409,"endOffset":421,"count":0},{"startOffset":456,"endOffset":506,"count":164},{"startOffset":488,"endOffset":500,"count":8},{"startOffset":506,"endOffset":510,"count":2},{"startOffset":510,"endOffset":528,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1048","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isPlaceholderType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"isPlaceholderType","ranges":[{"startOffset":165,"endOffset":468,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1049","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isValidIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"isValidIdentifier","ranges":[{"startOffset":199,"endOffset":589,"count":3},{"startOffset":283,"endOffset":296,"count":0},{"startOffset":372,"endOffset":433,"count":2},{"startOffset":435,"endOffset":462,"count":1},{"startOffset":462,"endOffset":517,"count":2},{"startOffset":490,"endOffset":517,"count":0},{"startOffset":521,"endOffset":588,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1050","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-validator-identifier/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1322,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":160,"endOffset":218,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":303,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":447,"endOffset":506,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":589,"endOffset":642,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":739,"endOffset":806,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":899,"endOffset":962,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1051,"endOffset":1110,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1188,"endOffset":1236,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1051","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-validator-identifier/lib/identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11642,"count":1}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":10182,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":10435,"endOffset":10780,"count":2},{"startOffset":10487,"endOffset":10506,"count":0},{"startOffset":10525,"endOffset":10537,"count":0},{"startOffset":10555,"endOffset":10574,"count":0},{"startOffset":10606,"endOffset":10779,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":10782,"endOffset":11228,"count":12},{"startOffset":10833,"endOffset":10852,"count":2},{"startOffset":10852,"endOffset":10870,"count":10},{"startOffset":10870,"endOffset":10882,"count":0},{"startOffset":10882,"endOffset":10900,"count":10},{"startOffset":10900,"endOffset":10913,"count":0},{"startOffset":10913,"endOffset":10932,"count":10},{"startOffset":10932,"endOffset":10944,"count":0},{"startOffset":10944,"endOffset":10962,"count":10},{"startOffset":10962,"endOffset":10981,"count":0},{"startOffset":10981,"endOffset":11013,"count":10},{"startOffset":11013,"endOffset":11225,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierName","ranges":[{"startOffset":11230,"endOffset":11642,"count":2},{"startOffset":11369,"endOffset":11620,"count":14},{"startOffset":11459,"endOffset":11556,"count":2},{"startOffset":11495,"endOffset":11526,"count":0},{"startOffset":11556,"endOffset":11616,"count":12},{"startOffset":11589,"endOffset":11616,"count":2},{"startOffset":11620,"endOffset":11641,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1052","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-validator-identifier/lib/keyword.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":1020,"endOffset":1121,"count":2},{"startOffset":1080,"endOffset":1099,"count":0}],"isBlockCoverage":true},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":1123,"endOffset":1249,"count":2}],"isBlockCoverage":true},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":1251,"endOffset":1345,"count":0}],"isBlockCoverage":false},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":1347,"endOffset":1485,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":1487,"endOffset":1544,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1053","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/constants/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2238,"endOffset":2252,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2280,"endOffset":2294,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1054","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8173,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1041,"endOffset":1136,"count":1},{"startOffset":1115,"endOffset":1133,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1624,"endOffset":1783,"count":27},{"startOffset":1674,"endOffset":1699,"count":3},{"startOffset":1699,"endOffset":1781,"count":24},{"startOffset":1723,"endOffset":1747,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":1785,"endOffset":1845,"count":130}],"isBlockCoverage":true},{"functionName":"typeIs","ranges":[{"startOffset":1847,"endOffset":1972,"count":164},{"startOffset":1913,"endOffset":1939,"count":147},{"startOffset":1940,"endOffset":1969,"count":17}],"isBlockCoverage":true},{"functionName":"validateType","ranges":[{"startOffset":1974,"endOffset":2046,"count":91}],"isBlockCoverage":true},{"functionName":"validateOptional","ranges":[{"startOffset":2048,"endOffset":2136,"count":33}],"isBlockCoverage":true},{"functionName":"validateOptionalType","ranges":[{"startOffset":2138,"endOffset":2248,"count":39}],"isBlockCoverage":true},{"functionName":"arrayOf","ranges":[{"startOffset":2250,"endOffset":2350,"count":34}],"isBlockCoverage":true},{"functionName":"arrayOfType","ranges":[{"startOffset":2352,"endOffset":2422,"count":34}],"isBlockCoverage":true},{"functionName":"validateArrayOfType","ranges":[{"startOffset":2424,"endOffset":2508,"count":12}],"isBlockCoverage":true},{"functionName":"assertEach","ranges":[{"startOffset":2510,"endOffset":2910,"count":74}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":2544,"endOffset":2858,"count":3},{"startOffset":2610,"endOffset":2617,"count":0},{"startOffset":2660,"endOffset":2854,"count":5},{"startOffset":2802,"endOffset":2848,"count":0}],"isBlockCoverage":true},{"functionName":"assertOneOf","ranges":[{"startOffset":2912,"endOffset":3208,"count":21}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2948,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"assertNodeType","ranges":[{"startOffset":3210,"endOffset":3684,"count":358}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3248,"endOffset":3627,"count":14},{"startOffset":3314,"endOffset":3440,"count":15},{"startOffset":3355,"endOffset":3434,"count":14},{"startOffset":3440,"endOffset":3607,"count":0},{"startOffset":3608,"endOffset":3618,"count":0}],"isBlockCoverage":true},{"functionName":"assertNodeOrValueType","ranges":[{"startOffset":3686,"endOffset":4199,"count":2}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":3731,"endOffset":4135,"count":0}],"isBlockCoverage":false},{"functionName":"assertValueType","ranges":[{"startOffset":4201,"endOffset":4482,"count":143}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4236,"endOffset":4436,"count":14},{"startOffset":4330,"endOffset":4432,"count":0}],"isBlockCoverage":true},{"functionName":"assertShape","ranges":[{"startOffset":4484,"endOffset":5094,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":4516,"endOffset":5044,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalChainStart","ranges":[{"startOffset":5096,"endOffset":5819,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":5821,"endOffset":5981,"count":82}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":5848,"endOffset":5933,"count":12},{"startOffset":5903,"endOffset":5929,"count":25}],"isBlockCoverage":true},{"functionName":"defineType","ranges":[{"startOffset":6154,"endOffset":8154,"count":238},{"startOffset":6226,"endOffset":6249,"count":3},{"startOffset":6250,"endOffset":6255,"count":235},{"startOffset":6301,"endOffset":6646,"count":25},{"startOffset":6346,"endOffset":6642,"count":1},{"startOffset":6443,"endOffset":6636,"count":5},{"startOffset":6679,"endOffset":6698,"count":41},{"startOffset":6699,"endOffset":6704,"count":38},{"startOffset":6737,"endOffset":6756,"count":25},{"startOffset":6757,"endOffset":6762,"count":24},{"startOffset":6795,"endOffset":6814,"count":177},{"startOffset":6815,"endOffset":6830,"count":174},{"startOffset":6831,"endOffset":6836,"count":23},{"startOffset":6876,"endOffset":6994,"count":697},{"startOffset":6919,"endOffset":6990,"count":0},{"startOffset":7024,"endOffset":7079,"count":4},{"startOffset":7126,"endOffset":7168,"count":807},{"startOffset":7158,"endOffset":7163,"count":0},{"startOffset":7211,"endOffset":7724,"count":540},{"startOffset":7281,"endOffset":7311,"count":111},{"startOffset":7313,"endOffset":7349,"count":45},{"startOffset":7388,"endOffset":7423,"count":429},{"startOffset":7423,"endOffset":7546,"count":111},{"startOffset":7449,"endOffset":7473,"count":13},{"startOffset":7475,"endOffset":7546,"count":13},{"startOffset":7588,"endOffset":7720,"count":1290},{"startOffset":7634,"endOffset":7714,"count":0},{"startOffset":8073,"endOffset":8129,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7927,"endOffset":8048,"count":457},{"startOffset":7996,"endOffset":8001,"count":45}],"isBlockCoverage":true}]},{"scriptId":"1055","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/validate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":850,"count":1}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":234,"endOffset":471,"count":42},{"startOffset":283,"endOffset":290,"count":0},{"startOffset":360,"endOffset":367,"count":0}],"isBlockCoverage":true},{"functionName":"validateField","ranges":[{"startOffset":473,"endOffset":659,"count":42},{"startOffset":543,"endOffset":551,"count":16},{"startOffset":552,"endOffset":568,"count":26},{"startOffset":571,"endOffset":578,"count":16},{"startOffset":578,"endOffset":600,"count":26},{"startOffset":600,"endOffset":614,"count":3},{"startOffset":616,"endOffset":623,"count":3},{"startOffset":623,"endOffset":658,"count":23}],"isBlockCoverage":true},{"functionName":"validateChild","ranges":[{"startOffset":661,"endOffset":850,"count":56},{"startOffset":721,"endOffset":728,"count":3},{"startOffset":728,"endOffset":813,"count":53},{"startOffset":813,"endOffset":820,"count":37},{"startOffset":820,"endOffset":849,"count":16}],"isBlockCoverage":true}]},{"scriptId":"1056","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/es2015.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17419,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":420,"count":1},{"startOffset":399,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":422,"endOffset":608,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":610,"endOffset":1353,"count":1},{"startOffset":692,"endOffset":765,"count":0},{"startOffset":767,"endOffset":863,"count":0},{"startOffset":865,"endOffset":993,"count":0},{"startOffset":1016,"endOffset":1352,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6242,"endOffset":6545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6332,"endOffset":6540,"count":0}],"isBlockCoverage":false},{"functionName":"fields.declaration.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":7458,"endOffset":7708,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7762,"endOffset":7975,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8116,"endOffset":8556,"count":1},{"startOffset":8393,"endOffset":8555,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8409,"endOffset":8547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9299,"endOffset":9875,"count":1},{"startOffset":9449,"endOffset":9874,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9661,"endOffset":9866,"count":0}],"isBlockCoverage":false},{"functionName":"fields.meta.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":11661,"endOffset":12213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12813,"endOffset":13141,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13003,"endOffset":13134,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16428,"endOffset":16714,"count":0}],"isBlockCoverage":false},{"functionName":"fields.delegate.validate.Object.assign.type","ranges":[{"startOffset":16994,"endOffset":17244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1057","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16829,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true},{"functionName":"defineInterfaceishType","ranges":[{"startOffset":1038,"endOffset":1822,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1058","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5531,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":74,"endOffset":260,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":262,"endOffset":1005,"count":1},{"startOffset":344,"endOffset":417,"count":0},{"startOffset":419,"endOffset":515,"count":0},{"startOffset":517,"endOffset":645,"count":0},{"startOffset":668,"endOffset":1004,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1059","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1544,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":122,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":310,"endOffset":1053,"count":1},{"startOffset":392,"endOffset":465,"count":0},{"startOffset":467,"endOffset":563,"count":0},{"startOffset":565,"endOffset":693,"count":0},{"startOffset":716,"endOffset":1052,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1060","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/placeholders.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1078,"count":1},{"startOffset":567,"endOffset":690,"count":8},{"startOffset":630,"endOffset":638,"count":4},{"startOffset":639,"endOffset":653,"count":4},{"startOffset":655,"endOffset":688,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":836,"endOffset":1076,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":881,"endOffset":1072,"count":15},{"startOffset":964,"endOffset":1017,"count":11}],"isBlockCoverage":true}]},{"scriptId":"1061","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/experimental.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8461,"count":1},{"startOffset":1729,"endOffset":1891,"count":0},{"startOffset":3764,"endOffset":3863,"count":0},{"startOffset":4949,"endOffset":5048,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":138,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":326,"endOffset":1069,"count":1},{"startOffset":408,"endOffset":481,"count":0},{"startOffset":483,"endOffset":579,"count":0},{"startOffset":581,"endOffset":709,"count":0},{"startOffset":732,"endOffset":1068,"count":0}],"isBlockCoverage":true},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.object.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1548,"endOffset":1556,"count":0}],"isBlockCoverage":false},{"functionName":"fields.process.env.BABEL_TYPES_8_BREAKING.callee.validate.Object.assign.oneOfNodeTypes","ranges":[{"startOffset":1659,"endOffset":1667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3190,"endOffset":3601,"count":1}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":3363,"endOffset":3500,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1062","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/definitions/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14113,"count":1},{"startOffset":4531,"endOffset":4641,"count":12}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":138,"endOffset":324,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":326,"endOffset":1069,"count":1},{"startOffset":408,"endOffset":481,"count":0},{"startOffset":483,"endOffset":579,"count":0},{"startOffset":581,"endOffset":709,"count":0},{"startOffset":732,"endOffset":1068,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1063","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/asserts/assertNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":183,"endOffset":278,"count":1},{"startOffset":257,"endOffset":275,"count":0}],"isBlockCoverage":true},{"functionName":"assertNode","ranges":[{"startOffset":280,"endOffset":545,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1064","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"isNode","ranges":[{"startOffset":154,"endOffset":238,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1065","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/asserts/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44094,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":16219,"endOffset":16314,"count":1},{"startOffset":16293,"endOffset":16311,"count":0}],"isBlockCoverage":true},{"functionName":"assert","ranges":[{"startOffset":16316,"endOffset":16524,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayExpression","ranges":[{"startOffset":16526,"endOffset":16618,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentExpression","ranges":[{"startOffset":16620,"endOffset":16722,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinaryExpression","ranges":[{"startOffset":16724,"endOffset":16818,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterpreterDirective","ranges":[{"startOffset":16820,"endOffset":16922,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirective","ranges":[{"startOffset":16924,"endOffset":17004,"count":0}],"isBlockCoverage":false},{"functionName":"assertDirectiveLiteral","ranges":[{"startOffset":17006,"endOffset":17100,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockStatement","ranges":[{"startOffset":17102,"endOffset":17192,"count":0}],"isBlockCoverage":false},{"functionName":"assertBreakStatement","ranges":[{"startOffset":17194,"endOffset":17284,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallExpression","ranges":[{"startOffset":17286,"endOffset":17376,"count":0}],"isBlockCoverage":false},{"functionName":"assertCatchClause","ranges":[{"startOffset":17378,"endOffset":17462,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditionalExpression","ranges":[{"startOffset":17464,"endOffset":17568,"count":0}],"isBlockCoverage":false},{"functionName":"assertContinueStatement","ranges":[{"startOffset":17570,"endOffset":17666,"count":0}],"isBlockCoverage":false},{"functionName":"assertDebuggerStatement","ranges":[{"startOffset":17668,"endOffset":17764,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoWhileStatement","ranges":[{"startOffset":17766,"endOffset":17860,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyStatement","ranges":[{"startOffset":17862,"endOffset":17952,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionStatement","ranges":[{"startOffset":17954,"endOffset":18054,"count":0}],"isBlockCoverage":false},{"functionName":"assertFile","ranges":[{"startOffset":18056,"endOffset":18126,"count":0}],"isBlockCoverage":false},{"functionName":"assertForInStatement","ranges":[{"startOffset":18128,"endOffset":18218,"count":0}],"isBlockCoverage":false},{"functionName":"assertForStatement","ranges":[{"startOffset":18220,"endOffset":18306,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionDeclaration","ranges":[{"startOffset":18308,"endOffset":18408,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionExpression","ranges":[{"startOffset":18410,"endOffset":18508,"count":0}],"isBlockCoverage":false},{"functionName":"assertIdentifier","ranges":[{"startOffset":18510,"endOffset":18592,"count":0}],"isBlockCoverage":false},{"functionName":"assertIfStatement","ranges":[{"startOffset":18594,"endOffset":18678,"count":0}],"isBlockCoverage":false},{"functionName":"assertLabeledStatement","ranges":[{"startOffset":18680,"endOffset":18774,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteral","ranges":[{"startOffset":18776,"endOffset":18864,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumericLiteral","ranges":[{"startOffset":18866,"endOffset":18956,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteral","ranges":[{"startOffset":18958,"endOffset":19042,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteral","ranges":[{"startOffset":19044,"endOffset":19134,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegExpLiteral","ranges":[{"startOffset":19136,"endOffset":19224,"count":0}],"isBlockCoverage":false},{"functionName":"assertLogicalExpression","ranges":[{"startOffset":19226,"endOffset":19322,"count":0}],"isBlockCoverage":false},{"functionName":"assertMemberExpression","ranges":[{"startOffset":19324,"endOffset":19418,"count":0}],"isBlockCoverage":false},{"functionName":"assertNewExpression","ranges":[{"startOffset":19420,"endOffset":19508,"count":0}],"isBlockCoverage":false},{"functionName":"assertProgram","ranges":[{"startOffset":19510,"endOffset":19586,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectExpression","ranges":[{"startOffset":19588,"endOffset":19682,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMethod","ranges":[{"startOffset":19684,"endOffset":19770,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectProperty","ranges":[{"startOffset":19772,"endOffset":19862,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestElement","ranges":[{"startOffset":19864,"endOffset":19948,"count":0}],"isBlockCoverage":false},{"functionName":"assertReturnStatement","ranges":[{"startOffset":19950,"endOffset":20042,"count":0}],"isBlockCoverage":false},{"functionName":"assertSequenceExpression","ranges":[{"startOffset":20044,"endOffset":20142,"count":0}],"isBlockCoverage":false},{"functionName":"assertParenthesizedExpression","ranges":[{"startOffset":20144,"endOffset":20252,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchCase","ranges":[{"startOffset":20254,"endOffset":20336,"count":0}],"isBlockCoverage":false},{"functionName":"assertSwitchStatement","ranges":[{"startOffset":20338,"endOffset":20430,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisExpression","ranges":[{"startOffset":20432,"endOffset":20522,"count":0}],"isBlockCoverage":false},{"functionName":"assertThrowStatement","ranges":[{"startOffset":20524,"endOffset":20614,"count":0}],"isBlockCoverage":false},{"functionName":"assertTryStatement","ranges":[{"startOffset":20616,"endOffset":20702,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryExpression","ranges":[{"startOffset":20704,"endOffset":20796,"count":0}],"isBlockCoverage":false},{"functionName":"assertUpdateExpression","ranges":[{"startOffset":20798,"endOffset":20892,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclaration","ranges":[{"startOffset":20894,"endOffset":20994,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariableDeclarator","ranges":[{"startOffset":20996,"endOffset":21094,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhileStatement","ranges":[{"startOffset":21096,"endOffset":21186,"count":0}],"isBlockCoverage":false},{"functionName":"assertWithStatement","ranges":[{"startOffset":21188,"endOffset":21276,"count":0}],"isBlockCoverage":false},{"functionName":"assertAssignmentPattern","ranges":[{"startOffset":21278,"endOffset":21374,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayPattern","ranges":[{"startOffset":21376,"endOffset":21462,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrowFunctionExpression","ranges":[{"startOffset":21464,"endOffset":21572,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassBody","ranges":[{"startOffset":21574,"endOffset":21654,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassExpression","ranges":[{"startOffset":21656,"endOffset":21748,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassDeclaration","ranges":[{"startOffset":21750,"endOffset":21844,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportAllDeclaration","ranges":[{"startOffset":21846,"endOffset":21948,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultDeclaration","ranges":[{"startOffset":21950,"endOffset":22060,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamedDeclaration","ranges":[{"startOffset":22062,"endOffset":22168,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportSpecifier","ranges":[{"startOffset":22170,"endOffset":22262,"count":0}],"isBlockCoverage":false},{"functionName":"assertForOfStatement","ranges":[{"startOffset":22264,"endOffset":22354,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDeclaration","ranges":[{"startOffset":22356,"endOffset":22452,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportDefaultSpecifier","ranges":[{"startOffset":22454,"endOffset":22560,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportNamespaceSpecifier","ranges":[{"startOffset":22562,"endOffset":22672,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportSpecifier","ranges":[{"startOffset":22674,"endOffset":22766,"count":0}],"isBlockCoverage":false},{"functionName":"assertMetaProperty","ranges":[{"startOffset":22768,"endOffset":22854,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassMethod","ranges":[{"startOffset":22856,"endOffset":22940,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectPattern","ranges":[{"startOffset":22942,"endOffset":23030,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadElement","ranges":[{"startOffset":23032,"endOffset":23120,"count":0}],"isBlockCoverage":false},{"functionName":"assertSuper","ranges":[{"startOffset":23122,"endOffset":23194,"count":0}],"isBlockCoverage":false},{"functionName":"assertTaggedTemplateExpression","ranges":[{"startOffset":23196,"endOffset":23306,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateElement","ranges":[{"startOffset":23308,"endOffset":23400,"count":0}],"isBlockCoverage":false},{"functionName":"assertTemplateLiteral","ranges":[{"startOffset":23402,"endOffset":23494,"count":0}],"isBlockCoverage":false},{"functionName":"assertYieldExpression","ranges":[{"startOffset":23496,"endOffset":23588,"count":0}],"isBlockCoverage":false},{"functionName":"assertAnyTypeAnnotation","ranges":[{"startOffset":23590,"endOffset":23686,"count":0}],"isBlockCoverage":false},{"functionName":"assertArrayTypeAnnotation","ranges":[{"startOffset":23688,"endOffset":23788,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanTypeAnnotation","ranges":[{"startOffset":23790,"endOffset":23894,"count":0}],"isBlockCoverage":false},{"functionName":"assertBooleanLiteralTypeAnnotation","ranges":[{"startOffset":23896,"endOffset":24014,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullLiteralTypeAnnotation","ranges":[{"startOffset":24016,"endOffset":24128,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassImplements","ranges":[{"startOffset":24130,"endOffset":24222,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareClass","ranges":[{"startOffset":24224,"endOffset":24310,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareFunction","ranges":[{"startOffset":24312,"endOffset":24404,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareInterface","ranges":[{"startOffset":24406,"endOffset":24500,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModule","ranges":[{"startOffset":24502,"endOffset":24590,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareModuleExports","ranges":[{"startOffset":24592,"endOffset":24694,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareTypeAlias","ranges":[{"startOffset":24696,"endOffset":24790,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareOpaqueType","ranges":[{"startOffset":24792,"endOffset":24888,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareVariable","ranges":[{"startOffset":24890,"endOffset":24982,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportDeclaration","ranges":[{"startOffset":24984,"endOffset":25094,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclareExportAllDeclaration","ranges":[{"startOffset":25096,"endOffset":25212,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaredPredicate","ranges":[{"startOffset":25214,"endOffset":25310,"count":0}],"isBlockCoverage":false},{"functionName":"assertExistsTypeAnnotation","ranges":[{"startOffset":25312,"endOffset":25414,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeAnnotation","ranges":[{"startOffset":25416,"endOffset":25522,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionTypeParam","ranges":[{"startOffset":25524,"endOffset":25620,"count":0}],"isBlockCoverage":false},{"functionName":"assertGenericTypeAnnotation","ranges":[{"startOffset":25622,"endOffset":25726,"count":0}],"isBlockCoverage":false},{"functionName":"assertInferredPredicate","ranges":[{"startOffset":25728,"endOffset":25824,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceExtends","ranges":[{"startOffset":25826,"endOffset":25920,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceDeclaration","ranges":[{"startOffset":25922,"endOffset":26024,"count":0}],"isBlockCoverage":false},{"functionName":"assertInterfaceTypeAnnotation","ranges":[{"startOffset":26026,"endOffset":26134,"count":0}],"isBlockCoverage":false},{"functionName":"assertIntersectionTypeAnnotation","ranges":[{"startOffset":26136,"endOffset":26250,"count":0}],"isBlockCoverage":false},{"functionName":"assertMixedTypeAnnotation","ranges":[{"startOffset":26252,"endOffset":26352,"count":0}],"isBlockCoverage":false},{"functionName":"assertEmptyTypeAnnotation","ranges":[{"startOffset":26354,"endOffset":26454,"count":0}],"isBlockCoverage":false},{"functionName":"assertNullableTypeAnnotation","ranges":[{"startOffset":26456,"endOffset":26562,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteralTypeAnnotation","ranges":[{"startOffset":26564,"endOffset":26680,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberTypeAnnotation","ranges":[{"startOffset":26682,"endOffset":26784,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeAnnotation","ranges":[{"startOffset":26786,"endOffset":26888,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeInternalSlot","ranges":[{"startOffset":26890,"endOffset":26996,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeCallProperty","ranges":[{"startOffset":26998,"endOffset":27104,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeIndexer","ranges":[{"startOffset":27106,"endOffset":27202,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeProperty","ranges":[{"startOffset":27204,"endOffset":27302,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectTypeSpreadProperty","ranges":[{"startOffset":27304,"endOffset":27414,"count":0}],"isBlockCoverage":false},{"functionName":"assertOpaqueType","ranges":[{"startOffset":27416,"endOffset":27498,"count":0}],"isBlockCoverage":false},{"functionName":"assertQualifiedTypeIdentifier","ranges":[{"startOffset":27500,"endOffset":27608,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringLiteralTypeAnnotation","ranges":[{"startOffset":27610,"endOffset":27726,"count":0}],"isBlockCoverage":false},{"functionName":"assertStringTypeAnnotation","ranges":[{"startOffset":27728,"endOffset":27830,"count":0}],"isBlockCoverage":false},{"functionName":"assertSymbolTypeAnnotation","ranges":[{"startOffset":27832,"endOffset":27934,"count":0}],"isBlockCoverage":false},{"functionName":"assertThisTypeAnnotation","ranges":[{"startOffset":27936,"endOffset":28034,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleTypeAnnotation","ranges":[{"startOffset":28036,"endOffset":28136,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeofTypeAnnotation","ranges":[{"startOffset":28138,"endOffset":28240,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAlias","ranges":[{"startOffset":28242,"endOffset":28322,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeAnnotation","ranges":[{"startOffset":28324,"endOffset":28414,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeCastExpression","ranges":[{"startOffset":28416,"endOffset":28514,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameter","ranges":[{"startOffset":28516,"endOffset":28604,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterDeclaration","ranges":[{"startOffset":28606,"endOffset":28716,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeParameterInstantiation","ranges":[{"startOffset":28718,"endOffset":28832,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnionTypeAnnotation","ranges":[{"startOffset":28834,"endOffset":28934,"count":0}],"isBlockCoverage":false},{"functionName":"assertVariance","ranges":[{"startOffset":28936,"endOffset":29014,"count":0}],"isBlockCoverage":false},{"functionName":"assertVoidTypeAnnotation","ranges":[{"startOffset":29016,"endOffset":29114,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDeclaration","ranges":[{"startOffset":29116,"endOffset":29208,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanBody","ranges":[{"startOffset":29210,"endOffset":29302,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberBody","ranges":[{"startOffset":29304,"endOffset":29394,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringBody","ranges":[{"startOffset":29396,"endOffset":29486,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumSymbolBody","ranges":[{"startOffset":29488,"endOffset":29578,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBooleanMember","ranges":[{"startOffset":29580,"endOffset":29676,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumNumberMember","ranges":[{"startOffset":29678,"endOffset":29772,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumStringMember","ranges":[{"startOffset":29774,"endOffset":29868,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumDefaultedMember","ranges":[{"startOffset":29870,"endOffset":29970,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXAttribute","ranges":[{"startOffset":29972,"endOffset":30058,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingElement","ranges":[{"startOffset":30060,"endOffset":30156,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXElement","ranges":[{"startOffset":30158,"endOffset":30240,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXEmptyExpression","ranges":[{"startOffset":30242,"endOffset":30340,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXExpressionContainer","ranges":[{"startOffset":30342,"endOffset":30448,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadChild","ranges":[{"startOffset":30450,"endOffset":30540,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXIdentifier","ranges":[{"startOffset":30542,"endOffset":30630,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXMemberExpression","ranges":[{"startOffset":30632,"endOffset":30732,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXNamespacedName","ranges":[{"startOffset":30734,"endOffset":30830,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningElement","ranges":[{"startOffset":30832,"endOffset":30928,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXSpreadAttribute","ranges":[{"startOffset":30930,"endOffset":31028,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXText","ranges":[{"startOffset":31030,"endOffset":31106,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXFragment","ranges":[{"startOffset":31108,"endOffset":31192,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXOpeningFragment","ranges":[{"startOffset":31194,"endOffset":31292,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSXClosingFragment","ranges":[{"startOffset":31294,"endOffset":31392,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoop","ranges":[{"startOffset":31394,"endOffset":31464,"count":0}],"isBlockCoverage":false},{"functionName":"assertPlaceholder","ranges":[{"startOffset":31466,"endOffset":31550,"count":0}],"isBlockCoverage":false},{"functionName":"assertV8IntrinsicIdentifier","ranges":[{"startOffset":31552,"endOffset":31656,"count":0}],"isBlockCoverage":false},{"functionName":"assertArgumentPlaceholder","ranges":[{"startOffset":31658,"endOffset":31758,"count":0}],"isBlockCoverage":false},{"functionName":"assertAwaitExpression","ranges":[{"startOffset":31760,"endOffset":31852,"count":0}],"isBlockCoverage":false},{"functionName":"assertBindExpression","ranges":[{"startOffset":31854,"endOffset":31944,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassProperty","ranges":[{"startOffset":31946,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalMemberExpression","ranges":[{"startOffset":32036,"endOffset":32146,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineTopicExpression","ranges":[{"startOffset":32148,"endOffset":32256,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelineBareFunction","ranges":[{"startOffset":32258,"endOffset":32360,"count":0}],"isBlockCoverage":false},{"functionName":"assertPipelinePrimaryTopicReference","ranges":[{"startOffset":32362,"endOffset":32482,"count":0}],"isBlockCoverage":false},{"functionName":"assertOptionalCallExpression","ranges":[{"startOffset":32484,"endOffset":32590,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateProperty","ranges":[{"startOffset":32592,"endOffset":32694,"count":0}],"isBlockCoverage":false},{"functionName":"assertClassPrivateMethod","ranges":[{"startOffset":32696,"endOffset":32794,"count":0}],"isBlockCoverage":false},{"functionName":"assertImport","ranges":[{"startOffset":32796,"endOffset":32870,"count":0}],"isBlockCoverage":false},{"functionName":"assertImportAttribute","ranges":[{"startOffset":32872,"endOffset":32964,"count":0}],"isBlockCoverage":false},{"functionName":"assertDecorator","ranges":[{"startOffset":32966,"endOffset":33046,"count":0}],"isBlockCoverage":false},{"functionName":"assertDoExpression","ranges":[{"startOffset":33048,"endOffset":33134,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDefaultSpecifier","ranges":[{"startOffset":33136,"endOffset":33242,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportNamespaceSpecifier","ranges":[{"startOffset":33244,"endOffset":33354,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivateName","ranges":[{"startOffset":33356,"endOffset":33440,"count":0}],"isBlockCoverage":false},{"functionName":"assertBigIntLiteral","ranges":[{"startOffset":33442,"endOffset":33530,"count":0}],"isBlockCoverage":false},{"functionName":"assertRecordExpression","ranges":[{"startOffset":33532,"endOffset":33626,"count":0}],"isBlockCoverage":false},{"functionName":"assertTupleExpression","ranges":[{"startOffset":33628,"endOffset":33720,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParameterProperty","ranges":[{"startOffset":33722,"endOffset":33822,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareFunction","ranges":[{"startOffset":33824,"endOffset":33920,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSDeclareMethod","ranges":[{"startOffset":33922,"endOffset":34014,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSQualifiedName","ranges":[{"startOffset":34016,"endOffset":34108,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSCallSignatureDeclaration","ranges":[{"startOffset":34110,"endOffset":34224,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructSignatureDeclaration","ranges":[{"startOffset":34226,"endOffset":34350,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSPropertySignature","ranges":[{"startOffset":34352,"endOffset":34452,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMethodSignature","ranges":[{"startOffset":34454,"endOffset":34550,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexSignature","ranges":[{"startOffset":34552,"endOffset":34646,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAnyKeyword","ranges":[{"startOffset":34648,"endOffset":34734,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBooleanKeyword","ranges":[{"startOffset":34736,"endOffset":34830,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBigIntKeyword","ranges":[{"startOffset":34832,"endOffset":34924,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNeverKeyword","ranges":[{"startOffset":34926,"endOffset":35016,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNullKeyword","ranges":[{"startOffset":35018,"endOffset":35106,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNumberKeyword","ranges":[{"startOffset":35108,"endOffset":35200,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSObjectKeyword","ranges":[{"startOffset":35202,"endOffset":35294,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSStringKeyword","ranges":[{"startOffset":35296,"endOffset":35388,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSSymbolKeyword","ranges":[{"startOffset":35390,"endOffset":35482,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUndefinedKeyword","ranges":[{"startOffset":35484,"endOffset":35582,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnknownKeyword","ranges":[{"startOffset":35584,"endOffset":35678,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSVoidKeyword","ranges":[{"startOffset":35680,"endOffset":35768,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSThisType","ranges":[{"startOffset":35770,"endOffset":35852,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSFunctionType","ranges":[{"startOffset":35854,"endOffset":35944,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConstructorType","ranges":[{"startOffset":35946,"endOffset":36042,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeReference","ranges":[{"startOffset":36044,"endOffset":36136,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypePredicate","ranges":[{"startOffset":36138,"endOffset":36230,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeQuery","ranges":[{"startOffset":36232,"endOffset":36316,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeLiteral","ranges":[{"startOffset":36318,"endOffset":36406,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSArrayType","ranges":[{"startOffset":36408,"endOffset":36492,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTupleType","ranges":[{"startOffset":36494,"endOffset":36578,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSOptionalType","ranges":[{"startOffset":36580,"endOffset":36670,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSRestType","ranges":[{"startOffset":36672,"endOffset":36754,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSUnionType","ranges":[{"startOffset":36756,"endOffset":36840,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIntersectionType","ranges":[{"startOffset":36842,"endOffset":36940,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSConditionalType","ranges":[{"startOffset":36942,"endOffset":37038,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInferType","ranges":[{"startOffset":37040,"endOffset":37124,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSParenthesizedType","ranges":[{"startOffset":37126,"endOffset":37226,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeOperator","ranges":[{"startOffset":37228,"endOffset":37318,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSIndexedAccessType","ranges":[{"startOffset":37320,"endOffset":37420,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSMappedType","ranges":[{"startOffset":37422,"endOffset":37508,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSLiteralType","ranges":[{"startOffset":37510,"endOffset":37598,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExpressionWithTypeArguments","ranges":[{"startOffset":37600,"endOffset":37720,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceDeclaration","ranges":[{"startOffset":37722,"endOffset":37828,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSInterfaceBody","ranges":[{"startOffset":37830,"endOffset":37922,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAliasDeclaration","ranges":[{"startOffset":37924,"endOffset":38030,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSAsExpression","ranges":[{"startOffset":38032,"endOffset":38122,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAssertion","ranges":[{"startOffset":38124,"endOffset":38216,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumDeclaration","ranges":[{"startOffset":38218,"endOffset":38314,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEnumMember","ranges":[{"startOffset":38316,"endOffset":38402,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleDeclaration","ranges":[{"startOffset":38404,"endOffset":38504,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSModuleBlock","ranges":[{"startOffset":38506,"endOffset":38594,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportType","ranges":[{"startOffset":38596,"endOffset":38682,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSImportEqualsDeclaration","ranges":[{"startOffset":38684,"endOffset":38796,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExternalModuleReference","ranges":[{"startOffset":38798,"endOffset":38910,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNonNullExpression","ranges":[{"startOffset":38912,"endOffset":39012,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSExportAssignment","ranges":[{"startOffset":39014,"endOffset":39112,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSNamespaceExportDeclaration","ranges":[{"startOffset":39114,"endOffset":39232,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeAnnotation","ranges":[{"startOffset":39234,"endOffset":39328,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterInstantiation","ranges":[{"startOffset":39330,"endOffset":39448,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameterDeclaration","ranges":[{"startOffset":39450,"endOffset":39564,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeParameter","ranges":[{"startOffset":39566,"endOffset":39658,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpression","ranges":[{"startOffset":39660,"endOffset":39742,"count":0}],"isBlockCoverage":false},{"functionName":"assertBinary","ranges":[{"startOffset":39744,"endOffset":39818,"count":0}],"isBlockCoverage":false},{"functionName":"assertScopable","ranges":[{"startOffset":39820,"endOffset":39898,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlockParent","ranges":[{"startOffset":39900,"endOffset":39984,"count":0}],"isBlockCoverage":false},{"functionName":"assertBlock","ranges":[{"startOffset":39986,"endOffset":40058,"count":0}],"isBlockCoverage":false},{"functionName":"assertStatement","ranges":[{"startOffset":40060,"endOffset":40140,"count":0}],"isBlockCoverage":false},{"functionName":"assertTerminatorless","ranges":[{"startOffset":40142,"endOffset":40232,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompletionStatement","ranges":[{"startOffset":40234,"endOffset":40334,"count":0}],"isBlockCoverage":false},{"functionName":"assertConditional","ranges":[{"startOffset":40336,"endOffset":40420,"count":0}],"isBlockCoverage":false},{"functionName":"assertLoop","ranges":[{"startOffset":40422,"endOffset":40492,"count":0}],"isBlockCoverage":false},{"functionName":"assertWhile","ranges":[{"startOffset":40494,"endOffset":40566,"count":0}],"isBlockCoverage":false},{"functionName":"assertExpressionWrapper","ranges":[{"startOffset":40568,"endOffset":40664,"count":0}],"isBlockCoverage":false},{"functionName":"assertFor","ranges":[{"startOffset":40666,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"assertForXStatement","ranges":[{"startOffset":40736,"endOffset":40824,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunction","ranges":[{"startOffset":40826,"endOffset":40904,"count":0}],"isBlockCoverage":false},{"functionName":"assertFunctionParent","ranges":[{"startOffset":40906,"endOffset":40996,"count":0}],"isBlockCoverage":false},{"functionName":"assertPureish","ranges":[{"startOffset":40998,"endOffset":41074,"count":0}],"isBlockCoverage":false},{"functionName":"assertDeclaration","ranges":[{"startOffset":41076,"endOffset":41160,"count":0}],"isBlockCoverage":false},{"functionName":"assertPatternLike","ranges":[{"startOffset":41162,"endOffset":41246,"count":0}],"isBlockCoverage":false},{"functionName":"assertLVal","ranges":[{"startOffset":41248,"endOffset":41318,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSEntityName","ranges":[{"startOffset":41320,"endOffset":41406,"count":0}],"isBlockCoverage":false},{"functionName":"assertLiteral","ranges":[{"startOffset":41408,"endOffset":41484,"count":0}],"isBlockCoverage":false},{"functionName":"assertImmutable","ranges":[{"startOffset":41486,"endOffset":41566,"count":0}],"isBlockCoverage":false},{"functionName":"assertUserWhitespacable","ranges":[{"startOffset":41568,"endOffset":41664,"count":0}],"isBlockCoverage":false},{"functionName":"assertMethod","ranges":[{"startOffset":41666,"endOffset":41740,"count":0}],"isBlockCoverage":false},{"functionName":"assertObjectMember","ranges":[{"startOffset":41742,"endOffset":41828,"count":0}],"isBlockCoverage":false},{"functionName":"assertProperty","ranges":[{"startOffset":41830,"endOffset":41908,"count":0}],"isBlockCoverage":false},{"functionName":"assertUnaryLike","ranges":[{"startOffset":41910,"endOffset":41990,"count":0}],"isBlockCoverage":false},{"functionName":"assertPattern","ranges":[{"startOffset":41992,"endOffset":42068,"count":0}],"isBlockCoverage":false},{"functionName":"assertClass","ranges":[{"startOffset":42070,"endOffset":42142,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleDeclaration","ranges":[{"startOffset":42144,"endOffset":42240,"count":0}],"isBlockCoverage":false},{"functionName":"assertExportDeclaration","ranges":[{"startOffset":42242,"endOffset":42338,"count":0}],"isBlockCoverage":false},{"functionName":"assertModuleSpecifier","ranges":[{"startOffset":42340,"endOffset":42432,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlow","ranges":[{"startOffset":42434,"endOffset":42504,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowType","ranges":[{"startOffset":42506,"endOffset":42584,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowBaseAnnotation","ranges":[{"startOffset":42586,"endOffset":42684,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowDeclaration","ranges":[{"startOffset":42686,"endOffset":42778,"count":0}],"isBlockCoverage":false},{"functionName":"assertFlowPredicate","ranges":[{"startOffset":42780,"endOffset":42868,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumBody","ranges":[{"startOffset":42870,"endOffset":42948,"count":0}],"isBlockCoverage":false},{"functionName":"assertEnumMember","ranges":[{"startOffset":42950,"endOffset":43032,"count":0}],"isBlockCoverage":false},{"functionName":"assertJSX","ranges":[{"startOffset":43034,"endOffset":43102,"count":0}],"isBlockCoverage":false},{"functionName":"assertPrivate","ranges":[{"startOffset":43104,"endOffset":43180,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSTypeElement","ranges":[{"startOffset":43182,"endOffset":43270,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSType","ranges":[{"startOffset":43272,"endOffset":43346,"count":0}],"isBlockCoverage":false},{"functionName":"assertTSBaseType","ranges":[{"startOffset":43348,"endOffset":43430,"count":0}],"isBlockCoverage":false},{"functionName":"assertNumberLiteral","ranges":[{"startOffset":43432,"endOffset":43598,"count":0}],"isBlockCoverage":false},{"functionName":"assertRegexLiteral","ranges":[{"startOffset":43600,"endOffset":43762,"count":0}],"isBlockCoverage":false},{"functionName":"assertRestProperty","ranges":[{"startOffset":43764,"endOffset":43924,"count":0}],"isBlockCoverage":false},{"functionName":"assertSpreadProperty","ranges":[{"startOffset":43926,"endOffset":44094,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1066","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":995,"count":1}],"isBlockCoverage":true},{"functionName":"createTypeAnnotationBasedOnTypeof","ranges":[{"startOffset":177,"endOffset":995,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1067","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":605,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":274,"endOffset":369,"count":1},{"startOffset":348,"endOffset":366,"count":0}],"isBlockCoverage":true},{"functionName":"createFlowUnionType","ranges":[{"startOffset":371,"endOffset":605,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1068","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1596,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1596,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1069","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":676,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":278,"endOffset":373,"count":1},{"startOffset":352,"endOffset":370,"count":0}],"isBlockCoverage":true},{"functionName":"createTSUnionType","ranges":[{"startOffset":375,"endOffset":676,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1070","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1052,"count":1}],"isBlockCoverage":true},{"functionName":"removeTypeDuplicates","ranges":[{"startOffset":178,"endOffset":1052,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1071","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/clone/cloneNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"cloneIfNode","ranges":[{"startOffset":223,"endOffset":379,"count":31},{"startOffset":279,"endOffset":310,"count":25},{"startOffset":312,"endOffset":362,"count":20},{"startOffset":362,"endOffset":378,"count":11}],"isBlockCoverage":true},{"functionName":"cloneIfNodeOrArray","ranges":[{"startOffset":381,"endOffset":578,"count":30},{"startOffset":460,"endOffset":530,"count":6},{"startOffset":530,"endOffset":577,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":481,"endOffset":524,"count":7}],"isBlockCoverage":true},{"functionName":"cloneNode","ranges":[{"startOffset":580,"endOffset":2201,"count":24},{"startOffset":653,"endOffset":665,"count":0},{"startOffset":761,"endOffset":1079,"count":9},{"startOffset":824,"endOffset":861,"count":0},{"startOffset":863,"endOffset":910,"count":0},{"startOffset":949,"endOffset":1075,"count":0},{"startOffset":1079,"endOffset":1572,"count":15},{"startOffset":1127,"endOffset":1185,"count":0},{"startOffset":1262,"endOffset":1568,"count":42},{"startOffset":1292,"endOffset":1562,"count":32},{"startOffset":1357,"endOffset":1380,"count":4},{"startOffset":1381,"endOffset":1434,"count":2},{"startOffset":1435,"endOffset":1486,"count":30},{"startOffset":1497,"endOffset":1554,"count":0},{"startOffset":1598,"endOffset":1700,"count":22},{"startOffset":1620,"endOffset":1653,"count":0},{"startOffset":1738,"endOffset":1833,"count":1},{"startOffset":1869,"endOffset":1960,"count":0},{"startOffset":1999,"endOffset":2096,"count":0},{"startOffset":2124,"endOffset":2180,"count":3}],"isBlockCoverage":true},{"functionName":"cloneCommentsWithoutLoc","ranges":[{"startOffset":2203,"endOffset":2347,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCloneComments","ranges":[{"startOffset":2349,"endOffset":2484,"count":3},{"startOffset":2435,"endOffset":2470,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1072","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/clone/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":340,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":246,"endOffset":264,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":269,"endOffset":340,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1073","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/clone/cloneDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":341,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":176,"endOffset":271,"count":1},{"startOffset":250,"endOffset":268,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeep","ranges":[{"startOffset":273,"endOffset":341,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1074","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":186,"endOffset":281,"count":1},{"startOffset":260,"endOffset":278,"count":0}],"isBlockCoverage":true},{"functionName":"cloneDeepWithoutLoc","ranges":[{"startOffset":283,"endOffset":373,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1075","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":182,"endOffset":277,"count":1},{"startOffset":256,"endOffset":274,"count":0}],"isBlockCoverage":true},{"functionName":"cloneWithoutLoc","ranges":[{"startOffset":279,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1076","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/addComment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":181,"endOffset":276,"count":1},{"startOffset":255,"endOffset":273,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":278,"endOffset":453,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1077","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/addComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":448,"count":1}],"isBlockCoverage":true},{"functionName":"addComments","ranges":[{"startOffset":112,"endOffset":448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1078","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/inheritInnerComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":392,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":190,"endOffset":285,"count":1},{"startOffset":264,"endOffset":282,"count":0}],"isBlockCoverage":true},{"functionName":"inheritInnerComments","ranges":[{"startOffset":287,"endOffset":392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1079","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/utils/inherit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":169,"endOffset":264,"count":1},{"startOffset":237,"endOffset":242,"count":0}],"isBlockCoverage":true},{"functionName":"inherit","ranges":[{"startOffset":266,"endOffset":424,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1080","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/inheritLeadingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":398,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":192,"endOffset":287,"count":1},{"startOffset":266,"endOffset":284,"count":0}],"isBlockCoverage":true},{"functionName":"inheritLeadingComments","ranges":[{"startOffset":289,"endOffset":398,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1081","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/inheritsComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":712,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":391,"endOffset":486,"count":3},{"startOffset":465,"endOffset":483,"count":0}],"isBlockCoverage":true},{"functionName":"inheritsComments","ranges":[{"startOffset":488,"endOffset":712,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1082","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/inheritTrailingComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":401,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":193,"endOffset":288,"count":1},{"startOffset":267,"endOffset":285,"count":0}],"isBlockCoverage":true},{"functionName":"inheritTrailingComments","ranges":[{"startOffset":290,"endOffset":401,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1083","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/comments/removeComments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"removeComments","ranges":[{"startOffset":158,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":224,"endOffset":258,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1084","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/constants/generated/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6598,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1085","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/ensureBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":376,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":174,"endOffset":269,"count":1},{"startOffset":248,"endOffset":266,"count":0}],"isBlockCoverage":true},{"functionName":"ensureBlock","ranges":[{"startOffset":271,"endOffset":376,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1086","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toBlock.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":745,"count":1}],"isBlockCoverage":true},{"functionName":"toBlock","ranges":[{"startOffset":215,"endOffset":745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1087","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":459,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":196,"endOffset":291,"count":1},{"startOffset":270,"endOffset":288,"count":0}],"isBlockCoverage":true},{"functionName":"toBindingIdentifierName","ranges":[{"startOffset":293,"endOffset":459,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1088","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toIdentifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":642,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":207,"endOffset":302,"count":1},{"startOffset":281,"endOffset":299,"count":0}],"isBlockCoverage":true},{"functionName":"toIdentifier","ranges":[{"startOffset":304,"endOffset":642,"count":1},{"startOffset":633,"endOffset":639,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":477,"endOffset":539,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1089","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toComputedKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":407,"count":1}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":221,"endOffset":407,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1090","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":647,"count":1}],"isBlockCoverage":true},{"functionName":"toExpression","ranges":[{"startOffset":167,"endOffset":647,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1091","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toKeyAlias.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1158,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":341,"endOffset":436,"count":2},{"startOffset":415,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"toKeyAlias","ranges":[{"startOffset":438,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"toKeyAlias.increment","ranges":[{"startOffset":1016,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1092","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":509,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":283,"endOffset":378,"count":2},{"startOffset":357,"endOffset":375,"count":0}],"isBlockCoverage":true},{"functionName":"removePropertiesDeep","ranges":[{"startOffset":380,"endOffset":509,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1093","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/traverse/traverseFast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"traverseFast","ranges":[{"startOffset":160,"endOffset":586,"count":3799},{"startOffset":216,"endOffset":223,"count":1818},{"startOffset":223,"endOffset":290,"count":1981},{"startOffset":290,"endOffset":297,"count":0},{"startOffset":297,"endOffset":312,"count":1981},{"startOffset":312,"endOffset":317,"count":6},{"startOffset":367,"endOffset":584,"count":3542},{"startOffset":433,"endOffset":525,"count":351},{"startOffset":469,"endOffset":519,"count":599},{"startOffset":525,"endOffset":580,"count":3191},{"startOffset":584,"endOffset":585,"count":1981}],"isBlockCoverage":true}]},{"scriptId":"1094","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/removeProperties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":765,"count":1}],"isBlockCoverage":true},{"functionName":"removeProperties","ranges":[{"startOffset":333,"endOffset":765,"count":133},{"startOffset":414,"endOffset":426,"count":0},{"startOffset":481,"endOffset":536,"count":1330},{"startOffset":510,"endOffset":532,"count":412},{"startOffset":577,"endOffset":650,"count":785},{"startOffset":602,"endOffset":622,"count":0},{"startOffset":624,"endOffset":646,"count":0},{"startOffset":736,"endOffset":763,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1095","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toSequenceExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":219,"endOffset":314,"count":1},{"startOffset":293,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"toSequenceExpression","ranges":[{"startOffset":316,"endOffset":626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1096","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2497,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":408,"endOffset":503,"count":2},{"startOffset":482,"endOffset":500,"count":0}],"isBlockCoverage":true},{"functionName":"gatherSequenceExpressions","ranges":[{"startOffset":505,"endOffset":2497,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1097","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2484,"count":1}],"isBlockCoverage":true},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":176,"endOffset":1262,"count":305},{"startOffset":330,"endOffset":1245,"count":535},{"startOffset":376,"endOffset":385,"count":2},{"startOffset":385,"endOffset":483,"count":533},{"startOffset":483,"endOffset":661,"count":284},{"startOffset":507,"endOffset":596,"count":139},{"startOffset":596,"endOffset":638,"count":145},{"startOffset":661,"endOffset":712,"count":249},{"startOffset":712,"endOffset":840,"count":1},{"startOffset":771,"endOffset":817,"count":0},{"startOffset":840,"endOffset":861,"count":248},{"startOffset":861,"endOffset":1058,"count":68},{"startOffset":916,"endOffset":971,"count":1},{"startOffset":971,"endOffset":1025,"count":67},{"startOffset":1025,"endOffset":1052,"count":0},{"startOffset":1058,"endOffset":1074,"count":247},{"startOffset":1074,"endOffset":1241,"count":229}],"isBlockCoverage":true}]},{"scriptId":"1098","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/toStatement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":932,"count":1}],"isBlockCoverage":true},{"functionName":"toStatement","ranges":[{"startOffset":219,"endOffset":932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1099","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/converters/valueToNode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2300,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":406,"endOffset":501,"count":3},{"startOffset":474,"endOffset":479,"count":1},{"startOffset":480,"endOffset":498,"count":2}],"isBlockCoverage":true},{"functionName":"valueToNode","ranges":[{"startOffset":503,"endOffset":2300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1100","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"appendToMemberExpression","ranges":[{"startOffset":177,"endOffset":426,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1101","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":816,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":242,"endOffset":337,"count":1},{"startOffset":316,"endOffset":334,"count":0}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":339,"endOffset":816,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1102","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":326,"count":1}],"isBlockCoverage":true},{"functionName":"prependToMemberExpression","ranges":[{"startOffset":178,"endOffset":326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1103","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":217,"endOffset":312,"count":1},{"startOffset":291,"endOffset":309,"count":0}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":314,"endOffset":441,"count":142}],"isBlockCoverage":true}]},{"scriptId":"1104","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/traverse/traverse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1198,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":156,"endOffset":389,"count":3}],"isBlockCoverage":true},{"functionName":"traverseSimpleImpl","ranges":[{"startOffset":391,"endOffset":1198,"count":133},{"startOffset":524,"endOffset":531,"count":0},{"startOffset":603,"endOffset":1153,"count":252},{"startOffset":669,"endOffset":975,"count":39},{"startOffset":718,"endOffset":969,"count":41},{"startOffset":774,"endOffset":783,"count":0},{"startOffset":975,"endOffset":1149,"count":213},{"startOffset":994,"endOffset":1149,"count":89},{"startOffset":1167,"endOffset":1196,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1105","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isBinding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":212,"endOffset":307,"count":1},{"startOffset":286,"endOffset":304,"count":0}],"isBlockCoverage":true},{"functionName":"isBinding","ranges":[{"startOffset":309,"endOffset":864,"count":11},{"startOffset":441,"endOffset":483,"count":0},{"startOffset":485,"endOffset":508,"count":0},{"startOffset":632,"endOffset":841,"count":22},{"startOffset":723,"endOffset":835,"count":11},{"startOffset":815,"endOffset":827,"count":0},{"startOffset":841,"endOffset":863,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1106","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isBlockScoped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isBlockScoped","ranges":[{"startOffset":311,"endOffset":470,"count":1387},{"startOffset":395,"endOffset":438,"count":1363},{"startOffset":439,"endOffset":467,"count":1363}],"isBlockCoverage":true}]},{"scriptId":"1107","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isLet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":191,"endOffset":334,"count":1363},{"startOffset":267,"endOffset":331,"count":50}],"isBlockCoverage":true}]},{"scriptId":"1108","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isImmutable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":567,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":214,"endOffset":309,"count":1},{"startOffset":288,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"isImmutable","ranges":[{"startOffset":311,"endOffset":567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1109","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isNodesEquivalent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"isNodesEquivalent","ranges":[{"startOffset":165,"endOffset":1465,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1110","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isReferenced.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2350,"count":1}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":113,"endOffset":2350,"count":703},{"startOffset":193,"endOffset":217,"count":154},{"startOffset":222,"endOffset":249,"count":154},{"startOffset":254,"endOffset":404,"count":154},{"startOffset":323,"endOffset":366,"count":85},{"startOffset":366,"endOffset":404,"count":69},{"startOffset":410,"endOffset":471,"count":77},{"startOffset":477,"endOffset":543,"count":0},{"startOffset":549,"endOffset":666,"count":0},{"startOffset":672,"endOffset":711,"count":0},{"startOffset":717,"endOffset":736,"count":0},{"startOffset":741,"endOffset":767,"count":0},{"startOffset":772,"endOffset":864,"count":0},{"startOffset":870,"endOffset":892,"count":6},{"startOffset":897,"endOffset":918,"count":6},{"startOffset":923,"endOffset":1159,"count":6},{"startOffset":983,"endOffset":1026,"count":4},{"startOffset":1026,"endOffset":1139,"count":2},{"startOffset":1139,"endOffset":1159,"count":0},{"startOffset":1165,"endOffset":1189,"count":0},{"startOffset":1194,"endOffset":1258,"count":0},{"startOffset":1264,"endOffset":1328,"count":104},{"startOffset":1334,"endOffset":1395,"count":0},{"startOffset":1401,"endOffset":1445,"count":0},{"startOffset":1451,"endOffset":1490,"count":12},{"startOffset":1496,"endOffset":1535,"count":0},{"startOffset":1541,"endOffset":1563,"count":0},{"startOffset":1568,"endOffset":1613,"count":0},{"startOffset":1619,"endOffset":1646,"count":52},{"startOffset":1651,"endOffset":1697,"count":67},{"startOffset":1703,"endOffset":1735,"count":0},{"startOffset":1740,"endOffset":1790,"count":0},{"startOffset":1796,"endOffset":1826,"count":0},{"startOffset":1831,"endOffset":1863,"count":0},{"startOffset":1868,"endOffset":1911,"count":0},{"startOffset":1917,"endOffset":1957,"count":0},{"startOffset":1963,"endOffset":1984,"count":0},{"startOffset":1989,"endOffset":2029,"count":0},{"startOffset":2035,"endOffset":2075,"count":0},{"startOffset":2081,"endOffset":2141,"count":0},{"startOffset":2147,"endOffset":2200,"count":0},{"startOffset":2206,"endOffset":2328,"count":0},{"startOffset":2332,"endOffset":2349,"count":283}],"isBlockCoverage":true}]},{"scriptId":"1111","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isScope.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":150,"endOffset":593,"count":8348},{"startOffset":228,"endOffset":287,"count":979},{"startOffset":289,"endOffset":312,"count":705},{"startOffset":312,"endOffset":359,"count":7643},{"startOffset":359,"endOffset":421,"count":274},{"startOffset":423,"endOffset":446,"count":48},{"startOffset":446,"endOffset":486,"count":7595},{"startOffset":486,"endOffset":523,"count":0},{"startOffset":525,"endOffset":547,"count":0},{"startOffset":547,"endOffset":592,"count":7595}],"isBlockCoverage":true}]},{"scriptId":"1112","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isSpecifierDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"isSpecifierDefault","ranges":[{"startOffset":161,"endOffset":366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1113","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isValidES3Identifier.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":719,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":203,"endOffset":298,"count":1},{"startOffset":277,"endOffset":295,"count":0}],"isBlockCoverage":true},{"functionName":"isValidES3Identifier","ranges":[{"startOffset":594,"endOffset":719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1114","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/types/lib/validators/isVar.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":333,"count":1}],"isBlockCoverage":true},{"functionName":"isVar","ranges":[{"startOffset":191,"endOffset":333,"count":6},{"startOffset":290,"endOffset":330,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1115","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/parser/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":393904,"count":1}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":236,"endOffset":689,"count":93},{"startOffset":634,"endOffset":646,"count":17},{"startOffset":647,"endOffset":653,"count":76}],"isBlockCoverage":true},{"functionName":"createKeyword","ranges":[{"startOffset":722,"endOffset":885,"count":35}],"isBlockCoverage":true},{"functionName":"createBinop","ranges":[{"startOffset":887,"endOffset":987,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":7912,"endOffset":8071,"count":2089},{"startOffset":7961,"endOffset":7969,"count":11},{"startOffset":7974,"endOffset":7982,"count":11},{"startOffset":7987,"endOffset":7997,"count":11},{"startOffset":8002,"endOffset":8031,"count":11},{"startOffset":8037,"endOffset":8065,"count":2078}],"isBlockCoverage":true},{"functionName":"isWhitespace","ranges":[{"startOffset":8128,"endOffset":8582,"count":1007},{"startOffset":8180,"endOffset":8192,"count":0},{"startOffset":8197,"endOffset":8209,"count":0},{"startOffset":8214,"endOffset":8226,"count":0},{"startOffset":8231,"endOffset":8239,"count":0},{"startOffset":8244,"endOffset":8253,"count":0},{"startOffset":8258,"endOffset":8268,"count":0},{"startOffset":8273,"endOffset":8285,"count":0},{"startOffset":8290,"endOffset":8302,"count":0},{"startOffset":8307,"endOffset":8319,"count":0},{"startOffset":8324,"endOffset":8336,"count":0},{"startOffset":8341,"endOffset":8353,"count":0},{"startOffset":8358,"endOffset":8370,"count":0},{"startOffset":8375,"endOffset":8387,"count":0},{"startOffset":8392,"endOffset":8404,"count":0},{"startOffset":8409,"endOffset":8421,"count":0},{"startOffset":8426,"endOffset":8438,"count":0},{"startOffset":8443,"endOffset":8455,"count":0},{"startOffset":8460,"endOffset":8472,"count":0},{"startOffset":8477,"endOffset":8489,"count":0},{"startOffset":8494,"endOffset":8506,"count":0},{"startOffset":8511,"endOffset":8542,"count":0}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":8603,"endOffset":8676,"count":2093}],"isBlockCoverage":true},{"functionName":"SourceLocation","ranges":[{"startOffset":8705,"endOffset":8778,"count":1035}],"isBlockCoverage":true},{"functionName":"getLineInfo","ranges":[{"startOffset":8782,"endOffset":9073,"count":0}],"isBlockCoverage":false},{"functionName":"BaseParser","ranges":[{"startOffset":9096,"endOffset":9197,"count":11}],"isBlockCoverage":true},{"functionName":"hasPlugin","ranges":[{"startOffset":9201,"endOffset":9257,"count":788}],"isBlockCoverage":true},{"functionName":"getPluginOption","ranges":[{"startOffset":9261,"endOffset":9367,"count":0}],"isBlockCoverage":false},{"functionName":"last","ranges":[{"startOffset":9372,"endOffset":9430,"count":2768}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":9476,"endOffset":9655,"count":13},{"startOffset":9521,"endOffset":9558,"count":0}],"isBlockCoverage":true},{"functionName":"adjustCommentsAfterTrailingComma","ranges":[{"startOffset":9659,"endOffset":11041,"count":38},{"startOffset":9797,"endOffset":9897,"count":0},{"startOffset":9899,"endOffset":11037,"count":0}],"isBlockCoverage":true},{"functionName":"processComment","ranges":[{"startOffset":11045,"endOffset":15488,"count":809},{"startOffset":11100,"endOffset":11123,"count":9},{"startOffset":11125,"endOffset":11132,"count":9},{"startOffset":11132,"endOffset":11280,"count":800},{"startOffset":11280,"endOffset":11518,"count":7},{"startOffset":11342,"endOffset":11449,"count":3},{"startOffset":11449,"endOffset":11512,"count":4},{"startOffset":11518,"endOffset":11798,"count":793},{"startOffset":11546,"endOffset":11798,"count":784},{"startOffset":11627,"endOffset":11679,"count":5},{"startOffset":11681,"endOffset":11792,"count":3},{"startOffset":11798,"endOffset":11825,"count":800},{"startOffset":11825,"endOffset":11859,"count":789},{"startOffset":11861,"endOffset":11900,"count":389},{"startOffset":11900,"endOffset":11930,"count":800},{"startOffset":11930,"endOffset":11964,"count":1165},{"startOffset":11966,"endOffset":12004,"count":400},{"startOffset":12004,"endOffset":12025,"count":800},{"startOffset":12025,"endOffset":12038,"count":526},{"startOffset":12040,"endOffset":12063,"count":115},{"startOffset":12063,"endOffset":12085,"count":800},{"startOffset":12085,"endOffset":12738,"count":389},{"startOffset":12122,"endOffset":12235,"count":4},{"startOffset":12245,"endOffset":12361,"count":0},{"startOffset":12371,"endOffset":12481,"count":34},{"startOffset":12491,"endOffset":12601,"count":0},{"startOffset":12611,"endOffset":12724,"count":0},{"startOffset":12738,"endOffset":13066,"count":411},{"startOffset":12779,"endOffset":12972,"count":400},{"startOffset":12841,"endOffset":12875,"count":0},{"startOffset":12937,"endOffset":12971,"count":0},{"startOffset":12974,"endOffset":13066,"count":0},{"startOffset":13066,"endOffset":13087,"count":800},{"startOffset":13087,"endOffset":13665,"count":389},{"startOffset":13126,"endOffset":13659,"count":18},{"startOffset":13253,"endOffset":13368,"count":14},{"startOffset":13368,"endOffset":13651,"count":4},{"startOffset":13446,"endOffset":13641,"count":2},{"startOffset":13512,"endOffset":13629,"count":1},{"startOffset":13665,"endOffset":14789,"count":411},{"startOffset":13714,"endOffset":14789,"count":6},{"startOffset":13824,"endOffset":14093,"count":4},{"startOffset":13892,"endOffset":14083,"count":11},{"startOffset":13982,"endOffset":14071,"count":0},{"startOffset":14269,"endOffset":14783,"count":0},{"startOffset":14789,"endOffset":14861,"count":800},{"startOffset":14861,"endOffset":15461,"count":6},{"startOffset":14983,"endOffset":15039,"count":0},{"startOffset":15197,"endOffset":15378,"count":0},{"startOffset":15461,"endOffset":15487,"count":800}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":15116,"endOffset":15150,"count":6}],"isBlockCoverage":true},{"functionName":"getLocationForPosition","ranges":[{"startOffset":26840,"endOffset":27206,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":27210,"endOffset":27325,"count":0}],"isBlockCoverage":false},{"functionName":"raiseWithData","ranges":[{"startOffset":27329,"endOffset":27627,"count":0}],"isBlockCoverage":false},{"functionName":"_raise","ranges":[{"startOffset":27631,"endOffset":27897,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleProperty","ranges":[{"startOffset":27902,"endOffset":28037,"count":0}],"isBlockCoverage":false},{"functionName":"estree","ranges":[{"startOffset":28053,"endOffset":35794,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":35819,"endOffset":36000,"count":11}],"isBlockCoverage":true},{"functionName":"types$1.template","ranges":[{"startOffset":36296,"endOffset":36318,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":36494,"endOffset":36804,"count":107},{"startOffset":36547,"endOffset":36599,"count":0},{"startOffset":36677,"endOffset":36718,"count":25},{"startOffset":36720,"endOffset":36761,"count":12}],"isBlockCoverage":true},{"functionName":"types.name.updateContext","ranges":[{"startOffset":36834,"endOffset":37237,"count":280},{"startOffset":36910,"endOffset":37127,"count":243},{"startOffset":36946,"endOffset":36972,"count":0},{"startOffset":36973,"endOffset":37004,"count":0},{"startOffset":37005,"endOffset":37033,"count":0},{"startOffset":37066,"endOffset":37092,"count":0},{"startOffset":37094,"endOffset":37123,"count":0},{"startOffset":37195,"endOffset":37235,"count":0}],"isBlockCoverage":true},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":37269,"endOffset":37432,"count":32},{"startOffset":37345,"endOffset":37369,"count":25},{"startOffset":37370,"endOffset":37395,"count":7}],"isBlockCoverage":true},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":37470,"endOffset":37568,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":37600,"endOffset":37885,"count":75},{"startOffset":37671,"endOffset":37697,"count":68},{"startOffset":37698,"endOffset":37725,"count":67},{"startOffset":37726,"endOffset":37754,"count":67},{"startOffset":37798,"endOffset":37822,"count":8},{"startOffset":37823,"endOffset":37848,"count":67}],"isBlockCoverage":true},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":37917,"endOffset":37931,"count":1}],"isBlockCoverage":true},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":37995,"endOffset":38546,"count":12},{"startOffset":38081,"endOffset":38082,"count":0},{"startOffset":38112,"endOffset":38138,"count":11},{"startOffset":38139,"endOffset":38166,"count":8},{"startOffset":38167,"endOffset":38276,"count":8},{"startOffset":38199,"endOffset":38275,"count":1},{"startOffset":38277,"endOffset":38378,"count":8},{"startOffset":38308,"endOffset":38336,"count":7},{"startOffset":38338,"endOffset":38377,"count":3},{"startOffset":38380,"endOffset":38442,"count":8},{"startOffset":38442,"endOffset":38509,"count":4}],"isBlockCoverage":true},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":38581,"endOffset":38771,"count":0}],"isBlockCoverage":false},{"functionName":"types.star.updateContext","ranges":[{"startOffset":38801,"endOffset":38850,"count":0}],"isBlockCoverage":false},{"functionName":"isInAstralSet","ranges":[{"startOffset":48818,"endOffset":49069,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":49071,"endOffset":49416,"count":397},{"startOffset":49123,"endOffset":49142,"count":21},{"startOffset":49142,"endOffset":49161,"count":376},{"startOffset":49161,"endOffset":49173,"count":29},{"startOffset":49173,"endOffset":49191,"count":347},{"startOffset":49191,"endOffset":49210,"count":5},{"startOffset":49210,"endOffset":49242,"count":342},{"startOffset":49242,"endOffset":49415,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":49417,"endOffset":49863,"count":2672},{"startOffset":49468,"endOffset":49487,"count":315},{"startOffset":49487,"endOffset":49505,"count":2357},{"startOffset":49505,"endOffset":49517,"count":0},{"startOffset":49517,"endOffset":49535,"count":2357},{"startOffset":49535,"endOffset":49548,"count":51},{"startOffset":49548,"endOffset":49567,"count":2306},{"startOffset":49567,"endOffset":49579,"count":131},{"startOffset":49579,"endOffset":49597,"count":2175},{"startOffset":49597,"endOffset":49616,"count":124},{"startOffset":49616,"endOffset":49636,"count":2051},{"startOffset":49636,"endOffset":49648,"count":2040},{"startOffset":49648,"endOffset":49756,"count":11},{"startOffset":49698,"endOffset":49751,"count":0},{"startOffset":49756,"endOffset":49860,"count":0}],"isBlockCoverage":true},{"functionName":"isReservedWord","ranges":[{"startOffset":50551,"endOffset":50652,"count":239},{"startOffset":50611,"endOffset":50630,"count":189}],"isBlockCoverage":true},{"functionName":"isStrictReservedWord","ranges":[{"startOffset":50653,"endOffset":50779,"count":46}],"isBlockCoverage":true},{"functionName":"isStrictBindOnlyReservedWord","ranges":[{"startOffset":50780,"endOffset":50874,"count":12}],"isBlockCoverage":true},{"functionName":"isStrictBindReservedWord","ranges":[{"startOffset":50875,"endOffset":51013,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":51014,"endOffset":51073,"count":0}],"isBlockCoverage":false},{"functionName":"isIteratorStart","ranges":[{"startOffset":51128,"endOffset":51211,"count":0}],"isBlockCoverage":false},{"functionName":"isEsModuleType","ranges":[{"startOffset":55810,"endOffset":56099,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypeImportKind","ranges":[{"startOffset":56101,"endOffset":56206,"count":0}],"isBlockCoverage":false},{"functionName":"isMaybeDefaultImport","ranges":[{"startOffset":56208,"endOffset":56336,"count":0}],"isBlockCoverage":false},{"functionName":"partition","ranges":[{"startOffset":56485,"endOffset":56692,"count":0}],"isBlockCoverage":false},{"functionName":"flow","ranges":[{"startOffset":56758,"endOffset":134848,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagStart.updateContext","ranges":[{"startOffset":140612,"endOffset":140747,"count":0}],"isBlockCoverage":false},{"functionName":"types.jsxTagEnd.updateContext","ranges":[{"startOffset":140782,"endOffset":141079,"count":0}],"isBlockCoverage":false},{"functionName":"isFragment","ranges":[{"startOffset":141082,"endOffset":141217,"count":0}],"isBlockCoverage":false},{"functionName":"getQualifiedJSXName","ranges":[{"startOffset":141219,"endOffset":141645,"count":0}],"isBlockCoverage":false},{"functionName":"jsx","ranges":[{"startOffset":141658,"endOffset":153917,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":153937,"endOffset":154052,"count":36}],"isBlockCoverage":true},{"functionName":"ScopeHandler","ranges":[{"startOffset":154079,"endOffset":154276,"count":11}],"isBlockCoverage":true},{"functionName":"get inFunction","ranges":[{"startOffset":154280,"endOffset":154366,"count":35}],"isBlockCoverage":true},{"functionName":"get allowSuper","ranges":[{"startOffset":154370,"endOffset":154454,"count":0}],"isBlockCoverage":false},{"functionName":"get allowDirectSuper","ranges":[{"startOffset":154458,"endOffset":154555,"count":0}],"isBlockCoverage":false},{"functionName":"get inClass","ranges":[{"startOffset":154559,"endOffset":154640,"count":239}],"isBlockCoverage":true},{"functionName":"get inNonArrowFunction","ranges":[{"startOffset":154644,"endOffset":154739,"count":0}],"isBlockCoverage":false},{"functionName":"get treatFunctionsAsVar","ranges":[{"startOffset":154743,"endOffset":154839,"count":3}],"isBlockCoverage":true},{"functionName":"createScope","ranges":[{"startOffset":154843,"endOffset":154896,"count":36}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":154900,"endOffset":154969,"count":36}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":154973,"endOffset":155012,"count":25}],"isBlockCoverage":true},{"functionName":"treatFunctionsAsVarInScope","ranges":[{"startOffset":155016,"endOffset":155149,"count":44},{"startOffset":155095,"endOffset":155143,"count":5},{"startOffset":155113,"endOffset":155143,"count":0}],"isBlockCoverage":true},{"functionName":"declareName","ranges":[{"startOffset":155153,"endOffset":156079,"count":45},{"startOffset":155270,"endOffset":155306,"count":39},{"startOffset":155308,"endOffset":155626,"count":9},{"startOffset":155425,"endOffset":155470,"count":3},{"startOffset":155470,"endOffset":155519,"count":6},{"startOffset":155565,"endOffset":155620,"count":6},{"startOffset":155626,"endOffset":155970,"count":36},{"startOffset":155728,"endOffset":155964,"count":38},{"startOffset":155950,"endOffset":155956,"count":36},{"startOffset":156026,"endOffset":156075,"count":3}],"isBlockCoverage":true},{"functionName":"maybeExportDefined","ranges":[{"startOffset":156083,"endOffset":156224,"count":44},{"startOffset":156171,"endOffset":156220,"count":3}],"isBlockCoverage":true},{"functionName":"checkRedeclarationInScope","ranges":[{"startOffset":156228,"endOffset":156419,"count":47},{"startOffset":156347,"endOffset":156415,"count":0}],"isBlockCoverage":true},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":156423,"endOffset":157067,"count":47},{"startOffset":156513,"endOffset":156526,"count":0},{"startOffset":156570,"endOffset":156694,"count":6},{"startOffset":156694,"endOffset":156739,"count":41},{"startOffset":156739,"endOffset":156868,"count":3},{"startOffset":156830,"endOffset":156861,"count":0},{"startOffset":156868,"endOffset":156914,"count":38},{"startOffset":156914,"endOffset":156981,"count":0},{"startOffset":156982,"endOffset":157062,"count":38},{"startOffset":157025,"endOffset":157062,"count":3}],"isBlockCoverage":true},{"functionName":"checkLocalExport","ranges":[{"startOffset":157071,"endOffset":157323,"count":0}],"isBlockCoverage":false},{"functionName":"currentScope","ranges":[{"startOffset":157327,"endOffset":157403,"count":48}],"isBlockCoverage":true},{"functionName":"currentVarScope","ranges":[{"startOffset":157407,"endOffset":157597,"count":35},{"startOffset":157478,"endOffset":157593,"count":49},{"startOffset":157556,"endOffset":157587,"count":35},{"startOffset":157593,"endOffset":157596,"count":0}],"isBlockCoverage":true},{"functionName":"currentThisScope","ranges":[{"startOffset":157601,"endOffset":157855,"count":239},{"startOffset":157673,"endOffset":157851,"count":317},{"startOffset":157751,"endOffset":157779,"count":78},{"startOffset":157781,"endOffset":157812,"count":239},{"startOffset":157814,"endOffset":157845,"count":239},{"startOffset":157851,"endOffset":157854,"count":0}],"isBlockCoverage":true},{"functionName":"TypeScriptScope","ranges":[{"startOffset":157900,"endOffset":158071,"count":0}],"isBlockCoverage":false},{"functionName":"createScope","ranges":[{"startOffset":158130,"endOffset":158193,"count":0}],"isBlockCoverage":false},{"functionName":"declareName","ranges":[{"startOffset":158197,"endOffset":158933,"count":0}],"isBlockCoverage":false},{"functionName":"isRedeclaredInScope","ranges":[{"startOffset":158937,"endOffset":159656,"count":0}],"isBlockCoverage":false},{"functionName":"checkLocalExport","ranges":[{"startOffset":159660,"endOffset":159851,"count":0}],"isBlockCoverage":false},{"functionName":"ProductionParameterHandler","ranges":[{"startOffset":159996,"endOffset":160037,"count":11}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":160041,"endOffset":160088,"count":35}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":160092,"endOffset":160127,"count":24}],"isBlockCoverage":true},{"functionName":"currentFlags","ranges":[{"startOffset":160131,"endOffset":160199,"count":300}],"isBlockCoverage":true},{"functionName":"get hasAwait","ranges":[{"startOffset":160203,"endOffset":160275,"count":30}],"isBlockCoverage":true},{"functionName":"get hasYield","ranges":[{"startOffset":160279,"endOffset":160351,"count":244}],"isBlockCoverage":true},{"functionName":"get hasReturn","ranges":[{"startOffset":160355,"endOffset":160429,"count":14}],"isBlockCoverage":true},{"functionName":"functionFlags","ranges":[{"startOffset":160433,"endOffset":160553,"count":12},{"startOffset":160498,"endOffset":160511,"count":0},{"startOffset":160532,"endOffset":160545,"count":0}],"isBlockCoverage":true},{"functionName":"nonNull","ranges":[{"startOffset":160555,"endOffset":160661,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":160663,"endOffset":160737,"count":0}],"isBlockCoverage":false},{"functionName":"keywordTypeFromName","ranges":[{"startOffset":162570,"endOffset":163191,"count":0}],"isBlockCoverage":false},{"functionName":"typescript","ranges":[{"startOffset":163211,"endOffset":220788,"count":0}],"isBlockCoverage":false},{"functionName":"placeholders","ranges":[{"startOffset":220877,"endOffset":226879,"count":1}],"isBlockCoverage":true},{"functionName":"parsePlaceholder","ranges":[{"startOffset":220920,"endOffset":221325,"count":104},{"startOffset":220992,"endOffset":221321,"count":0}],"isBlockCoverage":true},{"functionName":"finishPlaceholder","ranges":[{"startOffset":221329,"endOffset":221556,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenFromCode","ranges":[{"startOffset":221560,"endOffset":221769,"count":183},{"startOffset":221605,"endOffset":221656,"count":0},{"startOffset":221658,"endOffset":221715,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprAtom","ranges":[{"startOffset":221773,"endOffset":221879,"count":42}],"isBlockCoverage":true},{"functionName":"parseIdentifier","ranges":[{"startOffset":221883,"endOffset":221993,"count":45}],"isBlockCoverage":true},{"functionName":"checkReservedWord","ranges":[{"startOffset":221997,"endOffset":222093,"count":32}],"isBlockCoverage":true},{"functionName":"parseBindingAtom","ranges":[{"startOffset":222097,"endOffset":222206,"count":5}],"isBlockCoverage":true},{"functionName":"checkLVal","ranges":[{"startOffset":222210,"endOffset":222299,"count":10}],"isBlockCoverage":true},{"functionName":"toAssignable","ranges":[{"startOffset":222303,"endOffset":222520,"count":3},{"startOffset":222368,"endOffset":222405,"count":0},{"startOffset":222407,"endOffset":222470,"count":0}],"isBlockCoverage":true},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":222524,"endOffset":222665,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":222669,"endOffset":223214,"count":5},{"startOffset":222744,"endOffset":222785,"count":0},{"startOffset":222853,"endOffset":223213,"count":0}],"isBlockCoverage":true},{"functionName":"parseBlock","ranges":[{"startOffset":223218,"endOffset":223322,"count":8}],"isBlockCoverage":true},{"functionName":"parseFunctionId","ranges":[{"startOffset":223326,"endOffset":223436,"count":4}],"isBlockCoverage":true},{"functionName":"parseClass","ranges":[{"startOffset":223440,"endOffset":224332,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":224336,"endOffset":224985,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":224989,"endOffset":225346,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":225350,"endOffset":225542,"count":0}],"isBlockCoverage":false},{"functionName":"checkExport","ranges":[{"startOffset":225546,"endOffset":225831,"count":0}],"isBlockCoverage":false},{"functionName":"parseImport","ranges":[{"startOffset":225835,"endOffset":226755,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSource","ranges":[{"startOffset":226759,"endOffset":226876,"count":0}],"isBlockCoverage":false},{"functionName":"v8intrinsic","ranges":[{"startOffset":226902,"endOffset":227573,"count":0}],"isBlockCoverage":false},{"functionName":"hasPlugin","ranges":[{"startOffset":227577,"endOffset":227769,"count":63}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":227635,"endOffset":227765,"count":351},{"startOffset":227678,"endOffset":227718,"count":0}],"isBlockCoverage":true},{"functionName":"getPluginOption","ranges":[{"startOffset":227770,"endOffset":228076,"count":0}],"isBlockCoverage":false},{"functionName":"validatePlugins","ranges":[{"startOffset":228191,"endOffset":230329,"count":5},{"startOffset":228267,"endOffset":228999,"count":0},{"startOffset":229034,"endOffset":229069,"count":0},{"startOffset":229071,"endOffset":229144,"count":0},{"startOffset":229187,"endOffset":229223,"count":3},{"startOffset":229225,"endOffset":229307,"count":0},{"startOffset":229354,"endOffset":229443,"count":0},{"startOffset":229445,"endOffset":229602,"count":0},{"startOffset":229650,"endOffset":230012,"count":0},{"startOffset":230057,"endOffset":230157,"count":0},{"startOffset":230159,"endOffset":230327,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":229571,"endOffset":229584,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":230296,"endOffset":230309,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":230886,"endOffset":231172,"count":11},{"startOffset":231032,"endOffset":231151,"count":154},{"startOffset":231113,"endOffset":231124,"count":28},{"startOffset":231125,"endOffset":231146,"count":126}],"isBlockCoverage":true},{"functionName":"State","ranges":[{"startOffset":231190,"endOffset":232490,"count":11}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":232494,"endOffset":232695,"count":11},{"startOffset":232557,"endOffset":232564,"count":2},{"startOffset":232565,"endOffset":232598,"count":9}],"isBlockCoverage":true},{"functionName":"curPosition","ranges":[{"startOffset":232699,"endOffset":232784,"count":2093}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":232788,"endOffset":233127,"count":0}],"isBlockCoverage":false},{"functionName":"isDigit","ranges":[{"startOffset":233147,"endOffset":233208,"count":523},{"startOffset":233192,"endOffset":233205,"count":520}],"isBlockCoverage":true},{"functionName":"Token","ranges":[{"startOffset":233829,"endOffset":234032,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":234076,"endOffset":234290,"count":11}],"isBlockCoverage":true},{"functionName":"pushToken","ranges":[{"startOffset":234294,"endOffset":234426,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":234430,"endOffset":234819,"count":1017},{"startOffset":234534,"endOffset":234590,"count":0}],"isBlockCoverage":true},{"functionName":"eat","ranges":[{"startOffset":234823,"endOffset":234943,"count":1943},{"startOffset":234861,"endOffset":234906,"count":358},{"startOffset":234906,"endOffset":234939,"count":1585}],"isBlockCoverage":true},{"functionName":"match","ranges":[{"startOffset":234947,"endOffset":235001,"count":5913}],"isBlockCoverage":true},{"functionName":"lookahead","ranges":[{"startOffset":235005,"endOffset":235228,"count":0}],"isBlockCoverage":false},{"functionName":"nextTokenStart","ranges":[{"startOffset":235232,"endOffset":235307,"count":8}],"isBlockCoverage":true},{"functionName":"nextTokenStartSince","ranges":[{"startOffset":235311,"endOffset":235460,"count":8}],"isBlockCoverage":true},{"functionName":"lookaheadCharCode","ranges":[{"startOffset":235464,"endOffset":235546,"count":7}],"isBlockCoverage":true},{"functionName":"setStrict","ranges":[{"startOffset":235550,"endOffset":235912,"count":20},{"startOffset":235670,"endOffset":235911,"count":0}],"isBlockCoverage":true},{"functionName":"curContext","ranges":[{"startOffset":235916,"endOffset":235996,"count":1088}],"isBlockCoverage":true},{"functionName":"nextToken","ranges":[{"startOffset":236000,"endOffset":236572,"count":1028},{"startOffset":236085,"endOffset":236093,"count":0},{"startOffset":236308,"endOffset":236364,"count":20},{"startOffset":236364,"endOffset":236406,"count":1008},{"startOffset":236406,"endOffset":236414,"count":0},{"startOffset":236415,"endOffset":236436,"count":1008},{"startOffset":236457,"endOffset":236486,"count":0},{"startOffset":236486,"endOffset":236568,"count":1008}],"isBlockCoverage":true},{"functionName":"pushComment","ranges":[{"startOffset":236576,"endOffset":236943,"count":13},{"startOffset":236673,"endOffset":236689,"count":2},{"startOffset":236690,"endOffset":236705,"count":11},{"startOffset":236846,"endOffset":236870,"count":0}],"isBlockCoverage":true},{"functionName":"skipBlockComment","ranges":[{"startOffset":236947,"endOffset":237608,"count":2},{"startOffset":237131,"endOffset":237190,"count":0},{"startOffset":237353,"endOffset":237448,"count":0},{"startOffset":237476,"endOffset":237483,"count":0}],"isBlockCoverage":true},{"functionName":"skipLineComment","ranges":[{"startOffset":237612,"endOffset":238138,"count":11},{"startOffset":237856,"endOffset":237889,"count":592},{"startOffset":237891,"endOffset":237952,"count":592},{"startOffset":237986,"endOffset":237993,"count":0}],"isBlockCoverage":true},{"functionName":"skipSpace","ranges":[{"startOffset":238142,"endOffset":239163,"count":1028},{"startOffset":238203,"endOffset":239159,"count":1694},{"startOffset":238290,"endOffset":238298,"count":580},{"startOffset":238307,"endOffset":238316,"count":580},{"startOffset":238325,"endOffset":238377,"count":580},{"startOffset":238387,"endOffset":238503,"count":0},{"startOffset":238513,"endOffset":238521,"count":93},{"startOffset":238530,"endOffset":238540,"count":93},{"startOffset":238549,"endOffset":238685,"count":93},{"startOffset":238695,"endOffset":239007,"count":14},{"startOffset":238779,"endOffset":238847,"count":2},{"startOffset":238861,"endOffset":238929,"count":11},{"startOffset":238943,"endOffset":238977,"count":1},{"startOffset":238989,"endOffset":239007,"count":13},{"startOffset":239017,"endOffset":239144,"count":1007},{"startOffset":239058,"endOffset":239101,"count":0}],"isBlockCoverage":true},{"functionName":"finishToken","ranges":[{"startOffset":239167,"endOffset":239433,"count":1028}],"isBlockCoverage":true},{"functionName":"readToken_numberSign","ranges":[{"startOffset":239437,"endOffset":240367,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_dot","ranges":[{"startOffset":240371,"endOffset":240759,"count":38},{"startOffset":240484,"endOffset":240534,"count":0},{"startOffset":240556,"endOffset":240607,"count":0},{"startOffset":240609,"endOffset":240683,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_slash","ranges":[{"startOffset":240763,"endOffset":241090,"count":1},{"startOffset":240907,"endOffset":241086,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_interpreter","ranges":[{"startOffset":241094,"endOffset":241592,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_mult_modulo","ranges":[{"startOffset":241596,"endOffset":242076,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_pipe_amp","ranges":[{"startOffset":242080,"endOffset":243337,"count":10},{"startOffset":242253,"endOffset":242302,"count":0},{"startOffset":242345,"endOffset":242362,"count":7},{"startOffset":242363,"endOffset":242381,"count":3},{"startOffset":242415,"endOffset":243309,"count":0},{"startOffset":243310,"endOffset":243328,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_caret","ranges":[{"startOffset":243341,"endOffset":243547,"count":0}],"isBlockCoverage":false},{"functionName":"readToken_plus_min","ranges":[{"startOffset":243551,"endOffset":244158,"count":33},{"startOffset":243662,"endOffset":244034,"count":1},{"startOffset":243686,"endOffset":243703,"count":0},{"startOffset":243704,"endOffset":243755,"count":0},{"startOffset":243756,"endOffset":243863,"count":0},{"startOffset":243865,"endOffset":243975,"count":0},{"startOffset":244034,"endOffset":244057,"count":32},{"startOffset":244057,"endOffset":244102,"count":3},{"startOffset":244102,"endOffset":244154,"count":29}],"isBlockCoverage":true},{"functionName":"readToken_lt_gt","ranges":[{"startOffset":244162,"endOffset":244930,"count":1},{"startOffset":244288,"endOffset":244576,"count":0},{"startOffset":244598,"endOffset":244612,"count":0},{"startOffset":244613,"endOffset":244630,"count":0},{"startOffset":244631,"endOffset":244682,"count":0},{"startOffset":244683,"endOffset":244734,"count":0},{"startOffset":244736,"endOffset":244836,"count":0},{"startOffset":244859,"endOffset":244882,"count":0}],"isBlockCoverage":true},{"functionName":"readToken_eq_excl","ranges":[{"startOffset":244934,"endOffset":245345,"count":86},{"startOffset":245042,"endOffset":245158,"count":12},{"startOffset":245129,"endOffset":245132,"count":5},{"startOffset":245133,"endOffset":245136,"count":7},{"startOffset":245158,"endOffset":245180,"count":74},{"startOffset":245180,"endOffset":245194,"count":70},{"startOffset":245196,"endOffset":245281,"count":0},{"startOffset":245281,"endOffset":245313,"count":74},{"startOffset":245313,"endOffset":245323,"count":70},{"startOffset":245324,"endOffset":245336,"count":4}],"isBlockCoverage":true},{"functionName":"readToken_question","ranges":[{"startOffset":245349,"endOffset":245898,"count":10},{"startOffset":245514,"endOffset":245535,"count":0},{"startOffset":245537,"endOffset":245684,"count":0},{"startOffset":245706,"endOffset":245738,"count":0},{"startOffset":245740,"endOffset":245817,"count":0}],"isBlockCoverage":true},{"functionName":"getTokenFromCode","ranges":[{"startOffset":245902,"endOffset":249838,"count":1008},{"startOffset":245953,"endOffset":246007,"count":38},{"startOffset":246015,"endOffset":246105,"count":75},{"startOffset":246113,"endOffset":246203,"count":75},{"startOffset":246211,"endOffset":246299,"count":96},{"startOffset":246307,"endOffset":246396,"count":45},{"startOffset":246404,"endOffset":246904,"count":1},{"startOffset":246458,"endOffset":246510,"count":0},{"startOffset":246512,"endOffset":246798,"count":0},{"startOffset":246912,"endOffset":247004,"count":1},{"startOffset":247012,"endOffset":247510,"count":32},{"startOffset":247067,"endOffset":247119,"count":0},{"startOffset":247121,"endOffset":247406,"count":0},{"startOffset":247518,"endOffset":247609,"count":32},{"startOffset":247617,"endOffset":247883,"count":20},{"startOffset":247669,"endOffset":247720,"count":0},{"startOffset":247722,"endOffset":247780,"count":0},{"startOffset":247891,"endOffset":247950,"count":10},{"startOffset":247958,"endOffset":248051,"count":0},{"startOffset":248059,"endOffset":248498,"count":2},{"startOffset":248188,"endOffset":248259,"count":0},{"startOffset":248304,"endOffset":248374,"count":0},{"startOffset":248418,"endOffset":248488,"count":0},{"startOffset":248506,"endOffset":248514,"count":16},{"startOffset":248521,"endOffset":248529,"count":16},{"startOffset":248536,"endOffset":248544,"count":19},{"startOffset":248551,"endOffset":248559,"count":19},{"startOffset":248566,"endOffset":248574,"count":19},{"startOffset":248581,"endOffset":248589,"count":21},{"startOffset":248596,"endOffset":248604,"count":21},{"startOffset":248611,"endOffset":248619,"count":21},{"startOffset":248626,"endOffset":248682,"count":21},{"startOffset":248690,"endOffset":248698,"count":54},{"startOffset":248705,"endOffset":248760,"count":55},{"startOffset":248768,"endOffset":248824,"count":1},{"startOffset":248832,"endOffset":248840,"count":0},{"startOffset":248847,"endOffset":248913,"count":0},{"startOffset":248921,"endOffset":248930,"count":7},{"startOffset":248937,"endOffset":249000,"count":10},{"startOffset":249008,"endOffset":249064,"count":0},{"startOffset":249072,"endOffset":249080,"count":32},{"startOffset":249087,"endOffset":249150,"count":33},{"startOffset":249158,"endOffset":249166,"count":1},{"startOffset":249173,"endOffset":249233,"count":1},{"startOffset":249241,"endOffset":249249,"count":79},{"startOffset":249256,"endOffset":249318,"count":86},{"startOffset":249326,"endOffset":249390,"count":0},{"startOffset":249398,"endOffset":249484,"count":0},{"startOffset":249492,"endOffset":249553,"count":0},{"startOffset":249561,"endOffset":249610,"count":0},{"startOffset":249618,"endOffset":249720,"count":376},{"startOffset":249727,"endOffset":249837,"count":0}],"isBlockCoverage":true},{"functionName":"finishOp","ranges":[{"startOffset":249842,"endOffset":250002,"count":130}],"isBlockCoverage":true},{"functionName":"readRegexp","ranges":[{"startOffset":250006,"endOffset":251452,"count":1},{"startOffset":250095,"endOffset":250703,"count":7},{"startOffset":250138,"endOffset":250214,"count":0},{"startOffset":250299,"endOffset":250375,"count":0},{"startOffset":250396,"endOffset":250430,"count":0},{"startOffset":250462,"endOffset":250499,"count":1},{"startOffset":250499,"endOffset":250632,"count":6},{"startOffset":250520,"endOffset":250530,"count":1},{"startOffset":250532,"endOffset":250570,"count":1},{"startOffset":250570,"endOffset":250632,"count":5},{"startOffset":250591,"endOffset":250602,"count":1},{"startOffset":250604,"endOffset":250632,"count":1},{"startOffset":250632,"endOffset":250703,"count":6},{"startOffset":251001,"endOffset":251137,"count":0},{"startOffset":251194,"endOffset":251279,"count":0},{"startOffset":251309,"endOffset":251360,"count":0}],"isBlockCoverage":true},{"functionName":"readInt","ranges":[{"startOffset":251456,"endOffset":253597,"count":180},{"startOffset":251591,"endOffset":251630,"count":159},{"startOffset":251631,"endOffset":251676,"count":21},{"startOffset":251719,"endOffset":251756,"count":159},{"startOffset":251757,"endOffset":251899,"count":21},{"startOffset":251810,"endOffset":251899,"count":0},{"startOffset":251982,"endOffset":251992,"count":21},{"startOffset":251993,"endOffset":251998,"count":159},{"startOffset":252012,"endOffset":253452,"count":682},{"startOffset":252134,"endOffset":252852,"count":242},{"startOffset":252161,"endOffset":252844,"count":0},{"startOffset":252876,"endOffset":252915,"count":0},{"startOffset":252937,"endOffset":252976,"count":159},{"startOffset":252976,"endOffset":253075,"count":523},{"startOffset":253002,"endOffset":253036,"count":502},{"startOffset":253036,"endOffset":253075,"count":21},{"startOffset":253101,"endOffset":253386,"count":21},{"startOffset":253142,"endOffset":253153,"count":0},{"startOffset":253155,"endOffset":253268,"count":0},{"startOffset":253288,"endOffset":253344,"count":0},{"startOffset":253386,"endOffset":253452,"count":661},{"startOffset":253502,"endOffset":253535,"count":159},{"startOffset":253548,"endOffset":253574,"count":0}],"isBlockCoverage":true},{"functionName":"readRadixNumber","ranges":[{"startOffset":253601,"endOffset":254433,"count":0}],"isBlockCoverage":false},{"functionName":"readNumber","ranges":[{"startOffset":254437,"endOffset":256614,"count":21},{"startOffset":254642,"endOffset":254703,"count":0},{"startOffset":254749,"endOffset":254787,"count":4},{"startOffset":254805,"endOffset":255047,"count":0},{"startOffset":255124,"endOffset":255133,"count":0},{"startOffset":255135,"endOffset":255264,"count":0},{"startOffset":255304,"endOffset":255313,"count":0},{"startOffset":255315,"endOffset":255611,"count":0},{"startOffset":255656,"endOffset":255690,"count":13},{"startOffset":255692,"endOffset":255905,"count":0},{"startOffset":255928,"endOffset":255996,"count":0},{"startOffset":256020,"endOffset":256200,"count":0},{"startOffset":256269,"endOffset":256348,"count":0},{"startOffset":256447,"endOffset":256511,"count":0},{"startOffset":256535,"endOffset":256553,"count":0}],"isBlockCoverage":true},{"functionName":"readCodePoint","ranges":[{"startOffset":256618,"endOffset":257211,"count":159},{"startOffset":256739,"endOffset":257119,"count":0}],"isBlockCoverage":true},{"functionName":"readString","ranges":[{"startOffset":257215,"endOffset":258112,"count":55},{"startOffset":257306,"endOffset":258007,"count":1705},{"startOffset":257349,"endOffset":257436,"count":0},{"startOffset":257518,"endOffset":257524,"count":55},{"startOffset":257524,"endOffset":257547,"count":1650},{"startOffset":257547,"endOffset":257698,"count":164},{"startOffset":257698,"endOffset":258001,"count":1486},{"startOffset":257736,"endOffset":257848,"count":0},{"startOffset":257873,"endOffset":257960,"count":0}],"isBlockCoverage":true},{"functionName":"readTmplToken","ranges":[{"startOffset":258116,"endOffset":259921,"count":0}],"isBlockCoverage":false},{"functionName":"readEscapedChar","ranges":[{"startOffset":259925,"endOffset":261955,"count":164},{"startOffset":260098,"endOffset":260128,"count":5},{"startOffset":260136,"endOffset":260166,"count":0},{"startOffset":260174,"endOffset":260337,"count":0},{"startOffset":260345,"endOffset":260501,"count":159},{"startOffset":260455,"endOffset":260461,"count":0},{"startOffset":260509,"endOffset":260539,"count":0},{"startOffset":260547,"endOffset":260576,"count":0},{"startOffset":260584,"endOffset":260618,"count":0},{"startOffset":260626,"endOffset":260656,"count":0},{"startOffset":260664,"endOffset":260770,"count":0},{"startOffset":260778,"endOffset":260863,"count":0},{"startOffset":260871,"endOffset":260881,"count":0},{"startOffset":260888,"endOffset":260917,"count":0},{"startOffset":260925,"endOffset":260933,"count":0},{"startOffset":260940,"endOffset":261007,"count":0},{"startOffset":261015,"endOffset":261945,"count":0}],"isBlockCoverage":true},{"functionName":"readHexChar","ranges":[{"startOffset":261959,"endOffset":262296,"count":159},{"startOffset":262115,"endOffset":262277,"count":0}],"isBlockCoverage":true},{"functionName":"readWord1","ranges":[{"startOffset":262300,"endOffset":263577,"count":376},{"startOffset":262482,"endOffset":263508,"count":2671},{"startOffset":262574,"endOffset":262631,"count":2295},{"startOffset":262619,"endOffset":262622,"count":0},{"startOffset":262631,"endOffset":263502,"count":376},{"startOffset":262663,"endOffset":262675,"count":0},{"startOffset":262677,"endOffset":262712,"count":0},{"startOffset":262733,"endOffset":263472,"count":0}],"isBlockCoverage":true},{"functionName":"isIterator","ranges":[{"startOffset":263581,"endOffset":263667,"count":0}],"isBlockCoverage":false},{"functionName":"readWord","ranges":[{"startOffset":263671,"endOffset":263971,"count":376},{"startOffset":263755,"endOffset":263768,"count":280},{"startOffset":263801,"endOffset":263850,"count":0},{"startOffset":263852,"endOffset":263932,"count":0}],"isBlockCoverage":true},{"functionName":"checkKeywordEscapes","ranges":[{"startOffset":263975,"endOffset":264171,"count":1017},{"startOffset":264051,"endOffset":264076,"count":94},{"startOffset":264078,"endOffset":264167,"count":0}],"isBlockCoverage":true},{"functionName":"braceIsBlock","ranges":[{"startOffset":264175,"endOffset":265177,"count":32},{"startOffset":264285,"endOffset":264324,"count":24},{"startOffset":264326,"endOffset":264352,"count":12},{"startOffset":264352,"endOffset":264387,"count":20},{"startOffset":264387,"endOffset":264463,"count":1},{"startOffset":264425,"endOffset":264462,"count":0},{"startOffset":264465,"endOffset":264501,"count":1},{"startOffset":264501,"endOffset":264590,"count":19},{"startOffset":264565,"endOffset":264590,"count":0},{"startOffset":264592,"endOffset":264687,"count":0},{"startOffset":264687,"endOffset":264722,"count":19},{"startOffset":264722,"endOffset":264748,"count":18},{"startOffset":264749,"endOffset":264774,"count":18},{"startOffset":264775,"endOffset":264803,"count":18},{"startOffset":264804,"endOffset":264831,"count":11},{"startOffset":264833,"endOffset":264859,"count":8},{"startOffset":264859,"endOffset":264896,"count":11},{"startOffset":264896,"endOffset":264951,"count":0},{"startOffset":264951,"endOffset":265013,"count":11},{"startOffset":265014,"endOffset":265040,"count":11},{"startOffset":265042,"endOffset":265069,"count":0},{"startOffset":265069,"endOffset":265110,"count":11},{"startOffset":265110,"endOffset":265136,"count":0},{"startOffset":265136,"endOffset":265176,"count":11}],"isBlockCoverage":true},{"functionName":"updateContext","ranges":[{"startOffset":265181,"endOffset":265533,"count":1028},{"startOffset":265279,"endOffset":265340,"count":96},{"startOffset":265306,"endOffset":265339,"count":95},{"startOffset":265342,"endOffset":265387,"count":1},{"startOffset":265387,"endOffset":265529,"count":1027},{"startOffset":265426,"endOffset":265468,"count":507},{"startOffset":265468,"endOffset":265529,"count":520}],"isBlockCoverage":true},{"functionName":"addExtra","ranges":[{"startOffset":265577,"endOffset":265701,"count":189},{"startOffset":265619,"endOffset":265626,"count":0},{"startOffset":265669,"endOffset":265674,"count":95}],"isBlockCoverage":true},{"functionName":"isRelational","ranges":[{"startOffset":265705,"endOffset":265795,"count":0}],"isBlockCoverage":false},{"functionName":"isLookaheadRelational","ranges":[{"startOffset":265799,"endOffset":266134,"count":0}],"isBlockCoverage":false},{"functionName":"expectRelational","ranges":[{"startOffset":266138,"endOffset":266282,"count":0}],"isBlockCoverage":false},{"functionName":"isContextual","ranges":[{"startOffset":266286,"endOffset":266401,"count":784},{"startOffset":266341,"endOffset":266369,"count":470},{"startOffset":266370,"endOffset":266396,"count":0}],"isBlockCoverage":true},{"functionName":"isUnparsedContextual","ranges":[{"startOffset":266405,"endOffset":266639,"count":1},{"startOffset":266547,"endOffset":266634,"count":0}],"isBlockCoverage":true},{"functionName":"isLookaheadContextual","ranges":[{"startOffset":266643,"endOffset":266766,"count":0}],"isBlockCoverage":false},{"functionName":"eatContextual","ranges":[{"startOffset":266770,"endOffset":266855,"count":0}],"isBlockCoverage":false},{"functionName":"expectContextual","ranges":[{"startOffset":266859,"endOffset":266963,"count":0}],"isBlockCoverage":false},{"functionName":"canInsertSemicolon","ranges":[{"startOffset":266967,"endOffset":267087,"count":33},{"startOffset":267023,"endOffset":267050,"count":29},{"startOffset":267051,"endOffset":267082,"count":19}],"isBlockCoverage":true},{"functionName":"hasPrecedingLineBreak","ranges":[{"startOffset":267091,"endOffset":267206,"count":19}],"isBlockCoverage":true},{"functionName":"isLineTerminator","ranges":[{"startOffset":267210,"endOffset":267296,"count":104},{"startOffset":267263,"endOffset":267291,"count":27}],"isBlockCoverage":true},{"functionName":"semicolon","ranges":[{"startOffset":267300,"endOffset":267386,"count":85},{"startOffset":267348,"endOffset":267382,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":267390,"endOffset":267463,"count":140},{"startOffset":267429,"endOffset":267458,"count":0}],"isBlockCoverage":true},{"functionName":"assertNoSpace","ranges":[{"startOffset":267467,"endOffset":267625,"count":0}],"isBlockCoverage":false},{"functionName":"unexpected","ranges":[{"startOffset":267629,"endOffset":267890,"count":0}],"isBlockCoverage":false},{"functionName":"expectPlugin","ranges":[{"startOffset":267894,"endOffset":268166,"count":0}],"isBlockCoverage":false},{"functionName":"expectOnePlugin","ranges":[{"startOffset":268170,"endOffset":268473,"count":0}],"isBlockCoverage":false},{"functionName":"checkYieldAwaitInDefaultParams","ranges":[{"startOffset":268477,"endOffset":268835,"count":12},{"startOffset":268547,"endOffset":268623,"count":0},{"startOffset":268625,"endOffset":268709,"count":0},{"startOffset":268747,"endOffset":268831,"count":0}],"isBlockCoverage":true},{"functionName":"tryParse","ranges":[{"startOffset":268839,"endOffset":270006,"count":0}],"isBlockCoverage":false},{"functionName":"checkExpressionErrors","ranges":[{"startOffset":270010,"endOffset":270437,"count":1068},{"startOffset":270095,"endOffset":270108,"count":62},{"startOffset":270108,"endOffset":270210,"count":1006},{"startOffset":270210,"endOffset":270258,"count":789},{"startOffset":270258,"endOffset":270290,"count":217},{"startOffset":270290,"endOffset":270337,"count":0},{"startOffset":270337,"endOffset":270365,"count":217},{"startOffset":270365,"endOffset":270433,"count":0}],"isBlockCoverage":true},{"functionName":"isLiteralPropertyName","ranges":[{"startOffset":270441,"endOffset":270615,"count":1}],"isBlockCoverage":true},{"functionName":"ExpressionErrors","ranges":[{"startOffset":270646,"endOffset":270723,"count":259}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":270743,"endOffset":271046,"count":1022},{"startOffset":270898,"endOffset":270906,"count":0},{"startOffset":270932,"endOffset":270954,"count":0},{"startOffset":270978,"endOffset":270986,"count":0},{"startOffset":271006,"endOffset":271042,"count":0}],"isBlockCoverage":true},{"functionName":"__clone","ranges":[{"startOffset":271050,"endOffset":271388,"count":0}],"isBlockCoverage":false},{"functionName":"startNode","ranges":[{"startOffset":271432,"endOffset":271515,"count":730}],"isBlockCoverage":true},{"functionName":"startNodeAt","ranges":[{"startOffset":271519,"endOffset":271583,"count":292}],"isBlockCoverage":true},{"functionName":"startNodeAtNode","ranges":[{"startOffset":271587,"endOffset":271671,"count":0}],"isBlockCoverage":false},{"functionName":"finishNode","ranges":[{"startOffset":271675,"endOffset":271794,"count":807}],"isBlockCoverage":true},{"functionName":"finishNodeAt","ranges":[{"startOffset":271798,"endOffset":272003,"count":809},{"startOffset":271931,"endOffset":271951,"count":0}],"isBlockCoverage":true},{"functionName":"resetStartLocation","ranges":[{"startOffset":272007,"endOffset":272161,"count":0}],"isBlockCoverage":false},{"functionName":"resetEndLocation","ranges":[{"startOffset":272165,"endOffset":272354,"count":0}],"isBlockCoverage":false},{"functionName":"resetStartLocationFromNode","ranges":[{"startOffset":272358,"endOffset":272489,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapParenthesizedExpression","ranges":[{"startOffset":272532,"endOffset":272649,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignable","ranges":[{"startOffset":272691,"endOffset":274792,"count":54},{"startOffset":272880,"endOffset":272907,"count":0},{"startOffset":272910,"endOffset":273157,"count":0},{"startOffset":273190,"endOffset":273208,"count":51},{"startOffset":273215,"endOffset":273236,"count":51},{"startOffset":273243,"endOffset":273263,"count":51},{"startOffset":273270,"endOffset":273310,"count":51},{"startOffset":273318,"endOffset":273881,"count":0},{"startOffset":273889,"endOffset":273965,"count":0},{"startOffset":273973,"endOffset":274183,"count":0},{"startOffset":274191,"endOffset":274386,"count":0},{"startOffset":274394,"endOffset":274668,"count":0},{"startOffset":274676,"endOffset":274764,"count":0}],"isBlockCoverage":true},{"functionName":"toAssignableObjectExpressionProp","ranges":[{"startOffset":274796,"endOffset":275211,"count":0}],"isBlockCoverage":false},{"functionName":"toAssignableList","ranges":[{"startOffset":275215,"endOffset":276185,"count":0}],"isBlockCoverage":false},{"functionName":"toReferencedList","ranges":[{"startOffset":276189,"endOffset":276263,"count":54}],"isBlockCoverage":true},{"functionName":"toReferencedListDeep","ranges":[{"startOffset":276267,"endOffset":276603,"count":51},{"startOffset":276429,"endOffset":276599,"count":72},{"startOffset":276489,"endOffset":276497,"count":0},{"startOffset":276534,"endOffset":276593,"count":1}],"isBlockCoverage":true},{"functionName":"parseSpread","ranges":[{"startOffset":276607,"endOffset":276866,"count":0}],"isBlockCoverage":false},{"functionName":"parseRestBinding","ranges":[{"startOffset":276870,"endOffset":277040,"count":0}],"isBlockCoverage":false},{"functionName":"parseBindingAtom","ranges":[{"startOffset":277044,"endOffset":277459,"count":39},{"startOffset":277102,"endOffset":277337,"count":0},{"startOffset":277345,"endOffset":277413,"count":0}],"isBlockCoverage":true},{"functionName":"parseBindingList","ranges":[{"startOffset":277463,"endOffset":278475,"count":12},{"startOffset":277624,"endOffset":277656,"count":8},{"startOffset":277656,"endOffset":277705,"count":4},{"startOffset":277728,"endOffset":277754,"count":0},{"startOffset":277756,"endOffset":277790,"count":0},{"startOffset":277817,"endOffset":277841,"count":0},{"startOffset":277879,"endOffset":278059,"count":0},{"startOffset":278132,"endOffset":278163,"count":0},{"startOffset":278165,"endOffset":278261,"count":0},{"startOffset":278300,"endOffset":278361,"count":0}],"isBlockCoverage":true},{"functionName":"parseAssignableListItem","ranges":[{"startOffset":278479,"endOffset":278787,"count":12},{"startOffset":278723,"endOffset":278766,"count":0}],"isBlockCoverage":true},{"functionName":"parseAssignableListItemTypes","ranges":[{"startOffset":278791,"endOffset":278850,"count":12}],"isBlockCoverage":true},{"functionName":"parseMaybeDefault","ranges":[{"startOffset":278854,"endOffset":279256,"count":24},{"startOffset":278924,"endOffset":278946,"count":12},{"startOffset":278972,"endOffset":278991,"count":12},{"startOffset":279009,"endOffset":279035,"count":12},{"startOffset":279078,"endOffset":279255,"count":0}],"isBlockCoverage":true},{"functionName":"checkLVal","ranges":[{"startOffset":279260,"endOffset":281803,"count":100},{"startOffset":279415,"endOffset":280265,"count":96},{"startOffset":279464,"endOffset":279581,"count":12},{"startOffset":279486,"endOffset":279538,"count":0},{"startOffset":279583,"endOffset":279745,"count":0},{"startOffset":279773,"endOffset":279989,"count":2},{"startOffset":279848,"endOffset":279922,"count":0},{"startOffset":280022,"endOffset":280044,"count":0},{"startOffset":280046,"endOffset":280126,"count":0},{"startOffset":280168,"endOffset":280249,"count":39},{"startOffset":280273,"endOffset":280443,"count":4},{"startOffset":280337,"endOffset":280427,"count":0},{"startOffset":280451,"endOffset":280868,"count":0},{"startOffset":280876,"endOffset":281209,"count":0},{"startOffset":281217,"endOffset":281341,"count":0},{"startOffset":281349,"endOffset":281465,"count":0},{"startOffset":281473,"endOffset":281615,"count":0},{"startOffset":281623,"endOffset":281793,"count":0}],"isBlockCoverage":true},{"functionName":"checkToRestConversion","ranges":[{"startOffset":281807,"endOffset":282021,"count":0}],"isBlockCoverage":false},{"functionName":"checkCommaAfterRest","ranges":[{"startOffset":282025,"endOffset":282278,"count":0}],"isBlockCoverage":false},{"functionName":"raiseRestNotLast","ranges":[{"startOffset":282282,"endOffset":282368,"count":0}],"isBlockCoverage":false},{"functionName":"raiseTrailingCommaAfterRest","ranges":[{"startOffset":282372,"endOffset":282464,"count":0}],"isBlockCoverage":false},{"functionName":"checkProto","ranges":[{"startOffset":282515,"endOffset":283260,"count":5},{"startOffset":282681,"endOffset":282702,"count":0},{"startOffset":282784,"endOffset":282795,"count":0},{"startOffset":282828,"endOffset":283256,"count":0}],"isBlockCoverage":true},{"functionName":"getExpression","ranges":[{"startOffset":283264,"endOffset":283714,"count":2},{"startOffset":283351,"endOffset":283367,"count":0},{"startOffset":283369,"endOffset":283409,"count":0},{"startOffset":283582,"endOffset":283614,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpression","ranges":[{"startOffset":283718,"endOffset":284298,"count":91},{"startOffset":283945,"endOffset":284276,"count":3},{"startOffset":284074,"endOffset":284164,"count":4},{"startOffset":284276,"endOffset":284297,"count":88}],"isBlockCoverage":true},{"functionName":"parseMaybeAssign","ranges":[{"startOffset":284302,"endOffset":286294,"count":265},{"startOffset":284500,"endOffset":284782,"count":0},{"startOffset":284843,"endOffset":284885,"count":23},{"startOffset":284885,"endOffset":284984,"count":242},{"startOffset":285019,"endOffset":285044,"count":260},{"startOffset":285046,"endOffset":285107,"count":172},{"startOffset":285222,"endOffset":285295,"count":72},{"startOffset":285331,"endOffset":286173,"count":57},{"startOffset":285494,"endOffset":285551,"count":0},{"startOffset":285605,"endOffset":285662,"count":0},{"startOffset":285696,"endOffset":285796,"count":54},{"startOffset":285796,"endOffset":285837,"count":3},{"startOffset":285905,"endOffset":285964,"count":0},{"startOffset":286173,"endOffset":286272,"count":208},{"startOffset":286204,"endOffset":286272,"count":194},{"startOffset":286272,"endOffset":286293,"count":208}],"isBlockCoverage":true},{"functionName":"parseMaybeConditional","ranges":[{"startOffset":286298,"endOffset":286846,"count":265},{"startOffset":286618,"endOffset":286652,"count":0},{"startOffset":286654,"endOffset":286680,"count":0},{"startOffset":286746,"endOffset":286758,"count":0}],"isBlockCoverage":true},{"functionName":"parseConditional","ranges":[{"startOffset":286850,"endOffset":287257,"count":265},{"startOffset":286953,"endOffset":287235,"count":10},{"startOffset":287235,"endOffset":287256,"count":255}],"isBlockCoverage":true},{"functionName":"parseExprOps","ranges":[{"startOffset":287261,"endOffset":287775,"count":265},{"startOffset":287551,"endOffset":287585,"count":0},{"startOffset":287587,"endOffset":287613,"count":0},{"startOffset":287679,"endOffset":287705,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprOp","ranges":[{"startOffset":287779,"endOffset":289857,"count":373},{"startOffset":287902,"endOffset":287938,"count":66},{"startOffset":287912,"endOffset":287937,"count":0},{"startOffset":287940,"endOffset":289835,"count":66},{"startOffset":287968,"endOffset":289829,"count":54},{"startOffset":288044,"endOffset":288084,"count":0},{"startOffset":288086,"endOffset":288120,"count":0},{"startOffset":288280,"endOffset":288314,"count":0},{"startOffset":288315,"endOffset":288408,"count":0},{"startOffset":288410,"endOffset":288514,"count":0},{"startOffset":288599,"endOffset":288625,"count":47},{"startOffset":288720,"endOffset":288885,"count":0},{"startOffset":288905,"endOffset":288957,"count":0},{"startOffset":289015,"endOffset":289084,"count":0},{"startOffset":289086,"endOffset":289304,"count":0},{"startOffset":289408,"endOffset":289419,"count":44},{"startOffset":289420,"endOffset":289441,"count":10},{"startOffset":289442,"endOffset":289462,"count":44},{"startOffset":289527,"endOffset":289589,"count":0},{"startOffset":289601,"endOffset":289638,"count":10},{"startOffset":289640,"endOffset":289738,"count":0},{"startOffset":289835,"endOffset":289856,"count":319}],"isBlockCoverage":true},{"functionName":"parseExprOpRightExpr","ranges":[{"startOffset":289861,"endOffset":290580,"count":54},{"startOffset":290006,"endOffset":290492,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":290174,"endOffset":290312,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":290396,"endOffset":290480,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprOpBaseRightExpr","ranges":[{"startOffset":290584,"endOffset":290829,"count":54},{"startOffset":290800,"endOffset":290810,"count":0}],"isBlockCoverage":true},{"functionName":"parseMaybeUnary","ranges":[{"startOffset":290833,"endOffset":292620,"count":327},{"startOffset":290907,"endOffset":290931,"count":0},{"startOffset":290933,"endOffset":290972,"count":0},{"startOffset":291006,"endOffset":292004,"count":8},{"startOffset":291196,"endOffset":291252,"count":0},{"startOffset":291399,"endOffset":291489,"count":0},{"startOffset":291517,"endOffset":291546,"count":3},{"startOffset":291548,"endOffset":291912,"count":0},{"startOffset":291956,"endOffset":291976,"count":0},{"startOffset":292004,"endOffset":292213,"count":319},{"startOffset":292213,"endOffset":292225,"count":0},{"startOffset":292225,"endOffset":292262,"count":319},{"startOffset":292262,"endOffset":292291,"count":1},{"startOffset":292293,"endOffset":292598,"count":1},{"startOffset":292598,"endOffset":292619,"count":319}],"isBlockCoverage":true},{"functionName":"parseExprSubscripts","ranges":[{"startOffset":292624,"endOffset":293039,"count":319},{"startOffset":292913,"endOffset":292947,"count":0},{"startOffset":292949,"endOffset":292975,"count":0}],"isBlockCoverage":true},{"functionName":"parseSubscripts","ranges":[{"startOffset":293043,"endOffset":293636,"count":319},{"startOffset":293239,"endOffset":293593,"count":391},{"startOffset":293348,"endOffset":293406,"count":0}],"isBlockCoverage":true},{"functionName":"parseSubscript","ranges":[{"startOffset":293640,"endOffset":296916,"count":391},{"startOffset":293748,"endOffset":294012,"count":0},{"startOffset":294080,"endOffset":294271,"count":0},{"startOffset":294338,"endOffset":294366,"count":0},{"startOffset":294367,"endOffset":294398,"count":0},{"startOffset":294435,"endOffset":295201,"count":38},{"startOffset":294551,"endOffset":294575,"count":0},{"startOffset":294693,"endOffset":294906,"count":0},{"startOffset":294928,"endOffset":294974,"count":0},{"startOffset":295013,"endOffset":295122,"count":0},{"startOffset":295201,"endOffset":296912,"count":353},{"startOffset":295249,"endOffset":296727,"count":34},{"startOffset":295653,"endOffset":295773,"count":0},{"startOffset":296039,"endOffset":296070,"count":0},{"startOffset":296071,"endOffset":296083,"count":0},{"startOffset":296085,"endOffset":296353,"count":0},{"startOffset":296444,"endOffset":296478,"count":0},{"startOffset":296515,"endOffset":296544,"count":30},{"startOffset":296545,"endOffset":296566,"count":10},{"startOffset":296568,"endOffset":296624,"count":24},{"startOffset":296727,"endOffset":296912,"count":319},{"startOffset":296766,"endOffset":296855,"count":0}],"isBlockCoverage":true},{"functionName":"parseTaggedTemplateExpression","ranges":[{"startOffset":296920,"endOffset":297359,"count":0}],"isBlockCoverage":false},{"functionName":"atPossibleAsyncArrow","ranges":[{"startOffset":297363,"endOffset":297604,"count":319},{"startOffset":297430,"endOffset":297454,"count":194},{"startOffset":297455,"endOffset":297492,"count":0},{"startOffset":297493,"endOffset":297522,"count":0},{"startOffset":297523,"endOffset":297553,"count":0},{"startOffset":297554,"endOffset":297599,"count":0}],"isBlockCoverage":true},{"functionName":"finishCallExpression","ranges":[{"startOffset":297608,"endOffset":298402,"count":34},{"startOffset":297686,"endOffset":298307,"count":0},{"startOffset":298351,"endOffset":298377,"count":0}],"isBlockCoverage":true},{"functionName":"parseCallExpressionArguments","ranges":[{"startOffset":298406,"endOffset":299742,"count":34},{"startOffset":298741,"endOffset":299532,"count":56},{"startOffset":298760,"endOffset":298792,"count":33},{"startOffset":298792,"endOffset":299230,"count":23},{"startOffset":298866,"endOffset":299222,"count":0},{"startOffset":299267,"endOffset":299286,"count":0},{"startOffset":299288,"endOffset":299341,"count":0},{"startOffset":299408,"endOffset":299432,"count":0},{"startOffset":299465,"endOffset":299493,"count":0},{"startOffset":299561,"endOffset":299579,"count":0},{"startOffset":299580,"endOffset":299611,"count":0},{"startOffset":299613,"endOffset":299645,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseAsyncArrow","ranges":[{"startOffset":299746,"endOffset":299841,"count":0}],"isBlockCoverage":false},{"functionName":"parseAsyncArrowFromCallExpression","ranges":[{"startOffset":299845,"endOffset":300097,"count":0}],"isBlockCoverage":false},{"functionName":"parseNoCallExpr","ranges":[{"startOffset":300101,"endOffset":300286,"count":0}],"isBlockCoverage":false},{"functionName":"parseExprAtom","ranges":[{"startOffset":300290,"endOffset":309315,"count":319},{"startOffset":300368,"endOffset":300386,"count":0},{"startOffset":300512,"endOffset":301147,"count":0},{"startOffset":301155,"endOffset":301510,"count":0},{"startOffset":301518,"endOffset":301645,"count":4},{"startOffset":301653,"endOffset":303574,"count":194},{"startOffset":301865,"endOffset":301895,"count":0},{"startOffset":301896,"endOffset":301925,"count":0},{"startOffset":301927,"endOffset":302289,"count":0},{"startOffset":302310,"endOffset":302325,"count":167},{"startOffset":302326,"endOffset":302348,"count":167},{"startOffset":302349,"endOffset":302374,"count":0},{"startOffset":302375,"endOffset":302404,"count":0},{"startOffset":302406,"endOffset":303336,"count":0},{"startOffset":303363,"endOffset":303389,"count":167},{"startOffset":303390,"endOffset":303419,"count":0},{"startOffset":303421,"endOffset":303542,"count":0},{"startOffset":303582,"endOffset":303946,"count":0},{"startOffset":303954,"endOffset":304199,"count":1},{"startOffset":304207,"endOffset":304292,"count":21},{"startOffset":304300,"endOffset":304387,"count":0},{"startOffset":304395,"endOffset":304482,"count":55},{"startOffset":304490,"endOffset":304614,"count":6},{"startOffset":304622,"endOffset":304639,"count":5},{"startOffset":304646,"endOffset":304707,"count":8},{"startOffset":304715,"endOffset":304801,"count":16},{"startOffset":304809,"endOffset":304832,"count":0},{"startOffset":304839,"endOffset":305459,"count":0},{"startOffset":305467,"endOffset":306060,"count":1},{"startOffset":305846,"endOffset":305909,"count":0},{"startOffset":306068,"endOffset":306089,"count":0},{"startOffset":306096,"endOffset":306604,"count":0},{"startOffset":306612,"endOffset":306983,"count":8},{"startOffset":306991,"endOffset":307059,"count":5},{"startOffset":307067,"endOffset":307113,"count":0},{"startOffset":307121,"endOffset":307252,"count":0},{"startOffset":307260,"endOffset":307308,"count":0},{"startOffset":307316,"endOffset":307379,"count":0},{"startOffset":307387,"endOffset":307800,"count":0},{"startOffset":307808,"endOffset":309081,"count":0},{"startOffset":309089,"endOffset":309256,"count":0},{"startOffset":309264,"endOffset":309305,"count":0}],"isBlockCoverage":true},{"functionName":"parseBooleanLiteral","ranges":[{"startOffset":309319,"endOffset":309492,"count":8}],"isBlockCoverage":true},{"functionName":"parseMaybePrivateName","ranges":[{"startOffset":309496,"endOffset":310093,"count":43},{"startOffset":309608,"endOffset":310035,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunctionExpression","ranges":[{"startOffset":310097,"endOffset":310425,"count":5},{"startOffset":310295,"endOffset":310317,"count":0},{"startOffset":310319,"endOffset":310383,"count":0}],"isBlockCoverage":true},{"functionName":"parseMetaProperty","ranges":[{"startOffset":310429,"endOffset":311065,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportMetaProperty","ranges":[{"startOffset":311069,"endOffset":311528,"count":0}],"isBlockCoverage":false},{"functionName":"parseLiteral","ranges":[{"startOffset":311532,"endOffset":311932,"count":77}],"isBlockCoverage":true},{"functionName":"parseParenAndDistinguishExpression","ranges":[{"startOffset":311936,"endOffset":315702,"count":16},{"startOffset":312897,"endOffset":313095,"count":0},{"startOffset":313135,"endOffset":313455,"count":0},{"startOffset":313929,"endOffset":313955,"count":5},{"startOffset":313956,"endOffset":313999,"count":4},{"startOffset":314001,"endOffset":314566,"count":0},{"startOffset":314596,"endOffset":314630,"count":0},{"startOffset":314659,"endOffset":314693,"count":0},{"startOffset":314721,"endOffset":314776,"count":0},{"startOffset":314806,"endOffset":314842,"count":0},{"startOffset":314864,"endOffset":314893,"count":0},{"startOffset":314985,"endOffset":315025,"count":0},{"startOffset":315103,"endOffset":315282,"count":0},{"startOffset":315500,"endOffset":315701,"count":0}],"isBlockCoverage":true},{"functionName":"shouldParseArrow","ranges":[{"startOffset":315706,"endOffset":315769,"count":5}],"isBlockCoverage":true},{"functionName":"parseArrow","ranges":[{"startOffset":315773,"endOffset":315853,"count":4},{"startOffset":315823,"endOffset":315849,"count":0}],"isBlockCoverage":true},{"functionName":"parseParenItem","ranges":[{"startOffset":315857,"endOffset":315920,"count":72}],"isBlockCoverage":true},{"functionName":"parseNew","ranges":[{"startOffset":315924,"endOffset":317049,"count":0}],"isBlockCoverage":false},{"functionName":"parseNewArguments","ranges":[{"startOffset":317053,"endOffset":317279,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplateElement","ranges":[{"startOffset":317283,"endOffset":317776,"count":0}],"isBlockCoverage":false},{"functionName":"parseTemplate","ranges":[{"startOffset":317780,"endOffset":318270,"count":0}],"isBlockCoverage":false},{"functionName":"parseObj","ranges":[{"startOffset":318274,"endOffset":319436,"count":8},{"startOffset":318506,"endOffset":319237,"count":6},{"startOffset":318525,"endOffset":318557,"count":4},{"startOffset":318557,"endOffset":318763,"count":2},{"startOffset":318631,"endOffset":318755,"count":1},{"startOffset":318763,"endOffset":318965,"count":5},{"startOffset":318965,"endOffset":318998,"count":0},{"startOffset":318999,"endOffset":319031,"count":0},{"startOffset":319033,"endOffset":319111,"count":0},{"startOffset":319111,"endOffset":319139,"count":5},{"startOffset":319139,"endOffset":319196,"count":0},{"startOffset":319196,"endOffset":319237,"count":5},{"startOffset":319294,"endOffset":319331,"count":0},{"startOffset":319351,"endOffset":319391,"count":0}],"isBlockCoverage":true},{"functionName":"isAsyncProp","ranges":[{"startOffset":319440,"endOffset":319676,"count":5},{"startOffset":319549,"endOffset":319638,"count":0},{"startOffset":319639,"endOffset":319671,"count":0}],"isBlockCoverage":true},{"functionName":"parseObjectMember","ranges":[{"startOffset":319680,"endOffset":321246,"count":5},{"startOffset":319788,"endOffset":320021,"count":0},{"startOffset":320185,"endOffset":320467,"count":0},{"startOffset":320496,"endOffset":320562,"count":0},{"startOffset":320953,"endOffset":321067,"count":0}],"isBlockCoverage":true},{"functionName":"isGetterOrSetterMethod","ranges":[{"startOffset":321250,"endOffset":321490,"count":5},{"startOffset":321394,"endOffset":321420,"count":4},{"startOffset":321422,"endOffset":321485,"count":1}],"isBlockCoverage":true},{"functionName":"getGetterSetterExpectedParamCount","ranges":[{"startOffset":321494,"endOffset":321583,"count":0}],"isBlockCoverage":false},{"functionName":"checkGetterSetterParams","ranges":[{"startOffset":321587,"endOffset":322122,"count":0}],"isBlockCoverage":false},{"functionName":"parseObjectMethod","ranges":[{"startOffset":322126,"endOffset":322795,"count":5},{"startOffset":322258,"endOffset":322448,"count":0},{"startOffset":322520,"endOffset":322791,"count":0}],"isBlockCoverage":true},{"functionName":"parseObjectProperty","ranges":[{"startOffset":322799,"endOffset":323831,"count":5},{"startOffset":322970,"endOffset":323033,"count":0},{"startOffset":323146,"endOffset":323204,"count":0},{"startOffset":323206,"endOffset":323827,"count":0}],"isBlockCoverage":true},{"functionName":"parseObjPropValue","ranges":[{"startOffset":323835,"endOffset":324181,"count":5},{"startOffset":324142,"endOffset":324160,"count":0}],"isBlockCoverage":true},{"functionName":"parsePropertyName","ranges":[{"startOffset":324185,"endOffset":324826,"count":5},{"startOffset":324267,"endOffset":324379,"count":0},{"startOffset":324581,"endOffset":324603,"count":0}],"isBlockCoverage":true},{"functionName":"initFunction","ranges":[{"startOffset":324830,"endOffset":324939,"count":12}],"isBlockCoverage":true},{"functionName":"parseMethod","ranges":[{"startOffset":324943,"endOffset":325766,"count":0}],"isBlockCoverage":false},{"functionName":"parseArrowExpression","ranges":[{"startOffset":325770,"endOffset":326695,"count":0}],"isBlockCoverage":false},{"functionName":"setArrowFunctionParameters","ranges":[{"startOffset":326699,"endOffset":326830,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionBodyAndFinish","ranges":[{"startOffset":326834,"endOffset":326980,"count":12}],"isBlockCoverage":true},{"functionName":"parseFunctionBody","ranges":[{"startOffset":326984,"endOffset":328439,"count":12},{"startOffset":327086,"endOffset":327114,"count":0},{"startOffset":327229,"endOffset":327340,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":327585,"endOffset":328313,"count":12},{"startOffset":327713,"endOffset":327725,"count":0},{"startOffset":327727,"endOffset":327940,"count":0},{"startOffset":327987,"endOffset":328007,"count":6},{"startOffset":328059,"endOffset":328078,"count":6},{"startOffset":328079,"endOffset":328091,"count":6},{"startOffset":328092,"endOffset":328105,"count":6},{"startOffset":328175,"endOffset":328185,"count":6},{"startOffset":328187,"endOffset":328305,"count":3}],"isBlockCoverage":true},{"functionName":"isSimpleParamList","ranges":[{"startOffset":328443,"endOffset":328612,"count":12},{"startOffset":328571,"endOffset":328584,"count":0}],"isBlockCoverage":true},{"functionName":"checkParams","ranges":[{"startOffset":328616,"endOffset":328939,"count":12},{"startOffset":328853,"endOffset":328859,"count":10},{"startOffset":328860,"endOffset":328870,"count":2}],"isBlockCoverage":true},{"functionName":"parseExprList","ranges":[{"startOffset":328943,"endOffset":329499,"count":1},{"startOffset":329086,"endOffset":329477,"count":0}],"isBlockCoverage":true},{"functionName":"parseExprListItem","ranges":[{"startOffset":329503,"endOffset":330516,"count":56},{"startOffset":329639,"endOffset":329770,"count":0},{"startOffset":329808,"endOffset":330050,"count":0},{"startOffset":330088,"endOffset":330380,"count":0}],"isBlockCoverage":true},{"functionName":"parseIdentifier","ranges":[{"startOffset":330520,"endOffset":330695,"count":282}],"isBlockCoverage":true},{"functionName":"createIdentifier","ranges":[{"startOffset":330699,"endOffset":330839,"count":287}],"isBlockCoverage":true},{"functionName":"parseIdentifierName","ranges":[{"startOffset":330843,"endOffset":331471,"count":282},{"startOffset":330926,"endOffset":330964,"count":280},{"startOffset":330964,"endOffset":331269,"count":2},{"startOffset":331134,"endOffset":331185,"count":0},{"startOffset":331187,"endOffset":331219,"count":0},{"startOffset":331225,"endOffset":331269,"count":0},{"startOffset":331288,"endOffset":331331,"count":43},{"startOffset":331331,"endOffset":331432,"count":239}],"isBlockCoverage":true},{"functionName":"checkReservedWord","ranges":[{"startOffset":331475,"endOffset":332723,"count":239},{"startOffset":331569,"endOffset":331588,"count":0},{"startOffset":331590,"endOffset":331677,"count":0},{"startOffset":331705,"endOffset":332001,"count":0},{"startOffset":332030,"endOffset":332063,"count":0},{"startOffset":332064,"endOffset":332087,"count":0},{"startOffset":332089,"endOffset":332186,"count":0},{"startOffset":332210,"endOffset":332228,"count":0},{"startOffset":332230,"endOffset":332318,"count":0},{"startOffset":332364,"endOffset":332380,"count":193},{"startOffset":332381,"endOffset":332442,"count":46},{"startOffset":332393,"endOffset":332419,"count":0},{"startOffset":332488,"endOffset":332719,"count":0}],"isBlockCoverage":true},{"functionName":"isAwaitAllowed","ranges":[{"startOffset":332727,"endOffset":332997,"count":35},{"startOffset":332777,"endOffset":332808,"count":26},{"startOffset":332808,"endOffset":332857,"count":9},{"startOffset":332857,"endOffset":332869,"count":0},{"startOffset":332869,"endOffset":332912,"count":9},{"startOffset":332912,"endOffset":332974,"count":4},{"startOffset":332974,"endOffset":332996,"count":5}],"isBlockCoverage":true},{"functionName":"parseAwait","ranges":[{"startOffset":333001,"endOffset":333987,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":333991,"endOffset":334605,"count":0}],"isBlockCoverage":false},{"functionName":"checkPipelineAtInfixOperator","ranges":[{"startOffset":334609,"endOffset":334881,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBody","ranges":[{"startOffset":334885,"endOffset":335212,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyEarlyErrors","ranges":[{"startOffset":335216,"endOffset":335600,"count":0}],"isBlockCoverage":false},{"functionName":"parseSmartPipelineBodyInStyle","ranges":[{"startOffset":335604,"endOffset":336508,"count":0}],"isBlockCoverage":false},{"functionName":"checkSmartPipelineBodyStyle","ranges":[{"startOffset":336512,"endOffset":336713,"count":0}],"isBlockCoverage":false},{"functionName":"isSimpleReference","ranges":[{"startOffset":336717,"endOffset":336987,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicPermittingContext","ranges":[{"startOffset":336991,"endOffset":337307,"count":0}],"isBlockCoverage":false},{"functionName":"withTopicForbiddingContext","ranges":[{"startOffset":337311,"endOffset":337627,"count":17}],"isBlockCoverage":true},{"functionName":"withSoloAwaitPermittingContext","ranges":[{"startOffset":337631,"endOffset":337886,"count":0}],"isBlockCoverage":false},{"functionName":"registerTopicReference","ranges":[{"startOffset":337890,"endOffset":337967,"count":0}],"isBlockCoverage":false},{"functionName":"primaryTopicReferenceIsAllowedInCurrentTopicContext","ranges":[{"startOffset":337971,"endOffset":338096,"count":0}],"isBlockCoverage":false},{"functionName":"topicReferenceWasUsedInCurrentTopicContext","ranges":[{"startOffset":338100,"endOffset":338254,"count":0}],"isBlockCoverage":false},{"functionName":"parseFSharpPipelineBody","ranges":[{"startOffset":338258,"endOffset":338744,"count":0}],"isBlockCoverage":false},{"functionName":"parseTopLevel","ranges":[{"startOffset":339009,"endOffset":339804,"count":9},{"startOffset":339230,"endOffset":339269,"count":5},{"startOffset":339270,"endOffset":339309,"count":5},{"startOffset":339311,"endOffset":339604,"count":0},{"startOffset":339732,"endOffset":339758,"count":0}],"isBlockCoverage":true},{"functionName":"stmtToDirective","ranges":[{"startOffset":339808,"endOffset":340411,"count":1}],"isBlockCoverage":true},{"functionName":"parseInterpreterDirective","ranges":[{"startOffset":340415,"endOffset":340670,"count":9},{"startOffset":340520,"endOffset":340669,"count":0}],"isBlockCoverage":true},{"functionName":"isLet","ranges":[{"startOffset":340674,"endOffset":341237,"count":132},{"startOffset":340753,"endOffset":341236,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatement","ranges":[{"startOffset":341241,"endOffset":341411,"count":130},{"startOffset":341307,"endOffset":341348,"count":0}],"isBlockCoverage":true},{"functionName":"parseStatementContent","ranges":[{"startOffset":341415,"endOffset":345294,"count":130},{"startOffset":341574,"endOffset":341631,"count":0},{"startOffset":341664,"endOffset":341682,"count":4},{"startOffset":341689,"endOffset":341784,"count":5},{"startOffset":341792,"endOffset":341863,"count":0},{"startOffset":341871,"endOffset":341930,"count":0},{"startOffset":341938,"endOffset":341999,"count":1},{"startOffset":342007,"endOffset":342437,"count":6},{"startOffset":342074,"endOffset":342080,"count":0},{"startOffset":342103,"endOffset":342369,"count":0},{"startOffset":342445,"endOffset":342547,"count":0},{"startOffset":342555,"endOffset":342614,"count":7},{"startOffset":342622,"endOffset":342689,"count":14},{"startOffset":342697,"endOffset":342764,"count":1},{"startOffset":342772,"endOffset":342837,"count":3},{"startOffset":342845,"endOffset":342906,"count":4},{"startOffset":342914,"endOffset":342932,"count":0},{"startOffset":342939,"endOffset":343184,"count":11},{"startOffset":343018,"endOffset":343035,"count":0},{"startOffset":343037,"endOffset":343132,"count":0},{"startOffset":343192,"endOffset":343257,"count":0},{"startOffset":343265,"endOffset":343328,"count":0},{"startOffset":343336,"endOffset":343388,"count":3},{"startOffset":343396,"endOffset":343459,"count":17},{"startOffset":343467,"endOffset":343486,"count":1},{"startOffset":343493,"endOffset":344640,"count":1},{"startOffset":343654,"endOffset":343686,"count":0},{"startOffset":343758,"endOffset":343851,"count":0},{"startOffset":343942,"endOffset":344172,"count":0},{"startOffset":344283,"endOffset":344339,"count":0},{"startOffset":344382,"endOffset":344438,"count":0},{"startOffset":344648,"endOffset":344962,"count":57},{"startOffset":344705,"endOffset":344952,"count":0},{"startOffset":344968,"endOffset":345085,"count":57},{"startOffset":345085,"endOffset":345114,"count":54},{"startOffset":345115,"endOffset":345139,"count":0},{"startOffset":345141,"endOffset":345221,"count":0},{"startOffset":345221,"endOffset":345290,"count":57}],"isBlockCoverage":true},{"functionName":"assertModuleNodeAllowed","ranges":[{"startOffset":345298,"endOffset":345550,"count":1},{"startOffset":345399,"endOffset":345546,"count":0}],"isBlockCoverage":true},{"functionName":"takeDecorators","ranges":[{"startOffset":345554,"endOffset":345876,"count":0}],"isBlockCoverage":false},{"functionName":"canHaveLeadingDecorator","ranges":[{"startOffset":345880,"endOffset":345948,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorators","ranges":[{"startOffset":345952,"endOffset":346654,"count":0}],"isBlockCoverage":false},{"functionName":"parseDecorator","ranges":[{"startOffset":346658,"endOffset":347668,"count":0}],"isBlockCoverage":false},{"functionName":"parseMaybeDecoratorArguments","ranges":[{"startOffset":347672,"endOffset":348021,"count":0}],"isBlockCoverage":false},{"functionName":"parseBreakContinueStatement","ranges":[{"startOffset":348025,"endOffset":348408,"count":5},{"startOffset":348194,"endOffset":348274,"count":0},{"startOffset":348362,"endOffset":348380,"count":4},{"startOffset":348381,"endOffset":348402,"count":1}],"isBlockCoverage":true},{"functionName":"verifyBreakContinue","ranges":[{"startOffset":348412,"endOffset":348916,"count":5},{"startOffset":348625,"endOffset":348656,"count":0},{"startOffset":348701,"endOffset":348723,"count":1},{"startOffset":348732,"endOffset":348766,"count":0},{"startOffset":348768,"endOffset":348774,"count":0},{"startOffset":348830,"endOffset":348912,"count":0}],"isBlockCoverage":true},{"functionName":"parseDebuggerStatement","ranges":[{"startOffset":348920,"endOffset":349048,"count":0}],"isBlockCoverage":false},{"functionName":"parseHeaderExpression","ranges":[{"startOffset":349052,"endOffset":349199,"count":8}],"isBlockCoverage":true},{"functionName":"parseDoStatement","ranges":[{"startOffset":349203,"endOffset":349555,"count":0}],"isBlockCoverage":false},{"functionName":"parseForStatement","ranges":[{"startOffset":349559,"endOffset":351180,"count":1},{"startOffset":349694,"endOffset":349724,"count":0},{"startOffset":349726,"endOffset":349774,"count":0},{"startOffset":349875,"endOffset":349991,"count":0},{"startOffset":350095,"endOffset":350572,"count":0},{"startOffset":350755,"endOffset":351000,"count":0},{"startOffset":351098,"endOffset":351137,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunctionStatement","ranges":[{"startOffset":351184,"endOffset":351380,"count":6},{"startOffset":351340,"endOffset":351364,"count":0}],"isBlockCoverage":true},{"functionName":"parseIfStatement","ranges":[{"startOffset":351384,"endOffset":351652,"count":7},{"startOffset":351564,"endOffset":351591,"count":1},{"startOffset":351592,"endOffset":351598,"count":6}],"isBlockCoverage":true},{"functionName":"parseReturnStatement","ranges":[{"startOffset":351656,"endOffset":352065,"count":14},{"startOffset":351719,"endOffset":351762,"count":0},{"startOffset":351764,"endOffset":351836,"count":0},{"startOffset":351889,"endOffset":351924,"count":0}],"isBlockCoverage":true},{"functionName":"parseSwitchStatement","ranges":[{"startOffset":352069,"endOffset":353295,"count":1},{"startOffset":352378,"endOffset":353119,"count":14},{"startOffset":352414,"endOffset":352443,"count":10},{"startOffset":352445,"endOffset":352965,"count":5},{"startOffset":352512,"endOffset":352547,"count":4},{"startOffset":352663,"endOffset":352719,"count":4},{"startOffset":352719,"endOffset":352922,"count":1},{"startOffset":352753,"endOffset":352855,"count":0},{"startOffset":352965,"endOffset":353113,"count":9},{"startOffset":353059,"endOffset":353105,"count":0}],"isBlockCoverage":true},{"functionName":"parseThrowStatement","ranges":[{"startOffset":353299,"endOffset":353632,"count":3},{"startOffset":353428,"endOffset":353509,"count":0}],"isBlockCoverage":true},{"functionName":"parseTryStatement","ranges":[{"startOffset":353636,"endOffset":354700,"count":4},{"startOffset":354069,"endOffset":354072,"count":0},{"startOffset":354191,"endOffset":354274,"count":0},{"startOffset":354505,"endOffset":354524,"count":0},{"startOffset":354556,"endOffset":354574,"count":0},{"startOffset":354576,"endOffset":354645,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":354328,"endOffset":354363,"count":4}],"isBlockCoverage":true},{"functionName":"parseVarStatement","ranges":[{"startOffset":354704,"endOffset":354873,"count":11}],"isBlockCoverage":true},{"functionName":"parseWhileStatement","ranges":[{"startOffset":354877,"endOffset":355176,"count":0}],"isBlockCoverage":false},{"functionName":"parseWithStatement","ranges":[{"startOffset":355180,"endOffset":355508,"count":0}],"isBlockCoverage":false},{"functionName":"parseEmptyStatement","ranges":[{"startOffset":355512,"endOffset":355612,"count":17}],"isBlockCoverage":true},{"functionName":"parseLabeledStatement","ranges":[{"startOffset":355616,"endOffset":356670,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionStatement","ranges":[{"startOffset":356674,"endOffset":356823,"count":57}],"isBlockCoverage":true},{"functionName":"parseBlock","ranges":[{"startOffset":356827,"endOffset":357263,"count":23},{"startOffset":357010,"endOffset":357054,"count":7},{"startOffset":357174,"endOffset":357206,"count":7}],"isBlockCoverage":true},{"functionName":"isValidDirective","ranges":[{"startOffset":357267,"endOffset":357427,"count":21},{"startOffset":357339,"endOffset":357382,"count":5},{"startOffset":357383,"endOffset":357422,"count":1}],"isBlockCoverage":true},{"functionName":"parseBlockBody","ranges":[{"startOffset":357431,"endOffset":357702,"count":32},{"startOffset":357640,"endOffset":357652,"count":21},{"startOffset":357653,"endOffset":357664,"count":11}],"isBlockCoverage":true},{"functionName":"parseBlockOrModuleBlockBody","ranges":[{"startOffset":357706,"endOffset":358985,"count":32},{"startOffset":357964,"endOffset":358582,"count":112},{"startOffset":357996,"endOffset":358031,"count":31},{"startOffset":358033,"endOffset":358101,"count":0},{"startOffset":358181,"endOffset":358203,"count":96},{"startOffset":358204,"endOffset":358234,"count":21},{"startOffset":358236,"endOffset":358519,"count":1},{"startOffset":358519,"endOffset":358582,"count":111},{"startOffset":358610,"endOffset":358634,"count":14},{"startOffset":358636,"endOffset":358813,"count":0},{"startOffset":358840,"endOffset":358905,"count":12},{"startOffset":358927,"endOffset":358963,"count":19}],"isBlockCoverage":true},{"functionName":"parseFor","ranges":[{"startOffset":358989,"endOffset":359459,"count":1},{"startOffset":359102,"endOffset":359108,"count":0},{"startOffset":359207,"endOffset":359213,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":359319,"endOffset":359351,"count":1}],"isBlockCoverage":true},{"functionName":"parseForIn","ranges":[{"startOffset":359463,"endOffset":360446,"count":0}],"isBlockCoverage":false},{"functionName":"parseVar","ranges":[{"startOffset":360450,"endOffset":361373,"count":11},{"startOffset":360620,"endOffset":361351,"count":23},{"startOffset":360725,"endOffset":360784,"count":16},{"startOffset":360784,"endOffset":361233,"count":7},{"startOffset":360821,"endOffset":360875,"count":0},{"startOffset":360877,"endOffset":360962,"count":0},{"startOffset":361002,"endOffset":361067,"count":0},{"startOffset":361069,"endOffset":361198,"count":0},{"startOffset":361339,"endOffset":361345,"count":11}],"isBlockCoverage":true},{"functionName":"parseVarId","ranges":[{"startOffset":361377,"endOffset":361566,"count":23},{"startOffset":361495,"endOffset":361509,"count":0}],"isBlockCoverage":true},{"functionName":"parseFunction","ranges":[{"startOffset":361570,"endOffset":363091,"count":12},{"startOffset":361791,"endOffset":361825,"count":7},{"startOffset":361897,"endOffset":361918,"count":0},{"startOffset":361920,"endOffset":362012,"count":0},{"startOffset":362079,"endOffset":362135,"count":7},{"startOffset":362534,"endOffset":362581,"count":5},{"startOffset":362847,"endOffset":362869,"count":7},{"startOffset":362871,"endOffset":362924,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":362655,"endOffset":362773,"count":12},{"startOffset":362719,"endOffset":362742,"count":7},{"startOffset":362743,"endOffset":362765,"count":5}],"isBlockCoverage":true},{"functionName":"parseFunctionId","ranges":[{"startOffset":363095,"endOffset":363207,"count":12},{"startOffset":363145,"endOffset":363170,"count":6},{"startOffset":363171,"endOffset":363195,"count":6},{"startOffset":363196,"endOffset":363202,"count":6}],"isBlockCoverage":true},{"functionName":"parseFunctionParams","ranges":[{"startOffset":363211,"endOffset":363550,"count":12}],"isBlockCoverage":true},{"functionName":"registerFunctionStatementId","ranges":[{"startOffset":363554,"endOffset":363802,"count":7},{"startOffset":363608,"endOffset":363615,"count":1},{"startOffset":363615,"endOffset":363675,"count":6},{"startOffset":363675,"endOffset":363692,"count":3},{"startOffset":363693,"endOffset":363706,"count":3},{"startOffset":363707,"endOffset":363765,"count":3},{"startOffset":363740,"endOffset":363750,"count":1},{"startOffset":363751,"endOffset":363765,"count":2},{"startOffset":363766,"endOffset":363781,"count":3}],"isBlockCoverage":true},{"functionName":"parseClass","ranges":[{"startOffset":363806,"endOffset":364248,"count":0}],"isBlockCoverage":false},{"functionName":"isClassProperty","ranges":[{"startOffset":364252,"endOffset":364362,"count":0}],"isBlockCoverage":false},{"functionName":"isClassMethod","ranges":[{"startOffset":364366,"endOffset":364424,"count":0}],"isBlockCoverage":false},{"functionName":"isNonstaticConstructor","ranges":[{"startOffset":364428,"endOffset":364588,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassBody","ranges":[{"startOffset":364592,"endOffset":366032,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberFromModifier","ranges":[{"startOffset":366036,"endOffset":366760,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMember","ranges":[{"startOffset":366764,"endOffset":367083,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassMemberWithIsStatic","ranges":[{"startOffset":367087,"endOffset":370805,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPropertyName","ranges":[{"startOffset":370809,"endOffset":371238,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassProperty","ranges":[{"startOffset":371242,"endOffset":371515,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateProperty","ranges":[{"startOffset":371519,"endOffset":371812,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassMethod","ranges":[{"startOffset":371816,"endOffset":372040,"count":0}],"isBlockCoverage":false},{"functionName":"pushClassPrivateMethod","ranges":[{"startOffset":372044,"endOffset":372629,"count":0}],"isBlockCoverage":false},{"functionName":"parsePostMemberNameModifiers","ranges":[{"startOffset":372633,"endOffset":372678,"count":0}],"isBlockCoverage":false},{"functionName":"parseAccessModifier","ranges":[{"startOffset":372682,"endOffset":372731,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassPrivateProperty","ranges":[{"startOffset":372735,"endOffset":373054,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassProperty","ranges":[{"startOffset":373058,"endOffset":373561,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassId","ranges":[{"startOffset":373565,"endOffset":373988,"count":0}],"isBlockCoverage":false},{"functionName":"parseClassSuper","ranges":[{"startOffset":373992,"endOffset":374103,"count":0}],"isBlockCoverage":false},{"functionName":"parseExport","ranges":[{"startOffset":374107,"endOffset":375680,"count":1},{"startOffset":374237,"endOffset":374261,"count":0},{"startOffset":374363,"endOffset":374411,"count":0},{"startOffset":374481,"endOffset":374505,"count":0},{"startOffset":374575,"endOffset":374591,"count":0},{"startOffset":374593,"endOffset":374741,"count":0},{"startOffset":374833,"endOffset":374853,"count":0},{"startOffset":374854,"endOffset":374865,"count":0},{"startOffset":374866,"endOffset":374883,"count":0},{"startOffset":374900,"endOffset":374922,"count":0},{"startOffset":374923,"endOffset":374940,"count":0},{"startOffset":374942,"endOffset":374998,"count":0},{"startOffset":375066,"endOffset":375153,"count":0},{"startOffset":375290,"endOffset":375417,"count":0},{"startOffset":375628,"endOffset":375679,"count":0}],"isBlockCoverage":true},{"functionName":"eatExportStar","ranges":[{"startOffset":375684,"endOffset":375742,"count":1}],"isBlockCoverage":true},{"functionName":"maybeParseExportDefaultSpecifier","ranges":[{"startOffset":375746,"endOffset":376100,"count":1},{"startOffset":375828,"endOffset":376077,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseExportNamespaceSpecifier","ranges":[{"startOffset":376104,"endOffset":376532,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseExportNamedSpecifiers","ranges":[{"startOffset":376536,"endOffset":376827,"count":1},{"startOffset":376610,"endOffset":376804,"count":0}],"isBlockCoverage":true},{"functionName":"maybeParseExportDeclaration","ranges":[{"startOffset":376831,"endOffset":377289,"count":1},{"startOffset":376912,"endOffset":377266,"count":0}],"isBlockCoverage":true},{"functionName":"isAsyncFunction","ranges":[{"startOffset":377293,"endOffset":377522,"count":59},{"startOffset":377363,"endOffset":377517,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportDefaultExpression","ranges":[{"startOffset":377526,"endOffset":378520,"count":1},{"startOffset":377675,"endOffset":377685,"count":0},{"startOffset":377728,"endOffset":377758,"count":0},{"startOffset":377848,"endOffset":378516,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportDeclaration","ranges":[{"startOffset":378524,"endOffset":378596,"count":0}],"isBlockCoverage":false},{"functionName":"isExportDefaultSpecifier","ranges":[{"startOffset":378600,"endOffset":379595,"count":1},{"startOffset":378661,"endOffset":379093,"count":0},{"startOffset":379132,"endOffset":379159,"count":0},{"startOffset":379332,"endOffset":379342,"count":0},{"startOffset":379344,"endOffset":379370,"count":0},{"startOffset":379419,"endOffset":379572,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportFrom","ranges":[{"startOffset":379599,"endOffset":379888,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseExportDeclaration","ranges":[{"startOffset":379892,"endOffset":380499,"count":1},{"startOffset":379955,"endOffset":380286,"count":0}],"isBlockCoverage":true},{"functionName":"checkExport","ranges":[{"startOffset":380503,"endOffset":382748,"count":1},{"startOffset":380702,"endOffset":381123,"count":0},{"startOffset":381131,"endOffset":382270,"count":0},{"startOffset":382422,"endOffset":382744,"count":0}],"isBlockCoverage":true},{"functionName":"checkDeclaration","ranges":[{"startOffset":382752,"endOffset":383645,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateExports","ranges":[{"startOffset":383649,"endOffset":383930,"count":1},{"startOffset":383744,"endOffset":383878,"count":0}],"isBlockCoverage":true},{"functionName":"parseExportSpecifiers","ranges":[{"startOffset":383934,"endOffset":384489,"count":0}],"isBlockCoverage":false},{"functionName":"parseImport","ranges":[{"startOffset":384493,"endOffset":385150,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSource","ranges":[{"startOffset":385154,"endOffset":385266,"count":0}],"isBlockCoverage":false},{"functionName":"shouldParseDefaultImport","ranges":[{"startOffset":385270,"endOffset":385341,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifierLocal","ranges":[{"startOffset":385345,"endOffset":385607,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseModuleAttributes","ranges":[{"startOffset":385611,"endOffset":386731,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseDefaultImportSpecifier","ranges":[{"startOffset":386735,"endOffset":386986,"count":0}],"isBlockCoverage":false},{"functionName":"maybeParseStarImportSpecifier","ranges":[{"startOffset":386990,"endOffset":387318,"count":0}],"isBlockCoverage":false},{"functionName":"parseNamedImportSpecifiers","ranges":[{"startOffset":387322,"endOffset":387772,"count":0}],"isBlockCoverage":false},{"functionName":"parseImportSpecifier","ranges":[{"startOffset":387776,"endOffset":388299,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScope","ranges":[{"startOffset":388325,"endOffset":388459,"count":0}],"isBlockCoverage":false},{"functionName":"ClassScopeHandler","ranges":[{"startOffset":388491,"endOffset":388604,"count":11}],"isBlockCoverage":true},{"functionName":"current","ranges":[{"startOffset":388608,"endOffset":388669,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":388673,"endOffset":388725,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":388729,"endOffset":389231,"count":0}],"isBlockCoverage":false},{"functionName":"declarePrivateName","ranges":[{"startOffset":389235,"endOffset":390209,"count":0}],"isBlockCoverage":false},{"functionName":"usePrivateName","ranges":[{"startOffset":390213,"endOffset":390615,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":390661,"endOffset":391184,"count":11}],"isBlockCoverage":true},{"functionName":"getScopeHandler","ranges":[{"startOffset":391188,"endOffset":391236,"count":11}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":391240,"endOffset":391669,"count":9},{"startOffset":391319,"endOffset":391335,"count":2},{"startOffset":391337,"endOffset":391377,"count":2}],"isBlockCoverage":true},{"functionName":"pluginsMap","ranges":[{"startOffset":391674,"endOffset":391984,"count":11},{"startOffset":391783,"endOffset":391961,"count":29},{"startOffset":391867,"endOffset":391875,"count":0},{"startOffset":391922,"endOffset":391957,"count":27},{"startOffset":391950,"endOffset":391955,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":391986,"endOffset":392885,"count":9},{"startOffset":392072,"endOffset":392080,"count":0},{"startOffset":392123,"endOffset":392826,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpression","ranges":[{"startOffset":392886,"endOffset":393080,"count":2},{"startOffset":393007,"endOffset":393044,"count":0}],"isBlockCoverage":true},{"functionName":"getParser","ranges":[{"startOffset":393082,"endOffset":393313,"count":11},{"startOffset":393162,"endOffset":393170,"count":0},{"startOffset":393190,"endOffset":393276,"count":5}],"isBlockCoverage":true},{"functionName":"getParserClass","ranges":[{"startOffset":393345,"endOffset":393776,"count":5},{"startOffset":393566,"endOffset":393759,"count":2},{"startOffset":393638,"endOffset":393721,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":393436,"endOffset":393479,"count":30}],"isBlockCoverage":true}]},{"scriptId":"1116","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/code-frame/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5604,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":226,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":414,"endOffset":1157,"count":1},{"startOffset":496,"endOffset":569,"count":0},{"startOffset":571,"endOffset":667,"count":0},{"startOffset":669,"endOffset":797,"count":0},{"startOffset":820,"endOffset":1156,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1197,"endOffset":1320,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkerLines","ranges":[{"startOffset":1366,"endOffset":2934,"count":0}],"isBlockCoverage":false},{"functionName":"codeFrameColumns","ranges":[{"startOffset":2936,"endOffset":4903,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4905,"endOffset":5604,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1117","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/highlight/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3434,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":383,"endOffset":478,"count":1},{"startOffset":451,"endOffset":456,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":480,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":668,"endOffset":1411,"count":1},{"startOffset":750,"endOffset":823,"count":0},{"startOffset":825,"endOffset":921,"count":0},{"startOffset":923,"endOffset":1051,"count":0},{"startOffset":1074,"endOffset":1410,"count":0}],"isBlockCoverage":true},{"functionName":"getDefs","ranges":[{"startOffset":1413,"endOffset":1708,"count":0}],"isBlockCoverage":false},{"functionName":"getTokenType","ranges":[{"startOffset":1819,"endOffset":2597,"count":0}],"isBlockCoverage":false},{"functionName":"highlightTokens","ranges":[{"startOffset":2599,"endOffset":2913,"count":0}],"isBlockCoverage":false},{"functionName":"shouldHighlight","ranges":[{"startOffset":2915,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"getChalk","ranges":[{"startOffset":3015,"endOffset":3214,"count":0}],"isBlockCoverage":false},{"functionName":"highlight","ranges":[{"startOffset":3216,"endOffset":3434,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1118","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/js-tokens/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1448,"count":1}],"isBlockCoverage":true},{"functionName":"exports.matchToToken","ranges":[{"startOffset":917,"endOffset":1447,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1119","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/populate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4747,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":180,"endOffset":366,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":368,"endOffset":1111,"count":1},{"startOffset":450,"endOffset":523,"count":0},{"startOffset":525,"endOffset":621,"count":0},{"startOffset":623,"endOffset":751,"count":0},{"startOffset":774,"endOffset":1110,"count":0}],"isBlockCoverage":true},{"functionName":"populatePlaceholders","ranges":[{"startOffset":1113,"endOffset":2311,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1267,"endOffset":1807,"count":4},{"startOffset":1365,"endOffset":1801,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1848,"endOffset":1983,"count":4},{"startOffset":1904,"endOffset":1977,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2041,"endOffset":2293,"count":4},{"startOffset":2156,"endOffset":2163,"count":0},{"startOffset":2172,"endOffset":2289,"count":0}],"isBlockCoverage":true},{"functionName":"applyReplacement","ranges":[{"startOffset":2313,"endOffset":4747,"count":4},{"startOffset":2403,"endOffset":2612,"count":0},{"startOffset":2725,"endOffset":2950,"count":0},{"startOffset":2994,"endOffset":3741,"count":0},{"startOffset":3781,"endOffset":3951,"count":1},{"startOffset":3909,"endOffset":3947,"count":0},{"startOffset":3951,"endOffset":4177,"count":3},{"startOffset":4000,"endOffset":4054,"count":2},{"startOffset":4092,"endOffset":4173,"count":0},{"startOffset":4206,"endOffset":4284,"count":3},{"startOffset":4284,"endOffset":4745,"count":1},{"startOffset":4439,"endOffset":4480,"count":0},{"startOffset":4518,"endOffset":4575,"count":0},{"startOffset":4632,"endOffset":4679,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2479,"endOffset":2504,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1120","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/template/lib/literal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2223,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":276,"endOffset":371,"count":2},{"startOffset":350,"endOffset":368,"count":0}],"isBlockCoverage":true},{"functionName":"literalTemplate","ranges":[{"startOffset":373,"endOffset":1164,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":511,"endOffset":1161,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":563,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":666,"endOffset":1156,"count":2},{"startOffset":1126,"endOffset":1147,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":813,"endOffset":987,"count":4},{"startOffset":900,"endOffset":977,"count":0}],"isBlockCoverage":true},{"functionName":"buildLiteralData","ranges":[{"startOffset":1166,"endOffset":1964,"count":3},{"startOffset":1599,"endOffset":1638,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1847,"endOffset":1918,"count":8},{"startOffset":1886,"endOffset":1918,"count":1}],"isBlockCoverage":true},{"functionName":"buildTemplateCode","ranges":[{"startOffset":1966,"endOffset":2223,"count":3},{"startOffset":2089,"endOffset":2184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1121","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3858,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":180,"endOffset":223,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":297,"endOffset":341,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":413,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":998,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1186,"endOffset":1929,"count":3},{"startOffset":1268,"endOffset":1341,"count":0},{"startOffset":1343,"endOffset":1439,"count":0},{"startOffset":1441,"endOffset":1569,"count":0},{"startOffset":1592,"endOffset":1928,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1931,"endOffset":2026,"count":5},{"startOffset":1999,"endOffset":2004,"count":4},{"startOffset":2005,"endOffset":2023,"count":1}],"isBlockCoverage":true},{"functionName":"traverse","ranges":[{"startOffset":2028,"endOffset":2587,"count":24},{"startOffset":2103,"endOffset":2110,"count":0},{"startOffset":2124,"endOffset":2134,"count":0},{"startOffset":2167,"endOffset":2446,"count":0},{"startOffset":2484,"endOffset":2501,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.cheap","ranges":[{"startOffset":2709,"endOffset":2773,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.node","ranges":[{"startOffset":2792,"endOffset":3108,"count":2695},{"startOffset":2907,"endOffset":2914,"count":0},{"startOffset":3014,"endOffset":3106,"count":5084},{"startOffset":3033,"endOffset":3049,"count":0},{"startOffset":3051,"endOffset":3060,"count":0},{"startOffset":3095,"endOffset":3102,"count":0}],"isBlockCoverage":true},{"functionName":"traverse.clearNode","ranges":[{"startOffset":3132,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.removeProperties","ranges":[{"startOffset":3249,"endOffset":3339,"count":0}],"isBlockCoverage":false},{"functionName":"hasBlacklistedType","ranges":[{"startOffset":3342,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"traverse.hasType","ranges":[{"startOffset":3489,"endOffset":3832,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1122","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3990,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":222,"endOffset":408,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":410,"endOffset":1153,"count":1},{"startOffset":492,"endOffset":565,"count":0},{"startOffset":567,"endOffset":663,"count":0},{"startOffset":665,"endOffset":793,"count":0},{"startOffset":816,"endOffset":1152,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1155,"endOffset":1250,"count":1},{"startOffset":1229,"endOffset":1247,"count":0}],"isBlockCoverage":true},{"functionName":"TraversalContext","ranges":[{"startOffset":1329,"endOffset":1505,"count":2695}],"isBlockCoverage":true},{"functionName":"shouldVisit","ranges":[{"startOffset":1509,"endOffset":1840,"count":3636},{"startOffset":1576,"endOffset":1588,"count":2288},{"startOffset":1590,"endOffset":1602,"count":1348},{"startOffset":1602,"endOffset":1628,"count":2288},{"startOffset":1628,"endOffset":1640,"count":394},{"startOffset":1640,"endOffset":1708,"count":1894},{"startOffset":1708,"endOffset":1716,"count":0},{"startOffset":1717,"endOffset":1730,"count":1894},{"startOffset":1733,"endOffset":1746,"count":237},{"startOffset":1746,"endOffset":1776,"count":1657},{"startOffset":1776,"endOffset":1817,"count":2373},{"startOffset":1799,"endOffset":1811,"count":928},{"startOffset":1817,"endOffset":1839,"count":729}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":1844,"endOffset":2027,"count":2670}],"isBlockCoverage":true},{"functionName":"maybeQueue","ranges":[{"startOffset":2031,"endOffset":2290,"count":4},{"startOffset":2082,"endOffset":2139,"count":0},{"startOffset":2226,"endOffset":2280,"count":0}],"isBlockCoverage":true},{"functionName":"visitMultiple","ranges":[{"startOffset":2294,"endOffset":2661,"count":612},{"startOffset":2370,"endOffset":2383,"count":146},{"startOffset":2383,"endOffset":2460,"count":466},{"startOffset":2460,"endOffset":2621,"count":1100},{"startOffset":2540,"endOffset":2615,"count":895},{"startOffset":2621,"endOffset":2660,"count":466}],"isBlockCoverage":true},{"functionName":"visitSingle","ranges":[{"startOffset":2665,"endOffset":2833,"count":2536},{"startOffset":2727,"endOffset":2796,"count":1775},{"startOffset":2796,"endOffset":2829,"count":761}],"isBlockCoverage":true},{"functionName":"visitQueue","ranges":[{"startOffset":2837,"endOffset":3720,"count":2241},{"startOffset":2987,"endOffset":3611,"count":2674},{"startOffset":3048,"endOffset":3099,"count":0},{"startOffset":3173,"endOffset":3182,"count":0},{"startOffset":3228,"endOffset":3263,"count":0},{"startOffset":3308,"endOffset":3317,"count":0},{"startOffset":3374,"endOffset":3419,"count":0},{"startOffset":3458,"endOffset":3605,"count":0},{"startOffset":3643,"endOffset":3675,"count":2674}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":3724,"endOffset":3950,"count":5084},{"startOffset":3788,"endOffset":3801,"count":1936},{"startOffset":3801,"endOffset":3833,"count":3148},{"startOffset":3833,"endOffset":3891,"count":612},{"startOffset":3891,"endOffset":3946,"count":2536}],"isBlockCoverage":true}]},{"scriptId":"1123","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6832,"count":1},{"startOffset":6233,"endOffset":6547,"count":287},{"startOffset":6595,"endOffset":6832,"count":18},{"startOffset":6620,"endOffset":6629,"count":0},{"startOffset":6663,"endOffset":6682,"count":13}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1414,"endOffset":1509,"count":4},{"startOffset":1482,"endOffset":1487,"count":3},{"startOffset":1488,"endOffset":1506,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1511,"endOffset":1697,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1699,"endOffset":2442,"count":13},{"startOffset":1781,"endOffset":1854,"count":0},{"startOffset":1856,"endOffset":1952,"count":0},{"startOffset":1954,"endOffset":2082,"count":0},{"startOffset":2105,"endOffset":2441,"count":0}],"isBlockCoverage":true},{"functionName":"NodePath","ranges":[{"startOffset":2685,"endOffset":3100,"count":940}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3111,"endOffset":3884,"count":3081},{"startOffset":3210,"endOffset":3223,"count":3078},{"startOffset":3225,"endOffset":3260,"count":3075},{"startOffset":3279,"endOffset":3357,"count":0},{"startOffset":3440,"endOffset":3445,"count":453},{"startOffset":3482,"endOffset":3527,"count":453},{"startOffset":3587,"endOffset":3721,"count":5700},{"startOffset":3665,"endOffset":3715,"count":2141},{"startOffset":3738,"endOffset":3809,"count":940}],"isBlockCoverage":true},{"functionName":"getScope","ranges":[{"startOffset":3888,"endOffset":3971,"count":5758},{"startOffset":3932,"endOffset":3958,"count":289},{"startOffset":3959,"endOffset":3966,"count":5469}],"isBlockCoverage":true},{"functionName":"setData","ranges":[{"startOffset":3975,"endOffset":4106,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":4110,"endOffset":4330,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":4334,"endOffset":4440,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":4444,"endOffset":4544,"count":21}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":4548,"endOffset":4633,"count":0}],"isBlockCoverage":false},{"functionName":"getPathLocation","ranges":[{"startOffset":4637,"endOffset":4888,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":4892,"endOffset":5009,"count":8022},{"startOffset":4940,"endOffset":5008,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":5013,"endOffset":5081,"count":0}],"isBlockCoverage":false},{"functionName":"get inList","ranges":[{"startOffset":5085,"endOffset":5130,"count":2676}],"isBlockCoverage":true},{"functionName":"set inList","ranges":[{"startOffset":5134,"endOffset":5210,"count":0}],"isBlockCoverage":false},{"functionName":"get parentKey","ranges":[{"startOffset":5214,"endOffset":5272,"count":0}],"isBlockCoverage":false},{"functionName":"get shouldSkip","ranges":[{"startOffset":5276,"endOffset":5348,"count":5344}],"isBlockCoverage":true},{"functionName":"set shouldSkip","ranges":[{"startOffset":5352,"endOffset":5492,"count":2},{"startOffset":5432,"endOffset":5488,"count":0}],"isBlockCoverage":true},{"functionName":"get shouldStop","ranges":[{"startOffset":5496,"endOffset":5568,"count":2673}],"isBlockCoverage":true},{"functionName":"set shouldStop","ranges":[{"startOffset":5572,"endOffset":5712,"count":0}],"isBlockCoverage":false},{"functionName":"get removed","ranges":[{"startOffset":5716,"endOffset":5781,"count":2682}],"isBlockCoverage":true},{"functionName":"set removed","ranges":[{"startOffset":5785,"endOffset":5914,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6324,"endOffset":6377,"count":1591}],"isBlockCoverage":true},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6420,"endOffset":6544,"count":0}],"isBlockCoverage":false},{"functionName":"NodePath.<computed>","ranges":[{"startOffset":6762,"endOffset":6829,"count":8414}],"isBlockCoverage":true}]},{"scriptId":"1124","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/lib/virtual-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5492,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":569,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":757,"endOffset":1500,"count":1},{"startOffset":839,"endOffset":912,"count":0},{"startOffset":914,"endOffset":1010,"count":0},{"startOffset":1012,"endOffset":1140,"count":0},{"startOffset":1163,"endOffset":1499,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":1578,"endOffset":1956,"count":687},{"startOffset":1690,"endOffset":1731,"count":0},{"startOffset":1733,"endOffset":1886,"count":0}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":2085,"endOffset":2199,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":2325,"endOffset":2520,"count":11}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":2619,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3061,"endOffset":3216,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3307,"endOffset":3374,"count":8348}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3425,"endOffset":3497,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3559,"endOffset":3619,"count":1387}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3710,"endOffset":3762,"count":6}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":3803,"endOffset":3865,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":3913,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4014,"endOffset":4088,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4212,"endOffset":4650,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4728,"endOffset":4814,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":4910,"endOffset":4999,"count":0}],"isBlockCoverage":false},{"functionName":"checkPath","ranges":[{"startOffset":5378,"endOffset":5441,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1125","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1},{"startOffset":218,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1126","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4475,"count":1},{"startOffset":661,"endOffset":1266,"count":0},{"startOffset":1269,"endOffset":1370,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1594,"endOffset":1634,"count":237}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1643,"endOffset":2101,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2177,"endOffset":2316,"count":1},{"startOffset":2240,"endOffset":2279,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2389,"endOffset":2823,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2825,"endOffset":2940,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3029,"endOffset":3113,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3194,"endOffset":3451,"count":1},{"startOffset":3239,"endOffset":3277,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3568,"endOffset":3614,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3779,"endOffset":3982,"count":1},{"startOffset":3915,"endOffset":3980,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4147,"endOffset":4278,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4371,"endOffset":4473,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1127","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5930,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":108,"endOffset":5904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":390,"endOffset":432,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1056,"endOffset":1334,"count":1},{"startOffset":1152,"endOffset":1257,"count":5}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1504,"endOffset":3251,"count":1}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1557,"endOffset":2770,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3254,"endOffset":3431,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3434,"endOffset":3637,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3798,"endOffset":4545,"count":1},{"startOffset":3971,"endOffset":3983,"count":0},{"startOffset":4132,"endOffset":4369,"count":0},{"startOffset":4428,"endOffset":4542,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4631,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":4999,"endOffset":5386,"count":1},{"startOffset":5061,"endOffset":5082,"count":0},{"startOffset":5165,"endOffset":5235,"count":0},{"startOffset":5297,"endOffset":5366,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5504,"endOffset":5640,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5729,"endOffset":5838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1128","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3023,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":915,"endOffset":1998,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2096,"endOffset":2413,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2510,"endOffset":2846,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2882,"endOffset":3022,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1129","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/scope/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24515,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":651,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":839,"endOffset":1582,"count":1},{"startOffset":921,"endOffset":994,"count":0},{"startOffset":996,"endOffset":1092,"count":0},{"startOffset":1094,"endOffset":1222,"count":0},{"startOffset":1245,"endOffset":1581,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1584,"endOffset":1679,"count":7},{"startOffset":1652,"endOffset":1657,"count":3},{"startOffset":1658,"endOffset":1676,"count":4}],"isBlockCoverage":true},{"functionName":"gatherNodeParts","ranges":[{"startOffset":1681,"endOffset":4933,"count":0}],"isBlockCoverage":false},{"functionName":"For","ranges":[{"startOffset":4964,"endOffset":5244,"count":3},{"startOffset":5015,"endOffset":5240,"count":6},{"startOffset":5080,"endOffset":5234,"count":0}],"isBlockCoverage":true},{"functionName":"Declaration","ranges":[{"startOffset":5249,"endOffset":5535,"count":39},{"startOffset":5299,"endOffset":5306,"count":12},{"startOffset":5306,"endOffset":5343,"count":27},{"startOffset":5343,"endOffset":5385,"count":2},{"startOffset":5387,"endOffset":5408,"count":2},{"startOffset":5408,"endOffset":5460,"count":25},{"startOffset":5460,"endOffset":5492,"count":1}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":5540,"endOffset":5612,"count":266}],"isBlockCoverage":true},{"functionName":"ForXStatement","ranges":[{"startOffset":5617,"endOffset":5785,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":5815,"endOffset":6469,"count":2},{"startOffset":6057,"endOffset":6154,"count":0},{"startOffset":6162,"endOffset":6463,"count":0}],"isBlockCoverage":true},{"functionName":"LabeledStatement","ranges":[{"startOffset":6479,"endOffset":6622,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6627,"endOffset":6700,"count":78}],"isBlockCoverage":true},{"functionName":"UpdateExpression","ranges":[{"startOffset":6705,"endOffset":6781,"count":3}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":6786,"endOffset":6912,"count":15},{"startOffset":6858,"endOffset":6908,"count":0}],"isBlockCoverage":true},{"functionName":"BlockScoped","ranges":[{"startOffset":6917,"endOffset":7289,"count":12},{"startOffset":7132,"endOffset":7147,"count":0},{"startOffset":7149,"endOffset":7285,"count":0}],"isBlockCoverage":true},{"functionName":"Block","ranges":[{"startOffset":7294,"endOffset":7511,"count":41},{"startOffset":7379,"endOffset":7507,"count":152},{"startOffset":7425,"endOffset":7501,"count":9}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":7516,"endOffset":7584,"count":9}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":7589,"endOffset":7913,"count":19},{"startOffset":7642,"endOffset":7659,"count":7},{"startOffset":7660,"endOffset":7704,"count":0},{"startOffset":7706,"endOffset":7778,"count":0},{"startOffset":7852,"endOffset":7909,"count":30}],"isBlockCoverage":true},{"functionName":"ClassExpression","ranges":[{"startOffset":7918,"endOffset":8071,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":8106,"endOffset":8455,"count":289},{"startOffset":8232,"endOffset":8240,"count":35},{"startOffset":8241,"endOffset":8254,"count":254},{"startOffset":8266,"endOffset":8294,"count":253},{"startOffset":8294,"endOffset":8454,"count":36}],"isBlockCoverage":true},{"functionName":"get parent","ranges":[{"startOffset":8459,"endOffset":8587,"count":1252},{"startOffset":8559,"endOffset":8567,"count":176},{"startOffset":8568,"endOffset":8582,"count":1076}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8514,"endOffset":8530,"count":2588}],"isBlockCoverage":true},{"functionName":"get parentBlock","ranges":[{"startOffset":8591,"endOffset":8643,"count":0}],"isBlockCoverage":false},{"functionName":"get hub","ranges":[{"startOffset":8647,"endOffset":8688,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":8692,"endOffset":8786,"count":0}],"isBlockCoverage":false},{"functionName":"generateDeclaredUidIdentifier","ranges":[{"startOffset":8790,"endOffset":8941,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifier","ranges":[{"startOffset":8945,"endOffset":9027,"count":1}],"isBlockCoverage":true},{"functionName":"generateUid","ranges":[{"startOffset":9031,"endOffset":9463,"count":1}],"isBlockCoverage":true},{"functionName":"_generateUid","ranges":[{"startOffset":9467,"endOffset":9558,"count":1},{"startOffset":9525,"endOffset":9533,"count":0}],"isBlockCoverage":true},{"functionName":"generateUidBasedOnNode","ranges":[{"startOffset":9562,"endOffset":9796,"count":0}],"isBlockCoverage":false},{"functionName":"generateUidIdentifierBasedOnNode","ranges":[{"startOffset":9800,"endOffset":9930,"count":0}],"isBlockCoverage":false},{"functionName":"isStatic","ranges":[{"startOffset":9934,"endOffset":10263,"count":0}],"isBlockCoverage":false},{"functionName":"maybeGenerateMemoised","ranges":[{"startOffset":10267,"endOffset":10568,"count":0}],"isBlockCoverage":false},{"functionName":"checkBlockScopedCollisions","ranges":[{"startOffset":10572,"endOffset":10993,"count":3},{"startOffset":10650,"endOffset":10657,"count":0},{"startOffset":10690,"endOffset":10697,"count":0},{"startOffset":10838,"endOffset":10877,"count":0},{"startOffset":10899,"endOffset":10989,"count":0}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":10997,"endOffset":11251,"count":5},{"startOffset":11095,"endOffset":11247,"count":0}],"isBlockCoverage":true},{"functionName":"_renameFromMap","ranges":[{"startOffset":11255,"endOffset":11390,"count":0}],"isBlockCoverage":false},{"functionName":"dump","ranges":[{"startOffset":11394,"endOffset":11931,"count":0}],"isBlockCoverage":false},{"functionName":"toArray","ranges":[{"startOffset":11935,"endOffset":12960,"count":0}],"isBlockCoverage":false},{"functionName":"hasLabel","ranges":[{"startOffset":12964,"endOffset":13018,"count":1}],"isBlockCoverage":true},{"functionName":"getLabel","ranges":[{"startOffset":13022,"endOffset":13076,"count":1}],"isBlockCoverage":true},{"functionName":"registerLabel","ranges":[{"startOffset":13080,"endOffset":13154,"count":0}],"isBlockCoverage":false},{"functionName":"registerDeclaration","ranges":[{"startOffset":13158,"endOffset":14170,"count":47},{"startOffset":13221,"endOffset":13260,"count":0},{"startOffset":13300,"endOffset":13368,"count":22},{"startOffset":13368,"endOffset":14166,"count":25},{"startOffset":13505,"endOffset":13568,"count":58},{"startOffset":13574,"endOffset":14166,"count":0}],"isBlockCoverage":true},{"functionName":"buildUndefinedNode","ranges":[{"startOffset":14174,"endOffset":14265,"count":0}],"isBlockCoverage":false},{"functionName":"registerConstantViolation","ranges":[{"startOffset":14269,"endOffset":14490,"count":84},{"startOffset":14391,"endOffset":14486,"count":75}],"isBlockCoverage":true},{"functionName":"registerBinding","ranges":[{"startOffset":14494,"endOffset":15518,"count":141},{"startOffset":14559,"endOffset":14597,"count":0},{"startOffset":14637,"endOffset":14806,"count":0},{"startOffset":14949,"endOffset":15514,"count":139},{"startOffset":15094,"endOffset":15220,"count":62},{"startOffset":15135,"endOffset":15144,"count":59},{"startOffset":15144,"endOffset":15220,"count":3},{"startOffset":15220,"endOffset":15241,"count":80},{"startOffset":15241,"endOffset":15307,"count":3},{"startOffset":15307,"endOffset":15500,"count":77}],"isBlockCoverage":true},{"functionName":"addGlobal","ranges":[{"startOffset":15522,"endOffset":15579,"count":29}],"isBlockCoverage":true},{"functionName":"hasUid","ranges":[{"startOffset":15583,"endOffset":15729,"count":1},{"startOffset":15658,"endOffset":15670,"count":0}],"isBlockCoverage":true},{"functionName":"hasGlobal","ranges":[{"startOffset":15733,"endOffset":15885,"count":1},{"startOffset":15814,"endOffset":15826,"count":0}],"isBlockCoverage":true},{"functionName":"hasReference","ranges":[{"startOffset":15889,"endOffset":15968,"count":1}],"isBlockCoverage":true},{"functionName":"isPure","ranges":[{"startOffset":15972,"endOffset":17934,"count":0}],"isBlockCoverage":false},{"functionName":"setData","ranges":[{"startOffset":17938,"endOffset":17994,"count":0}],"isBlockCoverage":false},{"functionName":"getData","ranges":[{"startOffset":17998,"endOffset":18157,"count":0}],"isBlockCoverage":false},{"functionName":"removeData","ranges":[{"startOffset":18161,"endOffset":18334,"count":0}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":18338,"endOffset":18426,"count":5758},{"startOffset":18369,"endOffset":18422,"count":36}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":18430,"endOffset":19936,"count":36},{"startOffset":18694,"endOffset":19007,"count":15},{"startOffset":18734,"endOffset":18751,"count":5},{"startOffset":18752,"endOffset":18796,"count":0},{"startOffset":18798,"endOffset":18868,"count":0},{"startOffset":18946,"endOffset":19001,"count":22},{"startOffset":19092,"endOffset":19099,"count":32},{"startOffset":19099,"endOffset":19341,"count":4},{"startOffset":19341,"endOffset":19596,"count":78},{"startOffset":19435,"endOffset":19539,"count":69},{"startOffset":19487,"endOffset":19539,"count":0},{"startOffset":19596,"endOffset":19638,"count":4},{"startOffset":19638,"endOffset":19824,"count":266},{"startOffset":19719,"endOffset":19760,"count":237},{"startOffset":19760,"endOffset":19818,"count":29},{"startOffset":19824,"endOffset":19875,"count":4},{"startOffset":19875,"endOffset":19932,"count":3},{"startOffset":19932,"endOffset":19935,"count":4}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":19940,"endOffset":21017,"count":0}],"isBlockCoverage":false},{"functionName":"getProgramParent","ranges":[{"startOffset":21021,"endOffset":21228,"count":180},{"startOffset":21072,"endOffset":21145,"count":547},{"startOffset":21108,"endOffset":21139,"count":180},{"startOffset":21145,"endOffset":21227,"count":0}],"isBlockCoverage":true},{"functionName":"getFunctionParent","ranges":[{"startOffset":21232,"endOffset":21416,"count":25},{"startOffset":21284,"endOffset":21364,"count":28},{"startOffset":21327,"endOffset":21358,"count":24},{"startOffset":21364,"endOffset":21415,"count":1}],"isBlockCoverage":true},{"functionName":"getBlockParent","ranges":[{"startOffset":21420,"endOffset":21682,"count":21},{"startOffset":21546,"endOffset":21681,"count":0}],"isBlockCoverage":true},{"functionName":"getAllBindings","ranges":[{"startOffset":21686,"endOffset":21894,"count":0}],"isBlockCoverage":false},{"functionName":"getAllBindingsOfKind","ranges":[{"startOffset":21898,"endOffset":22287,"count":0}],"isBlockCoverage":false},{"functionName":"bindingIdentifierEquals","ranges":[{"startOffset":22291,"endOffset":22385,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":22389,"endOffset":22782,"count":653},{"startOffset":22460,"endOffset":22748,"count":1346},{"startOffset":22531,"endOffset":22708,"count":481},{"startOffset":22558,"endOffset":22585,"count":317},{"startOffset":22586,"endOffset":22625,"count":0},{"startOffset":22626,"endOffset":22653,"count":0},{"startOffset":22655,"endOffset":22657,"count":0},{"startOffset":22708,"endOffset":22748,"count":865}],"isBlockCoverage":true},{"functionName":"getOwnBinding","ranges":[{"startOffset":22786,"endOffset":22843,"count":1486}],"isBlockCoverage":true},{"functionName":"getBindingIdentifier","ranges":[{"startOffset":22847,"endOffset":23008,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnBindingIdentifier","ranges":[{"startOffset":23012,"endOffset":23146,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnBinding","ranges":[{"startOffset":23150,"endOffset":23214,"count":1}],"isBlockCoverage":true},{"functionName":"hasBinding","ranges":[{"startOffset":23218,"endOffset":23615,"count":1},{"startOffset":23263,"endOffset":23276,"count":0},{"startOffset":23311,"endOffset":23323,"count":0},{"startOffset":23372,"endOffset":23384,"count":0},{"startOffset":23412,"endOffset":23424,"count":0},{"startOffset":23492,"endOffset":23504,"count":0},{"startOffset":23581,"endOffset":23593,"count":0}],"isBlockCoverage":true},{"functionName":"parentHasBinding","ranges":[{"startOffset":23619,"endOffset":23782,"count":1},{"startOffset":23735,"endOffset":23777,"count":0}],"isBlockCoverage":true},{"functionName":"moveBindingTo","ranges":[{"startOffset":23786,"endOffset":23983,"count":0}],"isBlockCoverage":false},{"functionName":"removeOwnBinding","ranges":[{"startOffset":23987,"endOffset":24047,"count":0}],"isBlockCoverage":false},{"functionName":"removeBinding","ranges":[{"startOffset":24051,"endOffset":24359,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1130","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/includes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1772,"count":1}],"isBlockCoverage":true},{"functionName":"includes","ranges":[{"startOffset":1264,"endOffset":1743,"count":2},{"startOffset":1373,"endOffset":1393,"count":0},{"startOffset":1420,"endOffset":1429,"count":0},{"startOffset":1431,"endOffset":1453,"count":0},{"startOffset":1515,"endOffset":1570,"count":0},{"startOffset":1605,"endOffset":1673,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1131","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":723,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":549,"endOffset":694,"count":2},{"startOffset":634,"endOffset":656,"count":0},{"startOffset":657,"endOffset":690,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1132","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/toInteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":760,"count":1}],"isBlockCoverage":true},{"functionName":"toInteger","ranges":[{"startOffset":562,"endOffset":730,"count":109},{"startOffset":693,"endOffset":713,"count":0},{"startOffset":724,"endOffset":727,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1133","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/toFinite.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":868,"count":1}],"isBlockCoverage":true},{"functionName":"toFinite","ranges":[{"startOffset":567,"endOffset":839,"count":109},{"startOffset":608,"endOffset":649,"count":2},{"startOffset":641,"endOffset":644,"count":0},{"startOffset":649,"endOffset":724,"count":107},{"startOffset":726,"endOffset":799,"count":0},{"startOffset":799,"endOffset":832,"count":107},{"startOffset":833,"endOffset":836,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1134","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/toNumber.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1572,"count":1}],"isBlockCoverage":true},{"functionName":"toNumber","ranges":[{"startOffset":953,"endOffset":1543,"count":107},{"startOffset":1035,"endOffset":1440,"count":0},{"startOffset":1446,"endOffset":1494,"count":0},{"startOffset":1499,"endOffset":1540,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1135","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isSymbol.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":682,"count":1}],"isBlockCoverage":true},{"functionName":"isSymbol","ranges":[{"startOffset":527,"endOffset":653,"count":2},{"startOffset":616,"endOffset":649,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1136","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/values.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":733,"count":1}],"isBlockCoverage":true},{"functionName":"values","ranges":[{"startOffset":614,"endOffset":706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1137","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseValues.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":534,"count":1}],"isBlockCoverage":true},{"functionName":"baseValues","ranges":[{"startOffset":394,"endOffset":503,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1138","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arrayMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":556,"count":1}],"isBlockCoverage":true},{"functionName":"arrayMap","ranges":[{"startOffset":283,"endOffset":527,"count":4},{"startOffset":367,"endOffset":370,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1139","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/repeat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":893,"count":1}],"isBlockCoverage":true},{"functionName":"repeat","ranges":[{"startOffset":669,"endOffset":866,"count":95},{"startOffset":718,"endOffset":752,"count":0},{"startOffset":773,"endOffset":789,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1140","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseRepeat.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":952,"count":1}],"isBlockCoverage":true},{"functionName":"baseRepeat","ranges":[{"startOffset":477,"endOffset":921,"count":95},{"startOffset":577,"endOffset":601,"count":0},{"startOffset":767,"endOffset":890,"count":205},{"startOffset":784,"endOffset":815,"count":118},{"startOffset":855,"endOffset":886,"count":110}],"isBlockCoverage":true}]},{"scriptId":"1141","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/toString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":580,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":472,"endOffset":551,"count":95},{"startOffset":522,"endOffset":526,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1142","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseToString.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1154,"count":1},{"startOffset":332,"endOffset":343,"count":0},{"startOffset":401,"endOffset":412,"count":0}],"isBlockCoverage":true},{"functionName":"baseToString","ranges":[{"startOffset":622,"endOffset":1121,"count":95},{"startOffset":785,"endOffset":1101,"count":0},{"startOffset":1103,"endOffset":1109,"count":0},{"startOffset":1110,"endOffset":1118,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1143","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/scope/lib/renamer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4234,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":341,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":529,"endOffset":1272,"count":1},{"startOffset":611,"endOffset":684,"count":0},{"startOffset":686,"endOffset":782,"count":0},{"startOffset":784,"endOffset":912,"count":0},{"startOffset":935,"endOffset":1271,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1274,"endOffset":1369,"count":2},{"startOffset":1348,"endOffset":1366,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1397,"endOffset":1524,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":1529,"endOffset":1666,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression|Declaration|VariableDeclarator","ranges":[{"startOffset":1671,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"Renamer","ranges":[{"startOffset":1967,"endOffset":2095,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromExportDeclaration","ranges":[{"startOffset":2099,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionDeclaration","ranges":[{"startOffset":2480,"endOffset":2879,"count":0}],"isBlockCoverage":false},{"functionName":"maybeConvertFromClassFunctionExpression","ranges":[{"startOffset":2883,"endOffset":3287,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":3291,"endOffset":4203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1144","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/scope/binding.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1233,"count":1}],"isBlockCoverage":true},{"functionName":"Binding","ranges":[{"startOffset":125,"endOffset":464,"count":77}],"isBlockCoverage":true},{"functionName":"deoptValue","ranges":[{"startOffset":468,"endOffset":542,"count":0}],"isBlockCoverage":false},{"functionName":"setValue","ranges":[{"startOffset":546,"endOffset":655,"count":0}],"isBlockCoverage":false},{"functionName":"clearValue","ranges":[{"startOffset":659,"endOffset":761,"count":77}],"isBlockCoverage":true},{"functionName":"reassign","ranges":[{"startOffset":765,"endOffset":930,"count":75},{"startOffset":864,"endOffset":885,"count":25},{"startOffset":885,"endOffset":929,"count":50}],"isBlockCoverage":true},{"functionName":"reference","ranges":[{"startOffset":934,"endOffset":1115,"count":237},{"startOffset":1002,"endOffset":1023,"count":71},{"startOffset":1023,"endOffset":1114,"count":166}],"isBlockCoverage":true},{"functionName":"dereference","ranges":[{"startOffset":1119,"endOffset":1202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1145","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-split-export-declaration/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3111,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":182,"endOffset":368,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":370,"endOffset":1113,"count":1},{"startOffset":452,"endOffset":525,"count":0},{"startOffset":527,"endOffset":623,"count":0},{"startOffset":625,"endOffset":753,"count":0},{"startOffset":776,"endOffset":1112,"count":0}],"isBlockCoverage":true},{"functionName":"splitExportDeclaration","ranges":[{"startOffset":1115,"endOffset":3111,"count":1},{"startOffset":1216,"endOffset":1287,"count":0},{"startOffset":1570,"endOffset":1591,"count":0},{"startOffset":1660,"endOffset":1679,"count":0},{"startOffset":1894,"endOffset":1931,"count":0},{"startOffset":1932,"endOffset":1966,"count":0},{"startOffset":2099,"endOffset":2188,"count":0},{"startOffset":2566,"endOffset":3110,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2833,"endOffset":2916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1146","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/defaults.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1754,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1032,"endOffset":1723,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1147","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/globals/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":58,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1148","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":488,"count":1}],"isBlockCoverage":true},{"functionName":"clear","ranges":[{"startOffset":304,"endOffset":355,"count":0}],"isBlockCoverage":false},{"functionName":"clearPath","ranges":[{"startOffset":357,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"clearScope","ranges":[{"startOffset":422,"endOffset":488,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1149","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2498,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":270,"endOffset":365,"count":2},{"startOffset":344,"endOffset":362,"count":0}],"isBlockCoverage":true},{"functionName":"Generator","ranges":[{"startOffset":412,"endOffset":621,"count":2},{"startOffset":566,"endOffset":572,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":625,"endOffset":678,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":683,"endOffset":2171,"count":2},{"startOffset":1027,"endOffset":1043,"count":0},{"startOffset":1521,"endOffset":1640,"count":0},{"startOffset":1844,"endOffset":2072,"count":0},{"startOffset":2096,"endOffset":2151,"count":0}],"isBlockCoverage":true},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1613,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"format.shouldPrintComment","ranges":[{"startOffset":1710,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"CodeGenerator","ranges":[{"startOffset":2197,"endOffset":2285,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":2289,"endOffset":2344,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":2389,"endOffset":2498,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1150","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1988,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":172,"endOffset":267,"count":1},{"startOffset":240,"endOffset":245,"count":0}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":289,"endOffset":420,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":424,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"getRawMappings","ranges":[{"startOffset":1080,"endOffset":1140,"count":2}],"isBlockCoverage":true},{"functionName":"mark","ranges":[{"startOffset":1144,"endOffset":1955,"count":1073},{"startOffset":1274,"endOffset":1290,"count":133},{"startOffset":1292,"endOffset":1299,"count":29},{"startOffset":1299,"endOffset":1316,"count":1044},{"startOffset":1316,"endOffset":1354,"count":833},{"startOffset":1355,"endOffset":1387,"count":757},{"startOffset":1388,"endOffset":1424,"count":746},{"startOffset":1426,"endOffset":1447,"count":409},{"startOffset":1447,"endOffset":1643,"count":635},{"startOffset":1643,"endOffset":1655,"count":424},{"startOffset":1773,"endOffset":1784,"count":0},{"startOffset":1785,"endOffset":1846,"count":635},{"startOffset":1877,"endOffset":1888,"count":0},{"startOffset":1889,"endOffset":1943,"count":635}],"isBlockCoverage":true}]},{"scriptId":"1151","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/source-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1152","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/source-map-generator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14101,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapGenerator","ranges":[{"startOffset":676,"endOffset":1066,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_fromSourceMap","ranges":[{"startOffset":1269,"endOffset":2435,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_addMapping","ranges":[{"startOffset":2973,"endOffset":3885,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_setSourceContent","ranges":[{"startOffset":3991,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_applySourceMap","ranges":[{"startOffset":5869,"endOffset":8581,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_validateMapping","ranges":[{"startOffset":9016,"endOffset":10610,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_serializeMappings","ranges":[{"startOffset":10783,"endOffset":12742,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_generateSourcesContent","ranges":[{"startOffset":12802,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toJSON","ranges":[{"startOffset":13353,"endOffset":13856,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapGenerator_toString","ranges":[{"startOffset":13963,"endOffset":14049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1153","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/base64-vlq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4714,"count":1}],"isBlockCoverage":true},{"functionName":"toVLQSigned","ranges":[{"startOffset":2872,"endOffset":2976,"count":0}],"isBlockCoverage":false},{"functionName":"fromVLQSigned","ranges":[{"startOffset":3238,"endOffset":3390,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_encode","ranges":[{"startOffset":3459,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"base64VLQ_decode","ranges":[{"startOffset":4049,"endOffset":4712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1154","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/base64.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1540,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encode","ranges":[{"startOffset":403,"endOffset":576,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decode","ranges":[{"startOffset":693,"endOffset":1538,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1155","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10484,"count":1},{"startOffset":6430,"endOffset":6443,"count":0},{"startOffset":6607,"endOffset":6622,"count":0}],"isBlockCoverage":true},{"functionName":"getArg","ranges":[{"startOffset":594,"endOffset":835,"count":0}],"isBlockCoverage":false},{"functionName":"urlParse","ranges":[{"startOffset":982,"endOffset":1200,"count":0}],"isBlockCoverage":false},{"functionName":"urlGenerate","ranges":[{"startOffset":1231,"endOffset":1618,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1951,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"join","ranges":[{"startOffset":3579,"endOffset":4447,"count":0}],"isBlockCoverage":false},{"functionName":"exports.isAbsolute","ranges":[{"startOffset":4491,"endOffset":4573,"count":0}],"isBlockCoverage":false},{"functionName":"relative","ranges":[{"startOffset":4737,"endOffset":5806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5862,"endOffset":5942,"count":1}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":5948,"endOffset":5985,"count":0}],"isBlockCoverage":false},{"functionName":"toSetString","ranges":[{"startOffset":6276,"endOffset":6378,"count":0}],"isBlockCoverage":false},{"functionName":"fromSetString","ranges":[{"startOffset":6446,"endOffset":6553,"count":0}],"isBlockCoverage":false},{"functionName":"isProtoString","ranges":[{"startOffset":6625,"endOffset":7407,"count":0}],"isBlockCoverage":false},{"functionName":"compareByOriginalPositions","ranges":[{"startOffset":7744,"endOffset":8366,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsDeflated","ranges":[{"startOffset":8819,"endOffset":9452,"count":0}],"isBlockCoverage":false},{"functionName":"strcmp","ranges":[{"startOffset":9537,"endOffset":9669,"count":0}],"isBlockCoverage":false},{"functionName":"compareByGeneratedPositionsInflated","ranges":[{"startOffset":9799,"endOffset":10400,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1156","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/array-set.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3197,"count":1}],"isBlockCoverage":true},{"functionName":"ArraySet","ranges":[{"startOffset":610,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_fromArray","ranges":[{"startOffset":819,"endOffset":1019,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_size","ranges":[{"startOffset":1208,"endOffset":1323,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_add","ranges":[{"startOffset":1421,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_has","ranges":[{"startOffset":1950,"endOffset":2127,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_indexOf","ranges":[{"startOffset":2247,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_at","ranges":[{"startOffset":2672,"endOffset":2836,"count":0}],"isBlockCoverage":false},{"functionName":"ArraySet_toArray","ranges":[{"startOffset":3104,"endOffset":3165,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1157","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/mapping-list.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2339,"count":1}],"isBlockCoverage":true},{"functionName":"generatedPositionAfter","ranges":[{"startOffset":334,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList","ranges":[{"startOffset":957,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_forEach","ranges":[{"startOffset":1327,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_add","ranges":[{"startOffset":1529,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"MappingList_toArray","ranges":[{"startOffset":2129,"endOffset":2301,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1158","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/source-map-consumer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38390,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMapConsumer","ranges":[{"startOffset":426,"endOffset":734,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer.fromSourceMap","ranges":[{"startOffset":770,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2521,"endOffset":2679,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":2821,"endOffset":2977,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_charIsMappingSeparator","ranges":[{"startOffset":3039,"endOffset":3174,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":3418,"endOffset":3548,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_eachMapping","ranges":[{"startOffset":4485,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_allGeneratedPositionsFor","ranges":[{"startOffset":6535,"endOffset":9285,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer","ranges":[{"startOffset":10656,"endOffset":12847,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_fromSourceMap","ranges":[{"startOffset":13229,"endOffset":15039,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":15280,"endOffset":15439,"count":0}],"isBlockCoverage":false},{"functionName":"Mapping","ranges":[{"startOffset":15506,"endOffset":15682,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_parseMappings","ranges":[{"startOffset":15930,"endOffset":19135,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_findMapping","ranges":[{"startOffset":19334,"endOffset":20153,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_computeColumnSpans","ranges":[{"startOffset":20308,"endOffset":21187,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_originalPositionFor","ranges":[{"startOffset":22205,"endOffset":23481,"count":0}],"isBlockCoverage":false},{"functionName":"BasicSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":23654,"endOffset":23911,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_sourceContentFor","ranges":[{"startOffset":24137,"endOffset":25665,"count":0}],"isBlockCoverage":false},{"functionName":"SourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":26630,"endOffset":27848,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer","ranges":[{"startOffset":29633,"endOffset":31107,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":31501,"endOffset":31765,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_originalPositionFor","ranges":[{"startOffset":32436,"endOffset":33615,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_hasContentsOfAllSources","ranges":[{"startOffset":33790,"endOffset":33961,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_sourceContentFor","ranges":[{"startOffset":34189,"endOffset":34628,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_generatedPositionFor","ranges":[{"startOffset":35243,"endOffset":36153,"count":0}],"isBlockCoverage":false},{"functionName":"IndexedSourceMapConsumer_parseMappings","ranges":[{"startOffset":36404,"endOffset":38326,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1159","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/binary-search.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4249,"count":1}],"isBlockCoverage":true},{"functionName":"recursiveSearch","ranges":[{"startOffset":931,"endOffset":2523,"count":0}],"isBlockCoverage":false},{"functionName":"search","ranges":[{"startOffset":3578,"endOffset":4247,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1160","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/quick-sort.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3616,"count":1}],"isBlockCoverage":true},{"functionName":"swap","ranges":[{"startOffset":1107,"endOffset":1192,"count":0}],"isBlockCoverage":false},{"functionName":"randomIntInRange","ranges":[{"startOffset":1402,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"doQuickSort","ranges":[{"startOffset":1783,"endOffset":3301,"count":0}],"isBlockCoverage":false},{"functionName":"exports.quickSort","ranges":[{"startOffset":3533,"endOffset":3614,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1161","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/node_modules/source-map/lib/source-node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13796,"count":1}],"isBlockCoverage":true},{"functionName":"SourceNode","ranges":[{"startOffset":1281,"endOffset":1654,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_fromStringWithSourceMap","ranges":[{"startOffset":2008,"endOffset":6500,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_add","ranges":[{"startOffset":6745,"endOffset":7170,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_prepend","ranges":[{"startOffset":7436,"endOffset":7853,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walk","ranges":[{"startOffset":8156,"endOffset":8572,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_join","ranges":[{"startOffset":8751,"endOffset":9090,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_replaceRight","ranges":[{"startOffset":9387,"endOffset":9820,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_setSourceContent","ranges":[{"startOffset":10108,"endOffset":10252,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_walkSourceContents","ranges":[{"startOffset":10496,"endOffset":10910,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toString","ranges":[{"startOffset":11099,"endOffset":11218,"count":0}],"isBlockCoverage":false},{"functionName":"SourceNode_toStringWithSourceMap","ranges":[{"startOffset":11359,"endOffset":13760,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1162","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/printer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13221,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":491,"endOffset":677,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":679,"endOffset":1422,"count":3},{"startOffset":761,"endOffset":834,"count":0},{"startOffset":836,"endOffset":932,"count":0},{"startOffset":934,"endOffset":1062,"count":0},{"startOffset":1085,"endOffset":1421,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1424,"endOffset":1519,"count":3},{"startOffset":1492,"endOffset":1497,"count":1},{"startOffset":1498,"endOffset":1516,"count":2}],"isBlockCoverage":true},{"functionName":"Printer","ranges":[{"startOffset":1702,"endOffset":2194,"count":2},{"startOffset":2142,"endOffset":2147,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":2198,"endOffset":2300,"count":2}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":2304,"endOffset":2398,"count":24},{"startOffset":2367,"endOffset":2374,"count":0}],"isBlockCoverage":true},{"functionName":"dedent","ranges":[{"startOffset":2402,"endOffset":2496,"count":24},{"startOffset":2465,"endOffset":2472,"count":0}],"isBlockCoverage":true},{"functionName":"semicolon","ranges":[{"startOffset":2500,"endOffset":2594,"count":60}],"isBlockCoverage":true},{"functionName":"rightBrace","ranges":[{"startOffset":2598,"endOffset":2715,"count":14},{"startOffset":2643,"endOffset":2689,"count":0}],"isBlockCoverage":true},{"functionName":"space","ranges":[{"startOffset":2719,"endOffset":2900,"count":325},{"startOffset":2771,"endOffset":2778,"count":0},{"startOffset":2834,"endOffset":2857,"count":295},{"startOffset":2858,"endOffset":2866,"count":44},{"startOffset":2868,"endOffset":2896,"count":321}],"isBlockCoverage":true},{"functionName":"word","ranges":[{"startOffset":2904,"endOffset":3113,"count":265},{"startOffset":2965,"endOffset":2990,"count":0},{"startOffset":2992,"endOffset":3020,"count":0}],"isBlockCoverage":true},{"functionName":"number","ranges":[{"startOffset":3117,"endOffset":3347,"count":13}],"isBlockCoverage":true},{"functionName":"token","ranges":[{"startOffset":3351,"endOffset":3620,"count":337},{"startOffset":3385,"endOffset":3406,"count":0},{"startOffset":3425,"endOffset":3446,"count":24},{"startOffset":3465,"endOffset":3486,"count":1},{"startOffset":3505,"endOffset":3529,"count":26},{"startOffset":3531,"endOffset":3559,"count":0}],"isBlockCoverage":true},{"functionName":"newline","ranges":[{"startOffset":3624,"endOffset":4025,"count":205},{"startOffset":3693,"endOffset":3700,"count":0},{"startOffset":3731,"endOffset":3772,"count":0},{"startOffset":3805,"endOffset":3812,"count":15},{"startOffset":3812,"endOffset":3844,"count":190},{"startOffset":3844,"endOffset":3850,"count":45},{"startOffset":3850,"endOffset":3904,"count":190},{"startOffset":3904,"endOffset":3927,"count":176},{"startOffset":3929,"endOffset":3933,"count":19},{"startOffset":3933,"endOffset":3950,"count":190},{"startOffset":3950,"endOffset":3957,"count":54},{"startOffset":3957,"endOffset":3991,"count":136},{"startOffset":3991,"endOffset":4021,"count":147},{"startOffset":4021,"endOffset":4024,"count":136}],"isBlockCoverage":true},{"functionName":"endsWith","ranges":[{"startOffset":4029,"endOffset":4084,"count":2526}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":4088,"endOffset":4156,"count":14}],"isBlockCoverage":true},{"functionName":"exactSource","ranges":[{"startOffset":4160,"endOffset":4256,"count":193}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":4260,"endOffset":4347,"count":15}],"isBlockCoverage":true},{"functionName":"withSource","ranges":[{"startOffset":4351,"endOffset":4454,"count":510}],"isBlockCoverage":true},{"functionName":"_space","ranges":[{"startOffset":4458,"endOffset":4501,"count":321}],"isBlockCoverage":true},{"functionName":"_newline","ranges":[{"startOffset":4505,"endOffset":4551,"count":147}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":4555,"endOffset":4779,"count":1130},{"startOffset":4660,"endOffset":4681,"count":521},{"startOffset":4681,"endOffset":4708,"count":609}],"isBlockCoverage":true},{"functionName":"_maybeIndent","ranges":[{"startOffset":4783,"endOffset":4920,"count":1130},{"startOffset":4824,"endOffset":4846,"count":1021},{"startOffset":4847,"endOffset":4865,"count":112},{"startOffset":4867,"endOffset":4916,"count":95}],"isBlockCoverage":true},{"functionName":"_maybeAddParen","ranges":[{"startOffset":4924,"endOffset":5704,"count":1130},{"startOffset":5041,"endOffset":5048,"count":1120},{"startOffset":5048,"endOffset":5109,"count":10},{"startOffset":5116,"endOffset":5125,"count":0},{"startOffset":5125,"endOffset":5153,"count":10},{"startOffset":5153,"endOffset":5174,"count":0},{"startOffset":5174,"endOffset":5617,"count":10},{"startOffset":5247,"endOffset":5270,"count":0},{"startOffset":5341,"endOffset":5611,"count":0},{"startOffset":5617,"endOffset":5703,"count":0}],"isBlockCoverage":true},{"functionName":"_catchUp","ranges":[{"startOffset":5708,"endOffset":6008,"count":718},{"startOffset":5771,"endOffset":5803,"count":0},{"startOffset":5804,"endOffset":5810,"count":0},{"startOffset":5834,"endOffset":5842,"count":0},{"startOffset":5843,"endOffset":5853,"count":0},{"startOffset":5864,"endOffset":6004,"count":0}],"isBlockCoverage":true},{"functionName":"_getIndent","ranges":[{"startOffset":6012,"endOffset":6103,"count":95}],"isBlockCoverage":true},{"functionName":"startTerminatorless","ranges":[{"startOffset":6107,"endOffset":6320,"count":11},{"startOffset":6163,"endOffset":6226,"count":1},{"startOffset":6226,"endOffset":6316,"count":10}],"isBlockCoverage":true},{"functionName":"endTerminatorless","ranges":[{"startOffset":6324,"endOffset":6513,"count":11},{"startOffset":6410,"endOffset":6418,"count":1},{"startOffset":6419,"endOffset":6434,"count":10},{"startOffset":6436,"endOffset":6509,"count":0}],"isBlockCoverage":true},{"functionName":"print","ranges":[{"startOffset":6517,"endOffset":7732,"count":603},{"startOffset":6554,"endOffset":6561,"count":93},{"startOffset":6561,"endOffset":6630,"count":510},{"startOffset":6630,"endOffset":6671,"count":0},{"startOffset":6671,"endOffset":6737,"count":510},{"startOffset":6737,"endOffset":6911,"count":0},{"startOffset":6911,"endOffset":7064,"count":510},{"startOffset":7064,"endOffset":7076,"count":20},{"startOffset":7191,"endOffset":7228,"count":0},{"startOffset":7229,"endOffset":7242,"count":0},{"startOffset":7243,"endOffset":7270,"count":0},{"startOffset":7272,"endOffset":7305,"count":0},{"startOffset":7305,"endOffset":7328,"count":510},{"startOffset":7328,"endOffset":7344,"count":7},{"startOffset":7344,"endOffset":7419,"count":510},{"startOffset":7419,"endOffset":7436,"count":508},{"startOffset":7437,"endOffset":7443,"count":4},{"startOffset":7444,"endOffset":7454,"count":506},{"startOffset":7612,"endOffset":7628,"count":7},{"startOffset":7628,"endOffset":7731,"count":510}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7490,"endOffset":7547,"count":510}],"isBlockCoverage":true},{"functionName":"_maybeAddAuxComment","ranges":[{"startOffset":7736,"endOffset":7906,"count":1174},{"startOffset":7816,"endOffset":7846,"count":4},{"startOffset":7873,"endOffset":7902,"count":1130}],"isBlockCoverage":true},{"functionName":"_printAuxBeforeComment","ranges":[{"startOffset":7910,"endOffset":8209,"count":4},{"startOffset":7980,"endOffset":8108,"count":2},{"startOffset":8108,"endOffset":8205,"count":0}],"isBlockCoverage":true},{"functionName":"_printAuxAfterComment","ranges":[{"startOffset":8213,"endOffset":8512,"count":1130},{"startOffset":8283,"endOffset":8290,"count":1128},{"startOffset":8290,"endOffset":8411,"count":2},{"startOffset":8411,"endOffset":8508,"count":0}],"isBlockCoverage":true},{"functionName":"getPossibleRaw","ranges":[{"startOffset":8516,"endOffset":8700,"count":49},{"startOffset":8584,"endOffset":8604,"count":48},{"startOffset":8605,"endOffset":8630,"count":48},{"startOffset":8631,"endOffset":8663,"count":48},{"startOffset":8665,"endOffset":8696,"count":48}],"isBlockCoverage":true},{"functionName":"printJoin","ranges":[{"startOffset":8704,"endOffset":9409,"count":92},{"startOffset":8766,"endOffset":8774,"count":16},{"startOffset":8775,"endOffset":8789,"count":76},{"startOffset":8792,"endOffset":8799,"count":30},{"startOffset":8799,"endOffset":8821,"count":62},{"startOffset":8821,"endOffset":8835,"count":24},{"startOffset":8835,"endOffset":8949,"count":62},{"startOffset":8949,"endOffset":9368,"count":146},{"startOffset":8997,"endOffset":9006,"count":0},{"startOffset":9033,"endOffset":9085,"count":80},{"startOffset":9144,"endOffset":9185,"count":0},{"startOffset":9212,"endOffset":9235,"count":71},{"startOffset":9237,"endOffset":9281,"count":33},{"startOffset":9309,"endOffset":9362,"count":80},{"startOffset":9368,"endOffset":9391,"count":62},{"startOffset":9391,"endOffset":9405,"count":24}],"isBlockCoverage":true},{"functionName":"printAndIndentOnComments","ranges":[{"startOffset":9413,"endOffset":9625,"count":3},{"startOffset":9494,"endOffset":9528,"count":0},{"startOffset":9546,"endOffset":9560,"count":0},{"startOffset":9607,"endOffset":9621,"count":0}],"isBlockCoverage":true},{"functionName":"printBlock","ranges":[{"startOffset":9629,"endOffset":9778,"count":1}],"isBlockCoverage":true},{"functionName":"_printTrailingComments","ranges":[{"startOffset":9782,"endOffset":9873,"count":510}],"isBlockCoverage":true},{"functionName":"_printLeadingComments","ranges":[{"startOffset":9877,"endOffset":9972,"count":510}],"isBlockCoverage":true},{"functionName":"printInnerComments","ranges":[{"startOffset":9976,"endOffset":10269,"count":23},{"startOffset":10118,"endOffset":10146,"count":0},{"startOffset":10156,"endOffset":10265,"count":0}],"isBlockCoverage":true},{"functionName":"printSequence","ranges":[{"startOffset":10273,"endOffset":10393,"count":38}],"isBlockCoverage":true},{"functionName":"printList","ranges":[{"startOffset":10397,"endOffset":10566,"count":38},{"startOffset":10467,"endOffset":10513,"count":30}],"isBlockCoverage":true},{"functionName":"_printNewline","ranges":[{"startOffset":10570,"endOffset":11065,"count":160},{"startOffset":10671,"endOffset":10678,"count":0},{"startOffset":10709,"endOffset":10750,"count":0},{"startOffset":10804,"endOffset":11035,"count":158},{"startOffset":10826,"endOffset":10834,"count":80},{"startOffset":10863,"endOffset":10909,"count":10},{"startOffset":10904,"endOffset":10908,"count":9},{"startOffset":10938,"endOffset":10963,"count":78},{"startOffset":10964,"endOffset":10988,"count":80},{"startOffset":11021,"endOffset":11029,"count":31}],"isBlockCoverage":true},{"functionName":"_getComments","ranges":[{"startOffset":11069,"endOffset":11185,"count":1020},{"startOffset":11127,"endOffset":11149,"count":510},{"startOffset":11150,"endOffset":11173,"count":510},{"startOffset":11175,"endOffset":11180,"count":1018}],"isBlockCoverage":true},{"functionName":"_printComment","ranges":[{"startOffset":11189,"endOffset":12655,"count":0}],"isBlockCoverage":false},{"functionName":"_printComments","ranges":[{"startOffset":12659,"endOffset":13070,"count":1020},{"startOffset":12735,"endOffset":12743,"count":0},{"startOffset":12771,"endOffset":12826,"count":0},{"startOffset":12827,"endOffset":12872,"count":0},{"startOffset":12874,"endOffset":13066,"count":0}],"isBlockCoverage":true},{"functionName":"commaSeparator","ranges":[{"startOffset":13157,"endOffset":13221,"count":23}],"isBlockCoverage":true}]},{"scriptId":"1163","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/isInteger.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":669,"count":1}],"isBlockCoverage":true},{"functionName":"isInteger","ranges":[{"startOffset":546,"endOffset":639,"count":13}],"isBlockCoverage":true}]},{"scriptId":"1164","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/buffer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5867,"count":1}],"isBlockCoverage":true},{"functionName":"Buffer","ranges":[{"startOffset":154,"endOffset":498,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":502,"endOffset":1070,"count":2},{"startOffset":670,"endOffset":678,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":833,"endOffset":889,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":900,"endOffset":1029,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":1074,"endOffset":1300,"count":609}],"isBlockCoverage":true},{"functionName":"queue","ranges":[{"startOffset":1304,"endOffset":1662,"count":616},{"startOffset":1339,"endOffset":1459,"count":147},{"startOffset":1377,"endOffset":1413,"count":95},{"startOffset":1415,"endOffset":1453,"count":5}],"isBlockCoverage":true},{"functionName":"_flush","ranges":[{"startOffset":1666,"endOffset":1755,"count":611},{"startOffset":1729,"endOffset":1751,"count":597}],"isBlockCoverage":true},{"functionName":"_append","ranges":[{"startOffset":1759,"endOffset":2249,"count":1206},{"startOffset":1859,"endOffset":1979,"count":1073},{"startOffset":2087,"endOffset":2245,"count":3619},{"startOffset":2116,"endOffset":2191,"count":133},{"startOffset":2191,"endOffset":2239,"count":3486}],"isBlockCoverage":true},{"functionName":"removeTrailingNewline","ranges":[{"startOffset":2253,"endOffset":2379,"count":14}],"isBlockCoverage":true},{"functionName":"removeLastSemicolon","ranges":[{"startOffset":2383,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"endsWith","ranges":[{"startOffset":2510,"endOffset":2978,"count":2526},{"startOffset":2558,"endOffset":2774,"count":1955},{"startOffset":2611,"endOffset":2695,"count":782},{"startOffset":2695,"endOffset":2737,"count":1173},{"startOffset":2774,"endOffset":2897,"count":571},{"startOffset":2897,"endOffset":2955,"count":409},{"startOffset":2955,"endOffset":2977,"count":162}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2824,"endOffset":2852,"count":548}],"isBlockCoverage":true},{"functionName":"hasContent","ranges":[{"startOffset":2982,"endOffset":3051,"count":485},{"startOffset":3031,"endOffset":3046,"count":305}],"isBlockCoverage":true},{"functionName":"exactSource","ranges":[{"startOffset":3055,"endOffset":3195,"count":193}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":3199,"endOffset":3329,"count":911},{"startOffset":3248,"endOffset":3255,"count":40},{"startOffset":3255,"endOffset":3328,"count":871}],"isBlockCoverage":true},{"functionName":"withSource","ranges":[{"startOffset":3333,"endOffset":4346,"count":510},{"startOffset":3381,"endOffset":3393,"count":0},{"startOffset":3710,"endOffset":3755,"count":0},{"startOffset":3756,"endOffset":3805,"count":0},{"startOffset":3806,"endOffset":3859,"count":0},{"startOffset":3886,"endOffset":3930,"count":222},{"startOffset":3931,"endOffset":3979,"count":221},{"startOffset":3980,"endOffset":4032,"count":93},{"startOffset":4035,"endOffset":4342,"count":417}],"isBlockCoverage":true},{"functionName":"_disallowPop","ranges":[{"startOffset":4350,"endOffset":4471,"count":193},{"startOffset":4398,"endOffset":4405,"count":8},{"startOffset":4405,"endOffset":4470,"count":185}],"isBlockCoverage":true},{"functionName":"_normalizePosition","ranges":[{"startOffset":4475,"endOffset":5341,"count":1056},{"startOffset":4557,"endOffset":4563,"count":0},{"startOffset":4599,"endOffset":4752,"count":185},{"startOffset":4925,"endOffset":4971,"count":856},{"startOffset":4941,"endOffset":4949,"count":0},{"startOffset":4972,"endOffset":4979,"count":501},{"startOffset":5014,"endOffset":5022,"count":0},{"startOffset":5070,"endOffset":5078,"count":0},{"startOffset":5130,"endOffset":5138,"count":0},{"startOffset":5170,"endOffset":5200,"count":871},{"startOffset":5201,"endOffset":5235,"count":640},{"startOffset":5236,"endOffset":5274,"count":165},{"startOffset":5276,"endOffset":5314,"count":891}],"isBlockCoverage":true},{"functionName":"getCurrentColumn","ranges":[{"startOffset":5345,"endOffset":5588,"count":0}],"isBlockCoverage":false},{"functionName":"getCurrentLine","ranges":[{"startOffset":5592,"endOffset":5837,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1165","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/node/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3452,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":459,"endOffset":645,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":647,"endOffset":1390,"count":3},{"startOffset":729,"endOffset":802,"count":0},{"startOffset":804,"endOffset":900,"count":0},{"startOffset":902,"endOffset":1030,"count":0},{"startOffset":1053,"endOffset":1389,"count":0}],"isBlockCoverage":true},{"functionName":"expandAliases","ranges":[{"startOffset":1392,"endOffset":1945,"count":3},{"startOffset":1729,"endOffset":1925,"count":61},{"startOffset":1797,"endOffset":1880,"count":6},{"startOffset":1834,"endOffset":1874,"count":24},{"startOffset":1880,"endOffset":1921,"count":55}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":1446,"endOffset":1688,"count":79},{"startOffset":1524,"endOffset":1676,"count":15},{"startOffset":1677,"endOffset":1683,"count":64}],"isBlockCoverage":true},{"functionName":"newObj.<computed>","ranges":[{"startOffset":1526,"endOffset":1676,"count":49},{"startOffset":1633,"endOffset":1660,"count":34},{"startOffset":1661,"endOffset":1669,"count":15}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":2122,"endOffset":2250,"count":836},{"startOffset":2210,"endOffset":2240,"count":242},{"startOffset":2241,"endOffset":2247,"count":594}],"isBlockCoverage":true},{"functionName":"isOrHasCallExpression","ranges":[{"startOffset":2252,"endOffset":2423,"count":0}],"isBlockCoverage":false},{"functionName":"needsWhitespace","ranges":[{"startOffset":2425,"endOffset":2999,"count":196},{"startOffset":2485,"endOffset":2494,"count":12},{"startOffset":2494,"endOffset":2533,"count":184},{"startOffset":2533,"endOffset":2566,"count":54},{"startOffset":2566,"endOffset":2650,"count":184},{"startOffset":2650,"endOffset":2885,"count":144},{"startOffset":2730,"endOffset":2881,"count":18},{"startOffset":2777,"endOffset":2875,"count":38},{"startOffset":2861,"endOffset":2867,"count":0},{"startOffset":2885,"endOffset":2923,"count":184},{"startOffset":2923,"endOffset":2944,"count":88},{"startOffset":2946,"endOffset":2984,"count":40},{"startOffset":2975,"endOffset":2979,"count":9},{"startOffset":2984,"endOffset":2998,"count":144}],"isBlockCoverage":true},{"functionName":"needsWhitespaceBefore","ranges":[{"startOffset":3001,"endOffset":3099,"count":78}],"isBlockCoverage":true},{"functionName":"needsWhitespaceAfter","ranges":[{"startOffset":3101,"endOffset":3197,"count":80}],"isBlockCoverage":true},{"functionName":"needsParens","ranges":[{"startOffset":3199,"endOffset":3452,"count":510},{"startOffset":3263,"endOffset":3276,"count":2},{"startOffset":3276,"endOffset":3310,"count":508},{"startOffset":3310,"endOffset":3335,"count":0},{"startOffset":3337,"endOffset":3392,"count":0},{"startOffset":3392,"endOffset":3451,"count":508}],"isBlockCoverage":true}]},{"scriptId":"1166","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/node/whitespace.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6060,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":179,"endOffset":365,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":367,"endOffset":1110,"count":1},{"startOffset":449,"endOffset":522,"count":0},{"startOffset":524,"endOffset":620,"count":0},{"startOffset":622,"endOffset":750,"count":0},{"startOffset":773,"endOffset":1109,"count":0}],"isBlockCoverage":true},{"functionName":"crawl","ranges":[{"startOffset":1112,"endOffset":1752,"count":180},{"startOffset":1180,"endOffset":1217,"count":162},{"startOffset":1219,"endOffset":1307,"count":18},{"startOffset":1275,"endOffset":1303,"count":0},{"startOffset":1307,"endOffset":1733,"count":162},{"startOffset":1334,"endOffset":1367,"count":130},{"startOffset":1369,"endOffset":1433,"count":32},{"startOffset":1433,"endOffset":1733,"count":130},{"startOffset":1468,"endOffset":1503,"count":110},{"startOffset":1505,"endOffset":1567,"count":20},{"startOffset":1567,"endOffset":1733,"count":110},{"startOffset":1597,"endOffset":1632,"count":0},{"startOffset":1664,"endOffset":1733,"count":44}],"isBlockCoverage":true},{"functionName":"isHelper","ranges":[{"startOffset":1754,"endOffset":2235,"count":264},{"startOffset":1814,"endOffset":1880,"count":36},{"startOffset":1880,"endOffset":2233,"count":228},{"startOffset":1912,"endOffset":1977,"count":110},{"startOffset":1977,"endOffset":2233,"count":118},{"startOffset":2013,"endOffset":2052,"count":40},{"startOffset":2052,"endOffset":2233,"count":78},{"startOffset":2079,"endOffset":2112,"count":72},{"startOffset":2114,"endOffset":2204,"count":6},{"startOffset":2153,"endOffset":2175,"count":2},{"startOffset":2204,"endOffset":2233,"count":72}],"isBlockCoverage":true},{"functionName":"isType","ranges":[{"startOffset":2237,"endOffset":2403,"count":2}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":2423,"endOffset":2643,"count":40},{"startOffset":2512,"endOffset":2530,"count":4},{"startOffset":2553,"endOffset":2639,"count":0}],"isBlockCoverage":true},{"functionName":"SwitchCase","ranges":[{"startOffset":2648,"endOffset":2851,"count":10},{"startOffset":2725,"endOffset":2752,"count":0},{"startOffset":2791,"endOffset":2840,"count":0}],"isBlockCoverage":true},{"functionName":"LogicalExpression","ranges":[{"startOffset":2856,"endOffset":2998,"count":2},{"startOffset":2943,"endOffset":2994,"count":0}],"isBlockCoverage":true},{"functionName":"Literal","ranges":[{"startOffset":3003,"endOffset":3111,"count":8},{"startOffset":3056,"endOffset":3107,"count":0}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":3116,"endOffset":3269,"count":22},{"startOffset":3192,"endOffset":3265,"count":0}],"isBlockCoverage":true},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":3274,"endOffset":3417,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":3422,"endOffset":3880,"count":18},{"startOffset":3505,"endOffset":3876,"count":40},{"startOffset":3590,"endOffset":3613,"count":2},{"startOffset":3636,"endOffset":3766,"count":38},{"startOffset":3720,"endOffset":3736,"count":0},{"startOffset":3787,"endOffset":3870,"count":2},{"startOffset":3876,"endOffset":3879,"count":16}],"isBlockCoverage":true},{"functionName":"IfStatement","ranges":[{"startOffset":3885,"endOffset":4027,"count":6},{"startOffset":3950,"endOffset":4023,"count":0}],"isBlockCoverage":true},{"functionName":"nodes.ObjectProperty.nodes.ObjectTypeProperty.nodes.ObjectMethod","ranges":[{"startOffset":4127,"endOffset":4236,"count":10},{"startOffset":4190,"endOffset":4234,"count":8}],"isBlockCoverage":true},{"functionName":"nodes.ObjectTypeCallProperty","ranges":[{"startOffset":4270,"endOffset":4502,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeIndexer","ranges":[{"startOffset":4531,"endOffset":4885,"count":0}],"isBlockCoverage":false},{"functionName":"nodes.ObjectTypeInternalSlot","ranges":[{"startOffset":4919,"endOffset":5385,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":5405,"endOffset":5489,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5466,"endOffset":5483,"count":38}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":5494,"endOffset":5547,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":5552,"endOffset":5608,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5775,"endOffset":6058,"count":6},{"startOffset":5957,"endOffset":5962,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5972,"endOffset":6054,"count":19}],"isBlockCoverage":true},{"functionName":"nodes.<computed>","ranges":[{"startOffset":6008,"endOffset":6049,"count":20}],"isBlockCoverage":true}]},{"scriptId":"1167","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/node/parentheses.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8476,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1271,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1459,"endOffset":2202,"count":1},{"startOffset":1541,"endOffset":1614,"count":0},{"startOffset":1616,"endOffset":1712,"count":0},{"startOffset":1714,"endOffset":1842,"count":0},{"startOffset":1865,"endOffset":2201,"count":0}],"isBlockCoverage":true},{"functionName":"isClassExtendsClause","ranges":[{"startOffset":2530,"endOffset":2639,"count":73},{"startOffset":2610,"endOffset":2639,"count":0}],"isBlockCoverage":true},{"functionName":"hasPostfixPart","ranges":[{"startOffset":2665,"endOffset":3002,"count":83},{"startOffset":2713,"endOffset":2752,"count":82},{"startOffset":2754,"endOffset":2779,"count":1},{"startOffset":2780,"endOffset":2904,"count":82},{"startOffset":2811,"endOffset":2848,"count":73},{"startOffset":2849,"endOffset":2877,"count":73},{"startOffset":2879,"endOffset":2904,"count":9},{"startOffset":2905,"endOffset":2967,"count":81},{"startOffset":2945,"endOffset":2967,"count":0},{"startOffset":2968,"endOffset":3002,"count":81}],"isBlockCoverage":true},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":3005,"endOffset":3096,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":3098,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":3376,"endOffset":3496,"count":1}],"isBlockCoverage":true},{"functionName":"ObjectExpression","ranges":[{"startOffset":3498,"endOffset":3625,"count":6}],"isBlockCoverage":true},{"functionName":"DoExpression","ranges":[{"startOffset":3627,"endOffset":3719,"count":0}],"isBlockCoverage":false},{"functionName":"Binary","ranges":[{"startOffset":3721,"endOffset":4393,"count":37},{"startOffset":3782,"endOffset":3839,"count":0},{"startOffset":3841,"endOffset":3879,"count":0},{"startOffset":3923,"endOffset":3945,"count":0},{"startOffset":4007,"endOffset":4037,"count":35},{"startOffset":4039,"endOffset":4061,"count":2},{"startOffset":4061,"endOffset":4089,"count":35},{"startOffset":4089,"endOffset":4391,"count":12},{"startOffset":4278,"endOffset":4302,"count":8},{"startOffset":4303,"endOffset":4336,"count":0},{"startOffset":4361,"endOffset":4387,"count":1}],"isBlockCoverage":true},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":4395,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":4600,"endOffset":4644,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":4646,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":4693,"endOffset":4882,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":4884,"endOffset":4986,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":4988,"endOffset":5119,"count":29},{"startOffset":5062,"endOffset":5116,"count":1}],"isBlockCoverage":true},{"functionName":"SequenceExpression","ranges":[{"startOffset":5121,"endOffset":5587,"count":3},{"startOffset":5196,"endOffset":5225,"count":2},{"startOffset":5226,"endOffset":5256,"count":1},{"startOffset":5257,"endOffset":5307,"count":1},{"startOffset":5284,"endOffset":5307,"count":0},{"startOffset":5308,"endOffset":5361,"count":1},{"startOffset":5338,"endOffset":5361,"count":0},{"startOffset":5362,"endOffset":5416,"count":1},{"startOffset":5392,"endOffset":5416,"count":0},{"startOffset":5417,"endOffset":5479,"count":1},{"startOffset":5448,"endOffset":5479,"count":0},{"startOffset":5480,"endOffset":5544,"count":1},{"startOffset":5569,"endOffset":5586,"count":0}],"isBlockCoverage":true},{"functionName":"YieldExpression","ranges":[{"startOffset":5589,"endOffset":5876,"count":0}],"isBlockCoverage":false},{"functionName":"ClassExpression","ranges":[{"startOffset":5878,"endOffset":6013,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryLike","ranges":[{"startOffset":6015,"endOffset":6202,"count":35}],"isBlockCoverage":true},{"functionName":"FunctionExpression","ranges":[{"startOffset":6204,"endOffset":6342,"count":3}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":6344,"endOffset":6473,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":6475,"endOffset":6783,"count":33},{"startOffset":6572,"endOffset":6630,"count":30},{"startOffset":6631,"endOffset":6661,"count":30},{"startOffset":6662,"endOffset":6692,"count":30},{"startOffset":6693,"endOffset":6722,"count":30},{"startOffset":6724,"endOffset":6746,"count":3},{"startOffset":6746,"endOffset":6782,"count":30}],"isBlockCoverage":true},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":6785,"endOffset":6953,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6955,"endOffset":7144,"count":27},{"startOffset":7049,"endOffset":7071,"count":0}],"isBlockCoverage":true},{"functionName":"LogicalExpression","ranges":[{"startOffset":7146,"endOffset":7541,"count":5},{"startOffset":7220,"endOffset":7353,"count":2},{"startOffset":7286,"endOffset":7352,"count":0},{"startOffset":7359,"endOffset":7447,"count":3},{"startOffset":7453,"endOffset":7535,"count":0}],"isBlockCoverage":true},{"functionName":"isFirstInStatement","ranges":[{"startOffset":7543,"endOffset":8476,"count":9},{"startOffset":7768,"endOffset":8457,"count":11},{"startOffset":7842,"endOffset":7940,"count":10},{"startOffset":7868,"endOffset":7940,"count":4},{"startOffset":7941,"endOffset":8022,"count":10},{"startOffset":7958,"endOffset":8022,"count":6},{"startOffset":8024,"endOffset":8050,"count":1},{"startOffset":8050,"endOffset":8089,"count":10},{"startOffset":8089,"endOffset":8118,"count":2},{"startOffset":8119,"endOffset":8186,"count":8},{"startOffset":8153,"endOffset":8186,"count":0},{"startOffset":8187,"endOffset":8239,"count":8},{"startOffset":8240,"endOffset":8287,"count":8},{"startOffset":8288,"endOffset":8349,"count":8},{"startOffset":8351,"endOffset":8420,"count":2},{"startOffset":8420,"endOffset":8453,"count":8},{"startOffset":8457,"endOffset":8475,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1168","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3100,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":177,"endOffset":386,"count":3},{"startOffset":243,"endOffset":250,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":322,"endOffset":378,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":470,"endOffset":674,"count":27},{"startOffset":536,"endOffset":543,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":615,"endOffset":666,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":755,"endOffset":958,"count":19},{"startOffset":821,"endOffset":828,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":900,"endOffset":950,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1030,"endOffset":1230,"count":8},{"startOffset":1096,"endOffset":1103,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1175,"endOffset":1222,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1302,"endOffset":1502,"count":9},{"startOffset":1368,"endOffset":1375,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1447,"endOffset":1494,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1574,"endOffset":1774,"count":11},{"startOffset":1640,"endOffset":1647,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1719,"endOffset":1766,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1840,"endOffset":2038,"count":21},{"startOffset":1906,"endOffset":1913,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1985,"endOffset":2030,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2101,"endOffset":2298,"count":65},{"startOffset":2167,"endOffset":2174,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2246,"endOffset":2290,"count":65}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2361,"endOffset":2558,"count":8},{"startOffset":2427,"endOffset":2434,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2506,"endOffset":2550,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2618,"endOffset":2814,"count":15},{"startOffset":2684,"endOffset":2691,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2763,"endOffset":2806,"count":15}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2895,"endOffset":3098,"count":68},{"startOffset":2961,"endOffset":2968,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3040,"endOffset":3090,"count":68}],"isBlockCoverage":true}]},{"scriptId":"1169","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/template-literals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":864,"count":1}],"isBlockCoverage":true},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":228,"endOffset":374,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":376,"endOffset":631,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":633,"endOffset":864,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1170","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/expressions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7616,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1320,"endOffset":1506,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1508,"endOffset":2251,"count":2},{"startOffset":1590,"endOffset":1663,"count":0},{"startOffset":1665,"endOffset":1761,"count":0},{"startOffset":1763,"endOffset":1891,"count":0},{"startOffset":1914,"endOffset":2250,"count":0}],"isBlockCoverage":true},{"functionName":"UnaryExpression","ranges":[{"startOffset":2253,"endOffset":2540,"count":5},{"startOffset":2377,"endOffset":2405,"count":3},{"startOffset":2407,"endOffset":2460,"count":2},{"startOffset":2460,"endOffset":2502,"count":3}],"isBlockCoverage":true},{"functionName":"DoExpression","ranges":[{"startOffset":2542,"endOffset":2639,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":2641,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":2760,"endOffset":3033,"count":1},{"startOffset":2813,"endOffset":2886,"count":0}],"isBlockCoverage":true},{"functionName":"ConditionalExpression","ranges":[{"startOffset":3035,"endOffset":3281,"count":6}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":3283,"endOffset":3817,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":3819,"endOffset":3898,"count":3}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":3900,"endOffset":3950,"count":1}],"isBlockCoverage":true},{"functionName":"Super","ranges":[{"startOffset":3952,"endOffset":3994,"count":0}],"isBlockCoverage":false},{"functionName":"Decorator","ranges":[{"startOffset":3996,"endOffset":4098,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalMemberExpression","ranges":[{"startOffset":4100,"endOffset":4719,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression","ranges":[{"startOffset":4721,"endOffset":5005,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":5007,"endOffset":5232,"count":22}],"isBlockCoverage":true},{"functionName":"Import","ranges":[{"startOffset":5234,"endOffset":5278,"count":0}],"isBlockCoverage":false},{"functionName":"buildYieldAwait","ranges":[{"startOffset":5280,"endOffset":5624,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5325,"endOffset":5621,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyStatement","ranges":[{"startOffset":5813,"endOffset":5866,"count":7}],"isBlockCoverage":true},{"functionName":"ExpressionStatement","ranges":[{"startOffset":5868,"endOffset":5963,"count":27}],"isBlockCoverage":true},{"functionName":"AssignmentPattern","ranges":[{"startOffset":5965,"endOffset":6204,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":6206,"endOffset":6684,"count":64},{"startOffset":6300,"endOffset":6325,"count":2},{"startOffset":6326,"endOffset":6357,"count":0},{"startOffset":6374,"endOffset":6400,"count":0},{"startOffset":6479,"endOffset":6512,"count":63},{"startOffset":6514,"endOffset":6549,"count":2},{"startOffset":6549,"endOffset":6591,"count":62},{"startOffset":6656,"endOffset":6682,"count":0}],"isBlockCoverage":true},{"functionName":"BindExpression","ranges":[{"startOffset":6686,"endOffset":6805,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":6807,"endOffset":7333,"count":26},{"startOffset":6936,"endOffset":7022,"count":0},{"startOffset":7090,"endOffset":7132,"count":0},{"startOffset":7134,"endOffset":7160,"count":0},{"startOffset":7178,"endOffset":7262,"count":0}],"isBlockCoverage":true},{"functionName":"MetaProperty","ranges":[{"startOffset":7335,"endOffset":7451,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":7453,"endOffset":7531,"count":0}],"isBlockCoverage":false},{"functionName":"V8IntrinsicIdentifier","ranges":[{"startOffset":7533,"endOffset":7616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1171","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/statements.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7669,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":839,"endOffset":1025,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1027,"endOffset":1770,"count":1},{"startOffset":1109,"endOffset":1182,"count":0},{"startOffset":1184,"endOffset":1280,"count":0},{"startOffset":1282,"endOffset":1410,"count":0},{"startOffset":1433,"endOffset":1769,"count":0}],"isBlockCoverage":true},{"functionName":"WithStatement","ranges":[{"startOffset":1772,"endOffset":1937,"count":0}],"isBlockCoverage":false},{"functionName":"IfStatement","ranges":[{"startOffset":1939,"endOffset":2576,"count":3},{"startOffset":2124,"endOffset":2177,"count":0},{"startOffset":2198,"endOffset":2263,"count":0},{"startOffset":2340,"endOffset":2405,"count":0},{"startOffset":2429,"endOffset":2574,"count":0}],"isBlockCoverage":true},{"functionName":"getLastStatement","ranges":[{"startOffset":2578,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"ForStatement","ranges":[{"startOffset":2719,"endOffset":3146,"count":1}],"isBlockCoverage":true},{"functionName":"WhileStatement","ranges":[{"startOffset":3148,"endOffset":3313,"count":0}],"isBlockCoverage":false},{"functionName":"buildForXStatement","ranges":[{"startOffset":3342,"endOffset":3713,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3367,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"DoWhileStatement","ranges":[{"startOffset":3897,"endOffset":4141,"count":0}],"isBlockCoverage":false},{"functionName":"buildLabelStatement","ranges":[{"startOffset":4143,"endOffset":4530,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4206,"endOffset":4527,"count":15},{"startOffset":4292,"endOffset":4500,"count":10}],"isBlockCoverage":true},{"functionName":"LabeledStatement","ranges":[{"startOffset":4949,"endOffset":5082,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":5084,"endOffset":5443,"count":3},{"startOffset":5220,"endOffset":5265,"count":0},{"startOffset":5336,"endOffset":5441,"count":0}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":5445,"endOffset":5664,"count":3}],"isBlockCoverage":true},{"functionName":"SwitchStatement","ranges":[{"startOffset":5666,"endOffset":6051,"count":1}],"isBlockCoverage":true},{"functionName":"addNewlines","ranges":[{"startOffset":5914,"endOffset":6023,"count":10},{"startOffset":5961,"endOffset":6005,"count":5},{"startOffset":6007,"endOffset":6017,"count":1}],"isBlockCoverage":true},{"functionName":"SwitchCase","ranges":[{"startOffset":6053,"endOffset":6390,"count":5},{"startOffset":6098,"endOffset":6198,"count":4},{"startOffset":6198,"endOffset":6256,"count":1}],"isBlockCoverage":true},{"functionName":"DebuggerStatement","ranges":[{"startOffset":6392,"endOffset":6469,"count":0}],"isBlockCoverage":false},{"functionName":"variableDeclarationIndent","ranges":[{"startOffset":6471,"endOffset":6621,"count":10},{"startOffset":6602,"endOffset":6619,"count":40}],"isBlockCoverage":true},{"functionName":"constDeclarationIndent","ranges":[{"startOffset":6623,"endOffset":6770,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":6772,"endOffset":7405,"count":9},{"startOffset":6837,"endOffset":6886,"count":0},{"startOffset":7023,"endOffset":7088,"count":20},{"startOffset":7048,"endOffset":7082,"count":14},{"startOffset":7128,"endOffset":7225,"count":8},{"startOffset":7168,"endOffset":7192,"count":0},{"startOffset":7315,"endOffset":7382,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":7407,"endOffset":7669,"count":20},{"startOffset":7493,"endOffset":7509,"count":0},{"startOffset":7572,"endOffset":7667,"count":14}],"isBlockCoverage":true}]},{"scriptId":"1172","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/classes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3848,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":463,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":651,"endOffset":1394,"count":1},{"startOffset":733,"endOffset":806,"count":0},{"startOffset":808,"endOffset":904,"count":0},{"startOffset":906,"endOffset":1034,"count":0},{"startOffset":1057,"endOffset":1393,"count":0}],"isBlockCoverage":true},{"functionName":"ClassDeclaration","ranges":[{"startOffset":1396,"endOffset":2256,"count":0}],"isBlockCoverage":false},{"functionName":"ClassBody","ranges":[{"startOffset":2258,"endOffset":2575,"count":0}],"isBlockCoverage":false},{"functionName":"ClassProperty","ranges":[{"startOffset":2577,"endOffset":3147,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":3149,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"ClassMethod","ranges":[{"startOffset":3467,"endOffset":3576,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateMethod","ranges":[{"startOffset":3578,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"_classMethodHead","ranges":[{"startOffset":3696,"endOffset":3848,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1173","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/methods.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4185,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":472,"endOffset":658,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":660,"endOffset":1403,"count":1},{"startOffset":742,"endOffset":815,"count":0},{"startOffset":817,"endOffset":913,"count":0},{"startOffset":915,"endOffset":1043,"count":0},{"startOffset":1066,"endOffset":1402,"count":0}],"isBlockCoverage":true},{"functionName":"_params","ranges":[{"startOffset":1405,"endOffset":1588,"count":8}],"isBlockCoverage":true},{"functionName":"_parameters","ranges":[{"startOffset":1590,"endOffset":1813,"count":8},{"startOffset":1679,"endOffset":1811,"count":11},{"startOffset":1757,"endOffset":1807,"count":4}],"isBlockCoverage":true},{"functionName":"_param","ranges":[{"startOffset":1815,"endOffset":2031,"count":11},{"startOffset":1962,"endOffset":1978,"count":0}],"isBlockCoverage":true},{"functionName":"_methodHead","ranges":[{"startOffset":2033,"endOffset":2579,"count":0}],"isBlockCoverage":false},{"functionName":"_predicate","ranges":[{"startOffset":2581,"endOffset":2752,"count":8},{"startOffset":2631,"endOffset":2750,"count":0}],"isBlockCoverage":true},{"functionName":"_functionHead","ranges":[{"startOffset":2754,"endOffset":3035,"count":8},{"startOffset":2803,"endOffset":2850,"count":0},{"startOffset":2899,"endOffset":2915,"count":0},{"startOffset":2948,"endOffset":2984,"count":5}],"isBlockCoverage":true},{"functionName":"FunctionExpression","ranges":[{"startOffset":3037,"endOffset":3150,"count":8}],"isBlockCoverage":true},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":3152,"endOffset":4032,"count":0}],"isBlockCoverage":false},{"functionName":"hasTypes","ranges":[{"startOffset":4034,"endOffset":4185,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1174","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/modules.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5927,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":723,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":911,"endOffset":1654,"count":1},{"startOffset":993,"endOffset":1066,"count":0},{"startOffset":1068,"endOffset":1164,"count":0},{"startOffset":1166,"endOffset":1294,"count":0},{"startOffset":1317,"endOffset":1653,"count":0}],"isBlockCoverage":true},{"functionName":"ImportSpecifier","ranges":[{"startOffset":1656,"endOffset":2006,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDefaultSpecifier","ranges":[{"startOffset":2008,"endOffset":2081,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultSpecifier","ranges":[{"startOffset":2083,"endOffset":2159,"count":0}],"isBlockCoverage":false},{"functionName":"ExportSpecifier","ranges":[{"startOffset":2161,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamespaceSpecifier","ranges":[{"startOffset":2393,"endOffset":2541,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":2543,"endOffset":2829,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":2831,"endOffset":3101,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":3103,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDeclaration","ranges":[{"startOffset":3417,"endOffset":4529,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":4531,"endOffset":5659,"count":0}],"isBlockCoverage":false},{"functionName":"ImportAttribute","ranges":[{"startOffset":5661,"endOffset":5780,"count":0}],"isBlockCoverage":false},{"functionName":"ImportNamespaceSpecifier","ranges":[{"startOffset":5782,"endOffset":5927,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1175","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6619,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1057,"endOffset":1152,"count":1},{"startOffset":1125,"endOffset":1130,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1154,"endOffset":1340,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1342,"endOffset":2085,"count":1},{"startOffset":1424,"endOffset":1497,"count":0},{"startOffset":1499,"endOffset":1595,"count":0},{"startOffset":1597,"endOffset":1725,"count":0},{"startOffset":1748,"endOffset":2084,"count":0}],"isBlockCoverage":true},{"functionName":"Identifier","ranges":[{"startOffset":2087,"endOffset":2185,"count":193}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2144,"endOffset":2181,"count":193}],"isBlockCoverage":true},{"functionName":"ArgumentPlaceholder","ranges":[{"startOffset":2187,"endOffset":2240,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":2242,"endOffset":2328,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":2330,"endOffset":2617,"count":6},{"startOffset":2470,"endOffset":2595,"count":4}],"isBlockCoverage":true},{"functionName":"ObjectMethod","ranges":[{"startOffset":2619,"endOffset":2766,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectProperty","ranges":[{"startOffset":2768,"endOffset":3369,"count":5},{"startOffset":2863,"endOffset":2942,"count":0},{"startOffset":2992,"endOffset":3019,"count":0},{"startOffset":3020,"endOffset":3061,"count":0},{"startOffset":3063,"endOffset":3120,"count":0},{"startOffset":3178,"endOffset":3205,"count":0},{"startOffset":3206,"endOffset":3235,"count":0},{"startOffset":3236,"endOffset":3272,"count":0},{"startOffset":3274,"endOffset":3295,"count":0}],"isBlockCoverage":true},{"functionName":"ArrayExpression","ranges":[{"startOffset":3371,"endOffset":3771,"count":0}],"isBlockCoverage":false},{"functionName":"RecordExpression","ranges":[{"startOffset":3773,"endOffset":4494,"count":0}],"isBlockCoverage":false},{"functionName":"TupleExpression","ranges":[{"startOffset":4496,"endOffset":5236,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5238,"endOffset":5317,"count":1}],"isBlockCoverage":true},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5319,"endOffset":5396,"count":3},{"startOffset":5383,"endOffset":5392,"count":0}],"isBlockCoverage":true},{"functionName":"NullLiteral","ranges":[{"startOffset":5398,"endOffset":5445,"count":2}],"isBlockCoverage":true},{"functionName":"NumericLiteral","ranges":[{"startOffset":5447,"endOffset":5857,"count":13},{"startOffset":5614,"endOffset":5675,"count":0},{"startOffset":5698,"endOffset":5727,"count":0},{"startOffset":5759,"endOffset":5822,"count":0}],"isBlockCoverage":true},{"functionName":"StringLiteral","ranges":[{"startOffset":5859,"endOffset":6207,"count":34},{"startOffset":6014,"endOffset":6206,"count":0}],"isBlockCoverage":true},{"functionName":"BigIntLiteral","ranges":[{"startOffset":6209,"endOffset":6399,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineTopicExpression","ranges":[{"startOffset":6401,"endOffset":6480,"count":0}],"isBlockCoverage":false},{"functionName":"PipelineBareFunction","ranges":[{"startOffset":6482,"endOffset":6554,"count":0}],"isBlockCoverage":false},{"functionName":"PipelinePrimaryTopicReference","ranges":[{"startOffset":6556,"endOffset":6619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1176","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/jsesc/jsesc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8389,"count":1}],"isBlockCoverage":true},{"functionName":"forOwn","ranges":[{"startOffset":95,"endOffset":229,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":247,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"forEach","ranges":[{"startOffset":423,"endOffset":551,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":670,"endOffset":807,"count":0}],"isBlockCoverage":false},{"functionName":"isString","ranges":[{"startOffset":826,"endOffset":921,"count":0}],"isBlockCoverage":false},{"functionName":"isNumber","ranges":[{"startOffset":940,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":1056,"endOffset":1106,"count":0}],"isBlockCoverage":false},{"functionName":"isMap","ranges":[{"startOffset":1122,"endOffset":1184,"count":0}],"isBlockCoverage":false},{"functionName":"isSet","ranges":[{"startOffset":1200,"endOffset":1262,"count":0}],"isBlockCoverage":false},{"functionName":"jsesc","ranges":[{"startOffset":1765,"endOffset":8336,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1177","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16501,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3210,"endOffset":3262,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3358,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":3547,"endOffset":3733,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":3735,"endOffset":4478,"count":1},{"startOffset":3817,"endOffset":3890,"count":0},{"startOffset":3892,"endOffset":3988,"count":0},{"startOffset":3990,"endOffset":4118,"count":0},{"startOffset":4141,"endOffset":4477,"count":0}],"isBlockCoverage":true},{"functionName":"AnyTypeAnnotation","ranges":[{"startOffset":4480,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayTypeAnnotation","ranges":[{"startOffset":4534,"endOffset":4648,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanTypeAnnotation","ranges":[{"startOffset":4650,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteralTypeAnnotation","ranges":[{"startOffset":4712,"endOffset":4803,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteralTypeAnnotation","ranges":[{"startOffset":4805,"endOffset":4866,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareClass","ranges":[{"startOffset":4868,"endOffset":5070,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareFunction","ranges":[{"startOffset":5072,"endOffset":5445,"count":0}],"isBlockCoverage":false},{"functionName":"InferredPredicate","ranges":[{"startOffset":5447,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"DeclaredPredicate","ranges":[{"startOffset":5523,"endOffset":5671,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareInterface","ranges":[{"startOffset":5673,"endOffset":5783,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModule","ranges":[{"startOffset":5785,"endOffset":5972,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareModuleExports","ranges":[{"startOffset":5974,"endOffset":6160,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareTypeAlias","ranges":[{"startOffset":6162,"endOffset":6261,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareOpaqueType","ranges":[{"startOffset":6263,"endOffset":6428,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareVariable","ranges":[{"startOffset":6430,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportDeclaration","ranges":[{"startOffset":6699,"endOffset":6941,"count":0}],"isBlockCoverage":false},{"functionName":"DeclareExportAllDeclaration","ranges":[{"startOffset":6943,"endOffset":7082,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDeclaration","ranges":[{"startOffset":7084,"endOffset":7244,"count":0}],"isBlockCoverage":false},{"functionName":"enumExplicitType","ranges":[{"startOffset":7246,"endOffset":7446,"count":0}],"isBlockCoverage":false},{"functionName":"enumBody","ranges":[{"startOffset":7448,"endOffset":7719,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanBody","ranges":[{"startOffset":7721,"endOffset":7869,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberBody","ranges":[{"startOffset":7871,"endOffset":8017,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringBody","ranges":[{"startOffset":8019,"endOffset":8165,"count":0}],"isBlockCoverage":false},{"functionName":"EnumSymbolBody","ranges":[{"startOffset":8167,"endOffset":8266,"count":0}],"isBlockCoverage":false},{"functionName":"EnumDefaultedMember","ranges":[{"startOffset":8268,"endOffset":8378,"count":0}],"isBlockCoverage":false},{"functionName":"enumInitializedMember","ranges":[{"startOffset":8380,"endOffset":8606,"count":0}],"isBlockCoverage":false},{"functionName":"EnumBooleanMember","ranges":[{"startOffset":8608,"endOffset":8681,"count":0}],"isBlockCoverage":false},{"functionName":"EnumNumberMember","ranges":[{"startOffset":8683,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"EnumStringMember","ranges":[{"startOffset":8757,"endOffset":8829,"count":0}],"isBlockCoverage":false},{"functionName":"FlowExportDeclaration","ranges":[{"startOffset":8831,"endOffset":9353,"count":0}],"isBlockCoverage":false},{"functionName":"ExistsTypeAnnotation","ranges":[{"startOffset":9355,"endOffset":9409,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeAnnotation","ranges":[{"startOffset":9411,"endOffset":10012,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionTypeParam","ranges":[{"startOffset":10014,"endOffset":10224,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceExtends","ranges":[{"startOffset":10226,"endOffset":10331,"count":0}],"isBlockCoverage":false},{"functionName":"_interfaceish","ranges":[{"startOffset":10333,"endOffset":10931,"count":0}],"isBlockCoverage":false},{"functionName":"_variance","ranges":[{"startOffset":10933,"endOffset":11130,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceDeclaration","ranges":[{"startOffset":11132,"endOffset":11242,"count":0}],"isBlockCoverage":false},{"functionName":"andSeparator","ranges":[{"startOffset":11244,"endOffset":11322,"count":0}],"isBlockCoverage":false},{"functionName":"InterfaceTypeAnnotation","ranges":[{"startOffset":11324,"endOffset":11592,"count":0}],"isBlockCoverage":false},{"functionName":"IntersectionTypeAnnotation","ranges":[{"startOffset":11594,"endOffset":11710,"count":0}],"isBlockCoverage":false},{"functionName":"MixedTypeAnnotation","ranges":[{"startOffset":11712,"endOffset":11768,"count":0}],"isBlockCoverage":false},{"functionName":"EmptyTypeAnnotation","ranges":[{"startOffset":11770,"endOffset":11826,"count":0}],"isBlockCoverage":false},{"functionName":"NullableTypeAnnotation","ranges":[{"startOffset":11828,"endOffset":11929,"count":0}],"isBlockCoverage":false},{"functionName":"NumberTypeAnnotation","ranges":[{"startOffset":11931,"endOffset":11989,"count":0}],"isBlockCoverage":false},{"functionName":"StringTypeAnnotation","ranges":[{"startOffset":11991,"endOffset":12049,"count":0}],"isBlockCoverage":false},{"functionName":"ThisTypeAnnotation","ranges":[{"startOffset":12051,"endOffset":12105,"count":0}],"isBlockCoverage":false},{"functionName":"TupleTypeAnnotation","ranges":[{"startOffset":12107,"endOffset":12219,"count":0}],"isBlockCoverage":false},{"functionName":"TypeofTypeAnnotation","ranges":[{"startOffset":12221,"endOffset":12334,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAlias","ranges":[{"startOffset":12336,"endOffset":12574,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":12576,"endOffset":12723,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameterInstantiation","ranges":[{"startOffset":12725,"endOffset":12849,"count":0}],"isBlockCoverage":false},{"functionName":"TypeParameter","ranges":[{"startOffset":12851,"endOffset":13111,"count":0}],"isBlockCoverage":false},{"functionName":"OpaqueType","ranges":[{"startOffset":13113,"endOffset":13537,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeAnnotation","ranges":[{"startOffset":13539,"endOffset":14366,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeInternalSlot","ranges":[{"startOffset":14368,"endOffset":14720,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeCallProperty","ranges":[{"startOffset":14722,"endOffset":14864,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeIndexer","ranges":[{"startOffset":14866,"endOffset":15224,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeProperty","ranges":[{"startOffset":15226,"endOffset":15692,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectTypeSpreadProperty","ranges":[{"startOffset":15694,"endOffset":15793,"count":0}],"isBlockCoverage":false},{"functionName":"QualifiedTypeIdentifier","ranges":[{"startOffset":15795,"endOffset":15925,"count":0}],"isBlockCoverage":false},{"functionName":"SymbolTypeAnnotation","ranges":[{"startOffset":15927,"endOffset":15985,"count":0}],"isBlockCoverage":false},{"functionName":"orSeparator","ranges":[{"startOffset":15987,"endOffset":16064,"count":0}],"isBlockCoverage":false},{"functionName":"UnionTypeAnnotation","ranges":[{"startOffset":16066,"endOffset":16174,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":16176,"endOffset":16329,"count":0}],"isBlockCoverage":false},{"functionName":"Variance","ranges":[{"startOffset":16331,"endOffset":16445,"count":0}],"isBlockCoverage":false},{"functionName":"VoidTypeAnnotation","ranges":[{"startOffset":16447,"endOffset":16501,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1178","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2312,"count":1}],"isBlockCoverage":true},{"functionName":"File","ranges":[{"startOffset":355,"endOffset":487,"count":2}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":489,"endOffset":704,"count":2}],"isBlockCoverage":true},{"functionName":"BlockStatement","ranges":[{"startOffset":706,"endOffset":1375,"count":15},{"startOffset":884,"endOffset":892,"count":0},{"startOffset":944,"endOffset":960,"count":1},{"startOffset":962,"endOffset":1307,"count":14},{"startOffset":1082,"endOffset":1097,"count":0},{"startOffset":1307,"endOffset":1373,"count":1}],"isBlockCoverage":true},{"functionName":"Noop","ranges":[{"startOffset":1377,"endOffset":1395,"count":0}],"isBlockCoverage":false},{"functionName":"Directive","ranges":[{"startOffset":1397,"endOffset":1477,"count":2}],"isBlockCoverage":true},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":1592,"endOffset":2069,"count":2},{"startOffset":1687,"endOffset":1838,"count":1},{"startOffset":1838,"endOffset":2067,"count":0}],"isBlockCoverage":true},{"functionName":"InterpreterDirective","ranges":[{"startOffset":2071,"endOffset":2145,"count":0}],"isBlockCoverage":false},{"functionName":"Placeholder","ranges":[{"startOffset":2147,"endOffset":2312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1179","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2973,"count":1}],"isBlockCoverage":true},{"functionName":"JSXAttribute","ranges":[{"startOffset":738,"endOffset":880,"count":0}],"isBlockCoverage":false},{"functionName":"JSXIdentifier","ranges":[{"startOffset":882,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"JSXNamespacedName","ranges":[{"startOffset":940,"endOffset":1062,"count":0}],"isBlockCoverage":false},{"functionName":"JSXMemberExpression","ranges":[{"startOffset":1064,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadAttribute","ranges":[{"startOffset":1191,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"JSXExpressionContainer","ranges":[{"startOffset":1324,"endOffset":1440,"count":0}],"isBlockCoverage":false},{"functionName":"JSXSpreadChild","ranges":[{"startOffset":1442,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"JSXText","ranges":[{"startOffset":1573,"endOffset":1726,"count":0}],"isBlockCoverage":false},{"functionName":"JSXElement","ranges":[{"startOffset":1728,"endOffset":2000,"count":0}],"isBlockCoverage":false},{"functionName":"spaceSeparator","ranges":[{"startOffset":2002,"endOffset":2047,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningElement","ranges":[{"startOffset":2049,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingElement","ranges":[{"startOffset":2424,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"JSXEmptyExpression","ranges":[{"startOffset":2532,"endOffset":2602,"count":0}],"isBlockCoverage":false},{"functionName":"JSXFragment","ranges":[{"startOffset":2604,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"JSXOpeningFragment","ranges":[{"startOffset":2828,"endOffset":2899,"count":0}],"isBlockCoverage":false},{"functionName":"JSXClosingFragment","ranges":[{"startOffset":2901,"endOffset":2973,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1180","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/generator/lib/generators/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15110,"count":1}],"isBlockCoverage":true},{"functionName":"TSTypeAnnotation","ranges":[{"startOffset":3357,"endOffset":3506,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameterInstantiation","ranges":[{"startOffset":3508,"endOffset":3634,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeParameter","ranges":[{"startOffset":3636,"endOffset":3945,"count":0}],"isBlockCoverage":false},{"functionName":"TSParameterProperty","ranges":[{"startOffset":3947,"endOffset":4175,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareFunction","ranges":[{"startOffset":4177,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"TSDeclareMethod","ranges":[{"startOffset":4334,"endOffset":4419,"count":0}],"isBlockCoverage":false},{"functionName":"TSQualifiedName","ranges":[{"startOffset":4421,"endOffset":4537,"count":0}],"isBlockCoverage":false},{"functionName":"TSCallSignatureDeclaration","ranges":[{"startOffset":4539,"endOffset":4649,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructSignatureDeclaration","ranges":[{"startOffset":4651,"endOffset":4802,"count":0}],"isBlockCoverage":false},{"functionName":"TSPropertySignature","ranges":[{"startOffset":4804,"endOffset":5184,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintPropertyOrMethodName","ranges":[{"startOffset":5186,"endOffset":5409,"count":0}],"isBlockCoverage":false},{"functionName":"TSMethodSignature","ranges":[{"startOffset":5411,"endOffset":5554,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexSignature","ranges":[{"startOffset":5556,"endOffset":5838,"count":0}],"isBlockCoverage":false},{"functionName":"TSAnyKeyword","ranges":[{"startOffset":5840,"endOffset":5887,"count":0}],"isBlockCoverage":false},{"functionName":"TSBigIntKeyword","ranges":[{"startOffset":5889,"endOffset":5942,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnknownKeyword","ranges":[{"startOffset":5944,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"TSNumberKeyword","ranges":[{"startOffset":6001,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"TSObjectKeyword","ranges":[{"startOffset":6056,"endOffset":6109,"count":0}],"isBlockCoverage":false},{"functionName":"TSBooleanKeyword","ranges":[{"startOffset":6111,"endOffset":6166,"count":0}],"isBlockCoverage":false},{"functionName":"TSStringKeyword","ranges":[{"startOffset":6168,"endOffset":6221,"count":0}],"isBlockCoverage":false},{"functionName":"TSSymbolKeyword","ranges":[{"startOffset":6223,"endOffset":6276,"count":0}],"isBlockCoverage":false},{"functionName":"TSVoidKeyword","ranges":[{"startOffset":6278,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"TSUndefinedKeyword","ranges":[{"startOffset":6329,"endOffset":6388,"count":0}],"isBlockCoverage":false},{"functionName":"TSNullKeyword","ranges":[{"startOffset":6390,"endOffset":6439,"count":0}],"isBlockCoverage":false},{"functionName":"TSNeverKeyword","ranges":[{"startOffset":6441,"endOffset":6492,"count":0}],"isBlockCoverage":false},{"functionName":"TSThisType","ranges":[{"startOffset":6494,"endOffset":6540,"count":0}],"isBlockCoverage":false},{"functionName":"TSFunctionType","ranges":[{"startOffset":6542,"endOffset":6622,"count":0}],"isBlockCoverage":false},{"functionName":"TSConstructorType","ranges":[{"startOffset":6624,"endOffset":6743,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintFunctionOrConstructorType","ranges":[{"startOffset":6745,"endOffset":7075,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeReference","ranges":[{"startOffset":7077,"endOffset":7187,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypePredicate","ranges":[{"startOffset":7189,"endOffset":7471,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeQuery","ranges":[{"startOffset":7473,"endOffset":7571,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeLiteral","ranges":[{"startOffset":7573,"endOffset":7667,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintTypeLiteralOrInterfaceBody","ranges":[{"startOffset":7669,"endOffset":7767,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintBraced","ranges":[{"startOffset":7769,"endOffset":8069,"count":0}],"isBlockCoverage":false},{"functionName":"TSArrayType","ranges":[{"startOffset":8071,"endOffset":8159,"count":0}],"isBlockCoverage":false},{"functionName":"TSTupleType","ranges":[{"startOffset":8161,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"TSOptionalType","ranges":[{"startOffset":8274,"endOffset":8367,"count":0}],"isBlockCoverage":false},{"functionName":"TSRestType","ranges":[{"startOffset":8369,"endOffset":8460,"count":0}],"isBlockCoverage":false},{"functionName":"TSUnionType","ranges":[{"startOffset":8462,"endOffset":8542,"count":0}],"isBlockCoverage":false},{"functionName":"TSIntersectionType","ranges":[{"startOffset":8544,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintUnionOrIntersectionType","ranges":[{"startOffset":8633,"endOffset":8818,"count":0}],"isBlockCoverage":false},{"functionName":"TSConditionalType","ranges":[{"startOffset":8820,"endOffset":9135,"count":0}],"isBlockCoverage":false},{"functionName":"TSInferType","ranges":[{"startOffset":9137,"endOffset":9240,"count":0}],"isBlockCoverage":false},{"functionName":"TSParenthesizedType","ranges":[{"startOffset":9242,"endOffset":9359,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeOperator","ranges":[{"startOffset":9361,"endOffset":9480,"count":0}],"isBlockCoverage":false},{"functionName":"TSIndexedAccessType","ranges":[{"startOffset":9482,"endOffset":9631,"count":0}],"isBlockCoverage":false},{"functionName":"TSMappedType","ranges":[{"startOffset":9633,"endOffset":10245,"count":0}],"isBlockCoverage":false},{"functionName":"tokenIfPlusMinus","ranges":[{"startOffset":10247,"endOffset":10334,"count":0}],"isBlockCoverage":false},{"functionName":"TSLiteralType","ranges":[{"startOffset":10336,"endOffset":10402,"count":0}],"isBlockCoverage":false},{"functionName":"TSExpressionWithTypeArguments","ranges":[{"startOffset":10404,"endOffset":10530,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceDeclaration","ranges":[{"startOffset":10532,"endOffset":10998,"count":0}],"isBlockCoverage":false},{"functionName":"TSInterfaceBody","ranges":[{"startOffset":11000,"endOffset":11093,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAliasDeclaration","ranges":[{"startOffset":11095,"endOffset":11488,"count":0}],"isBlockCoverage":false},{"functionName":"TSAsExpression","ranges":[{"startOffset":11490,"endOffset":11699,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAssertion","ranges":[{"startOffset":11701,"endOffset":11914,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumDeclaration","ranges":[{"startOffset":11916,"endOffset":12272,"count":0}],"isBlockCoverage":false},{"functionName":"TSEnumMember","ranges":[{"startOffset":12274,"endOffset":12513,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleDeclaration","ranges":[{"startOffset":12515,"endOffset":13050,"count":0}],"isBlockCoverage":false},{"functionName":"TSModuleBlock","ranges":[{"startOffset":13052,"endOffset":13123,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportType","ranges":[{"startOffset":13125,"endOffset":13462,"count":0}],"isBlockCoverage":false},{"functionName":"TSImportEqualsDeclaration","ranges":[{"startOffset":13464,"endOffset":13809,"count":0}],"isBlockCoverage":false},{"functionName":"TSExternalModuleReference","ranges":[{"startOffset":13811,"endOffset":13937,"count":0}],"isBlockCoverage":false},{"functionName":"TSNonNullExpression","ranges":[{"startOffset":13939,"endOffset":14033,"count":0}],"isBlockCoverage":false},{"functionName":"TSExportAssignment","ranges":[{"startOffset":14035,"endOffset":14202,"count":0}],"isBlockCoverage":false},{"functionName":"TSNamespaceExportDeclaration","ranges":[{"startOffset":14204,"endOffset":14396,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintSignatureDeclarationBase","ranges":[{"startOffset":14398,"endOffset":14660,"count":0}],"isBlockCoverage":false},{"functionName":"tsPrintClassMemberModifiers","ranges":[{"startOffset":14662,"endOffset":15110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1181","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/ancestry.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4717,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":618,"endOffset":713,"count":1},{"startOffset":692,"endOffset":710,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":715,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":903,"endOffset":1646,"count":1},{"startOffset":985,"endOffset":1058,"count":0},{"startOffset":1060,"endOffset":1156,"count":0},{"startOffset":1158,"endOffset":1286,"count":0},{"startOffset":1309,"endOffset":1645,"count":0}],"isBlockCoverage":true},{"functionName":"findParent","ranges":[{"startOffset":1648,"endOffset":1793,"count":1252},{"startOffset":1733,"endOffset":1775,"count":2588},{"startOffset":1759,"endOffset":1771,"count":1076},{"startOffset":1775,"endOffset":1792,"count":176}],"isBlockCoverage":true},{"functionName":"find","ranges":[{"startOffset":1795,"endOffset":1938,"count":0}],"isBlockCoverage":false},{"functionName":"getFunctionParent","ranges":[{"startOffset":1940,"endOffset":2019,"count":0}],"isBlockCoverage":false},{"functionName":"getStatementParent","ranges":[{"startOffset":2021,"endOffset":2411,"count":0}],"isBlockCoverage":false},{"functionName":"getEarliestCommonAncestorFrom","ranges":[{"startOffset":2413,"endOffset":3176,"count":0}],"isBlockCoverage":false},{"functionName":"getDeepestCommonAncestorFrom","ranges":[{"startOffset":3178,"endOffset":4174,"count":0}],"isBlockCoverage":false},{"functionName":"getAncestry","ranges":[{"startOffset":4176,"endOffset":4324,"count":0}],"isBlockCoverage":false},{"functionName":"isAncestor","ranges":[{"startOffset":4326,"endOffset":4411,"count":0}],"isBlockCoverage":false},{"functionName":"isDescendant","ranges":[{"startOffset":4413,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"inType","ranges":[{"startOffset":4519,"endOffset":4717,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1182","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/inference/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4193,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":474,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":662,"endOffset":1405,"count":2},{"startOffset":744,"endOffset":817,"count":0},{"startOffset":819,"endOffset":915,"count":0},{"startOffset":917,"endOffset":1045,"count":0},{"startOffset":1068,"endOffset":1404,"count":0}],"isBlockCoverage":true},{"functionName":"getTypeAnnotation","ranges":[{"startOffset":1407,"endOffset":1656,"count":0}],"isBlockCoverage":false},{"functionName":"_getTypeAnnotation","ranges":[{"startOffset":1658,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"isBaseType","ranges":[{"startOffset":2563,"endOffset":2666,"count":0}],"isBlockCoverage":false},{"functionName":"_isBaseType","ranges":[{"startOffset":2668,"endOffset":3388,"count":0}],"isBlockCoverage":false},{"functionName":"couldBeBaseType","ranges":[{"startOffset":3390,"endOffset":3778,"count":0}],"isBlockCoverage":false},{"functionName":"baseTypeStrictlyMatches","ranges":[{"startOffset":3780,"endOffset":4013,"count":0}],"isBlockCoverage":false},{"functionName":"isGenericType","ranges":[{"startOffset":4015,"endOffset":4193,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1183","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/inference/inferers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7648,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1302,"endOffset":1357,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1503,"endOffset":1598,"count":1},{"startOffset":1577,"endOffset":1595,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1600,"endOffset":1786,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1788,"endOffset":2531,"count":1},{"startOffset":1870,"endOffset":1943,"count":0},{"startOffset":1945,"endOffset":2041,"count":0},{"startOffset":2043,"endOffset":2171,"count":0},{"startOffset":2194,"endOffset":2530,"count":0}],"isBlockCoverage":true},{"functionName":"VariableDeclarator","ranges":[{"startOffset":2533,"endOffset":2994,"count":0}],"isBlockCoverage":false},{"functionName":"TypeCastExpression","ranges":[{"startOffset":2996,"endOffset":3063,"count":0}],"isBlockCoverage":false},{"functionName":"NewExpression","ranges":[{"startOffset":3105,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":3235,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":3302,"endOffset":3744,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":3746,"endOffset":4439,"count":0}],"isBlockCoverage":false},{"functionName":"LogicalExpression","ranges":[{"startOffset":4441,"endOffset":4838,"count":0}],"isBlockCoverage":false},{"functionName":"ConditionalExpression","ranges":[{"startOffset":4840,"endOffset":5251,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":5253,"endOffset":5346,"count":0}],"isBlockCoverage":false},{"functionName":"ParenthesizedExpression","ranges":[{"startOffset":5348,"endOffset":5439,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":5441,"endOffset":5524,"count":0}],"isBlockCoverage":false},{"functionName":"UpdateExpression","ranges":[{"startOffset":5526,"endOffset":5685,"count":0}],"isBlockCoverage":false},{"functionName":"StringLiteral","ranges":[{"startOffset":5687,"endOffset":5750,"count":0}],"isBlockCoverage":false},{"functionName":"NumericLiteral","ranges":[{"startOffset":5752,"endOffset":5816,"count":0}],"isBlockCoverage":false},{"functionName":"BooleanLiteral","ranges":[{"startOffset":5818,"endOffset":5883,"count":0}],"isBlockCoverage":false},{"functionName":"NullLiteral","ranges":[{"startOffset":5885,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"RegExpLiteral","ranges":[{"startOffset":5953,"endOffset":6039,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":6041,"endOffset":6130,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":6132,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":6221,"endOffset":6275,"count":0}],"isBlockCoverage":false},{"functionName":"Func","ranges":[{"startOffset":6310,"endOffset":6389,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":6664,"endOffset":7136,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":7138,"endOffset":7216,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCall","ranges":[{"startOffset":7218,"endOffset":7648,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1184","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5873,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1648,"count":0}],"isBlockCoverage":false},{"functionName":"getTypeAnnotationBindingConstantViolations","ranges":[{"startOffset":1650,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"getConstantViolationsBefore","ranges":[{"startOffset":2711,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"inferAnnotationFromBinaryExpression","ranges":[{"startOffset":3129,"endOffset":4323,"count":0}],"isBlockCoverage":false},{"functionName":"getParentConditionalPath","ranges":[{"startOffset":4325,"endOffset":4756,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionalAnnotation","ranges":[{"startOffset":4758,"endOffset":5873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1185","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/replacement.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7530,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":643,"endOffset":829,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":831,"endOffset":1574,"count":1},{"startOffset":913,"endOffset":986,"count":0},{"startOffset":988,"endOffset":1084,"count":0},{"startOffset":1086,"endOffset":1214,"count":0},{"startOffset":1237,"endOffset":1573,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1576,"endOffset":1671,"count":2},{"startOffset":1650,"endOffset":1668,"count":0}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":1707,"endOffset":1744,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":1749,"endOffset":2235,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithMultiple","ranges":[{"startOffset":2241,"endOffset":2629,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithSourceString","ranges":[{"startOffset":2631,"endOffset":3281,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWith","ranges":[{"startOffset":3283,"endOffset":5080,"count":1},{"startOffset":3357,"endOffset":3440,"count":0},{"startOffset":3551,"endOffset":3654,"count":0},{"startOffset":3689,"endOffset":3713,"count":0},{"startOffset":3738,"endOffset":3766,"count":0},{"startOffset":3768,"endOffset":3864,"count":0},{"startOffset":3900,"endOffset":4017,"count":0},{"startOffset":4058,"endOffset":4177,"count":0},{"startOffset":4268,"endOffset":4532,"count":0},{"startOffset":4570,"endOffset":4599,"count":0},{"startOffset":4601,"endOffset":4795,"count":0},{"startOffset":5049,"endOffset":5069,"count":0}],"isBlockCoverage":true},{"functionName":"_replaceWith","ranges":[{"startOffset":5082,"endOffset":5438,"count":1},{"startOffset":5135,"endOffset":5192,"count":0},{"startOffset":5265,"endOffset":5321,"count":0},{"startOffset":5365,"endOffset":5373,"count":0}],"isBlockCoverage":true},{"functionName":"replaceExpressionWithStatements","ranges":[{"startOffset":5440,"endOffset":7149,"count":0}],"isBlockCoverage":false},{"functionName":"replaceInline","ranges":[{"startOffset":7151,"endOffset":7530,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1186","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/evaluation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9162,"count":1}],"isBlockCoverage":true},{"functionName":"evaluateTruthy","ranges":[{"startOffset":239,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"deopt","ranges":[{"startOffset":342,"endOffset":458,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateCached","ranges":[{"startOffset":460,"endOffset":976,"count":0}],"isBlockCoverage":false},{"functionName":"_evaluate","ranges":[{"startOffset":978,"endOffset":8484,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateQuasis","ranges":[{"startOffset":8486,"endOffset":8873,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":8875,"endOffset":9162,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1187","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/conversion.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14333,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":490,"endOffset":585,"count":1},{"startOffset":564,"endOffset":582,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":587,"endOffset":773,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":775,"endOffset":1518,"count":1},{"startOffset":857,"endOffset":930,"count":0},{"startOffset":932,"endOffset":1028,"count":0},{"startOffset":1030,"endOffset":1158,"count":0},{"startOffset":1181,"endOffset":1517,"count":0}],"isBlockCoverage":true},{"functionName":"toComputedKey","ranges":[{"startOffset":1520,"endOffset":1878,"count":0}],"isBlockCoverage":false},{"functionName":"ensureBlock","ranges":[{"startOffset":1880,"endOffset":2849,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToShadowed","ranges":[{"startOffset":2851,"endOffset":2974,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapFunctionEnvironment","ranges":[{"startOffset":2976,"endOffset":3249,"count":0}],"isBlockCoverage":false},{"functionName":"arrowFunctionToExpression","ranges":[{"startOffset":3251,"endOffset":4357,"count":0}],"isBlockCoverage":false},{"functionName":"hoistFunctionEnvironment","ranges":[{"startOffset":4359,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeSuperProperty","ranges":[{"startOffset":8401,"endOffset":10606,"count":0}],"isBlockCoverage":false},{"functionName":"hasSuperClass","ranges":[{"startOffset":10608,"endOffset":10734,"count":0}],"isBlockCoverage":false},{"functionName":"getThisBinding","ranges":[{"startOffset":10736,"endOffset":11464,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperBinding","ranges":[{"startOffset":11466,"endOffset":11782,"count":0}],"isBlockCoverage":false},{"functionName":"getSuperPropBinding","ranges":[{"startOffset":11784,"endOffset":12583,"count":0}],"isBlockCoverage":false},{"functionName":"getBinding","ranges":[{"startOffset":12585,"endOffset":12935,"count":0}],"isBlockCoverage":false},{"functionName":"getScopeInformation","ranges":[{"startOffset":12937,"endOffset":14333,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1188","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-function-name/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5139,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":337,"endOffset":523,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":525,"endOffset":1268,"count":1},{"startOffset":607,"endOffset":680,"count":0},{"startOffset":682,"endOffset":778,"count":0},{"startOffset":780,"endOffset":908,"count":0},{"startOffset":931,"endOffset":1267,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1270,"endOffset":1365,"count":2},{"startOffset":1344,"endOffset":1362,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier|BindingIdentifier","ranges":[{"startOffset":2033,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"getNameFromLiteralId","ranges":[{"startOffset":2314,"endOffset":2656,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":2658,"endOffset":3520,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":3522,"endOffset":3990,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":3992,"endOffset":5139,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1189","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-get-function-arity/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1350,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":168,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":356,"endOffset":1099,"count":1},{"startOffset":438,"endOffset":511,"count":0},{"startOffset":513,"endOffset":609,"count":0},{"startOffset":611,"endOffset":739,"count":0},{"startOffset":762,"endOffset":1098,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1101,"endOffset":1350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1190","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/introspection.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12073,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1141,"endOffset":1327,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1329,"endOffset":2072,"count":1},{"startOffset":1411,"endOffset":1484,"count":0},{"startOffset":1486,"endOffset":1582,"count":0},{"startOffset":1584,"endOffset":1712,"count":0},{"startOffset":1735,"endOffset":2071,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2074,"endOffset":2169,"count":1},{"startOffset":2142,"endOffset":2147,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPattern","ranges":[{"startOffset":2171,"endOffset":2282,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":2284,"endOffset":2442,"count":12},{"startOffset":2358,"endOffset":2379,"count":0},{"startOffset":2381,"endOffset":2411,"count":0}],"isBlockCoverage":true},{"functionName":"isStatic","ranges":[{"startOffset":2444,"endOffset":2508,"count":0}],"isBlockCoverage":false},{"functionName":"isnt","ranges":[{"startOffset":2544,"endOffset":2591,"count":0}],"isBlockCoverage":false},{"functionName":"equals","ranges":[{"startOffset":2593,"endOffset":2659,"count":0}],"isBlockCoverage":false},{"functionName":"isNodeType","ranges":[{"startOffset":2661,"endOffset":2726,"count":3}],"isBlockCoverage":true},{"functionName":"canHaveVariableDeclarationOrExpression","ranges":[{"startOffset":2728,"endOffset":2863,"count":0}],"isBlockCoverage":false},{"functionName":"canSwapBetweenExpressionAndStatement","ranges":[{"startOffset":2865,"endOffset":3201,"count":0}],"isBlockCoverage":false},{"functionName":"isCompletionRecord","ranges":[{"startOffset":3203,"endOffset":3617,"count":0}],"isBlockCoverage":false},{"functionName":"isStatementOrBlock","ranges":[{"startOffset":3619,"endOffset":3841,"count":0}],"isBlockCoverage":false},{"functionName":"referencesImport","ranges":[{"startOffset":3843,"endOffset":4592,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":4594,"endOffset":4773,"count":0}],"isBlockCoverage":false},{"functionName":"willIMaybeExecuteBefore","ranges":[{"startOffset":4775,"endOffset":4886,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterFunction","ranges":[{"startOffset":4888,"endOffset":5004,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertain","ranges":[{"startOffset":5006,"endOffset":5817,"count":0}],"isBlockCoverage":false},{"functionName":"isExecutionUncertainInList","ranges":[{"startOffset":5819,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeTo","ranges":[{"startOffset":6056,"endOffset":7791,"count":0}],"isBlockCoverage":false},{"functionName":"_guessExecutionStatusRelativeToDifferentFunctions","ranges":[{"startOffset":7844,"endOffset":8817,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8819,"endOffset":8913,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":8915,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"isConstantExpression","ranges":[{"startOffset":10652,"endOffset":11408,"count":0}],"isBlockCoverage":false},{"functionName":"isInStrictMode","ranges":[{"startOffset":11410,"endOffset":12073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1191","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5462,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":775,"endOffset":870,"count":1},{"startOffset":849,"endOffset":867,"count":0}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":872,"endOffset":1122,"count":5344},{"startOffset":989,"endOffset":1001,"count":0},{"startOffset":1069,"endOffset":1097,"count":2200},{"startOffset":1103,"endOffset":1121,"count":0}],"isBlockCoverage":true},{"functionName":"_call","ranges":[{"startOffset":1124,"endOffset":1870,"count":10688},{"startOffset":1158,"endOffset":1171,"count":8235},{"startOffset":1171,"endOffset":1197,"count":2453},{"startOffset":1197,"endOffset":1851,"count":2474},{"startOffset":1212,"endOffset":1221,"count":0},{"startOffset":1265,"endOffset":1277,"count":0},{"startOffset":1346,"endOffset":1372,"count":0},{"startOffset":1373,"endOffset":1406,"count":0},{"startOffset":1408,"endOffset":1661,"count":0},{"startOffset":1676,"endOffset":1759,"count":0},{"startOffset":1789,"endOffset":1801,"count":0},{"startOffset":1835,"endOffset":1847,"count":2},{"startOffset":1851,"endOffset":1869,"count":2451}],"isBlockCoverage":true},{"functionName":"isBlacklisted","ranges":[{"startOffset":1872,"endOffset":2003,"count":2673},{"startOffset":1959,"endOffset":2000,"count":0}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":2005,"endOffset":2504,"count":2674},{"startOffset":2042,"endOffset":2065,"count":1},{"startOffset":2065,"endOffset":2095,"count":2673},{"startOffset":2095,"endOffset":2118,"count":0},{"startOffset":2118,"endOffset":2147,"count":2673},{"startOffset":2147,"endOffset":2176,"count":0},{"startOffset":2178,"endOffset":2201,"count":0},{"startOffset":2201,"endOffset":2246,"count":2673},{"startOffset":2247,"endOffset":2265,"count":2671},{"startOffset":2267,"endOffset":2327,"count":2},{"startOffset":2327,"endOffset":2503,"count":2671}],"isBlockCoverage":true},{"functionName":"skip","ranges":[{"startOffset":2506,"endOffset":2551,"count":2}],"isBlockCoverage":true},{"functionName":"skipKey","ranges":[{"startOffset":2553,"endOffset":2667,"count":0}],"isBlockCoverage":false},{"functionName":"stop","ranges":[{"startOffset":2669,"endOffset":2756,"count":0}],"isBlockCoverage":false},{"functionName":"setScope","ranges":[{"startOffset":2758,"endOffset":3081,"count":5758},{"startOffset":2796,"endOffset":2816,"count":5539},{"startOffset":2818,"endOffset":2825,"count":0},{"startOffset":2885,"endOffset":2895,"count":11423},{"startOffset":2897,"endOffset":3003,"count":5749},{"startOffset":2917,"endOffset":2937,"count":5712},{"startOffset":2939,"endOffset":2946,"count":0}],"isBlockCoverage":true},{"functionName":"setContext","ranges":[{"startOffset":3083,"endOffset":3349,"count":5753},{"startOffset":3143,"endOffset":3172,"count":0},{"startOffset":3217,"endOffset":3312,"count":2674}],"isBlockCoverage":true},{"functionName":"resync","ranges":[{"startOffset":3351,"endOffset":3470,"count":2676},{"startOffset":3391,"endOffset":3398,"count":1},{"startOffset":3398,"endOffset":3469,"count":2675}],"isBlockCoverage":true},{"functionName":"_resyncParent","ranges":[{"startOffset":3472,"endOffset":3569,"count":2675},{"startOffset":3522,"endOffset":3567,"count":2672}],"isBlockCoverage":true},{"functionName":"_resyncKey","ranges":[{"startOffset":3571,"endOffset":4047,"count":2675},{"startOffset":3618,"endOffset":3625,"count":0},{"startOffset":3672,"endOffset":3679,"count":2674},{"startOffset":3679,"endOffset":3867,"count":1},{"startOffset":3863,"endOffset":3867,"count":0},{"startOffset":3867,"endOffset":4046,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncList","ranges":[{"startOffset":4049,"endOffset":4257,"count":2675},{"startOffset":4110,"endOffset":4117,"count":1775},{"startOffset":4117,"endOffset":4207,"count":900},{"startOffset":4207,"endOffset":4214,"count":898},{"startOffset":4214,"endOffset":4247,"count":2},{"startOffset":4247,"endOffset":4254,"count":0}],"isBlockCoverage":true},{"functionName":"_resyncRemoved","ranges":[{"startOffset":4259,"endOffset":4404,"count":0}],"isBlockCoverage":false},{"functionName":"popContext","ranges":[{"startOffset":4406,"endOffset":4598,"count":2674},{"startOffset":4486,"endOffset":4553,"count":0}],"isBlockCoverage":true},{"functionName":"pushContext","ranges":[{"startOffset":4600,"endOffset":4692,"count":2674}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":4694,"endOffset":4876,"count":3081},{"startOffset":4835,"endOffset":4853,"count":6}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":4878,"endOffset":5054,"count":3082},{"startOffset":5025,"endOffset":5033,"count":6},{"startOffset":5034,"endOffset":5051,"count":3076}],"isBlockCoverage":true},{"functionName":"requeue","ranges":[{"startOffset":5056,"endOffset":5243,"count":1},{"startOffset":5122,"endOffset":5129,"count":0},{"startOffset":5199,"endOffset":5241,"count":0}],"isBlockCoverage":true},{"functionName":"_getQueueContexts","ranges":[{"startOffset":5245,"endOffset":5462,"count":3},{"startOffset":5400,"endOffset":5406,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1192","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/removal.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1469,"count":1}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":394,"endOffset":745,"count":1},{"startOffset":529,"endOffset":549,"count":0},{"startOffset":620,"endOffset":663,"count":0}],"isBlockCoverage":true},{"functionName":"_removeFromScope","ranges":[{"startOffset":747,"endOffset":900,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":858,"endOffset":896,"count":0}],"isBlockCoverage":false},{"functionName":"_callRemovalHooks","ranges":[{"startOffset":902,"endOffset":1028,"count":1},{"startOffset":973,"endOffset":1026,"count":4},{"startOffset":1010,"endOffset":1022,"count":0}],"isBlockCoverage":true},{"functionName":"_remove","ranges":[{"startOffset":1030,"endOffset":1217,"count":1},{"startOffset":1175,"endOffset":1215,"count":0}],"isBlockCoverage":true},{"functionName":"_markRemoved","ranges":[{"startOffset":1219,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"_assertUnremoved","ranges":[{"startOffset":1330,"endOffset":1469,"count":4},{"startOffset":1380,"endOffset":1467,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1193","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1313,"count":1}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":119,"endOffset":591,"count":1},{"startOffset":188,"endOffset":234,"count":0},{"startOffset":265,"endOffset":296,"count":0},{"startOffset":320,"endOffset":350,"count":0},{"startOffset":386,"endOffset":419,"count":0},{"startOffset":420,"endOffset":460,"count":0},{"startOffset":490,"endOffset":523,"count":0},{"startOffset":546,"endOffset":589,"count":0}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":593,"endOffset":772,"count":1},{"startOffset":655,"endOffset":694,"count":0},{"startOffset":696,"endOffset":770,"count":0}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":774,"endOffset":989,"count":1},{"startOffset":825,"endOffset":987,"count":0}],"isBlockCoverage":true},{"functionName":"hooks","ranges":[{"startOffset":991,"endOffset":1288,"count":1},{"startOffset":1046,"endOffset":1104,"count":0},{"startOffset":1128,"endOffset":1186,"count":0},{"startOffset":1188,"endOffset":1286,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1194","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/modification.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7055,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":725,"endOffset":911,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":913,"endOffset":1656,"count":1},{"startOffset":995,"endOffset":1068,"count":0},{"startOffset":1070,"endOffset":1166,"count":0},{"startOffset":1168,"endOffset":1296,"count":0},{"startOffset":1319,"endOffset":1655,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1658,"endOffset":1753,"count":2},{"startOffset":1732,"endOffset":1750,"count":0}],"isBlockCoverage":true},{"functionName":"insertBefore","ranges":[{"startOffset":1755,"endOffset":2873,"count":0}],"isBlockCoverage":false},{"functionName":"_containerInsert","ranges":[{"startOffset":2875,"endOffset":3482,"count":3},{"startOffset":3068,"endOffset":3249,"count":4},{"startOffset":3177,"endOffset":3198,"count":3},{"startOffset":3200,"endOffset":3245,"count":0},{"startOffset":3325,"endOffset":3463,"count":4}],"isBlockCoverage":true},{"functionName":"_containerInsertBefore","ranges":[{"startOffset":3484,"endOffset":3575,"count":2}],"isBlockCoverage":true},{"functionName":"_containerInsertAfter","ranges":[{"startOffset":3577,"endOffset":3671,"count":1}],"isBlockCoverage":true},{"functionName":"insertAfter","ranges":[{"startOffset":3673,"endOffset":5288,"count":1},{"startOffset":3968,"endOffset":3991,"count":0},{"startOffset":3993,"endOffset":4133,"count":0},{"startOffset":4173,"endOffset":4196,"count":0},{"startOffset":4197,"endOffset":4226,"count":0},{"startOffset":4258,"endOffset":4280,"count":0},{"startOffset":4282,"endOffset":4765,"count":0},{"startOffset":4857,"endOffset":5286,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4039,"endOffset":4126,"count":0}],"isBlockCoverage":false},{"functionName":"updateSiblingKeys","ranges":[{"startOffset":5290,"endOffset":5565,"count":4},{"startOffset":5363,"endOffset":5370,"count":0},{"startOffset":5460,"endOffset":5563,"count":10},{"startOffset":5521,"endOffset":5559,"count":8}],"isBlockCoverage":true},{"functionName":"_verifyNodeList","ranges":[{"startOffset":5567,"endOffset":6284,"count":3},{"startOffset":5615,"endOffset":5635,"count":0},{"startOffset":5672,"endOffset":5698,"count":2},{"startOffset":5741,"endOffset":6265,"count":4},{"startOffset":5799,"endOffset":5836,"count":0},{"startOffset":5872,"endOffset":5921,"count":0},{"startOffset":5943,"endOffset":5980,"count":0},{"startOffset":6022,"endOffset":6089,"count":0},{"startOffset":6104,"endOffset":6261,"count":0}],"isBlockCoverage":true},{"functionName":"unshiftContainer","ranges":[{"startOffset":6286,"endOffset":6591,"count":2}],"isBlockCoverage":true},{"functionName":"pushContainer","ranges":[{"startOffset":6593,"endOffset":6938,"count":0}],"isBlockCoverage":false},{"functionName":"hoist","ranges":[{"startOffset":6940,"endOffset":7055,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1195","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/lib/hoister.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6019,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":166,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":354,"endOffset":1097,"count":1},{"startOffset":436,"endOffset":509,"count":0},{"startOffset":511,"endOffset":607,"count":0},{"startOffset":609,"endOffset":737,"count":0},{"startOffset":760,"endOffset":1096,"count":0}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1128,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"PathHoister","ranges":[{"startOffset":2025,"endOffset":2243,"count":0}],"isBlockCoverage":false},{"functionName":"isCompatibleScope","ranges":[{"startOffset":2247,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"getCompatibleScopes","ranges":[{"startOffset":2499,"endOffset":2804,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentPath","ranges":[{"startOffset":2808,"endOffset":3808,"count":0}],"isBlockCoverage":false},{"functionName":"_getAttachmentPath","ranges":[{"startOffset":3812,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"getNextScopeAttachmentParent","ranges":[{"startOffset":4425,"endOffset":4565,"count":0}],"isBlockCoverage":false},{"functionName":"getAttachmentParentForPath","ranges":[{"startOffset":4569,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"hasOwnParamBindings","ranges":[{"startOffset":4772,"endOffset":5042,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":5046,"endOffset":5984,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1196","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/family.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8242,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":836,"endOffset":1022,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1024,"endOffset":1767,"count":1},{"startOffset":1106,"endOffset":1179,"count":0},{"startOffset":1181,"endOffset":1277,"count":0},{"startOffset":1279,"endOffset":1407,"count":0},{"startOffset":1430,"endOffset":1766,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1769,"endOffset":1864,"count":1},{"startOffset":1843,"endOffset":1861,"count":0}],"isBlockCoverage":true},{"functionName":"getOpposite","ranges":[{"startOffset":1866,"endOffset":2035,"count":0}],"isBlockCoverage":false},{"functionName":"addCompletionRecords","ranges":[{"startOffset":2037,"endOffset":2161,"count":0}],"isBlockCoverage":false},{"functionName":"completionRecordForSwitch","ranges":[{"startOffset":2163,"endOffset":3852,"count":0}],"isBlockCoverage":false},{"functionName":"getCompletionRecords","ranges":[{"startOffset":3854,"endOffset":4825,"count":0}],"isBlockCoverage":false},{"functionName":"getSibling","ranges":[{"startOffset":4827,"endOffset":5020,"count":4}],"isBlockCoverage":true},{"functionName":"getPrevSibling","ranges":[{"startOffset":5022,"endOffset":5091,"count":0}],"isBlockCoverage":false},{"functionName":"getNextSibling","ranges":[{"startOffset":5093,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"getAllNextSiblings","ranges":[{"startOffset":5164,"endOffset":5401,"count":0}],"isBlockCoverage":false},{"functionName":"getAllPrevSiblings","ranges":[{"startOffset":5403,"endOffset":5640,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5642,"endOffset":5880,"count":230},{"startOffset":5695,"endOffset":5718,"count":0},{"startOffset":5822,"endOffset":5878,"count":0}],"isBlockCoverage":true},{"functionName":"_getKey","ranges":[{"startOffset":5882,"endOffset":6389,"count":230},{"startOffset":6005,"endOffset":6234,"count":116},{"startOffset":6234,"endOffset":6387,"count":114}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6032,"endOffset":6228,"count":288}],"isBlockCoverage":true},{"functionName":"_getPattern","ranges":[{"startOffset":6391,"endOffset":6697,"count":0}],"isBlockCoverage":false},{"functionName":"getBindingIdentifiers","ranges":[{"startOffset":6699,"endOffset":6802,"count":163}],"isBlockCoverage":true},{"functionName":"getOuterBindingIdentifiers","ranges":[{"startOffset":6804,"endOffset":6917,"count":142}],"isBlockCoverage":true},{"functionName":"getBindingIdentifierPaths","ranges":[{"startOffset":6919,"endOffset":8126,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterBindingIdentifierPaths","ranges":[{"startOffset":8128,"endOffset":8242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1197","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/path/comments.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":271,"endOffset":457,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":459,"endOffset":1202,"count":1},{"startOffset":541,"endOffset":614,"count":0},{"startOffset":616,"endOffset":712,"count":0},{"startOffset":714,"endOffset":842,"count":0},{"startOffset":865,"endOffset":1201,"count":0}],"isBlockCoverage":true},{"functionName":"shareCommentsWithSiblings","ranges":[{"startOffset":1204,"endOffset":1778,"count":1},{"startOffset":1279,"endOffset":1286,"count":0},{"startOffset":1326,"endOffset":1333,"count":0},{"startOffset":1452,"endOffset":1647,"count":0},{"startOffset":1649,"endOffset":1776,"count":0}],"isBlockCoverage":true},{"functionName":"addComment","ranges":[{"startOffset":1780,"endOffset":1872,"count":0}],"isBlockCoverage":false},{"functionName":"addComments","ranges":[{"startOffset":1874,"endOffset":1958,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1198","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/visitors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6930,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":360,"endOffset":455,"count":1},{"startOffset":428,"endOffset":433,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":457,"endOffset":643,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":645,"endOffset":1388,"count":2},{"startOffset":727,"endOffset":800,"count":0},{"startOffset":802,"endOffset":898,"count":0},{"startOffset":900,"endOffset":1028,"count":0},{"startOffset":1051,"endOffset":1387,"count":0}],"isBlockCoverage":true},{"functionName":"explode","ranges":[{"startOffset":1390,"endOffset":3343,"count":101},{"startOffset":1443,"endOffset":1458,"count":51},{"startOffset":1458,"endOffset":1535,"count":50},{"startOffset":1535,"endOffset":1793,"count":140},{"startOffset":1572,"endOffset":1581,"count":50},{"startOffset":1581,"endOffset":1649,"count":90},{"startOffset":1649,"endOffset":1658,"count":86},{"startOffset":1658,"endOffset":1755,"count":4},{"startOffset":1755,"endOffset":1789,"count":9},{"startOffset":1789,"endOffset":1793,"count":4},{"startOffset":1793,"endOffset":1958,"count":50},{"startOffset":1958,"endOffset":2499,"count":195},{"startOffset":1995,"endOffset":2004,"count":100},{"startOffset":2004,"endOffset":2067,"count":95},{"startOffset":2067,"endOffset":2076,"count":78},{"startOffset":2076,"endOffset":2266,"count":17},{"startOffset":2266,"endOffset":2451,"count":16},{"startOffset":2308,"endOffset":2445,"count":21},{"startOffset":2337,"endOffset":2389,"count":0},{"startOffset":2451,"endOffset":2495,"count":1},{"startOffset":2499,"endOffset":2548,"count":50},{"startOffset":2548,"endOffset":3178,"count":200},{"startOffset":2585,"endOffset":2594,"count":101},{"startOffset":2594,"endOffset":2761,"count":99},{"startOffset":2761,"endOffset":2903,"count":0},{"startOffset":2903,"endOffset":2923,"count":99},{"startOffset":2923,"endOffset":2932,"count":69},{"startOffset":2932,"endOffset":2997,"count":30},{"startOffset":2997,"endOffset":3174,"count":595},{"startOffset":3059,"endOffset":3102,"count":10},{"startOffset":3102,"endOffset":3168,"count":585},{"startOffset":3174,"endOffset":3178,"count":30},{"startOffset":3178,"endOffset":3227,"count":50},{"startOffset":3227,"endOffset":3322,"count":755},{"startOffset":3264,"endOffset":3273,"count":101},{"startOffset":3273,"endOffset":3322,"count":654},{"startOffset":3322,"endOffset":3342,"count":50}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":3345,"endOffset":4479,"count":50},{"startOffset":3397,"endOffset":3404,"count":0},{"startOffset":3443,"endOffset":3599,"count":0},{"startOffset":3648,"endOffset":4448,"count":145},{"startOffset":3703,"endOffset":3769,"count":0},{"startOffset":3806,"endOffset":3815,"count":50},{"startOffset":3815,"endOffset":3856,"count":95},{"startOffset":3856,"endOffset":3967,"count":0},{"startOffset":3967,"endOffset":4048,"count":95},{"startOffset":4048,"endOffset":4444,"count":8},{"startOffset":4104,"endOffset":4438,"count":9},{"startOffset":4141,"endOffset":4165,"count":8},{"startOffset":4263,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"validateVisitorMethods","ranges":[{"startOffset":4481,"endOffset":4721,"count":9},{"startOffset":4617,"endOffset":4715,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":4723,"endOffset":5279,"count":17},{"startOffset":4843,"endOffset":5254,"count":62},{"startOffset":4975,"endOffset":5250,"count":296},{"startOffset":5033,"endOffset":5043,"count":147},{"startOffset":5045,"endOffset":5129,"count":149},{"startOffset":5195,"endOffset":5200,"count":185}],"isBlockCoverage":true},{"functionName":"wrapWithStateOrWrapper","ranges":[{"startOffset":5281,"endOffset":5903,"count":149},{"startOffset":5414,"endOffset":5879,"count":81},{"startOffset":5476,"endOffset":5485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5504,"endOffset":5846,"count":81},{"startOffset":5681,"endOffset":5738,"count":0}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":5578,"endOffset":5651,"count":178}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":5791,"endOffset":5810,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEntranceObjects","ranges":[{"startOffset":5905,"endOffset":6145,"count":50},{"startOffset":5981,"endOffset":6143,"count":195},{"startOffset":6013,"endOffset":6022,"count":100},{"startOffset":6022,"endOffset":6085,"count":95},{"startOffset":6085,"endOffset":6139,"count":87}],"isBlockCoverage":true},{"functionName":"ensureCallbackArrays","ranges":[{"startOffset":6147,"endOffset":6323,"count":704},{"startOffset":6200,"endOffset":6228,"count":646},{"startOffset":6230,"endOffset":6254,"count":635},{"startOffset":6270,"endOffset":6297,"count":16},{"startOffset":6299,"endOffset":6321,"count":13}],"isBlockCoverage":true},{"functionName":"wrapCheck","ranges":[{"startOffset":6325,"endOffset":6538,"count":17}],"isBlockCoverage":true},{"functionName":"newFn","ranges":[{"startOffset":6375,"endOffset":6477,"count":2025},{"startOffset":6426,"endOffset":6473,"count":364}],"isBlockCoverage":true},{"functionName":"newFn.toString","ranges":[{"startOffset":6499,"endOffset":6518,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnoreKey","ranges":[{"startOffset":6540,"endOffset":6797,"count":1630},{"startOffset":6594,"endOffset":6606,"count":500},{"startOffset":6606,"endOffset":6629,"count":1130},{"startOffset":6629,"endOffset":6646,"count":1128},{"startOffset":6647,"endOffset":6670,"count":1128},{"startOffset":6672,"endOffset":6684,"count":2},{"startOffset":6684,"endOffset":6732,"count":1128},{"startOffset":6733,"endOffset":6754,"count":1128},{"startOffset":6756,"endOffset":6778,"count":0},{"startOffset":6778,"endOffset":6796,"count":1128}],"isBlockCoverage":true},{"functionName":"mergePair","ranges":[{"startOffset":6799,"endOffset":6930,"count":307},{"startOffset":6869,"endOffset":6928,"count":188},{"startOffset":6907,"endOffset":6912,"count":162}],"isBlockCoverage":true}]},{"scriptId":"1199","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/traverse/lib/hub.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":121,"endOffset":133,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":137,"endOffset":150,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":154,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"buildError","ranges":[{"startOffset":245,"endOffset":318,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1200","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/shake.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3497,"count":1}],"isBlockCoverage":true},{"functionName":"treeShake","ranges":[{"startOffset":246,"endOffset":1083,"count":0}],"isBlockCoverage":false},{"functionName":"getUnusedBinding","ranges":[{"startOffset":1179,"endOffset":1641,"count":0}],"isBlockCoverage":false},{"functionName":"isPure","ranges":[{"startOffset":1643,"endOffset":1923,"count":0}],"isBlockCoverage":false},{"functionName":"isExportAssignment","ranges":[{"startOffset":1925,"endOffset":2178,"count":0}],"isBlockCoverage":false},{"functionName":"isUnusedWildcard","ranges":[{"startOffset":2180,"endOffset":2548,"count":0}],"isBlockCoverage":false},{"functionName":"remove","ranges":[{"startOffset":2550,"endOffset":3496,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1201","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/mangler.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1888,"count":1}],"isBlockCoverage":true},{"functionName":"mangleScope","ranges":[{"startOffset":582,"endOffset":1197,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifier","ranges":[{"startOffset":1199,"endOffset":1396,"count":0}],"isBlockCoverage":false},{"functionName":"canRename","ranges":[{"startOffset":1398,"endOffset":1856,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1202","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/renamer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1028,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":36,"endOffset":1001,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1203","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":36,"endOffset":308,"count":0}],"isBlockCoverage":false},{"functionName":"getIdentifier","ranges":[{"startOffset":310,"endOffset":412,"count":0}],"isBlockCoverage":false},{"functionName":"getExportIdentifier","ranges":[{"startOffset":414,"endOffset":506,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1204","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/getExisting.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":469,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":186,"endOffset":467,"count":3},{"startOffset":348,"endOffset":445,"count":2},{"startOffset":452,"endOffset":460,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1205","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babylon-walk/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7689,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":439,"endOffset":708,"count":1},{"startOffset":521,"endOffset":706,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":710,"endOffset":805,"count":2},{"startOffset":784,"endOffset":802,"count":0}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":807,"endOffset":3149,"count":0}],"isBlockCoverage":false},{"functionName":"ancestor","ranges":[{"startOffset":3151,"endOffset":5719,"count":2},{"startOffset":3207,"endOffset":3214,"count":0}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":3289,"endOffset":5709,"count":718},{"startOffset":3323,"endOffset":3330,"count":227},{"startOffset":3330,"endOffset":3368,"count":491},{"startOffset":3368,"endOffset":3373,"count":469},{"startOffset":3506,"endOffset":3544,"count":491},{"startOffset":3544,"endOffset":4060,"count":22},{"startOffset":3665,"endOffset":3705,"count":0},{"startOffset":3709,"endOffset":4054,"count":44},{"startOffset":3796,"endOffset":3849,"count":22},{"startOffset":3849,"endOffset":3961,"count":0},{"startOffset":3961,"endOffset":4021,"count":22},{"startOffset":4021,"endOffset":4033,"count":0},{"startOffset":4060,"endOffset":4114,"count":491},{"startOffset":4114,"endOffset":4119,"count":0},{"startOffset":4192,"endOffset":4204,"count":491},{"startOffset":4205,"endOffset":4245,"count":0},{"startOffset":4249,"endOffset":5137,"count":1143},{"startOffset":4330,"endOffset":4336,"count":491},{"startOffset":4336,"endOffset":4379,"count":652},{"startOffset":4379,"endOffset":4483,"count":0},{"startOffset":4483,"endOffset":4574,"count":652},{"startOffset":4574,"endOffset":5096,"count":86},{"startOffset":4699,"endOffset":4739,"count":0},{"startOffset":4743,"endOffset":5088,"count":236},{"startOffset":4837,"endOffset":4843,"count":86},{"startOffset":4843,"endOffset":4895,"count":150},{"startOffset":4895,"endOffset":5016,"count":0},{"startOffset":5016,"endOffset":5088,"count":150},{"startOffset":5096,"endOffset":5131,"count":566},{"startOffset":5137,"endOffset":5153,"count":491},{"startOffset":5153,"endOffset":5672,"count":0},{"startOffset":5672,"endOffset":5705,"count":491}],"isBlockCoverage":true},{"functionName":"recursive","ranges":[{"startOffset":5721,"endOffset":7689,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1206","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babylon-walk/lib/explode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7820,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":510,"endOffset":779,"count":1},{"startOffset":592,"endOffset":777,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":781,"endOffset":876,"count":3},{"startOffset":849,"endOffset":854,"count":2},{"startOffset":855,"endOffset":873,"count":1}],"isBlockCoverage":true},{"functionName":"explode","ranges":[{"startOffset":1729,"endOffset":4152,"count":2},{"startOffset":1782,"endOffset":1880,"count":1},{"startOffset":1880,"endOffset":2505,"count":7},{"startOffset":1917,"endOffset":1926,"count":1},{"startOffset":1926,"endOffset":2002,"count":6},{"startOffset":2002,"endOffset":2177,"count":0},{"startOffset":2178,"endOffset":2217,"count":0},{"startOffset":2221,"endOffset":2501,"count":0},{"startOffset":2505,"endOffset":2930,"count":1},{"startOffset":2930,"endOffset":3995,"count":8},{"startOffset":2968,"endOffset":2977,"count":2},{"startOffset":2977,"endOffset":3146,"count":6},{"startOffset":3146,"endOffset":3294,"count":0},{"startOffset":3294,"endOffset":3323,"count":6},{"startOffset":3323,"endOffset":3508,"count":0},{"startOffset":3509,"endOffset":3549,"count":0},{"startOffset":3553,"endOffset":3991,"count":0},{"startOffset":3995,"endOffset":4031,"count":1},{"startOffset":4031,"endOffset":4131,"count":8},{"startOffset":4070,"endOffset":4079,"count":2},{"startOffset":4079,"endOffset":4131,"count":6},{"startOffset":4131,"endOffset":4151,"count":1}],"isBlockCoverage":true},{"functionName":"verify","ranges":[{"startOffset":4154,"endOffset":5616,"count":1},{"startOffset":4206,"endOffset":4213,"count":0},{"startOffset":4252,"endOffset":4471,"count":0},{"startOffset":4505,"endOffset":5585,"count":7},{"startOffset":4560,"endOffset":4626,"count":0},{"startOffset":4663,"endOffset":4672,"count":1},{"startOffset":4672,"endOffset":4713,"count":6},{"startOffset":4713,"endOffset":4905,"count":0},{"startOffset":4905,"endOffset":4986,"count":6},{"startOffset":4986,"endOffset":4999,"count":0},{"startOffset":5000,"endOffset":5033,"count":6},{"startOffset":5049,"endOffset":5581,"count":0}],"isBlockCoverage":true},{"functionName":"validateVisitorMethods","ranges":[{"startOffset":5618,"endOffset":6290,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWithStateOrWrapper","ranges":[{"startOffset":6292,"endOffset":6986,"count":0}],"isBlockCoverage":false},{"functionName":"ensureEntranceObjects","ranges":[{"startOffset":6988,"endOffset":7197,"count":1},{"startOffset":7049,"endOffset":7195,"count":8},{"startOffset":7081,"endOffset":7090,"count":2},{"startOffset":7090,"endOffset":7191,"count":6}],"isBlockCoverage":true},{"functionName":"ensureCallbackArrays","ranges":[{"startOffset":7199,"endOffset":7375,"count":7},{"startOffset":7252,"endOffset":7280,"count":6},{"startOffset":7282,"endOffset":7306,"count":6},{"startOffset":7322,"endOffset":7349,"count":0},{"startOffset":7351,"endOffset":7373,"count":0}],"isBlockCoverage":true},{"functionName":"shouldIgnoreKey","ranges":[{"startOffset":7377,"endOffset":7702,"count":38},{"startOffset":7456,"endOffset":7468,"count":8},{"startOffset":7468,"endOffset":7535,"count":30},{"startOffset":7536,"endOffset":7559,"count":30},{"startOffset":7561,"endOffset":7573,"count":0},{"startOffset":7573,"endOffset":7647,"count":30},{"startOffset":7648,"endOffset":7669,"count":30},{"startOffset":7671,"endOffset":7683,"count":0},{"startOffset":7683,"endOffset":7701,"count":30}],"isBlockCoverage":true},{"functionName":"mergePair","ranges":[{"startOffset":7704,"endOffset":7820,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1207","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash.clone/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":45455,"count":1},{"startOffset":3163,"endOffset":3170,"count":0},{"startOffset":3171,"endOffset":3196,"count":0},{"startOffset":3197,"endOffset":3204,"count":0},{"startOffset":3278,"endOffset":3289,"count":0},{"startOffset":3290,"endOffset":3318,"count":0},{"startOffset":9479,"endOffset":9490,"count":0},{"startOffset":9927,"endOffset":9938,"count":0},{"startOffset":10650,"endOffset":10661,"count":0},{"startOffset":10717,"endOffset":10728,"count":0},{"startOffset":31859,"endOffset":31870,"count":0},{"startOffset":32442,"endOffset":32973,"count":0},{"startOffset":41490,"endOffset":41502,"count":0}],"isBlockCoverage":true},{"functionName":"addMapEntry","ranges":[{"startOffset":3912,"endOffset":4055,"count":0}],"isBlockCoverage":false},{"functionName":"addSetEntry","ranges":[{"startOffset":4222,"endOffset":4355,"count":0}],"isBlockCoverage":false},{"functionName":"arrayEach","ranges":[{"startOffset":4631,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"arrayPush","ranges":[{"startOffset":5058,"endOffset":5265,"count":0}],"isBlockCoverage":false},{"functionName":"arrayReduce","ranges":[{"startOffset":5698,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"baseTimes","ranges":[{"startOffset":6329,"endOffset":6490,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":6703,"endOffset":6788,"count":6},{"startOffset":6760,"endOffset":6771,"count":0}],"isBlockCoverage":true},{"functionName":"isHostObject","ranges":[{"startOffset":6982,"endOffset":7309,"count":0}],"isBlockCoverage":false},{"functionName":"mapToArray","ranges":[{"startOffset":7468,"endOffset":7643,"count":0}],"isBlockCoverage":false},{"functionName":"overArg","ranges":[{"startOffset":7899,"endOffset":7999,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7944,"endOffset":7996,"count":0}],"isBlockCoverage":false},{"functionName":"setToArray","ranges":[{"startOffset":8152,"endOffset":8315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8636,"endOffset":8788,"count":1},{"startOffset":8733,"endOffset":8738,"count":0},{"startOffset":8781,"endOffset":8785,"count":0}],"isBlockCoverage":true},{"functionName":"Hash","ranges":[{"startOffset":10854,"endOffset":11059,"count":0}],"isBlockCoverage":false},{"functionName":"hashClear","ranges":[{"startOffset":11165,"endOffset":11247,"count":0}],"isBlockCoverage":false},{"functionName":"hashDelete","ranges":[{"startOffset":11528,"endOffset":11609,"count":0}],"isBlockCoverage":false},{"functionName":"hashGet","ranges":[{"startOffset":11792,"endOffset":12023,"count":0}],"isBlockCoverage":false},{"functionName":"hashHas","ranges":[{"startOffset":12258,"endOffset":12393,"count":0}],"isBlockCoverage":false},{"functionName":"hashSet","ranges":[{"startOffset":12622,"endOffset":12775,"count":0}],"isBlockCoverage":false},{"functionName":"ListCache","ranges":[{"startOffset":13097,"endOffset":13307,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheClear","ranges":[{"startOffset":13424,"endOffset":13475,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheDelete","ranges":[{"startOffset":13723,"endOffset":14007,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheGet","ranges":[{"startOffset":14201,"endOffset":14348,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheHas","ranges":[{"startOffset":14594,"endOffset":14672,"count":0}],"isBlockCoverage":false},{"functionName":"listCacheSet","ranges":[{"startOffset":14918,"endOffset":15129,"count":0}],"isBlockCoverage":false},{"functionName":"MapCache","ranges":[{"startOffset":15529,"endOffset":15738,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheClear","ranges":[{"startOffset":15847,"endOffset":15980,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheDelete","ranges":[{"startOffset":16220,"endOffset":16299,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheGet","ranges":[{"startOffset":16485,"endOffset":16555,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheHas","ranges":[{"startOffset":16793,"endOffset":16863,"count":0}],"isBlockCoverage":false},{"functionName":"mapCacheSet","ranges":[{"startOffset":17100,"endOffset":17192,"count":0}],"isBlockCoverage":false},{"functionName":"Stack","ranges":[{"startOffset":17583,"endOffset":17652,"count":0}],"isBlockCoverage":false},{"functionName":"stackClear","ranges":[{"startOffset":17760,"endOffset":17818,"count":0}],"isBlockCoverage":false},{"functionName":"stackDelete","ranges":[{"startOffset":18057,"endOffset":18125,"count":0}],"isBlockCoverage":false},{"functionName":"stackGet","ranges":[{"startOffset":18310,"endOffset":18369,"count":0}],"isBlockCoverage":false},{"functionName":"stackHas","ranges":[{"startOffset":18606,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"stackSet","ranges":[{"startOffset":18903,"endOffset":19240,"count":0}],"isBlockCoverage":false},{"functionName":"arrayLikeKeys","ranges":[{"startOffset":19717,"endOffset":20266,"count":0}],"isBlockCoverage":false},{"functionName":"assignValue","ranges":[{"startOffset":20637,"endOffset":20859,"count":0}],"isBlockCoverage":false},{"functionName":"assocIndexOf","ranges":[{"startOffset":21120,"endOffset":21288,"count":0}],"isBlockCoverage":false},{"functionName":"baseAssign","ranges":[{"startOffset":21555,"endOffset":21655,"count":0}],"isBlockCoverage":false},{"functionName":"baseClone","ranges":[{"startOffset":22224,"endOffset":23887,"count":0}],"isBlockCoverage":false},{"functionName":"baseCreate","ranges":[{"startOffset":24122,"endOffset":24205,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetAllKeys","ranges":[{"startOffset":24666,"endOffset":24833,"count":0}],"isBlockCoverage":false},{"functionName":"baseGetTag","ranges":[{"startOffset":24986,"endOffset":25053,"count":5}],"isBlockCoverage":true},{"functionName":"baseIsNative","ranges":[{"startOffset":25274,"endOffset":25501,"count":6},{"startOffset":25348,"endOffset":25371,"count":0},{"startOffset":25407,"endOffset":25429,"count":0},{"startOffset":25444,"endOffset":25458,"count":0}],"isBlockCoverage":true},{"functionName":"baseKeys","ranges":[{"startOffset":25713,"endOffset":25981,"count":0}],"isBlockCoverage":false},{"functionName":"cloneBuffer","ranges":[{"startOffset":26185,"endOffset":26366,"count":0}],"isBlockCoverage":false},{"functionName":"cloneArrayBuffer","ranges":[{"startOffset":26550,"endOffset":26736,"count":0}],"isBlockCoverage":false},{"functionName":"cloneDataView","ranges":[{"startOffset":26949,"endOffset":27155,"count":0}],"isBlockCoverage":false},{"functionName":"cloneMap","ranges":[{"startOffset":27407,"endOffset":27590,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRegExp","ranges":[{"startOffset":27742,"endOffset":27906,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSet","ranges":[{"startOffset":28158,"endOffset":28341,"count":0}],"isBlockCoverage":false},{"functionName":"cloneSymbol","ranges":[{"startOffset":28518,"endOffset":28616,"count":0}],"isBlockCoverage":false},{"functionName":"cloneTypedArray","ranges":[{"startOffset":28837,"endOffset":29053,"count":0}],"isBlockCoverage":false},{"functionName":"copyArray","ranges":[{"startOffset":29274,"endOffset":29479,"count":0}],"isBlockCoverage":false},{"functionName":"copyObject","ranges":[{"startOffset":29849,"endOffset":30257,"count":0}],"isBlockCoverage":false},{"functionName":"copySymbols","ranges":[{"startOffset":30499,"endOffset":30596,"count":0}],"isBlockCoverage":false},{"functionName":"getAllKeys","ranges":[{"startOffset":30815,"endOffset":30897,"count":0}],"isBlockCoverage":false},{"functionName":"getMapData","ranges":[{"startOffset":31071,"endOffset":31226,"count":0}],"isBlockCoverage":false},{"functionName":"getNative","ranges":[{"startOffset":31472,"endOffset":31594,"count":6},{"startOffset":31580,"endOffset":31591,"count":0}],"isBlockCoverage":true},{"functionName":"getTag","ranges":[{"startOffset":32455,"endOffset":32970,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneArray","ranges":[{"startOffset":33124,"endOffset":33448,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneObject","ranges":[{"startOffset":33604,"endOffset":33764,"count":0}],"isBlockCoverage":false},{"functionName":"initCloneByTag","ranges":[{"startOffset":34260,"endOffset":35097,"count":0}],"isBlockCoverage":false},{"functionName":"isIndex","ranges":[{"startOffset":35372,"endOffset":35595,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyable","ranges":[{"startOffset":35798,"endOffset":35997,"count":0}],"isBlockCoverage":false},{"functionName":"isMasked","ranges":[{"startOffset":36186,"endOffset":36260,"count":6}],"isBlockCoverage":true},{"functionName":"isPrototype","ranges":[{"startOffset":36454,"endOffset":36629,"count":0}],"isBlockCoverage":false},{"functionName":"toSource","ranges":[{"startOffset":36790,"endOffset":36978,"count":11},{"startOffset":36892,"endOffset":36959,"count":0},{"startOffset":36963,"endOffset":36977,"count":0}],"isBlockCoverage":true},{"functionName":"clone","ranges":[{"startOffset":37831,"endOffset":37896,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":38579,"endOffset":38674,"count":0}],"isBlockCoverage":false},{"functionName":"isArguments","ranges":[{"startOffset":39063,"endOffset":39331,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLike","ranges":[{"startOffset":40409,"endOffset":40512,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayLikeObject","ranges":[{"startOffset":41038,"endOffset":41127,"count":0}],"isBlockCoverage":false},{"functionName":"isFunction","ranges":[{"startOffset":41843,"endOffset":42135,"count":6},{"startOffset":42086,"endOffset":42090,"count":0},{"startOffset":42116,"endOffset":42132,"count":0}],"isBlockCoverage":true},{"functionName":"isLength","ranges":[{"startOffset":42682,"endOffset":42810,"count":0}],"isBlockCoverage":false},{"functionName":"isObject","ranges":[{"startOffset":43393,"endOffset":43510,"count":12}],"isBlockCoverage":true},{"functionName":"isObjectLike","ranges":[{"startOffset":44009,"endOffset":44087,"count":0}],"isBlockCoverage":false},{"functionName":"keys","ranges":[{"startOffset":44717,"endOffset":44815,"count":0}],"isBlockCoverage":false},{"functionName":"stubArray","ranges":[{"startOffset":45140,"endOffset":45177,"count":0}],"isBlockCoverage":false},{"functionName":"stubFalse","ranges":[{"startOffset":45389,"endOffset":45429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1208","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/JSPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7600,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":447,"endOffset":1014,"count":1},{"startOffset":632,"endOffset":650,"count":0},{"startOffset":713,"endOffset":920,"count":0}],"isBlockCoverage":true},{"functionName":"addAsset","ranges":[{"startOffset":1018,"endOffset":3170,"count":2},{"startOffset":1555,"endOffset":1580,"count":0},{"startOffset":1810,"endOffset":2999,"count":1},{"startOffset":1926,"endOffset":2330,"count":0},{"startOffset":2400,"endOffset":2409,"count":0},{"startOffset":2718,"endOffset":2985,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1307,"endOffset":1458,"count":1},{"startOffset":1426,"endOffset":1451,"count":0}],"isBlockCoverage":true},{"functionName":"getBundleSpecifier","ranges":[{"startOffset":3174,"endOffset":3377,"count":0}],"isBlockCoverage":false},{"functionName":"dedupeKey","ranges":[{"startOffset":3381,"endOffset":3737,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3658,"endOffset":3673,"count":1}],"isBlockCoverage":true},{"functionName":"writeModule","ranges":[{"startOffset":3741,"endOffset":4258,"count":2},{"startOffset":3816,"endOffset":3820,"count":1},{"startOffset":3821,"endOffset":3826,"count":1},{"startOffset":3931,"endOffset":3936,"count":0},{"startOffset":4163,"endOffset":4179,"count":0},{"startOffset":4180,"endOffset":4195,"count":0}],"isBlockCoverage":true},{"functionName":"addAssetToBundle","ranges":[{"startOffset":4262,"endOffset":4636,"count":0}],"isBlockCoverage":false},{"functionName":"writeBundleLoaders","ranges":[{"startOffset":4640,"endOffset":6517,"count":1},{"startOffset":4735,"endOffset":4903,"count":0},{"startOffset":4905,"endOffset":6516,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6018,"endOffset":6043,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":6521,"endOffset":7567,"count":1},{"startOffset":6620,"endOffset":6804,"count":0},{"startOffset":6847,"endOffset":6875,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1209","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/lineCounter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"lineCounter","ranges":[{"startOffset":0,"endOffset":172,"count":3},{"startOffset":90,"endOffset":153,"count":7086},{"startOffset":127,"endOffset":149,"count":248}],"isBlockCoverage":true}]},{"scriptId":"1210","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/CSSPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2094,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":208,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"addAsset","ranges":[{"startOffset":283,"endOffset":1649,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":1653,"endOffset":2060,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1211","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/HTMLPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2540,"count":1}],"isBlockCoverage":true},{"functionName":"shouldAddAsset","ranges":[{"startOffset":390,"endOffset":530,"count":0}],"isBlockCoverage":false},{"functionName":"addAsset","ranges":[{"startOffset":534,"endOffset":1116,"count":0}],"isBlockCoverage":false},{"functionName":"addBundlesToTree","ranges":[{"startOffset":1120,"endOffset":1523,"count":0}],"isBlockCoverage":false},{"functionName":"insertSiblingBundles","ranges":[{"startOffset":1527,"endOffset":2140,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":2144,"endOffset":2267,"count":0}],"isBlockCoverage":false},{"functionName":"findBundleInsertIndex","ranges":[{"startOffset":2269,"endOffset":2507,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1212","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/posthtml/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6242,"count":1}],"isBlockCoverage":true},{"functionName":"PostHTML","ranges":[{"startOffset":473,"endOffset":1212,"count":0}],"isBlockCoverage":false},{"functionName":"PostHTML.use","ranges":[{"startOffset":1800,"endOffset":1870,"count":0}],"isBlockCoverage":false},{"functionName":"PostHTML.process","ranges":[{"startOffset":2345,"endOffset":4785,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5041,"endOffset":5094,"count":0}],"isBlockCoverage":false},{"functionName":"_treeExtendApi","ranges":[{"startOffset":5228,"endOffset":5327,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":5481,"endOffset":5570,"count":0}],"isBlockCoverage":false},{"functionName":"tryCatch","ranges":[{"startOffset":5755,"endOffset":5859,"count":0}],"isBlockCoverage":false},{"functionName":"lazyResult","ranges":[{"startOffset":6079,"endOffset":6241,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1213","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/posthtml/lib/api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3251,"count":1}],"isBlockCoverage":true},{"functionName":"Api","ranges":[{"startOffset":209,"endOffset":268,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":686,"endOffset":736,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":1615,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":2082,"endOffset":2401,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2419,"endOffset":3250,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1214","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/posthtml-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3800,"count":1}],"isBlockCoverage":true},{"functionName":"postHTMLParser","ranges":[{"startOffset":417,"endOffset":3233,"count":0}],"isBlockCoverage":false},{"functionName":"parserWrapper","ranges":[{"startOffset":3235,"endOffset":3664,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1215","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/htmlparser2/lib/Parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9481,"count":1}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":1870,"endOffset":2717,"count":0}],"isBlockCoverage":false},{"functionName":"Parser._updatePosition","ranges":[{"startOffset":2816,"endOffset":3180,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.ontext","ranges":[{"startOffset":3236,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onopentagname","ranges":[{"startOffset":3391,"endOffset":4138,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onopentagend","ranges":[{"startOffset":4173,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onclosetag","ranges":[{"startOffset":4605,"endOffset":5534,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onselfclosingtag","ranges":[{"startOffset":5573,"endOffset":5826,"count":0}],"isBlockCoverage":false},{"functionName":"Parser._closeCurrentTag","ranges":[{"startOffset":5865,"endOffset":6217,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onattribname","ranges":[{"startOffset":6252,"endOffset":6381,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onattribdata","ranges":[{"startOffset":6416,"endOffset":6467,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onattribend","ranges":[{"startOffset":6501,"endOffset":6857,"count":0}],"isBlockCoverage":false},{"functionName":"Parser._getInstructionName","ranges":[{"startOffset":6899,"endOffset":7108,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.ondeclaration","ranges":[{"startOffset":7144,"endOffset":7334,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onprocessinginstruction","ranges":[{"startOffset":7380,"endOffset":7570,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.oncomment","ranges":[{"startOffset":7602,"endOffset":7766,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.oncdata","ranges":[{"startOffset":7796,"endOffset":8154,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onerror","ranges":[{"startOffset":8184,"endOffset":8252,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.onend","ranges":[{"startOffset":8280,"endOffset":8511,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.reset","ranges":[{"startOffset":8612,"endOffset":8866,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.parseComplete","ranges":[{"startOffset":8965,"endOffset":9021,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.write","ranges":[{"startOffset":9049,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.end","ranges":[{"startOffset":9128,"endOffset":9179,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.pause","ranges":[{"startOffset":9207,"endOffset":9250,"count":0}],"isBlockCoverage":false},{"functionName":"Parser.resume","ranges":[{"startOffset":9279,"endOffset":9323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1216","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/htmlparser2/lib/Tokenizer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28890,"count":1}],"isBlockCoverage":true},{"functionName":"whitespace","ranges":[{"startOffset":2129,"endOffset":2233,"count":0}],"isBlockCoverage":false},{"functionName":"ifElseState","ranges":[{"startOffset":2235,"endOffset":2813,"count":14},{"startOffset":2346,"endOffset":2568,"count":1},{"startOffset":2568,"endOffset":2811,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2363,"endOffset":2561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2591,"endOffset":2804,"count":0}],"isBlockCoverage":false},{"functionName":"consumeSpecialNameChar","ranges":[{"startOffset":2815,"endOffset":3138,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2917,"endOffset":3135,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer","ranges":[{"startOffset":3140,"endOffset":3581,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateText","ranges":[{"startOffset":3616,"endOffset":4182,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeTagName","ranges":[{"startOffset":4227,"endOffset":4974,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInTagName","ranges":[{"startOffset":5015,"endOffset":5197,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeCloseingTagName","ranges":[{"startOffset":5250,"endOffset":5666,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInCloseingTagName","ranges":[{"startOffset":5715,"endOffset":5882,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterCloseingTagName","ranges":[{"startOffset":5934,"endOffset":6082,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeAttributeName","ranges":[{"startOffset":6133,"endOffset":6470,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInSelfClosingTag","ranges":[{"startOffset":6518,"endOffset":6773,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInAttributeName","ranges":[{"startOffset":6820,"endOffset":7057,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterAttributeName","ranges":[{"startOffset":7107,"endOffset":7486,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeAttributeValue","ranges":[{"startOffset":7538,"endOffset":7951,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInAttributeValueDoubleQuotes","ranges":[{"startOffset":8011,"endOffset":8383,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInAttributeValueSingleQuotes","ranges":[{"startOffset":8443,"endOffset":8815,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInAttributeValueNoQuotes","ranges":[{"startOffset":8871,"endOffset":9283,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeDeclaration","ranges":[{"startOffset":9332,"endOffset":9503,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInDeclaration","ranges":[{"startOffset":9548,"endOffset":9717,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInProcessingInstruction","ranges":[{"startOffset":9772,"endOffset":9951,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeComment","ranges":[{"startOffset":9996,"endOffset":10169,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInComment","ranges":[{"startOffset":10210,"endOffset":10275,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterComment1","ranges":[{"startOffset":10320,"endOffset":10448,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterComment2","ranges":[{"startOffset":10493,"endOffset":10863,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeCdata6","ranges":[{"startOffset":11433,"endOffset":11627,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInCdata","ranges":[{"startOffset":11666,"endOffset":11729,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterCdata1","ranges":[{"startOffset":11772,"endOffset":11868,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterCdata2","ranges":[{"startOffset":11911,"endOffset":12274,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeSpecial","ranges":[{"startOffset":12319,"endOffset":12589,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeSpecialEnd","ranges":[{"startOffset":12637,"endOffset":12908,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeScript5","ranges":[{"startOffset":13346,"endOffset":13534,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterScript5","ranges":[{"startOffset":13903,"endOffset":14159,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateBeforeStyle4","ranges":[{"startOffset":14492,"endOffset":14679,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateAfterStyle4","ranges":[{"startOffset":14960,"endOffset":15216,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._parseNamedEntityStrict","ranges":[{"startOffset":15536,"endOffset":15950,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._parseLegacyEntity","ranges":[{"startOffset":16048,"endOffset":16560,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInNamedEntity","ranges":[{"startOffset":16605,"endOffset":17313,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._decodeNumericEntity","ranges":[{"startOffset":17359,"endOffset":17798,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInNumericEntity","ranges":[{"startOffset":17845,"endOffset":18165,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._stateInHexEntity","ranges":[{"startOffset":18208,"endOffset":18608,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._cleanup","ranges":[{"startOffset":18642,"endOffset":19585,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.write","ranges":[{"startOffset":19647,"endOffset":19784,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._parse","ranges":[{"startOffset":19816,"endOffset":25677,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.pause","ranges":[{"startOffset":25708,"endOffset":25749,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.resume","ranges":[{"startOffset":25780,"endOffset":25948,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.end","ranges":[{"startOffset":25977,"endOffset":26164,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._finish","ranges":[{"startOffset":26197,"endOffset":26383,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._handleTrailingData","ranges":[{"startOffset":26428,"endOffset":28151,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.reset","ranges":[{"startOffset":28182,"endOffset":28329,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer.getAbsoluteIndex","ranges":[{"startOffset":28371,"endOffset":28430,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._getSection","ranges":[{"startOffset":28467,"endOffset":28549,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._emitToken","ranges":[{"startOffset":28585,"endOffset":28673,"count":0}],"isBlockCoverage":false},{"functionName":"Tokenizer._emitPartial","ranges":[{"startOffset":28711,"endOffset":28888,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1217","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/posthtml-render/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3900,"count":1}],"isBlockCoverage":true},{"functionName":"render","ranges":[{"startOffset":400,"endOffset":3802,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1218","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/SourceMapPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"start","ranges":[{"startOffset":159,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"addAsset","ranges":[{"startOffset":220,"endOffset":475,"count":2}],"isBlockCoverage":true},{"functionName":"end","ranges":[{"startOffset":479,"endOffset":729,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1219","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/SourceMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9165,"count":1}],"isBlockCoverage":true},{"functionName":"SourceMap","ranges":[{"startOffset":144,"endOffset":292,"count":4},{"startOffset":255,"endOffset":260,"count":2}],"isBlockCoverage":true},{"functionName":"purifyMappings","ranges":[{"startOffset":296,"endOffset":942,"count":4},{"startOffset":356,"endOffset":941,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":396,"endOffset":907,"count":635}],"isBlockCoverage":true},{"functionName":"getConsumer","ranges":[{"startOffset":946,"endOffset":1187,"count":1},{"startOffset":1013,"endOffset":1038,"count":0},{"startOffset":1073,"endOffset":1090,"count":0},{"startOffset":1122,"endOffset":1144,"count":0}],"isBlockCoverage":true},{"functionName":"addMap","ranges":[{"startOffset":1191,"endOffset":2418,"count":2},{"startOffset":1322,"endOffset":1830,"count":0},{"startOffset":1899,"endOffset":1964,"count":0},{"startOffset":1993,"endOffset":2014,"count":0},{"startOffset":2016,"endOffset":2085,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1436,"endOffset":1705,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2117,"endOffset":2201,"count":558}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2252,"endOffset":2388,"count":1}],"isBlockCoverage":true},{"functionName":"addMapping","ranges":[{"startOffset":2422,"endOffset":2738,"count":558}],"isBlockCoverage":true},{"functionName":"addConsumerMapping","ranges":[{"startOffset":2742,"endOffset":3349,"count":0}],"isBlockCoverage":false},{"functionName":"eachMapping","ranges":[{"startOffset":3353,"endOffset":3417,"count":4}],"isBlockCoverage":true},{"functionName":"generateEmptyMap","ranges":[{"startOffset":3421,"endOffset":3858,"count":0}],"isBlockCoverage":false},{"functionName":"extendSourceMap","ranges":[{"startOffset":3862,"endOffset":5051,"count":1},{"startOffset":3950,"endOffset":4016,"count":0},{"startOffset":4948,"endOffset":5029,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4145,"endOffset":4918,"count":77},{"startOffset":4383,"endOffset":4912,"count":0}],"isBlockCoverage":true},{"functionName":"findClosestGenerated","ranges":[{"startOffset":5055,"endOffset":6339,"count":0}],"isBlockCoverage":false},{"functionName":"findClosest","ranges":[{"startOffset":6343,"endOffset":7625,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionFor","ranges":[{"startOffset":7629,"endOffset":8041,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPositionFor","ranges":[{"startOffset":8045,"endOffset":8399,"count":0}],"isBlockCoverage":false},{"functionName":"sourceContentFor","ranges":[{"startOffset":8403,"endOffset":8470,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":8474,"endOffset":8804,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":8808,"endOffset":9133,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8923,"endOffset":8963,"count":558}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9004,"endOffset":9088,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1220","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/RawPackager.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"shouldAddAsset","ranges":[{"startOffset":151,"endOffset":291,"count":0}],"isBlockCoverage":false},{"functionName":"setup","ranges":[{"startOffset":412,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"addAsset","ranges":[{"startOffset":426,"endOffset":875,"count":0}],"isBlockCoverage":false},{"functionName":"getSize","ranges":[{"startOffset":879,"endOffset":921,"count":0}],"isBlockCoverage":false},{"functionName":"end","ranges":[{"startOffset":925,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1221","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/localRequire.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1040,"count":1}],"isBlockCoverage":true},{"functionName":"localRequire","ranges":[{"startOffset":259,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"localResolve","ranges":[{"startOffset":419,"endOffset":970,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1222","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1223","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10452,"count":1},{"startOffset":336,"endOffset":349,"count":0}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":372,"endOffset":650,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":672,"endOffset":941,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":966,"endOffset":1181,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpath","ranges":[{"startOffset":1204,"endOffset":1369,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageCandidates","ranges":[{"startOffset":1399,"endOffset":1605,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":1625,"endOffset":10450,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1224","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/caller.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":352,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1225","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/node-modules-paths.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1256,"count":1},{"startOffset":51,"endOffset":75,"count":0}],"isBlockCoverage":true},{"functionName":"getNodeModulesDirs","ranges":[{"startOffset":103,"endOffset":724,"count":0}],"isBlockCoverage":false},{"functionName":"nodeModulesPaths","ranges":[{"startOffset":744,"endOffset":1254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1226","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/normalize-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":348,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1227","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/is-core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":130,"count":1}],"isBlockCoverage":true},{"functionName":"isCore","ranges":[{"startOffset":48,"endOffset":128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1228","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1662,"count":1},{"startOffset":94,"endOffset":99,"count":0},{"startOffset":1478,"endOffset":1638,"count":73}],"isBlockCoverage":true},{"functionName":"specifierIncluded","ranges":[{"startOffset":102,"endOffset":751,"count":69},{"startOffset":221,"endOffset":226,"count":0},{"startOffset":280,"endOffset":290,"count":0},{"startOffset":337,"endOffset":725,"count":70},{"startOffset":375,"endOffset":379,"count":0},{"startOffset":423,"endOffset":427,"count":1},{"startOffset":455,"endOffset":545,"count":1},{"startOffset":545,"endOffset":570,"count":69},{"startOffset":570,"endOffset":611,"count":25},{"startOffset":611,"endOffset":719,"count":44},{"startOffset":676,"endOffset":719,"count":0},{"startOffset":725,"endOffset":750,"count":0}],"isBlockCoverage":true},{"functionName":"matchesRange","ranges":[{"startOffset":753,"endOffset":1018,"count":48},{"startOffset":861,"endOffset":878,"count":0},{"startOffset":927,"endOffset":999,"count":69},{"startOffset":976,"endOffset":993,"count":25},{"startOffset":999,"endOffset":1017,"count":23}],"isBlockCoverage":true},{"functionName":"versionIncluded","ranges":[{"startOffset":1020,"endOffset":1403,"count":73},{"startOffset":1108,"endOffset":1134,"count":32},{"startOffset":1134,"endOffset":1195,"count":41},{"startOffset":1197,"endOffset":1360,"count":7},{"startOffset":1255,"endOffset":1332,"count":14},{"startOffset":1306,"endOffset":1322,"count":1},{"startOffset":1332,"endOffset":1360,"count":6},{"startOffset":1360,"endOffset":1402,"count":34}],"isBlockCoverage":true}]},{"scriptId":"1229","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/resolve/lib/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6263,"count":1},{"startOffset":348,"endOffset":365,"count":0}],"isBlockCoverage":true},{"functionName":"isFile","ranges":[{"startOffset":388,"endOffset":623,"count":0}],"isBlockCoverage":false},{"functionName":"isDirectory","ranges":[{"startOffset":645,"endOffset":871,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":900,"endOffset":1102,"count":0}],"isBlockCoverage":false},{"functionName":"maybeRealpathSync","ranges":[{"startOffset":1129,"endOffset":1285,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageCandidates","ranges":[{"startOffset":1315,"endOffset":1521,"count":0}],"isBlockCoverage":false},{"functionName":"resolveSync","ranges":[{"startOffset":1541,"endOffset":6261,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1230","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/installPackage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3174,"count":1}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":454,"endOffset":1664,"count":0}],"isBlockCoverage":false},{"functionName":"installPeerDependencies","ranges":[{"startOffset":1666,"endOffset":2174,"count":0}],"isBlockCoverage":false},{"functionName":"determinePackageManager","ranges":[{"startOffset":2176,"endOffset":2532,"count":0}],"isBlockCoverage":false},{"functionName":"checkForYarnCommand","ranges":[{"startOffset":2554,"endOffset":2757,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":2849,"endOffset":3172,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1231","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/command-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":50,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1232","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/command-exists/lib/command-exists.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4450,"count":1},{"startOffset":244,"endOffset":249,"count":0},{"startOffset":3320,"endOffset":3586,"count":0}],"isBlockCoverage":true},{"functionName":"fileNotExists","ranges":[{"startOffset":322,"endOffset":447,"count":0}],"isBlockCoverage":false},{"functionName":"fileNotExistsSync","ranges":[{"startOffset":474,"endOffset":620,"count":0}],"isBlockCoverage":false},{"functionName":"localExecutable","ranges":[{"startOffset":645,"endOffset":797,"count":0}],"isBlockCoverage":false},{"functionName":"localExecutableSync","ranges":[{"startOffset":826,"endOffset":989,"count":0}],"isBlockCoverage":false},{"functionName":"commandExistsUnix","ranges":[{"startOffset":1015,"endOffset":1528,"count":0}],"isBlockCoverage":false},{"functionName":"commandExistsWindows","ranges":[{"startOffset":1557,"endOffset":2068,"count":0}],"isBlockCoverage":false},{"functionName":"commandExistsUnixSync","ranges":[{"startOffset":2098,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"commandExistsWindowsSync","ranges":[{"startOffset":2536,"endOffset":2980,"count":0}],"isBlockCoverage":false},{"functionName":"cleanInput","ranges":[{"startOffset":2999,"endOffset":3298,"count":0}],"isBlockCoverage":false},{"functionName":"cleanInput","ranges":[{"startOffset":3337,"endOffset":3584,"count":0}],"isBlockCoverage":false},{"functionName":"commandExists","ranges":[{"startOffset":3605,"endOffset":4170,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":4195,"endOffset":4448,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1233","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/pipeSpawn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":954,"count":1}],"isBlockCoverage":true},{"functionName":"pipeSpawn","ranges":[{"startOffset":81,"endOffset":924,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1234","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1}],"isBlockCoverage":true},{"functionName":"spawn","ranges":[{"startOffset":131,"endOffset":589,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":591,"endOffset":1038,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1235","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4414,"count":1},{"startOffset":608,"endOffset":616,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":529,"endOffset":606,"count":1}],"isBlockCoverage":true},{"functionName":"detectShebang","ranges":[{"startOffset":619,"endOffset":924,"count":0}],"isBlockCoverage":false},{"functionName":"parseNonShell","ranges":[{"startOffset":926,"endOffset":2632,"count":0}],"isBlockCoverage":false},{"functionName":"parseShell","ranges":[{"startOffset":2634,"endOffset":3704,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":3706,"endOffset":4388,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1236","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/nice-try/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":251,"endOffset":303,"count":1},{"startOffset":288,"endOffset":300,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1237","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/lib/util/resolveCommand.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1327,"count":1}],"isBlockCoverage":true},{"functionName":"resolveCommandAttempt","ranges":[{"startOffset":117,"endOffset":1174,"count":0}],"isBlockCoverage":false},{"functionName":"resolveCommand","ranges":[{"startOffset":1176,"endOffset":1292,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1238","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/which/which.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3184,"count":1},{"startOffset":218,"endOffset":223,"count":0}],"isBlockCoverage":true},{"functionName":"getNotFoundError","ranges":[{"startOffset":260,"endOffset":371,"count":0}],"isBlockCoverage":false},{"functionName":"getPathInfo","ranges":[{"startOffset":373,"endOffset":1203,"count":0}],"isBlockCoverage":false},{"functionName":"which","ranges":[{"startOffset":1205,"endOffset":2255,"count":0}],"isBlockCoverage":false},{"functionName":"whichSync","ranges":[{"startOffset":2257,"endOffset":3183,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1239","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/isexe/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1192,"count":1},{"startOffset":92,"endOffset":128,"count":0}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":211,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":930,"endOffset":1191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1240","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/isexe/mode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"isexe","ranges":[{"startOffset":66,"endOffset":197,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":199,"endOffset":279,"count":0}],"isBlockCoverage":false},{"functionName":"checkStat","ranges":[{"startOffset":281,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"checkMode","ranges":[{"startOffset":372,"endOffset":908,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1241","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/path-key/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":281,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":31,"endOffset":279,"count":1},{"startOffset":202,"endOffset":276,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":234,"endOffset":265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1242","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/lib/util/escape.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"escapeCommand","ranges":[{"startOffset":121,"endOffset":241,"count":0}],"isBlockCoverage":false},{"functionName":"escapeArgument","ranges":[{"startOffset":243,"endOffset":1088,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1243","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/lib/util/readShebang.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":740,"count":1}],"isBlockCoverage":true},{"functionName":"readShebang","ranges":[{"startOffset":93,"endOffset":708,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1244","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/shebang-command/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":346,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":77,"endOffset":344,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1245","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/shebang-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":40,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1246","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":38803,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":7960,"endOffset":8033,"count":35},{"startOffset":7995,"endOffset":8031,"count":32}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":1420}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8057,"endOffset":8579,"count":364},{"startOffset":8108,"endOffset":8138,"count":0},{"startOffset":8257,"endOffset":8281,"count":0},{"startOffset":8318,"endOffset":8339,"count":0},{"startOffset":8376,"endOffset":8397,"count":0},{"startOffset":8423,"endOffset":8434,"count":0},{"startOffset":8470,"endOffset":8545,"count":182},{"startOffset":8545,"endOffset":8577,"count":0}],"isBlockCoverage":true},{"functionName":"valid","ranges":[{"startOffset":8603,"endOffset":8704,"count":363},{"startOffset":8684,"endOffset":8695,"count":181},{"startOffset":8696,"endOffset":8702,"count":182}],"isBlockCoverage":true},{"functionName":"clean","ranges":[{"startOffset":8728,"endOffset":8858,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":8885,"endOffset":10577,"count":707},{"startOffset":8937,"endOffset":8967,"count":303},{"startOffset":8969,"endOffset":9051,"count":409},{"startOffset":9085,"endOffset":9205,"count":94},{"startOffset":9156,"endOffset":9201,"count":0},{"startOffset":9205,"endOffset":9304,"count":613},{"startOffset":9244,"endOffset":9304,"count":0},{"startOffset":9304,"endOffset":9341,"count":613},{"startOffset":9341,"endOffset":9426,"count":0},{"startOffset":9426,"endOffset":9461,"count":613},{"startOffset":9461,"endOffset":9506,"count":0},{"startOffset":9506,"endOffset":9646,"count":613},{"startOffset":9646,"endOffset":9657,"count":6},{"startOffset":9658,"endOffset":9668,"count":607},{"startOffset":9681,"endOffset":9741,"count":0},{"startOffset":9741,"endOffset":9914,"count":613},{"startOffset":9916,"endOffset":9970,"count":0},{"startOffset":9970,"endOffset":10025,"count":613},{"startOffset":10027,"endOffset":10081,"count":0},{"startOffset":10081,"endOffset":10136,"count":613},{"startOffset":10138,"endOffset":10192,"count":0},{"startOffset":10192,"endOffset":10249,"count":613},{"startOffset":10249,"endOffset":10279,"count":592},{"startOffset":10279,"endOffset":10515,"count":21},{"startOffset":10515,"endOffset":10537,"count":613},{"startOffset":10537,"endOffset":10554,"count":0},{"startOffset":10555,"endOffset":10559,"count":613}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10329,"endOffset":10510,"count":21},{"startOffset":10488,"endOffset":10509,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.format","ranges":[{"startOffset":10605,"endOffset":10796,"count":613},{"startOffset":10715,"endOffset":10772,"count":21}],"isBlockCoverage":true},{"functionName":"SemVer.toString","ranges":[{"startOffset":10826,"endOffset":10863,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":10892,"endOffset":11117,"count":228},{"startOffset":11006,"endOffset":11055,"count":0},{"startOffset":11090,"endOffset":11115,"count":3}],"isBlockCoverage":true},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11150,"endOffset":11420,"count":228},{"startOffset":11203,"endOffset":11252,"count":0},{"startOffset":11307,"endOffset":11362,"count":30},{"startOffset":11363,"endOffset":11418,"count":3}],"isBlockCoverage":true},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11452,"endOffset":12239,"count":3},{"startOffset":11505,"endOffset":11554,"count":0},{"startOffset":11630,"endOffset":11657,"count":0},{"startOffset":11659,"endOffset":11678,"count":0},{"startOffset":11740,"endOffset":11758,"count":0},{"startOffset":11839,"endOffset":12225,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.inc","ranges":[{"startOffset":12409,"endOffset":15470,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":15490,"endOffset":15747,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":15769,"endOffset":16297,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":16373,"endOffset":16618,"count":261},{"startOffset":16535,"endOffset":16538,"count":36},{"startOffset":16543,"endOffset":16616,"count":225},{"startOffset":16561,"endOffset":16565,"count":0},{"startOffset":16588,"endOffset":16591,"count":0},{"startOffset":16604,"endOffset":16608,"count":179},{"startOffset":16613,"endOffset":16616,"count":46}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":16670,"endOffset":16743,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":16767,"endOffset":16832,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":16856,"endOffset":16921,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":16945,"endOffset":17010,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17038,"endOffset":17132,"count":228}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":17170,"endOffset":17231,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":17261,"endOffset":17326,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":17348,"endOffset":17461,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":17485,"endOffset":17600,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":17618,"endOffset":17681,"count":181}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":17699,"endOffset":17762,"count":23}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":17780,"endOffset":17845,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":17865,"endOffset":17931,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":17951,"endOffset":18016,"count":24}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":18036,"endOffset":18101,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":18121,"endOffset":18835,"count":47},{"startOffset":18174,"endOffset":18316,"count":0},{"startOffset":18322,"endOffset":18464,"count":0},{"startOffset":18470,"endOffset":18478,"count":0},{"startOffset":18483,"endOffset":18492,"count":0},{"startOffset":18497,"endOffset":18536,"count":0},{"startOffset":18542,"endOffset":18582,"count":0},{"startOffset":18588,"endOffset":18626,"count":0},{"startOffset":18632,"endOffset":18672,"count":24},{"startOffset":18678,"endOffset":18716,"count":23},{"startOffset":18722,"endOffset":18762,"count":0},{"startOffset":18768,"endOffset":18829,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":18869,"endOffset":19521,"count":47},{"startOffset":18954,"endOffset":19036,"count":0},{"startOffset":19072,"endOffset":19180,"count":0},{"startOffset":19219,"endOffset":19265,"count":0},{"startOffset":19407,"endOffset":19432,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.parse","ranges":[{"startOffset":19565,"endOffset":19998,"count":47},{"startOffset":19612,"endOffset":19633,"count":5},{"startOffset":19634,"endOffset":19650,"count":42},{"startOffset":19686,"endOffset":19746,"count":0},{"startOffset":19800,"endOffset":19828,"count":0},{"startOffset":19903,"endOffset":19930,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.toString","ranges":[{"startOffset":20032,"endOffset":20067,"count":47}],"isBlockCoverage":true},{"functionName":"Comparator.test","ranges":[{"startOffset":20097,"endOffset":20380,"count":47},{"startOffset":20202,"endOffset":20223,"count":0},{"startOffset":20260,"endOffset":20313,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.intersects","ranges":[{"startOffset":20416,"endOffset":22036,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":22060,"endOffset":23117,"count":22},{"startOffset":22109,"endOffset":22139,"count":1},{"startOffset":22255,"endOffset":22451,"count":0},{"startOffset":22488,"endOffset":22536,"count":0},{"startOffset":22570,"endOffset":22612,"count":0},{"startOffset":23035,"endOffset":23098,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22829,"endOffset":22892,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22907,"endOffset":23008,"count":24}],"isBlockCoverage":true},{"functionName":"Range.format","ranges":[{"startOffset":23144,"endOffset":23283,"count":22}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23186,"endOffset":23242,"count":24}],"isBlockCoverage":true},{"functionName":"Range.toString","ranges":[{"startOffset":23312,"endOffset":23347,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":23378,"endOffset":24600,"count":24},{"startOffset":23512,"endOffset":23534,"count":3},{"startOffset":23535,"endOffset":23552,"count":21},{"startOffset":24144,"endOffset":24165,"count":3},{"startOffset":24166,"endOffset":24182,"count":21},{"startOffset":24341,"endOffset":24493,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24216,"endOffset":24284,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24431,"endOffset":24488,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24510,"endOffset":24577,"count":47}],"isBlockCoverage":true},{"functionName":"Range.intersects","ranges":[{"startOffset":24631,"endOffset":25086,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":25176,"endOffset":25376,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":25522,"endOffset":25857,"count":24}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":25859,"endOffset":25935,"count":210}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":26208,"endOffset":26360,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26287,"endOffset":26347,"count":47}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":26362,"endOffset":27146,"count":47},{"startOffset":26426,"endOffset":26442,"count":5},{"startOffset":26443,"endOffset":26454,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":26480,"endOffset":27143,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":27345,"endOffset":27497,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27424,"endOffset":27484,"count":24}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":27499,"endOffset":28980,"count":24},{"startOffset":27595,"endOffset":27611,"count":3},{"startOffset":27612,"endOffset":27623,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27649,"endOffset":28977,"count":23},{"startOffset":27747,"endOffset":27769,"count":0},{"startOffset":27787,"endOffset":27846,"count":0},{"startOffset":27864,"endOffset":28049,"count":0},{"startOffset":28063,"endOffset":28515,"count":21},{"startOffset":28121,"endOffset":28399,"count":0},{"startOffset":28515,"endOffset":28926,"count":2},{"startOffset":28565,"endOffset":28821,"count":0}],"isBlockCoverage":true},{"functionName":"replaceXRanges","ranges":[{"startOffset":28982,"endOffset":29170,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29096,"endOffset":29157,"count":47}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":29172,"endOffset":30696,"count":47},{"startOffset":29258,"endOffset":29275,"count":5},{"startOffset":29276,"endOffset":29288,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29314,"endOffset":30693,"count":47},{"startOffset":29512,"endOffset":29519,"count":0},{"startOffset":29521,"endOffset":29544,"count":0},{"startOffset":29558,"endOffset":29733,"count":0},{"startOffset":29757,"endOffset":30478,"count":0},{"startOffset":30492,"endOffset":30551,"count":0},{"startOffset":30565,"endOffset":30640,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":30821,"endOffset":31013,"count":24}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":31227,"endOffset":31797,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":31884,"endOffset":32180,"count":22},{"startOffset":31921,"endOffset":31943,"count":0},{"startOffset":32079,"endOffset":32163,"count":24},{"startOffset":32134,"endOffset":32159,"count":22},{"startOffset":32163,"endOffset":32179,"count":0}],"isBlockCoverage":true},{"functionName":"testSet","ranges":[{"startOffset":32182,"endOffset":33203,"count":24},{"startOffset":32264,"endOffset":32327,"count":47},{"startOffset":32297,"endOffset":32323,"count":2},{"startOffset":32327,"endOffset":32361,"count":22},{"startOffset":32361,"endOffset":32390,"count":0},{"startOffset":32392,"endOffset":33186,"count":0},{"startOffset":33186,"endOffset":33202,"count":22}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":33235,"endOffset":33396,"count":22},{"startOffset":33332,"endOffset":33365,"count":0}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":33436,"endOffset":33882,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":33922,"endOffset":34367,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":34401,"endOffset":35644,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":35678,"endOffset":35917,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":36013,"endOffset":36102,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":36202,"endOffset":36291,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":36319,"endOffset":38110,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":38144,"endOffset":38298,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":38332,"endOffset":38460,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":38486,"endOffset":38802,"count":1},{"startOffset":38547,"endOffset":38571,"count":0},{"startOffset":38608,"endOffset":38629,"count":0},{"startOffset":38693,"endOffset":38714,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1247","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/node_modules/cross-spawn/lib/enoent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1480,"count":1}],"isBlockCoverage":true},{"functionName":"notFoundError","ranges":[{"startOffset":60,"endOffset":358,"count":0}],"isBlockCoverage":false},{"functionName":"hookChildProcess","ranges":[{"startOffset":360,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENT","ranges":[{"startOffset":1025,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"verifyENOENTSync","ranges":[{"startOffset":1197,"endOffset":1375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1248","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/PromiseQueue.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1906,"count":1}],"isBlockCoverage":true},{"functionName":"PromiseQueue","ranges":[{"startOffset":23,"endOffset":383,"count":2},{"startOffset":137,"endOffset":148,"count":1}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":387,"endOffset":651,"count":1},{"startOffset":441,"endOffset":462,"count":0},{"startOffset":488,"endOffset":527,"count":0},{"startOffset":529,"endOffset":567,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":655,"endOffset":931,"count":1},{"startOffset":688,"endOffset":725,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":762,"endOffset":848,"count":1}],"isBlockCoverage":true},{"functionName":"_runJob","ranges":[{"startOffset":935,"endOffset":1406,"count":1},{"startOffset":1154,"endOffset":1402,"count":0}],"isBlockCoverage":true},{"functionName":"_next","ranges":[{"startOffset":1410,"endOffset":1744,"count":2},{"startOffset":1446,"endOffset":1467,"count":0},{"startOffset":1500,"endOffset":1740,"count":1}],"isBlockCoverage":true},{"functionName":"_reset","ranges":[{"startOffset":1748,"endOffset":1871,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1249","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":799,"count":1}],"isBlockCoverage":true},{"functionName":"loadEnv","ranges":[{"startOffset":123,"endOffset":771,"count":1},{"startOffset":198,"endOffset":214,"count":0},{"startOffset":462,"endOffset":477,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":553,"endOffset":763,"count":3},{"startOffset":662,"endOffset":757,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1250","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/dotenv/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2082,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":219,"endOffset":1059,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":1370,"endOffset":1991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1251","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/dotenv-expand/lib/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1328,"count":1}],"isBlockCoverage":true},{"functionName":"dotenvExpand","ranges":[{"startOffset":33,"endOffset":1296,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1252","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/bundleReport.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2971,"count":1}],"isBlockCoverage":true},{"functionName":"bundleReport","ranges":[{"startOffset":339,"endOffset":2341,"count":1},{"startOffset":589,"endOffset":2271,"count":2},{"startOffset":970,"endOffset":995,"count":0},{"startOffset":997,"endOffset":2267,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":500,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1060,"endOffset":1087,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1103,"endOffset":1142,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1172,"endOffset":1444,"count":0}],"isBlockCoverage":true},{"functionName":"iterateBundles","ranges":[{"startOffset":2375,"endOffset":2540,"count":2},{"startOffset":2499,"endOffset":2538,"count":1}],"isBlockCoverage":true},{"functionName":"prettifySize","ranges":[{"startOffset":2542,"endOffset":2734,"count":2},{"startOffset":2624,"endOffset":2696,"count":0}],"isBlockCoverage":true},{"functionName":"formatFilename","ranges":[{"startOffset":2736,"endOffset":2970,"count":2},{"startOffset":2920,"endOffset":2924,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1253","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/prettifyTime.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":106,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":104,"count":3},{"startOffset":69,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1254","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/filesize/lib/filesize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4449,"count":1},{"startOffset":4429,"endOffset":4437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":153,"endOffset":4397,"count":1},{"startOffset":4248,"endOffset":4395,"count":0}],"isBlockCoverage":true},{"functionName":"filesize","ranges":[{"startOffset":925,"endOffset":3992,"count":2},{"startOffset":990,"endOffset":1019,"count":0},{"startOffset":1020,"endOffset":1034,"count":0},{"startOffset":1427,"endOffset":1473,"count":0},{"startOffset":1614,"endOffset":1632,"count":0},{"startOffset":1640,"endOffset":1643,"count":0},{"startOffset":1695,"endOffset":1723,"count":0},{"startOffset":1770,"endOffset":1789,"count":0},{"startOffset":1797,"endOffset":1801,"count":0},{"startOffset":1927,"endOffset":1936,"count":0},{"startOffset":2071,"endOffset":2093,"count":0},{"startOffset":2137,"endOffset":2158,"count":0},{"startOffset":2221,"endOffset":2227,"count":0},{"startOffset":2302,"endOffset":2322,"count":0},{"startOffset":2369,"endOffset":2380,"count":0},{"startOffset":2450,"endOffset":2467,"count":0},{"startOffset":2545,"endOffset":2560,"count":0},{"startOffset":2637,"endOffset":2733,"count":0},{"startOffset":2790,"endOffset":2809,"count":0},{"startOffset":2826,"endOffset":2923,"count":0},{"startOffset":2973,"endOffset":2976,"count":0},{"startOffset":3007,"endOffset":3017,"count":0},{"startOffset":3018,"endOffset":3038,"count":0},{"startOffset":3063,"endOffset":3071,"count":0},{"startOffset":3101,"endOffset":3314,"count":0},{"startOffset":3356,"endOffset":3388,"count":0},{"startOffset":3542,"endOffset":3565,"count":0},{"startOffset":3596,"endOffset":3614,"count":0},{"startOffset":3643,"endOffset":3718,"count":0},{"startOffset":3732,"endOffset":3862,"count":0},{"startOffset":3892,"endOffset":3958,"count":0}],"isBlockCoverage":true},{"functionName":"filesize.partial","ranges":[{"startOffset":4065,"endOffset":4145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4313,"endOffset":4350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1255","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/getRootDir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":815,"count":1}],"isBlockCoverage":true},{"functionName":"getRootDir","ranges":[{"startOffset":31,"endOffset":784,"count":1},{"startOffset":183,"endOffset":737,"count":0},{"startOffset":766,"endOffset":781,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1256","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12840,"count":1}],"isBlockCoverage":true},{"functionName":"applyPlugins","ranges":[{"startOffset":714,"endOffset":897,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":793,"endOffset":886,"count":0}],"isBlockCoverage":false},{"functionName":"findReplacementFunc","ranges":[{"startOffset":899,"endOffset":1271,"count":2},{"startOffset":1069,"endOffset":1153,"count":0},{"startOffset":1187,"endOffset":1254,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":984,"endOffset":1031,"count":0}],"isBlockCoverage":false},{"functionName":"compileBody","ranges":[{"startOffset":1578,"endOffset":5561,"count":2},{"startOffset":4389,"endOffset":4505,"count":0},{"startOffset":5222,"endOffset":5237,"count":0},{"startOffset":5393,"endOffset":5509,"count":0}],"isBlockCoverage":true},{"functionName":"lex","ranges":[{"startOffset":1848,"endOffset":2443,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1935,"endOffset":1998,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2052,"endOffset":2111,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2126,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2456,"endOffset":3427,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2510,"endOffset":2761,"count":12},{"startOffset":2562,"endOffset":2595,"count":0},{"startOffset":2597,"endOffset":2731,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2942,"endOffset":3007,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3063,"endOffset":3124,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3139,"endOffset":3198,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":3442,"endOffset":3713,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3725,"endOffset":4113,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4300,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4432,"endOffset":4499,"count":0}],"isBlockCoverage":false},{"functionName":"handleTemplateCache","ranges":[{"startOffset":6027,"endOffset":6386,"count":1},{"startOffset":6122,"endOffset":6143,"count":0},{"startOffset":6145,"endOffset":6181,"count":0},{"startOffset":6335,"endOffset":6362,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compile","ranges":[{"startOffset":6902,"endOffset":7751,"count":1},{"startOffset":6951,"endOffset":6956,"count":0},{"startOffset":7604,"endOffset":7659,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileClientWithDependenciesTracked","ranges":[{"startOffset":8386,"endOffset":9348,"count":1},{"startOffset":8435,"endOffset":8440,"count":0},{"startOffset":8881,"endOffset":8894,"count":0},{"startOffset":9096,"endOffset":9287,"count":0}],"isBlockCoverage":true},{"functionName":"exports.compileClient","ranges":[{"startOffset":9868,"endOffset":9968,"count":1}],"isBlockCoverage":true},{"functionName":"exports.compileFile","ranges":[{"startOffset":10381,"endOffset":10501,"count":1}],"isBlockCoverage":true},{"functionName":"exports.render","ranges":[{"startOffset":10833,"endOffset":11380,"count":0}],"isBlockCoverage":false},{"functionName":"exports.renderFile","ranges":[{"startOffset":11600,"endOffset":12026,"count":0}],"isBlockCoverage":false},{"functionName":"exports.compileFileClient","ranges":[{"startOffset":12221,"endOffset":12580,"count":1},{"startOffset":12297,"endOffset":12302,"count":0},{"startOffset":12353,"endOffset":12374,"count":0},{"startOffset":12376,"endOffset":12412,"count":0},{"startOffset":12539,"endOffset":12564,"count":0}],"isBlockCoverage":true},{"functionName":"exports.__express","ranges":[{"startOffset":12632,"endOffset":12838,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1257","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-lexer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44469,"count":1}],"isBlockCoverage":true},{"functionName":"lex","ranges":[{"startOffset":230,"endOffset":355,"count":2}],"isBlockCoverage":true},{"functionName":"Lexer","ranges":[{"startOffset":480,"endOffset":1441,"count":2},{"startOffset":531,"endOffset":536,"count":0},{"startOffset":569,"endOffset":675,"count":0},{"startOffset":711,"endOffset":820,"count":0},{"startOffset":1212,"endOffset":1217,"count":0}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":1524,"endOffset":1726,"count":0}],"isBlockCoverage":false},{"functionName":"assert","ranges":[{"startOffset":1739,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"isExpression","ranges":[{"startOffset":1842,"endOffset":1919,"count":2}],"isBlockCoverage":true},{"functionName":"assertExpression","ranges":[{"startOffset":1942,"endOffset":2443,"count":2},{"startOffset":2111,"endOffset":2439,"count":0}],"isBlockCoverage":true},{"functionName":"assertNestingCorrect","ranges":[{"startOffset":2470,"endOffset":2794,"count":0}],"isBlockCoverage":false},{"functionName":"tok","ranges":[{"startOffset":2969,"endOffset":3237,"count":14},{"startOffset":3202,"endOffset":3216,"count":8}],"isBlockCoverage":true},{"functionName":"tokEnd","ranges":[{"startOffset":3372,"endOffset":3485,"count":12}],"isBlockCoverage":true},{"functionName":"incrementLine","ranges":[{"startOffset":3625,"endOffset":3715,"count":2}],"isBlockCoverage":true},{"functionName":"incrementColumn","ranges":[{"startOffset":3833,"endOffset":3887,"count":12}],"isBlockCoverage":true},{"functionName":"consume","ranges":[{"startOffset":4001,"endOffset":4061,"count":6}],"isBlockCoverage":true},{"functionName":"scan","ranges":[{"startOffset":4230,"endOffset":4556,"count":68},{"startOffset":4319,"endOffset":4552,"count":2},{"startOffset":4427,"endOffset":4430,"count":0}],"isBlockCoverage":true},{"functionName":"scanEndOfLine","ranges":[{"startOffset":4575,"endOffset":5434,"count":44},{"startOffset":4664,"endOffset":5430,"count":0}],"isBlockCoverage":true},{"functionName":"bracketExpression","ranges":[{"startOffset":5708,"endOffset":7019,"count":0}],"isBlockCoverage":false},{"functionName":"scanIndentation","ranges":[{"startOffset":7041,"endOffset":7542,"count":4},{"startOffset":7126,"endOffset":7208,"count":0},{"startOffset":7329,"endOffset":7351,"count":2},{"startOffset":7353,"endOffset":7426,"count":2},{"startOffset":7468,"endOffset":7489,"count":2},{"startOffset":7491,"endOffset":7510,"count":0}],"isBlockCoverage":true},{"functionName":"eos","ranges":[{"startOffset":7585,"endOffset":8005,"count":8},{"startOffset":7625,"endOffset":7632,"count":6},{"startOffset":7632,"endOffset":7660,"count":2},{"startOffset":7660,"endOffset":7797,"count":0},{"startOffset":7797,"endOffset":7844,"count":2},{"startOffset":7844,"endOffset":7909,"count":0},{"startOffset":7909,"endOffset":8004,"count":2}],"isBlockCoverage":true},{"functionName":"blank","ranges":[{"startOffset":8047,"endOffset":8234,"count":8},{"startOffset":8131,"endOffset":8230,"count":0}],"isBlockCoverage":true},{"functionName":"comment","ranges":[{"startOffset":8275,"endOffset":8717,"count":0}],"isBlockCoverage":false},{"functionName":"interpolation","ranges":[{"startOffset":8773,"endOffset":9301,"count":6},{"startOffset":8819,"endOffset":9297,"count":0}],"isBlockCoverage":true},{"functionName":"tag","ranges":[{"startOffset":9334,"endOffset":9680,"count":6},{"startOffset":9427,"endOffset":9676,"count":2}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":9719,"endOffset":10132,"count":4},{"startOffset":9811,"endOffset":9828,"count":0},{"startOffset":9843,"endOffset":10128,"count":0}],"isBlockCoverage":true},{"functionName":"doctype","ranges":[{"startOffset":10173,"endOffset":10341,"count":6},{"startOffset":10268,"endOffset":10337,"count":0}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":10372,"endOffset":10766,"count":4},{"startOffset":10443,"endOffset":10566,"count":0},{"startOffset":10598,"endOffset":10762,"count":0}],"isBlockCoverage":true},{"functionName":"className","ranges":[{"startOffset":10807,"endOffset":11525,"count":4},{"startOffset":10907,"endOffset":11030,"count":0},{"startOffset":11076,"endOffset":11210,"count":0},{"startOffset":11243,"endOffset":11521,"count":0}],"isBlockCoverage":true},{"functionName":"endInterpolation","ranges":[{"startOffset":11571,"endOffset":11732,"count":6},{"startOffset":11610,"endOffset":11634,"count":0},{"startOffset":11636,"endOffset":11728,"count":0}],"isBlockCoverage":true},{"functionName":"addText","ranges":[{"startOffset":11745,"endOffset":16412,"count":4},{"startOffset":11830,"endOffset":11837,"count":0},{"startOffset":11932,"endOffset":11952,"count":0},{"startOffset":12030,"endOffset":12034,"count":0},{"startOffset":12111,"endOffset":12115,"count":0},{"startOffset":12280,"endOffset":12307,"count":2},{"startOffset":12316,"endOffset":12326,"count":2},{"startOffset":12535,"endOffset":12571,"count":0},{"startOffset":12572,"endOffset":12610,"count":0},{"startOffset":12611,"endOffset":12656,"count":0},{"startOffset":12663,"endOffset":12868,"count":0},{"startOffset":12910,"endOffset":12944,"count":0},{"startOffset":12945,"endOffset":12983,"count":0},{"startOffset":12984,"endOffset":13027,"count":0},{"startOffset":13034,"endOffset":14084,"count":0},{"startOffset":14124,"endOffset":14158,"count":0},{"startOffset":14159,"endOffset":14195,"count":0},{"startOffset":14196,"endOffset":14237,"count":0},{"startOffset":14244,"endOffset":14489,"count":0},{"startOffset":14532,"endOffset":16256,"count":2},{"startOffset":14568,"endOffset":14799,"count":0},{"startOffset":15274,"endOffset":15771,"count":0},{"startOffset":16134,"endOffset":16236,"count":0},{"startOffset":16256,"endOffset":16411,"count":2}],"isBlockCoverage":true},{"functionName":"text","ranges":[{"startOffset":16423,"endOffset":16651,"count":2},{"startOffset":16497,"endOffset":16531,"count":0},{"startOffset":16532,"endOffset":16569,"count":0}],"isBlockCoverage":true},{"functionName":"textHtml","ranges":[{"startOffset":16666,"endOffset":16816,"count":0}],"isBlockCoverage":false},{"functionName":"dot","ranges":[{"startOffset":16849,"endOffset":17043,"count":4},{"startOffset":16925,"endOffset":17039,"count":0}],"isBlockCoverage":true},{"functionName":"extends","ranges":[{"startOffset":17084,"endOffset":17463,"count":6},{"startOffset":17169,"endOffset":17357,"count":0},{"startOffset":17392,"endOffset":17459,"count":0}],"isBlockCoverage":true},{"functionName":"prepend","ranges":[{"startOffset":17510,"endOffset":18338,"count":6},{"startOffset":17613,"endOffset":18334,"count":0}],"isBlockCoverage":true},{"functionName":"append","ranges":[{"startOffset":18383,"endOffset":19209,"count":6},{"startOffset":18485,"endOffset":19205,"count":0}],"isBlockCoverage":true},{"functionName":"block","ranges":[{"startOffset":19246,"endOffset":20060,"count":6},{"startOffset":19335,"endOffset":20056,"count":0}],"isBlockCoverage":true},{"functionName":"mixinBlock","ranges":[{"startOffset":20108,"endOffset":20267,"count":6},{"startOffset":20195,"endOffset":20263,"count":0}],"isBlockCoverage":true},{"functionName":"yield","ranges":[{"startOffset":20304,"endOffset":20455,"count":6},{"startOffset":20383,"endOffset":20451,"count":0}],"isBlockCoverage":true},{"functionName":"include","ranges":[{"startOffset":20496,"endOffset":21092,"count":6},{"startOffset":20582,"endOffset":20987,"count":0},{"startOffset":21021,"endOffset":21088,"count":0}],"isBlockCoverage":true},{"functionName":"path","ranges":[{"startOffset":21126,"endOffset":21310,"count":0}],"isBlockCoverage":false},{"functionName":"case","ranges":[{"startOffset":21345,"endOffset":21740,"count":6},{"startOffset":21432,"endOffset":21627,"count":0},{"startOffset":21658,"endOffset":21736,"count":0}],"isBlockCoverage":true},{"functionName":"when","ranges":[{"startOffset":21775,"endOffset":22513,"count":6},{"startOffset":21863,"endOffset":22400,"count":0},{"startOffset":22431,"endOffset":22509,"count":0}],"isBlockCoverage":true},{"functionName":"default","ranges":[{"startOffset":22554,"endOffset":22860,"count":6},{"startOffset":22637,"endOffset":22705,"count":0},{"startOffset":22739,"endOffset":22856,"count":0}],"isBlockCoverage":true},{"functionName":"call","ranges":[{"startOffset":22901,"endOffset":24287,"count":6},{"startOffset":23014,"endOffset":24283,"count":0}],"isBlockCoverage":true},{"functionName":"mixin","ranges":[{"startOffset":24324,"endOffset":24676,"count":6},{"startOffset":24430,"endOffset":24672,"count":0}],"isBlockCoverage":true},{"functionName":"conditional","ranges":[{"startOffset":24725,"endOffset":25713,"count":6},{"startOffset":24833,"endOffset":25709,"count":0}],"isBlockCoverage":true},{"functionName":"while","ranges":[{"startOffset":25750,"endOffset":26202,"count":6},{"startOffset":25844,"endOffset":26086,"count":0},{"startOffset":26118,"endOffset":26198,"count":0}],"isBlockCoverage":true},{"functionName":"each","ranges":[{"startOffset":26237,"endOffset":27499,"count":6},{"startOffset":26414,"endOffset":26795,"count":0},{"startOffset":26840,"endOffset":26848,"count":0},{"startOffset":26896,"endOffset":27161,"count":0},{"startOffset":27310,"endOffset":27495,"count":0}],"isBlockCoverage":true},{"functionName":"eachOf","ranges":[{"startOffset":27538,"endOffset":28790,"count":6},{"startOffset":27642,"endOffset":28458,"count":0},{"startOffset":28607,"endOffset":28786,"count":0}],"isBlockCoverage":true},{"functionName":"code","ranges":[{"startOffset":28825,"endOffset":31110,"count":4},{"startOffset":28920,"endOffset":31106,"count":0}],"isBlockCoverage":true},{"functionName":"blockCode","ranges":[{"startOffset":31155,"endOffset":31395,"count":4},{"startOffset":31236,"endOffset":31391,"count":0}],"isBlockCoverage":true},{"functionName":"attribute","ranges":[{"startOffset":31444,"endOffset":33285,"count":0}],"isBlockCoverage":false},{"functionName":"attributeValue","ranges":[{"startOffset":33340,"endOffset":36647,"count":0}],"isBlockCoverage":false},{"functionName":"attrs","ranges":[{"startOffset":36689,"endOffset":37243,"count":4},{"startOffset":36753,"endOffset":37239,"count":0}],"isBlockCoverage":true},{"functionName":"attributesBlock","ranges":[{"startOffset":37300,"endOffset":37730,"count":4},{"startOffset":37356,"endOffset":37726,"count":0}],"isBlockCoverage":true},{"functionName":"indent","ranges":[{"startOffset":37789,"endOffset":39595,"count":4},{"startOffset":37877,"endOffset":39591,"count":2},{"startOffset":38040,"endOffset":38186,"count":0},{"startOffset":38241,"endOffset":38341,"count":0},{"startOffset":38401,"endOffset":39116,"count":0},{"startOffset":39134,"endOffset":39167,"count":0},{"startOffset":39169,"endOffset":39361,"count":0}],"isBlockCoverage":true},{"functionName":"pipelessText","ranges":[{"startOffset":39614,"endOffset":41657,"count":0}],"isBlockCoverage":false},{"functionName":"slash","ranges":[{"startOffset":41694,"endOffset":41833,"count":0}],"isBlockCoverage":false},{"functionName":"colon","ranges":[{"startOffset":41867,"endOffset":42003,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":42014,"endOffset":42136,"count":0}],"isBlockCoverage":false},{"functionName":"callLexerFunction","ranges":[{"startOffset":42160,"endOffset":42559,"count":184},{"startOffset":42243,"endOffset":42281,"count":2},{"startOffset":42374,"endOffset":42514,"count":0}],"isBlockCoverage":true},{"functionName":"advance","ranges":[{"startOffset":42637,"endOffset":44219,"count":8},{"startOffset":42740,"endOffset":42791,"count":6},{"startOffset":42792,"endOffset":42832,"count":6},{"startOffset":42833,"endOffset":42875,"count":6},{"startOffset":42876,"endOffset":42924,"count":6},{"startOffset":42925,"endOffset":42964,"count":6},{"startOffset":42965,"endOffset":43004,"count":6},{"startOffset":43005,"endOffset":43047,"count":6},{"startOffset":43048,"endOffset":43090,"count":6},{"startOffset":43091,"endOffset":43132,"count":6},{"startOffset":43133,"endOffset":43175,"count":6},{"startOffset":43176,"endOffset":43216,"count":6},{"startOffset":43217,"endOffset":43262,"count":6},{"startOffset":43263,"endOffset":43305,"count":6},{"startOffset":43306,"endOffset":43346,"count":6},{"startOffset":43347,"endOffset":43386,"count":6},{"startOffset":43387,"endOffset":43433,"count":6},{"startOffset":43434,"endOffset":43475,"count":6},{"startOffset":43476,"endOffset":43515,"count":6},{"startOffset":43516,"endOffset":43556,"count":6},{"startOffset":43557,"endOffset":43595,"count":6},{"startOffset":43596,"endOffset":43637,"count":4},{"startOffset":43638,"endOffset":43682,"count":4},{"startOffset":43683,"endOffset":43722,"count":4},{"startOffset":43723,"endOffset":43760,"count":4},{"startOffset":43761,"endOffset":43799,"count":4},{"startOffset":43800,"endOffset":43844,"count":4},{"startOffset":43845,"endOffset":43885,"count":4},{"startOffset":43886,"endOffset":43936,"count":4},{"startOffset":43937,"endOffset":43978,"count":4},{"startOffset":43979,"endOffset":44018,"count":2},{"startOffset":44019,"endOffset":44062,"count":0},{"startOffset":44063,"endOffset":44105,"count":0},{"startOffset":44106,"endOffset":44146,"count":0},{"startOffset":44147,"endOffset":44187,"count":0},{"startOffset":44188,"endOffset":44208,"count":0}],"isBlockCoverage":true},{"functionName":"getTokens","ranges":[{"startOffset":44351,"endOffset":44464,"count":2},{"startOffset":44388,"endOffset":44436,"count":8}],"isBlockCoverage":true}]},{"scriptId":"1258","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-expression/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":840,"count":1}],"isBlockCoverage":true},{"functionName":"isExpression","ranges":[{"startOffset":205,"endOffset":839,"count":2},{"startOffset":385,"endOffset":420,"count":0},{"startOffset":699,"endOffset":733,"count":0},{"startOffset":738,"endOffset":821,"count":0}],"isBlockCoverage":true},{"functionName":"parser.skipLineComment","ranges":[{"startOffset":485,"endOffset":591,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1259","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/acorn/dist/acorn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197974,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":250,"count":1},{"startOffset":112,"endOffset":247,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":258,"endOffset":197969,"count":1},{"startOffset":19289,"endOffset":19370,"count":0}],"isBlockCoverage":true},{"functionName":"isInAstralSet","ranges":[{"startOffset":11372,"endOffset":11610,"count":0}],"isBlockCoverage":false},{"functionName":"isIdentifierStart","ranges":[{"startOffset":11678,"endOffset":12088,"count":2},{"startOffset":11740,"endOffset":11762,"count":0},{"startOffset":11782,"endOffset":11797,"count":0},{"startOffset":11817,"endOffset":11839,"count":0},{"startOffset":11875,"endOffset":12087,"count":0}],"isBlockCoverage":true},{"functionName":"isIdentifierChar","ranges":[{"startOffset":12155,"endOffset":12676,"count":8},{"startOffset":12216,"endOffset":12238,"count":0},{"startOffset":12258,"endOffset":12273,"count":0},{"startOffset":12293,"endOffset":12309,"count":0},{"startOffset":12329,"endOffset":12344,"count":0},{"startOffset":12364,"endOffset":12386,"count":0},{"startOffset":12422,"endOffset":12672,"count":0}],"isBlockCoverage":true},{"functionName":"TokenType","ranges":[{"startOffset":13693,"endOffset":14114,"count":76},{"startOffset":13754,"endOffset":13764,"count":8},{"startOffset":14071,"endOffset":14078,"count":61}],"isBlockCoverage":true},{"functionName":"binop","ranges":[{"startOffset":14119,"endOffset":14215,"count":12}],"isBlockCoverage":true},{"functionName":"kw","ranges":[{"startOffset":14404,"endOffset":14568,"count":35},{"startOffset":14463,"endOffset":14476,"count":12}],"isBlockCoverage":true},{"functionName":"isNewLine","ranges":[{"startOffset":18748,"endOffset":18893,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":19178,"endOffset":19257,"count":34}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19293,"endOffset":19369,"count":0}],"isBlockCoverage":true},{"functionName":"wordsRegexp","ranges":[{"startOffset":19375,"endOffset":19472,"count":17}],"isBlockCoverage":true},{"functionName":"Position","ranges":[{"startOffset":19593,"endOffset":19672,"count":0}],"isBlockCoverage":false},{"functionName":"offset","ranges":[{"startOffset":19705,"endOffset":19782,"count":0}],"isBlockCoverage":false},{"functionName":"SourceLocation","ranges":[{"startOffset":19808,"endOffset":19959,"count":0}],"isBlockCoverage":false},{"functionName":"getLineInfo","ranges":[{"startOffset":20234,"endOffset":20568,"count":0}],"isBlockCoverage":false},{"functionName":"getOptions","ranges":[{"startOffset":25126,"endOffset":25754,"count":2},{"startOffset":25219,"endOffset":25295,"count":34},{"startOffset":25259,"endOffset":25270,"count":0},{"startOffset":25340,"endOffset":25372,"count":0},{"startOffset":25507,"endOffset":25623,"count":0},{"startOffset":25666,"endOffset":25730,"count":0}],"isBlockCoverage":true},{"functionName":"options.onToken","ranges":[{"startOffset":25569,"endOffset":25616,"count":0}],"isBlockCoverage":false},{"functionName":"pushComment","ranges":[{"startOffset":25758,"endOffset":26196,"count":0}],"isBlockCoverage":false},{"functionName":"functionFlags","ranges":[{"startOffset":26520,"endOffset":26656,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":27099,"endOffset":30185,"count":2},{"startOffset":27305,"endOffset":27354,"count":0},{"startOffset":27477,"endOffset":27523,"count":10},{"startOffset":27512,"endOffset":27521,"count":2},{"startOffset":27567,"endOffset":27592,"count":0},{"startOffset":27699,"endOffset":27703,"count":0},{"startOffset":28253,"endOffset":28440,"count":0},{"startOffset":29927,"endOffset":29961,"count":0},{"startOffset":29969,"endOffset":29997,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":30471,"endOffset":30609,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inFunction.get","ranges":[{"startOffset":30650,"endOffset":30724,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.inGenerator.get","ranges":[{"startOffset":30765,"endOffset":30840,"count":2}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.inAsync.get","ranges":[{"startOffset":30877,"endOffset":30948,"count":2}],"isBlockCoverage":true},{"functionName":"prototypeAccessors.allowSuper.get","ranges":[{"startOffset":30988,"endOffset":31060,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.allowDirectSuper.get","ranges":[{"startOffset":31106,"endOffset":31185,"count":0}],"isBlockCoverage":false},{"functionName":"prototypeAccessors.treatFunctionsAsVar.get","ranges":[{"startOffset":31234,"endOffset":31309,"count":0}],"isBlockCoverage":false},{"functionName":"inNonArrowFunction","ranges":[{"startOffset":31387,"endOffset":31481,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":31502,"endOffset":31739,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":31759,"endOffset":31840,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":31872,"endOffset":32034,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":32058,"endOffset":32135,"count":0}],"isBlockCoverage":false},{"functionName":"pp.strictDirective","ranges":[{"startOffset":32347,"endOffset":33300,"count":2},{"startOffset":32606,"endOffset":32638,"count":0},{"startOffset":32658,"endOffset":33290,"count":0}],"isBlockCoverage":true},{"functionName":"pp.eat","ranges":[{"startOffset":33433,"endOffset":33558,"count":10},{"startOffset":33478,"endOffset":33522,"count":0}],"isBlockCoverage":true},{"functionName":"pp.isContextual","ranges":[{"startOffset":33639,"endOffset":33739,"count":4},{"startOffset":33715,"endOffset":33735,"count":0}],"isBlockCoverage":true},{"functionName":"pp.eatContextual","ranges":[{"startOffset":33810,"endOffset":33914,"count":0}],"isBlockCoverage":false},{"functionName":"pp.expectContextual","ranges":[{"startOffset":34005,"endOffset":34083,"count":0}],"isBlockCoverage":false},{"functionName":"pp.canInsertSemicolon","ranges":[{"startOffset":34184,"endOffset":34342,"count":2},{"startOffset":34232,"endOffset":34267,"count":0},{"startOffset":34268,"endOffset":34338,"count":0}],"isBlockCoverage":true},{"functionName":"pp.insertSemicolon","ranges":[{"startOffset":34368,"endOffset":34572,"count":0}],"isBlockCoverage":false},{"functionName":"pp.semicolon","ranges":[{"startOffset":34719,"endOffset":34816,"count":0}],"isBlockCoverage":false},{"functionName":"pp.afterTrailingComma","ranges":[{"startOffset":34845,"endOffset":35102,"count":0}],"isBlockCoverage":false},{"functionName":"pp.expect","ranges":[{"startOffset":35228,"endOffset":35289,"count":0}],"isBlockCoverage":false},{"functionName":"pp.unexpected","ranges":[{"startOffset":35349,"endOffset":35436,"count":0}],"isBlockCoverage":false},{"functionName":"DestructuringErrors","ranges":[{"startOffset":35441,"endOffset":35622,"count":2}],"isBlockCoverage":true},{"functionName":"pp.checkPatternErrors","ranges":[{"startOffset":35650,"endOffset":36109,"count":0}],"isBlockCoverage":false},{"functionName":"pp.checkExpressionErrors","ranges":[{"startOffset":36141,"endOffset":36688,"count":8},{"startOffset":36219,"endOffset":36235,"count":0},{"startOffset":36379,"endOffset":36430,"count":6},{"startOffset":36430,"endOffset":36467,"count":2},{"startOffset":36467,"endOffset":36574,"count":0},{"startOffset":36574,"endOffset":36607,"count":2},{"startOffset":36607,"endOffset":36684,"count":0}],"isBlockCoverage":true},{"functionName":"pp.checkYieldAwaitInDefaultParams","ranges":[{"startOffset":36729,"endOffset":37010,"count":0}],"isBlockCoverage":false},{"functionName":"pp.isSimpleAssignTarget","ranges":[{"startOffset":37041,"endOffset":37244,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseTopLevel","ranges":[{"startOffset":37587,"endOffset":38230,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.isLet","ranges":[{"startOffset":38315,"endOffset":39282,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.isAsyncFunction","ranges":[{"startOffset":39445,"endOffset":39895,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseStatement","ranges":[{"startOffset":40179,"endOffset":43781,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseBreakContinueStatement","ranges":[{"startOffset":43821,"endOffset":44668,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseDebuggerStatement","ranges":[{"startOffset":44703,"endOffset":44816,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseDoStatement","ranges":[{"startOffset":44845,"endOffset":45218,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseForStatement","ranges":[{"startOffset":45679,"endOffset":47633,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseFunctionStatement","ranges":[{"startOffset":47668,"endOffset":47856,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseIfStatement","ranges":[{"startOffset":47885,"endOffset":48219,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseReturnStatement","ranges":[{"startOffset":48252,"endOffset":48795,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseSwitchStatement","ranges":[{"startOffset":48828,"endOffset":50138,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseThrowStatement","ranges":[{"startOffset":50170,"endOffset":50465,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseTryStatement","ranges":[{"startOffset":50584,"endOffset":51606,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseVarStatement","ranges":[{"startOffset":51636,"endOffset":51795,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseWhileStatement","ranges":[{"startOffset":51827,"endOffset":52062,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseWithStatement","ranges":[{"startOffset":52093,"endOffset":52346,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseEmptyStatement","ranges":[{"startOffset":52378,"endOffset":52466,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseLabeledStatement","ranges":[{"startOffset":52500,"endOffset":53483,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseExpressionStatement","ranges":[{"startOffset":53520,"endOffset":53652,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseBlock","ranges":[{"startOffset":53831,"endOffset":54404,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseFor","ranges":[{"startOffset":54572,"endOffset":54999,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseForIn","ranges":[{"startOffset":55122,"endOffset":56071,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseVar","ranges":[{"startOffset":56137,"endOffset":56948,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseVarId","ranges":[{"startOffset":56971,"endOffset":57114,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseFunction","ranges":[{"startOffset":57394,"endOffset":59093,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseFunctionParams","ranges":[{"startOffset":59125,"endOffset":59312,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseClass","ranges":[{"startOffset":59427,"endOffset":60435,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseClassElement","ranges":[{"startOffset":60465,"endOffset":63090,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseClassMethod","ranges":[{"startOffset":63119,"endOffset":63315,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseClassId","ranges":[{"startOffset":63340,"endOffset":63629,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseClassSuper","ranges":[{"startOffset":63657,"endOffset":63761,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseExport","ranges":[{"startOffset":63825,"endOffset":66343,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.checkExport","ranges":[{"startOffset":66367,"endOffset":66557,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.checkPatternExport","ranges":[{"startOffset":66588,"endOffset":67558,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.checkVariableExport","ranges":[{"startOffset":67590,"endOffset":67798,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.shouldParseExportStatement","ranges":[{"startOffset":67837,"endOffset":68066,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseExportSpecifiers","ranges":[{"startOffset":68155,"endOffset":68789,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseImport","ranges":[{"startOffset":68846,"endOffset":69291,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.parseImportSpecifiers","ranges":[{"startOffset":69380,"endOffset":70703,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.adaptDirectivePrologue","ranges":[{"startOffset":70813,"endOffset":71014,"count":0}],"isBlockCoverage":false},{"functionName":"pp$1.isDirectiveCandidate","ranges":[{"startOffset":71046,"endOffset":71368,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.toAssignable","ranges":[{"startOffset":71504,"endOffset":74455,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.toAssignableList","ranges":[{"startOffset":74540,"endOffset":74991,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseSpread","ranges":[{"startOffset":75044,"endOffset":75256,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseRestBinding","ranges":[{"startOffset":75285,"endOffset":75616,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseBindingAtom","ranges":[{"startOffset":75684,"endOffset":76085,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseBindingList","ranges":[{"startOffset":76114,"endOffset":76971,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseBindingListItem","ranges":[{"startOffset":77004,"endOffset":77042,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.parseMaybeDefault","ranges":[{"startOffset":77135,"endOffset":77467,"count":0}],"isBlockCoverage":false},{"functionName":"pp$2.checkLVal","ranges":[{"startOffset":77856,"endOffset":79968,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkPropClash","ranges":[{"startOffset":80354,"endOffset":81851,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseExpression","ranges":[{"startOffset":82634,"endOffset":83123,"count":2},{"startOffset":82835,"endOffset":83103,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseMaybeAssign","ranges":[{"startOffset":83246,"endOffset":85408,"count":2},{"startOffset":83339,"endOffset":83566,"count":0},{"startOffset":83684,"endOffset":83915,"count":0},{"startOffset":84287,"endOffset":84350,"count":0},{"startOffset":84379,"endOffset":85093,"count":0},{"startOffset":85232,"endOffset":85296,"count":0},{"startOffset":85328,"endOffset":85388,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseMaybeConditional","ranges":[{"startOffset":85493,"endOffset":86064,"count":2},{"startOffset":85715,"endOffset":85730,"count":0},{"startOffset":85765,"endOffset":86044,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseExprOps","ranges":[{"startOffset":86124,"endOffset":86509,"count":2},{"startOffset":86350,"endOffset":86365,"count":0},{"startOffset":86444,"endOffset":86450,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseExprOp","ranges":[{"startOffset":86870,"endOffset":88200,"count":2},{"startOffset":86983,"endOffset":87020,"count":0},{"startOffset":87022,"endOffset":88180,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.buildBinary","ranges":[{"startOffset":88224,"endOffset":88492,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseMaybeUnary","ranges":[{"startOffset":88574,"endOffset":90227,"count":2},{"startOffset":88717,"endOffset":88798,"count":0},{"startOffset":88800,"endOffset":88862,"count":0},{"startOffset":88890,"endOffset":89539,"count":0},{"startOffset":89672,"endOffset":89687,"count":0},{"startOffset":89719,"endOffset":89748,"count":0},{"startOffset":89750,"endOffset":90030,"count":0},{"startOffset":90091,"endOffset":90192,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseExprSubscripts","ranges":[{"startOffset":90314,"endOffset":91006,"count":2},{"startOffset":90513,"endOffset":90576,"count":0},{"startOffset":90584,"endOffset":90599,"count":0},{"startOffset":90735,"endOffset":90984,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseSubscripts","ranges":[{"startOffset":91034,"endOffset":91914,"count":2},{"startOffset":91191,"endOffset":91230,"count":0},{"startOffset":91231,"endOffset":91260,"count":0},{"startOffset":91261,"endOffset":91291,"count":0},{"startOffset":91292,"endOffset":91339,"count":0},{"startOffset":91533,"endOffset":91560,"count":0},{"startOffset":91588,"endOffset":91633,"count":0},{"startOffset":91666,"endOffset":91850,"count":0},{"startOffset":91881,"endOffset":91910,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseSubscript","ranges":[{"startOffset":91941,"endOffset":94766,"count":2},{"startOffset":92118,"endOffset":92148,"count":0},{"startOffset":92166,"endOffset":92177,"count":0},{"startOffset":92179,"endOffset":92281,"count":0},{"startOffset":92358,"endOffset":92387,"count":0},{"startOffset":92388,"endOffset":92420,"count":0},{"startOffset":92446,"endOffset":92865,"count":0},{"startOffset":92911,"endOffset":94333,"count":0},{"startOffset":94374,"endOffset":94746,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseExprAtom","ranges":[{"startOffset":95014,"endOffset":98931,"count":2},{"startOffset":95226,"endOffset":95248,"count":0},{"startOffset":95344,"endOffset":96031,"count":0},{"startOffset":96037,"endOffset":96157,"count":0},{"startOffset":96389,"endOffset":96418,"count":0},{"startOffset":96419,"endOffset":96447,"count":0},{"startOffset":96457,"endOffset":96540,"count":0},{"startOffset":96593,"endOffset":97091,"count":0},{"startOffset":97113,"endOffset":97289,"count":0},{"startOffset":97295,"endOffset":97310,"count":0},{"startOffset":97311,"endOffset":97372,"count":0},{"startOffset":97378,"endOffset":97395,"count":0},{"startOffset":97396,"endOffset":97413,"count":0},{"startOffset":97414,"endOffset":97645,"count":0},{"startOffset":97651,"endOffset":98105,"count":0},{"startOffset":98111,"endOffset":98329,"count":0},{"startOffset":98335,"endOffset":98411,"count":0},{"startOffset":98417,"endOffset":98529,"count":0},{"startOffset":98535,"endOffset":98607,"count":0},{"startOffset":98613,"endOffset":98658,"count":0},{"startOffset":98664,"endOffset":98719,"count":0},{"startOffset":98725,"endOffset":98882,"count":0},{"startOffset":98888,"endOffset":98921,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseExprImport","ranges":[{"startOffset":98959,"endOffset":99542,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseDynamicImport","ranges":[{"startOffset":99573,"endOffset":100048,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseImportMeta","ranges":[{"startOffset":100076,"endOffset":100668,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseLiteral","ranges":[{"startOffset":100693,"endOffset":100986,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseParenExpression","ranges":[{"startOffset":101019,"endOffset":101150,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseParenAndDistinguishExpression","ranges":[{"startOffset":101197,"endOffset":103735,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseParenItem","ranges":[{"startOffset":103762,"endOffset":103798,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseParenArrowList","ranges":[{"startOffset":103830,"endOffset":103959,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseNew","ranges":[{"startOffset":104302,"endOffset":105656,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseTemplateElement","ranges":[{"startOffset":105722,"endOffset":106326,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseTemplate","ranges":[{"startOffset":106352,"endOffset":107060,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.isAsyncProp","ranges":[{"startOffset":107084,"endOffset":107474,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseObj","ranges":[{"startOffset":107545,"endOffset":108200,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseProperty","ranges":[{"startOffset":108226,"endOffset":110371,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parsePropertyValue","ranges":[{"startOffset":110402,"endOffset":112878,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parsePropertyName","ranges":[{"startOffset":112908,"endOffset":113359,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.initFunction","ranges":[{"startOffset":113422,"endOffset":113610,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseMethod","ranges":[{"startOffset":113670,"endOffset":114612,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseArrowExpression","ranges":[{"startOffset":114706,"endOffset":115359,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseFunctionBody","ranges":[{"startOffset":115437,"endOffset":117192,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.isSimpleParamList","ranges":[{"startOffset":117222,"endOffset":117418,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkParams","ranges":[{"startOffset":117570,"endOffset":117811,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseExprList","ranges":[{"startOffset":118136,"endOffset":118953,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.checkUnreserved","ranges":[{"startOffset":118981,"endOffset":119898,"count":2},{"startOffset":119098,"endOffset":119117,"count":0},{"startOffset":119125,"endOffset":119213,"count":0},{"startOffset":119235,"endOffset":119254,"count":0},{"startOffset":119262,"endOffset":119356,"count":0},{"startOffset":119397,"endOffset":119458,"count":0},{"startOffset":119496,"endOffset":119554,"count":0},{"startOffset":119556,"endOffset":119566,"count":0},{"startOffset":119592,"endOffset":119618,"count":0},{"startOffset":119664,"endOffset":119894,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseIdent","ranges":[{"startOffset":120077,"endOffset":121161,"count":2},{"startOffset":120212,"endOffset":120913,"count":0},{"startOffset":121067,"endOffset":121089,"count":0},{"startOffset":121099,"endOffset":121135,"count":0}],"isBlockCoverage":true},{"functionName":"pp$3.parseYield","ranges":[{"startOffset":121232,"endOffset":121702,"count":0}],"isBlockCoverage":false},{"functionName":"pp$3.parseAwait","ranges":[{"startOffset":121725,"endOffset":121955,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.raise","ranges":[{"startOffset":122289,"endOffset":122531,"count":0}],"isBlockCoverage":false},{"functionName":"pp$4.curPosition","ranges":[{"startOffset":122594,"endOffset":122717,"count":2},{"startOffset":122639,"endOffset":122713,"count":0}],"isBlockCoverage":true},{"functionName":"Scope","ranges":[{"startOffset":122766,"endOffset":123111,"count":2}],"isBlockCoverage":true},{"functionName":"pp$5.enterScope","ranges":[{"startOffset":123268,"endOffset":123333,"count":2}],"isBlockCoverage":true},{"functionName":"pp$5.exitScope","ranges":[{"startOffset":123355,"endOffset":123398,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.treatFunctionsAsVarInScope","ranges":[{"startOffset":123609,"endOffset":123719,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.declareName","ranges":[{"startOffset":123743,"endOffset":125305,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.checkLocalExport","ranges":[{"startOffset":125334,"endOffset":125591,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.currentScope","ranges":[{"startOffset":125616,"endOffset":125687,"count":0}],"isBlockCoverage":false},{"functionName":"pp$5.currentVarScope","ranges":[{"startOffset":125715,"endOffset":125880,"count":4}],"isBlockCoverage":true},{"functionName":"pp$5.currentThisScope","ranges":[{"startOffset":126008,"endOffset":126205,"count":0}],"isBlockCoverage":false},{"functionName":"Node","ranges":[{"startOffset":126221,"endOffset":126572,"count":2},{"startOffset":126355,"endOffset":126402,"count":0},{"startOffset":126450,"endOffset":126504,"count":0},{"startOffset":126542,"endOffset":126568,"count":0}],"isBlockCoverage":true},{"functionName":"pp$6.startNode","ranges":[{"startOffset":126677,"endOffset":126746,"count":2}],"isBlockCoverage":true},{"functionName":"pp$6.startNodeAt","ranges":[{"startOffset":126770,"endOffset":126830,"count":0}],"isBlockCoverage":false},{"functionName":"finishNodeAt","ranges":[{"startOffset":126897,"endOffset":127126,"count":2},{"startOffset":127023,"endOffset":127046,"count":0},{"startOffset":127082,"endOffset":127106,"count":0}],"isBlockCoverage":true},{"functionName":"pp$6.finishNode","ranges":[{"startOffset":127148,"endOffset":127258,"count":2}],"isBlockCoverage":true},{"functionName":"pp$6.finishNodeAt","ranges":[{"startOffset":127319,"endOffset":127412,"count":0}],"isBlockCoverage":false},{"functionName":"TokContext","ranges":[{"startOffset":127505,"endOffset":127739,"count":10}],"isBlockCoverage":true},{"functionName":"types$1.q_tmpl","ranges":[{"startOffset":128003,"endOffset":128052,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.initialContext","ranges":[{"startOffset":128343,"endOffset":128387,"count":2}],"isBlockCoverage":true},{"functionName":"pp$7.braceIsBlock","ranges":[{"startOffset":128412,"endOffset":129389,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.inGeneratorContext","ranges":[{"startOffset":129420,"endOffset":129630,"count":0}],"isBlockCoverage":false},{"functionName":"pp$7.updateContext","ranges":[{"startOffset":129656,"endOffset":129934,"count":4},{"startOffset":129732,"endOffset":129757,"count":0},{"startOffset":129765,"endOffset":129794,"count":0},{"startOffset":129843,"endOffset":129930,"count":2}],"isBlockCoverage":true},{"functionName":"types.parenR.updateContext.types.braceR.updateContext","ranges":[{"startOffset":130038,"endOffset":130325,"count":0}],"isBlockCoverage":false},{"functionName":"types.braceL.updateContext","ranges":[{"startOffset":130359,"endOffset":130498,"count":0}],"isBlockCoverage":false},{"functionName":"types.dollarBraceL.updateContext","ranges":[{"startOffset":130538,"endOffset":130622,"count":0}],"isBlockCoverage":false},{"functionName":"types.parenL.updateContext","ranges":[{"startOffset":130656,"endOffset":130917,"count":0}],"isBlockCoverage":false},{"functionName":"types.incDec.updateContext","ranges":[{"startOffset":130951,"endOffset":131005,"count":0}],"isBlockCoverage":false},{"functionName":"types._function.updateContext.types._class.updateContext","ranges":[{"startOffset":131071,"endOffset":131524,"count":0}],"isBlockCoverage":false},{"functionName":"types.backQuote.updateContext","ranges":[{"startOffset":131561,"endOffset":131737,"count":0}],"isBlockCoverage":false},{"functionName":"types.star.updateContext","ranges":[{"startOffset":131769,"endOffset":132075,"count":0}],"isBlockCoverage":false},{"functionName":"types.name.updateContext","ranges":[{"startOffset":132107,"endOffset":132406,"count":2},{"startOffset":132250,"endOffset":132270,"count":0},{"startOffset":132307,"endOffset":132335,"count":0},{"startOffset":132345,"endOffset":132364,"count":0}],"isBlockCoverage":true},{"functionName":"buildUnicodeData","ranges":[{"startOffset":137237,"endOffset":137784,"count":3}],"isBlockCoverage":true},{"functionName":"RegExpValidationState","ranges":[{"startOffset":137919,"endOffset":138577,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":138622,"endOffset":138931,"count":0}],"isBlockCoverage":false},{"functionName":"raise","ranges":[{"startOffset":138976,"endOffset":139121,"count":0}],"isBlockCoverage":false},{"functionName":"at","ranges":[{"startOffset":139354,"endOffset":139764,"count":0}],"isBlockCoverage":false},{"functionName":"nextIndex","ranges":[{"startOffset":139813,"endOffset":140207,"count":0}],"isBlockCoverage":false},{"functionName":"current","ranges":[{"startOffset":140254,"endOffset":140370,"count":0}],"isBlockCoverage":false},{"functionName":"lookahead","ranges":[{"startOffset":140419,"endOffset":140561,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":140608,"endOffset":140736,"count":0}],"isBlockCoverage":false},{"functionName":"eat","ranges":[{"startOffset":140779,"endOffset":140966,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToString","ranges":[{"startOffset":140971,"endOffset":141159,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.validateRegExpFlags","ranges":[{"startOffset":141355,"endOffset":141774,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.validateRegExpPattern","ranges":[{"startOffset":141975,"endOffset":142564,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_pattern","ranges":[{"startOffset":142658,"endOffset":143610,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_disjunction","ranges":[{"startOffset":143712,"endOffset":144072,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_alternative","ranges":[{"startOffset":144174,"endOffset":144279,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatTerm","ranges":[{"startOffset":144377,"endOffset":145036,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatAssertion","ranges":[{"startOffset":145144,"endOffset":146061,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatQuantifier","ranges":[{"startOffset":146164,"endOffset":146373,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatQuantifierPrefix","ranges":[{"startOffset":146488,"endOffset":146690,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatBracedQuantifier","ranges":[{"startOffset":146728,"endOffset":147493,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatAtom","ranges":[{"startOffset":147584,"endOffset":147899,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatReverseSolidusAtomEscape","ranges":[{"startOffset":147945,"endOffset":148150,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatUncapturingGroup","ranges":[{"startOffset":148188,"endOffset":148545,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatCapturingGroup","ranges":[{"startOffset":148581,"endOffset":149028,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatExtendedAtom","ranges":[{"startOffset":149142,"endOffset":149519,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatInvalidBracedQuantifier","ranges":[{"startOffset":149655,"endOffset":149795,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatSyntaxCharacter","ranges":[{"startOffset":149908,"endOffset":150087,"count":0}],"isBlockCoverage":false},{"functionName":"isSyntaxCharacter","ranges":[{"startOffset":150091,"endOffset":150380,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatPatternCharacters","ranges":[{"startOffset":150515,"endOffset":150709,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatExtendedPatternCharacter","ranges":[{"startOffset":150847,"endOffset":151222,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_groupSpecifier","ranges":[{"startOffset":151315,"endOffset":151670,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatGroupName","ranges":[{"startOffset":151834,"endOffset":152105,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatRegExpIdentifierName","ranges":[{"startOffset":152333,"endOffset":152691,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatRegExpIdentifierStart","ranges":[{"startOffset":152852,"endOffset":153277,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierStart","ranges":[{"startOffset":153281,"endOffset":153408,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatRegExpIdentifierPart","ranges":[{"startOffset":153596,"endOffset":154020,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpIdentifierPart","ranges":[{"startOffset":154024,"endOffset":154208,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatAtomEscape","ranges":[{"startOffset":154317,"endOffset":154805,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatBackReference","ranges":[{"startOffset":154840,"endOffset":155327,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatKGroupName","ranges":[{"startOffset":155359,"endOffset":155619,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatCharacterEscape","ranges":[{"startOffset":155739,"endOffset":156141,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatCControlLetter","ranges":[{"startOffset":156177,"endOffset":156385,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatZero","ranges":[{"startOffset":156411,"endOffset":156608,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatControlEscape","ranges":[{"startOffset":156717,"endOffset":157385,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatControlLetter","ranges":[{"startOffset":157494,"endOffset":157678,"count":0}],"isBlockCoverage":false},{"functionName":"isControlLetter","ranges":[{"startOffset":157682,"endOffset":157836,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatRegExpUnicodeEscapeSequence","ranges":[{"startOffset":157972,"endOffset":159162,"count":0}],"isBlockCoverage":false},{"functionName":"isValidUnicode","ranges":[{"startOffset":159166,"endOffset":159236,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatIdentityEscape","ranges":[{"startOffset":159353,"endOffset":159812,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatDecimalEscape","ranges":[{"startOffset":159921,"endOffset":160282,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatCharacterClassEscape","ranges":[{"startOffset":160405,"endOffset":161006,"count":0}],"isBlockCoverage":false},{"functionName":"isCharacterClassEscape","ranges":[{"startOffset":161010,"endOffset":161241,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatUnicodePropertyValueExpression","ranges":[{"startOffset":161422,"endOffset":162141,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_validateUnicodePropertyNameAndValue","ranges":[{"startOffset":162195,"endOffset":162443,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_validateUnicodePropertyNameOrValue","ranges":[{"startOffset":162496,"endOffset":162637,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatUnicodePropertyName","ranges":[{"startOffset":162744,"endOffset":163003,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyNameCharacter","ranges":[{"startOffset":163007,"endOffset":163110,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatUnicodePropertyValue","ranges":[{"startOffset":163219,"endOffset":163479,"count":0}],"isBlockCoverage":false},{"functionName":"isUnicodePropertyValueCharacter","ranges":[{"startOffset":163483,"endOffset":163601,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":163730,"endOffset":163805,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatCharacterClass","ranges":[{"startOffset":163916,"endOffset":164264,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_classRanges","ranges":[{"startOffset":164530,"endOffset":165015,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatClassAtom","ranges":[{"startOffset":165191,"endOffset":165805,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatClassEscape","ranges":[{"startOffset":165917,"endOffset":166470,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatClassControlLetter","ranges":[{"startOffset":166596,"endOffset":166802,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatHexEscapeSequence","ranges":[{"startOffset":166919,"endOffset":167205,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatDecimalDigits","ranges":[{"startOffset":167314,"endOffset":167591,"count":0}],"isBlockCoverage":false},{"functionName":"isDecimalDigit","ranges":[{"startOffset":167595,"endOffset":167680,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatHexDigits","ranges":[{"startOffset":167780,"endOffset":168046,"count":0}],"isBlockCoverage":false},{"functionName":"isHexDigit","ranges":[{"startOffset":168050,"endOffset":168251,"count":0}],"isBlockCoverage":false},{"functionName":"hexToInt","ranges":[{"startOffset":168254,"endOffset":168502,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatLegacyOctalEscapeSequence","ranges":[{"startOffset":168692,"endOffset":169172,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatOctalDigit","ranges":[{"startOffset":169275,"endOffset":169492,"count":0}],"isBlockCoverage":false},{"functionName":"isOctalDigit","ranges":[{"startOffset":169496,"endOffset":169579,"count":0}],"isBlockCoverage":false},{"functionName":"pp$8.regexp_eatFixedHexDigits","ranges":[{"startOffset":169855,"endOffset":170207,"count":0}],"isBlockCoverage":false},{"functionName":"Token","ranges":[{"startOffset":170425,"endOffset":170708,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.next","ranges":[{"startOffset":170805,"endOffset":171277,"count":2},{"startOffset":170907,"endOffset":170926,"count":0},{"startOffset":170934,"endOffset":171023,"count":0},{"startOffset":171060,"endOffset":171102,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.getToken","ranges":[{"startOffset":171298,"endOffset":171358,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.<computed>","ranges":[{"startOffset":171487,"endOffset":171733,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.curContext","ranges":[{"startOffset":171885,"endOffset":171950,"count":4}],"isBlockCoverage":true},{"functionName":"pp$9.nextToken","ranges":[{"startOffset":172059,"endOffset":172487,"count":4},{"startOffset":172244,"endOffset":172283,"count":0},{"startOffset":172323,"endOffset":172392,"count":2},{"startOffset":172392,"endOffset":172428,"count":0},{"startOffset":172428,"endOffset":172483,"count":2}],"isBlockCoverage":true},{"functionName":"pp$9.readToken","ranges":[{"startOffset":172509,"endOffset":172807,"count":2},{"startOffset":172705,"endOffset":172719,"count":0},{"startOffset":172763,"endOffset":172806,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.fullCharCodeAtPos","ranges":[{"startOffset":172837,"endOffset":173054,"count":10},{"startOffset":172921,"endOffset":172938,"count":0},{"startOffset":172955,"endOffset":173053,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.skipBlockComment","ranges":[{"startOffset":173083,"endOffset":173778,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.skipLineComment","ranges":[{"startOffset":173806,"endOffset":174290,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.skipSpace","ranges":[{"startOffset":174415,"endOffset":175381,"count":4},{"startOffset":174475,"endOffset":175377,"count":2},{"startOffset":174551,"endOffset":174559,"count":0},{"startOffset":174560,"endOffset":174610,"count":0},{"startOffset":174617,"endOffset":174715,"count":0},{"startOffset":174722,"endOffset":174730,"count":0},{"startOffset":174731,"endOffset":174741,"count":0},{"startOffset":174742,"endOffset":174897,"count":0},{"startOffset":174904,"endOffset":175179,"count":0},{"startOffset":175239,"endOffset":175290,"count":0},{"startOffset":175292,"endOffset":175325,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.finishToken","ranges":[{"startOffset":175624,"endOffset":175853,"count":4},{"startOffset":175703,"endOffset":175740,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.readToken_dot","ranges":[{"startOffset":176164,"endOffset":176585,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_slash","ranges":[{"startOffset":176613,"endOffset":176859,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_mult_modulo_exp","ranges":[{"startOffset":176897,"endOffset":177387,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_pipe_amp","ranges":[{"startOffset":177418,"endOffset":177742,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_caret","ranges":[{"startOffset":177770,"endOffset":177954,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_plus_min","ranges":[{"startOffset":177985,"endOffset":178566,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_lt_gt","ranges":[{"startOffset":178594,"endOffset":179372,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_eq_excl","ranges":[{"startOffset":179402,"endOffset":179812,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readToken_question","ranges":[{"startOffset":179843,"endOffset":180254,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.getTokenFromCode","ranges":[{"startOffset":180283,"endOffset":182937,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.finishOp","ranges":[{"startOffset":182958,"endOffset":183104,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readRegexp","ranges":[{"startOffset":183127,"endOffset":184540,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readInt","ranges":[{"startOffset":184769,"endOffset":185375,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readRadixNumber","ranges":[{"startOffset":185403,"endOffset":185963,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readNumber","ranges":[{"startOffset":186050,"endOffset":187534,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readCodePoint","ranges":[{"startOffset":187619,"endOffset":188069,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToString$1","ranges":[{"startOffset":188074,"endOffset":188297,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readString","ranges":[{"startOffset":188319,"endOffset":189009,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.tryReadTemplateToken","ranges":[{"startOffset":189121,"endOffset":189406,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.invalidStringToken","ranges":[{"startOffset":189437,"endOffset":189635,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readTmplToken","ranges":[{"startOffset":189661,"endOffset":191136,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readInvalidTemplateToken","ranges":[{"startOffset":191264,"endOffset":191738,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readEscapedChar","ranges":[{"startOffset":191804,"endOffset":193698,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readHexChar","ranges":[{"startOffset":193788,"endOffset":193974,"count":0}],"isBlockCoverage":false},{"functionName":"pp$9.readWord1","ranges":[{"startOffset":194228,"endOffset":195264,"count":2},{"startOffset":194416,"endOffset":195203,"count":8},{"startOffset":194538,"endOffset":194541,"count":0},{"startOffset":194550,"endOffset":195176,"count":0}],"isBlockCoverage":true},{"functionName":"pp$9.readWord","ranges":[{"startOffset":195379,"endOffset":195568,"count":2},{"startOffset":195486,"endOffset":195524,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":196529,"endOffset":196605,"count":0}],"isBlockCoverage":false},{"functionName":"parseExpressionAt","ranges":[{"startOffset":196782,"endOffset":196892,"count":0}],"isBlockCoverage":false},{"functionName":"tokenizer","ranges":[{"startOffset":197036,"endOffset":197120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1260","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/object-assign/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2108,"count":1},{"startOffset":1600,"endOffset":2106,"count":0}],"isBlockCoverage":true},{"functionName":"toObject","ranges":[{"startOffset":277,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUseNative","ranges":[{"startOffset":452,"endOffset":1547,"count":1},{"startOffset":510,"endOffset":532,"count":0},{"startOffset":804,"endOffset":826,"count":0},{"startOffset":935,"endOffset":984,"count":10},{"startOffset":1119,"endOffset":1141,"count":0},{"startOffset":1400,"endOffset":1422,"count":0},{"startOffset":1442,"endOffset":1545,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1038,"endOffset":1076,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1262,"endOffset":1312,"count":20}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":1602,"endOffset":2106,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1261","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/character-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8993,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":427,"endOffset":798,"count":0}],"isBlockCoverage":false},{"functionName":"parseUntil","ranges":[{"startOffset":833,"endOffset":1570,"count":2},{"startOffset":1029,"endOffset":1388,"count":10},{"startOffset":1127,"endOffset":1260,"count":2},{"startOffset":1260,"endOffset":1313,"count":8},{"startOffset":1313,"endOffset":1371,"count":0},{"startOffset":1371,"endOffset":1388,"count":8},{"startOffset":1388,"endOffset":1569,"count":0}],"isBlockCoverage":true},{"functionName":"parseChar","ranges":[{"startOffset":1603,"endOffset":5338,"count":8},{"startOffset":1672,"endOffset":1853,"count":0},{"startOffset":1870,"endOffset":1895,"count":0},{"startOffset":1992,"endOffset":2010,"count":6},{"startOffset":2011,"endOffset":2015,"count":2},{"startOffset":2044,"endOffset":2160,"count":0},{"startOffset":2194,"endOffset":2304,"count":0},{"startOffset":2309,"endOffset":2445,"count":0},{"startOffset":2450,"endOffset":2711,"count":0},{"startOffset":2716,"endOffset":2976,"count":0},{"startOffset":2981,"endOffset":3534,"count":0},{"startOffset":3539,"endOffset":3793,"count":0},{"startOffset":3840,"endOffset":3896,"count":0},{"startOffset":3938,"endOffset":4184,"count":0},{"startOffset":4211,"endOffset":4231,"count":0},{"startOffset":4233,"endOffset":4388,"count":0},{"startOffset":4415,"endOffset":4435,"count":0},{"startOffset":4437,"endOffset":4592,"count":0},{"startOffset":4620,"endOffset":4646,"count":0},{"startOffset":4648,"endOffset":4856,"count":0},{"startOffset":4886,"endOffset":4947,"count":0},{"startOffset":4976,"endOffset":5037,"count":0},{"startOffset":5066,"endOffset":5129,"count":0}],"isBlockCoverage":true},{"functionName":"exports.defaultState","ranges":[{"startOffset":5363,"endOffset":5397,"count":2}],"isBlockCoverage":true},{"functionName":"State","ranges":[{"startOffset":5399,"endOffset":5576,"count":2}],"isBlockCoverage":true},{"functionName":"State.current","ranges":[{"startOffset":5603,"endOffset":5662,"count":40}],"isBlockCoverage":true},{"functionName":"State.isString","ranges":[{"startOffset":5691,"endOffset":5874,"count":0}],"isBlockCoverage":false},{"functionName":"State.isComment","ranges":[{"startOffset":5903,"endOffset":6020,"count":16}],"isBlockCoverage":true},{"functionName":"State.isNesting","ranges":[{"startOffset":6049,"endOffset":6353,"count":10},{"startOffset":6109,"endOffset":6139,"count":0},{"startOffset":6140,"endOffset":6185,"count":0},{"startOffset":6190,"endOffset":6321,"count":0}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":6355,"endOffset":6540,"count":10},{"startOffset":6418,"endOffset":6468,"count":0},{"startOffset":6500,"endOffset":6504,"count":2}],"isBlockCoverage":true},{"functionName":"isPunctuator","ranges":[{"startOffset":6578,"endOffset":7337,"count":0}],"isBlockCoverage":false},{"functionName":"isKeyword","ranges":[{"startOffset":7369,"endOffset":8325,"count":0}],"isBlockCoverage":false},{"functionName":"isRegexp","ranges":[{"startOffset":8327,"endOffset":8992,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1262","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/is-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1140,"count":1},{"startOffset":897,"endOffset":1138,"count":0}],"isBlockCoverage":true},{"functionName":"throwRegexMarker","ranges":[{"startOffset":312,"endOffset":351,"count":0}],"isBlockCoverage":false},{"functionName":"isRegex","ranges":[{"startOffset":704,"endOffset":895,"count":10},{"startOffset":795,"endOffset":892,"count":0}],"isBlockCoverage":true},{"functionName":"isRegex","ranges":[{"startOffset":899,"endOffset":1138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1263","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-symbols/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":394,"count":1}],"isBlockCoverage":true},{"functionName":"hasNativeSymbols","ranges":[{"startOffset":105,"endOffset":392,"count":1},{"startOffset":174,"endOffset":191,"count":0},{"startOffset":227,"endOffset":244,"count":0},{"startOffset":289,"endOffset":306,"count":0},{"startOffset":347,"endOffset":364,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1264","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/has-symbols/shams.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1740,"count":1}],"isBlockCoverage":true},{"functionName":"hasSymbols","ranges":[{"startOffset":90,"endOffset":1738,"count":1},{"startOffset":203,"endOffset":220,"count":0},{"startOffset":279,"endOffset":1177,"count":0},{"startOffset":1179,"endOffset":1299,"count":0},{"startOffset":1301,"endOffset":1408,"count":0},{"startOffset":1410,"endOffset":1737,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1265","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-error/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1443,"count":1}],"isBlockCoverage":true},{"functionName":"makeError","ranges":[{"startOffset":43,"endOffset":1442,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1266","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-strip-comments/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2199,"count":1}],"isBlockCoverage":true},{"functionName":"unexpectedToken","ranges":[{"startOffset":83,"endOffset":276,"count":0}],"isBlockCoverage":false},{"functionName":"stripComments","ranges":[{"startOffset":278,"endOffset":2198,"count":2},{"startOffset":339,"endOffset":344,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":886,"endOffset":2194,"count":12},{"startOffset":932,"endOffset":1238,"count":0},{"startOffset":1245,"endOffset":1565,"count":0},{"startOffset":1572,"endOffset":1913,"count":0},{"startOffset":2040,"endOffset":2079,"count":4},{"startOffset":2086,"endOffset":2184,"count":8},{"startOffset":2123,"endOffset":2136,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1267","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31128,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":228,"endOffset":377,"count":2}],"isBlockCoverage":true},{"functionName":"Parser","ranges":[{"startOffset":550,"endOffset":1056,"count":2},{"startOffset":605,"endOffset":610,"count":0},{"startOffset":642,"endOffset":746,"count":0},{"startOffset":782,"endOffset":891,"count":0},{"startOffset":1048,"endOffset":1053,"count":0}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":1186,"endOffset":1406,"count":0}],"isBlockCoverage":false},{"functionName":"advance","ranges":[{"startOffset":1513,"endOffset":1563,"count":10}],"isBlockCoverage":true},{"functionName":"peek","ranges":[{"startOffset":1661,"endOffset":1708,"count":34}],"isBlockCoverage":true},{"functionName":"lookahead","ranges":[{"startOffset":1831,"endOffset":1885,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":2012,"endOffset":2567,"count":2},{"startOffset":2143,"endOffset":2176,"count":0},{"startOffset":2219,"endOffset":2292,"count":0},{"startOffset":2394,"endOffset":2465,"count":0}],"isBlockCoverage":true},{"functionName":"expect","ranges":[{"startOffset":2693,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"accept","ranges":[{"startOffset":3046,"endOffset":3138,"count":0}],"isBlockCoverage":false},{"functionName":"initBlock","ranges":[{"startOffset":3154,"endOffset":3498,"count":6},{"startOffset":3236,"endOffset":3280,"count":0},{"startOffset":3341,"endOffset":3384,"count":0}],"isBlockCoverage":true},{"functionName":"emptyBlock","ranges":[{"startOffset":3515,"endOffset":3572,"count":4}],"isBlockCoverage":true},{"functionName":"runPlugin","ranges":[{"startOffset":3588,"endOffset":4275,"count":2},{"startOffset":3683,"endOffset":3721,"count":4},{"startOffset":3795,"endOffset":4183,"count":0},{"startOffset":4213,"endOffset":4271,"count":0}],"isBlockCoverage":true},{"functionName":"parseExpr","ranges":[{"startOffset":4508,"endOffset":6467,"count":2},{"startOffset":4609,"endOffset":4656,"count":0},{"startOffset":4663,"endOffset":4710,"count":0},{"startOffset":4717,"endOffset":4775,"count":0},{"startOffset":4782,"endOffset":4827,"count":0},{"startOffset":4834,"endOffset":4885,"count":0},{"startOffset":4892,"endOffset":4943,"count":0},{"startOffset":4950,"endOffset":5001,"count":0},{"startOffset":5008,"endOffset":5057,"count":0},{"startOffset":5064,"endOffset":5115,"count":0},{"startOffset":5122,"endOffset":5134,"count":0},{"startOffset":5141,"endOffset":5166,"count":0},{"startOffset":5173,"endOffset":5250,"count":0},{"startOffset":5257,"endOffset":5355,"count":0},{"startOffset":5362,"endOffset":5405,"count":0},{"startOffset":5412,"endOffset":5457,"count":0},{"startOffset":5464,"endOffset":5513,"count":0},{"startOffset":5520,"endOffset":5565,"count":0},{"startOffset":5572,"endOffset":5627,"count":0},{"startOffset":5634,"endOffset":5684,"count":0},{"startOffset":5691,"endOffset":5738,"count":0},{"startOffset":5745,"endOffset":5790,"count":0},{"startOffset":5797,"endOffset":5860,"count":0},{"startOffset":5867,"endOffset":5914,"count":0},{"startOffset":5921,"endOffset":5931,"count":0},{"startOffset":5938,"endOffset":6182,"count":0},{"startOffset":6189,"endOffset":6457,"count":0}],"isBlockCoverage":true},{"functionName":"parseDot","ranges":[{"startOffset":6482,"endOffset":6552,"count":0}],"isBlockCoverage":false},{"functionName":"parseText","ranges":[{"startOffset":6591,"endOffset":8370,"count":2},{"startOffset":6729,"endOffset":8277,"count":8},{"startOffset":6769,"endOffset":7039,"count":4},{"startOffset":7048,"endOffset":7441,"count":2},{"startOffset":7450,"endOffset":7916,"count":2},{"startOffset":7489,"endOffset":7506,"count":0},{"startOffset":7519,"endOffset":7668,"count":0},{"startOffset":7670,"endOffset":7916,"count":0},{"startOffset":7925,"endOffset":8086,"count":0},{"startOffset":8095,"endOffset":8234,"count":0},{"startOffset":8242,"endOffset":8277,"count":6},{"startOffset":8305,"endOffset":8320,"count":0}],"isBlockCoverage":true},{"functionName":"parseTextHtml","ranges":[{"startOffset":8390,"endOffset":9713,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockExpansion","ranges":[{"startOffset":9781,"endOffset":10029,"count":0}],"isBlockCoverage":false},{"functionName":"parseCase","ranges":[{"startOffset":10068,"endOffset":11143,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhen","ranges":[{"startOffset":11182,"endOffset":11729,"count":0}],"isBlockCoverage":false},{"functionName":"parseDefault","ranges":[{"startOffset":11774,"endOffset":12051,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":12090,"endOffset":13015,"count":0}],"isBlockCoverage":false},{"functionName":"parseConditional","ranges":[{"startOffset":13037,"endOffset":14325,"count":0}],"isBlockCoverage":false},{"functionName":"parseWhile","ranges":[{"startOffset":14341,"endOffset":14745,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlockCode","ranges":[{"startOffset":14795,"endOffset":15879,"count":0}],"isBlockCoverage":false},{"functionName":"parseComment","ranges":[{"startOffset":15923,"endOffset":16489,"count":0}],"isBlockCoverage":false},{"functionName":"parseDoctype","ranges":[{"startOffset":16534,"endOffset":16750,"count":0}],"isBlockCoverage":false},{"functionName":"parseIncludeFilter","ranges":[{"startOffset":16775,"endOffset":17124,"count":0}],"isBlockCoverage":false},{"functionName":"parseFilter","ranges":[{"startOffset":17185,"endOffset":18118,"count":0}],"isBlockCoverage":false},{"functionName":"parseEach","ranges":[{"startOffset":18163,"endOffset":18565,"count":0}],"isBlockCoverage":false},{"functionName":"parseEachOf","ranges":[{"startOffset":18583,"endOffset":18866,"count":0}],"isBlockCoverage":false},{"functionName":"parseExtends","ranges":[{"startOffset":18917,"endOffset":19341,"count":0}],"isBlockCoverage":false},{"functionName":"parseBlock","ranges":[{"startOffset":19395,"endOffset":19750,"count":0}],"isBlockCoverage":false},{"functionName":"parseMixinBlock","ranges":[{"startOffset":19772,"endOffset":20153,"count":0}],"isBlockCoverage":false},{"functionName":"parseYield","ranges":[{"startOffset":20170,"endOffset":20367,"count":0}],"isBlockCoverage":false},{"functionName":"parseInclude","ranges":[{"startOffset":20419,"endOffset":21799,"count":0}],"isBlockCoverage":false},{"functionName":"parseCall","ranges":[{"startOffset":21850,"endOffset":22438,"count":0}],"isBlockCoverage":false},{"functionName":"parseMixin","ranges":[{"startOffset":22485,"endOffset":23078,"count":0}],"isBlockCoverage":false},{"functionName":"parseTextBlock","ranges":[{"startOffset":23150,"endOffset":24743,"count":0}],"isBlockCoverage":false},{"functionName":"block","ranges":[{"startOffset":24794,"endOffset":25393,"count":0}],"isBlockCoverage":false},{"functionName":"parseInterpolation","ranges":[{"startOffset":25509,"endOffset":25927,"count":0}],"isBlockCoverage":false},{"functionName":"parseTag","ranges":[{"startOffset":26023,"endOffset":26458,"count":2}],"isBlockCoverage":true},{"functionName":"tag","ranges":[{"startOffset":26497,"endOffset":30293,"count":2},{"startOffset":26741,"endOffset":26751,"count":0},{"startOffset":26760,"endOffset":27394,"count":0},{"startOffset":27403,"endOffset":27802,"count":0},{"startOffset":27811,"endOffset":28113,"count":0},{"startOffset":28320,"endOffset":28326,"count":0},{"startOffset":28425,"endOffset":28481,"count":0},{"startOffset":28744,"endOffset":28799,"count":0},{"startOffset":28821,"endOffset":28900,"count":0},{"startOffset":28907,"endOffset":29087,"count":0},{"startOffset":29094,"endOffset":29109,"count":0},{"startOffset":29116,"endOffset":29130,"count":0},{"startOffset":29137,"endOffset":29152,"count":0},{"startOffset":29159,"endOffset":29170,"count":0},{"startOffset":29177,"endOffset":29204,"count":0},{"startOffset":29211,"endOffset":29255,"count":0},{"startOffset":29262,"endOffset":29396,"count":0},{"startOffset":29403,"endOffset":29879,"count":0},{"startOffset":29998,"endOffset":30075,"count":0},{"startOffset":30115,"endOffset":30272,"count":0}],"isBlockCoverage":true},{"functionName":"attrs","ranges":[{"startOffset":30305,"endOffset":31123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1268","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/token-stream/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":841,"count":1}],"isBlockCoverage":true},{"functionName":"TokenStream","ranges":[{"startOffset":45,"endOffset":216,"count":2},{"startOffset":106,"endOffset":189,"count":0}],"isBlockCoverage":true},{"functionName":"TokenStream.lookahead","ranges":[{"startOffset":251,"endOffset":404,"count":0}],"isBlockCoverage":false},{"functionName":"TokenStream.peek","ranges":[{"startOffset":435,"endOffset":576,"count":34},{"startOffset":482,"endOffset":548,"count":0}],"isBlockCoverage":true},{"functionName":"TokenStream.advance","ranges":[{"startOffset":610,"endOffset":756,"count":10},{"startOffset":657,"endOffset":723,"count":0}],"isBlockCoverage":true},{"functionName":"TokenStream.defer","ranges":[{"startOffset":788,"endOffset":839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1269","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-parser/lib/inline-tags.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":214,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1270","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-load/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3301,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":162,"endOffset":1280,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":304,"endOffset":1276,"count":12},{"startOffset":479,"endOffset":1266,"count":0}],"isBlockCoverage":true},{"functionName":"loadString","ranges":[{"startOffset":1296,"endOffset":1510,"count":2}],"isBlockCoverage":true},{"functionName":"loadFile","ranges":[{"startOffset":1524,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":1743,"endOffset":2281,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":2295,"endOffset":2367,"count":0}],"isBlockCoverage":false},{"functionName":"validateOptions","ranges":[{"startOffset":2393,"endOffset":3133,"count":4},{"startOffset":2491,"endOffset":2550,"count":0},{"startOffset":2619,"endOffset":2683,"count":0},{"startOffset":2754,"endOffset":2820,"count":0},{"startOffset":2912,"endOffset":2980,"count":0},{"startOffset":3066,"endOffset":3131,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":3136,"endOffset":3300,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1271","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-walk/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3165,"count":1}],"isBlockCoverage":true},{"functionName":"walkAST","ranges":[{"startOffset":41,"endOffset":3164,"count":60},{"startOffset":101,"endOffset":129,"count":14},{"startOffset":130,"endOffset":163,"count":2},{"startOffset":165,"endOffset":209,"count":2},{"startOffset":230,"endOffset":261,"count":8},{"startOffset":314,"endOffset":319,"count":10},{"startOffset":637,"endOffset":761,"count":50},{"startOffset":685,"endOffset":760,"count":10},{"startOffset":728,"endOffset":759,"count":0},{"startOffset":845,"endOffset":870,"count":0},{"startOffset":900,"endOffset":1001,"count":0},{"startOffset":1058,"endOffset":1076,"count":0},{"startOffset":1081,"endOffset":1155,"count":20},{"startOffset":1160,"endOffset":1172,"count":0},{"startOffset":1177,"endOffset":1191,"count":0},{"startOffset":1196,"endOffset":1209,"count":0},{"startOffset":1214,"endOffset":1225,"count":10},{"startOffset":1230,"endOffset":1253,"count":10},{"startOffset":1258,"endOffset":1270,"count":10},{"startOffset":1275,"endOffset":1287,"count":20},{"startOffset":1292,"endOffset":1413,"count":20},{"startOffset":1327,"endOffset":1400,"count":10},{"startOffset":1418,"endOffset":1645,"count":0},{"startOffset":1650,"endOffset":1772,"count":0},{"startOffset":1777,"endOffset":2026,"count":0},{"startOffset":2031,"endOffset":2158,"count":0},{"startOffset":2163,"endOffset":2240,"count":0},{"startOffset":2245,"endOffset":2377,"count":0},{"startOffset":2382,"endOffset":2395,"count":0},{"startOffset":2400,"endOffset":2420,"count":0},{"startOffset":2425,"endOffset":2440,"count":0},{"startOffset":2445,"endOffset":2460,"count":0},{"startOffset":2465,"endOffset":2486,"count":0},{"startOffset":2491,"endOffset":2509,"count":0},{"startOffset":2514,"endOffset":2532,"count":0},{"startOffset":2537,"endOffset":2562,"count":20},{"startOffset":2567,"endOffset":2711,"count":0},{"startOffset":2716,"endOffset":2796,"count":0},{"startOffset":2830,"endOffset":2852,"count":12}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":339,"endOffset":595,"count":0}],"isBlockCoverage":false},{"functionName":"walkAndMergeNodes","ranges":[{"startOffset":2871,"endOffset":3162,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2931,"endOffset":3152,"count":40},{"startOffset":3046,"endOffset":3092,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1272","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-filters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1273","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-filters/lib/run-filter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"getMinifyTransformerName","ranges":[{"startOffset":122,"endOffset":286,"count":0}],"isBlockCoverage":false},{"functionName":"filter","ranges":[{"startOffset":288,"endOffset":1259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1274","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/jstransformer/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14242,"count":1},{"startOffset":507,"endOffset":678,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":172,"endOffset":237,"count":0}],"isBlockCoverage":false},{"functionName":"tr.readFile","ranges":[{"startOffset":531,"endOffset":590,"count":0}],"isBlockCoverage":false},{"functionName":"tr.readFileSync","ranges":[{"startOffset":612,"endOffset":675,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFn","ranges":[{"startOffset":680,"endOffset":1209,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeFnAsync","ranges":[{"startOffset":1210,"endOffset":1516,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":1517,"endOffset":2044,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAsync","ranges":[{"startOffset":2045,"endOffset":2357,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer","ranges":[{"startOffset":2359,"endOffset":3159,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer._hasMethod","ranges":[{"startOffset":4096,"endOffset":4166,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.can","ranges":[{"startOffset":4196,"endOffset":4322,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compile","ranges":[{"startOffset":4372,"endOffset":5118,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileAsync","ranges":[{"startOffset":5157,"endOffset":5634,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileFile","ranges":[{"startOffset":5672,"endOffset":6398,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileFileAsync","ranges":[{"startOffset":6441,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileClient","ranges":[{"startOffset":7412,"endOffset":7990,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileClientAsync","ranges":[{"startOffset":8035,"endOffset":8664,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileFileClient","ranges":[{"startOffset":8708,"endOffset":9395,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.compileFileClientAsync","ranges":[{"startOffset":9444,"endOffset":10334,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.render","ranges":[{"startOffset":10382,"endOffset":11289,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.renderAsync","ranges":[{"startOffset":11327,"endOffset":12229,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.renderFile","ranges":[{"startOffset":12266,"endOffset":13011,"count":0}],"isBlockCoverage":false},{"functionName":"Transformer.renderFileAsync","ranges":[{"startOffset":13053,"endOffset":14240,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1275","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":49,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1276","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1277","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/core.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4862,"count":1}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":48,"endOffset":66,"count":0}],"isBlockCoverage":false},{"functionName":"getThen","ranges":[{"startOffset":640,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"tryCallOne","ranges":[{"startOffset":759,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"tryCallTwo","ranges":[{"startOffset":879,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"Promise","ranges":[{"startOffset":1026,"endOffset":1389,"count":6},{"startOffset":1081,"endOffset":1151,"count":0},{"startOffset":1184,"endOffset":1267,"count":0},{"startOffset":1364,"endOffset":1388,"count":0}],"isBlockCoverage":true},{"functionName":"Promise.then","ranges":[{"startOffset":1476,"endOffset":1711,"count":0}],"isBlockCoverage":false},{"functionName":"safeThen","ranges":[{"startOffset":1714,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":1957,"endOffset":2393,"count":0}],"isBlockCoverage":false},{"functionName":"handleResolved","ranges":[{"startOffset":2395,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":2891,"endOffset":3711,"count":0}],"isBlockCoverage":false},{"functionName":"reject","ranges":[{"startOffset":3713,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"finale","ranges":[{"startOffset":3862,"endOffset":4100,"count":0}],"isBlockCoverage":false},{"functionName":"Handler","ranges":[{"startOffset":4102,"endOffset":4332,"count":0}],"isBlockCoverage":false},{"functionName":"doResolve","ranges":[{"startOffset":4504,"endOffset":4861,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1278","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/asap/raw.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"rawAsap","ranges":[{"startOffset":748,"endOffset":916,"count":0}],"isBlockCoverage":false},{"functionName":"flush","ranges":[{"startOffset":1861,"endOffset":2972,"count":0}],"isBlockCoverage":false},{"functionName":"requestFlush","ranges":[{"startOffset":3011,"endOffset":4138,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1279","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/done.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":314,"count":1}],"isBlockCoverage":true},{"functionName":"Promise.done","ranges":[{"startOffset":103,"endOffset":312,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1280","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/finally.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":348,"count":1}],"isBlockCoverage":true},{"functionName":"Promise.finally","ranges":[{"startOffset":109,"endOffset":346,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1281","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/es6-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2674,"count":1}],"isBlockCoverage":true},{"functionName":"valuePromise","ranges":[{"startOffset":373,"endOffset":483,"count":6}],"isBlockCoverage":true},{"functionName":"Promise.resolve","ranges":[{"startOffset":502,"endOffset":1136,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.all","ranges":[{"startOffset":1153,"endOffset":2246,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.reject","ranges":[{"startOffset":2266,"endOffset":2361,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.race","ranges":[{"startOffset":2379,"endOffset":2552,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.catch","ranges":[{"startOffset":2609,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1282","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/node-extensions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3271,"count":1}],"isBlockCoverage":true},{"functionName":"Promise.denodeify","ranges":[{"startOffset":251,"endOffset":467,"count":1},{"startOffset":327,"endOffset":356,"count":0},{"startOffset":361,"endOffset":416,"count":0}],"isBlockCoverage":true},{"functionName":"denodeifyWithCount","ranges":[{"startOffset":572,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"denodeifyWithoutCount","ranges":[{"startOffset":1173,"endOffset":2392,"count":1},{"startOffset":1309,"endOffset":1338,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1841,"endOffset":2040,"count":4}],"isBlockCoverage":true},{"functionName":"Promise.nodeify","ranges":[{"startOffset":2412,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.nodeify","ranges":[{"startOffset":2999,"endOffset":3269,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1283","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/asap/asap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":true},{"functionName":"asap","ranges":[{"startOffset":510,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask","ranges":[{"startOffset":751,"endOffset":819,"count":0}],"isBlockCoverage":false},{"functionName":"RawTask.call","ranges":[{"startOffset":846,"endOffset":1955,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1284","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/promise/lib/synchronous.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1399,"count":1}],"isBlockCoverage":true},{"functionName":"Promise.enableSynchronous","ranges":[{"startOffset":106,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"Promise.disableSynchronous","ranges":[{"startOffset":1124,"endOffset":1397,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1285","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/jstransformer/node_modules/is-promise/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"isPromise","ranges":[{"startOffset":65,"endOffset":200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1286","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":729,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":728,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":42,"endOffset":725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1287","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-filters/lib/handle-filters.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4233,"count":1}],"isBlockCoverage":true},{"functionName":"handleFilters","ranges":[{"startOffset":242,"endOffset":3143,"count":2}],"isBlockCoverage":true},{"functionName":"walk.includeDependencies","ranges":[{"startOffset":353,"endOffset":2496,"count":12},{"startOffset":425,"endOffset":431,"count":0},{"startOffset":467,"endOffset":760,"count":0},{"startOffset":797,"endOffset":819,"count":0},{"startOffset":821,"endOffset":1498,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1230,"endOffset":1423,"count":0}],"isBlockCoverage":false},{"functionName":"filterWithFallback","ranges":[{"startOffset":1506,"endOffset":2005,"count":0}],"isBlockCoverage":false},{"functionName":"filterFileWithFallback","ranges":[{"startOffset":2013,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"getFilterName","ranges":[{"startOffset":2537,"endOffset":3127,"count":0}],"isBlockCoverage":false},{"functionName":"handleNestedFilters","ranges":[{"startOffset":3145,"endOffset":3415,"count":0}],"isBlockCoverage":false},{"functionName":"getBodyAsText","ranges":[{"startOffset":3417,"endOffset":3546,"count":0}],"isBlockCoverage":false},{"functionName":"getAttributes","ranges":[{"startOffset":3548,"endOffset":4232,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1288","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/constantinople/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13205,"count":1}],"isBlockCoverage":true},{"functionName":"expressionToConstant","ranges":[{"startOffset":169,"endOffset":9163,"count":2},{"startOffset":250,"endOffset":267,"count":0},{"startOffset":9102,"endOffset":9138,"count":0}],"isBlockCoverage":true},{"functionName":"toConstant","ranges":[{"startOffset":297,"endOffset":9040,"count":12},{"startOffset":366,"endOffset":373,"count":2},{"startOffset":373,"endOffset":419,"count":10},{"startOffset":419,"endOffset":1212,"count":0},{"startOffset":1212,"endOffset":1259,"count":10},{"startOffset":1259,"endOffset":1471,"count":2},{"startOffset":1395,"endOffset":1460,"count":0},{"startOffset":1471,"endOffset":1516,"count":8},{"startOffset":1516,"endOffset":1564,"count":0},{"startOffset":1564,"endOffset":1609,"count":8},{"startOffset":1609,"endOffset":3607,"count":2},{"startOffset":1813,"endOffset":2122,"count":0},{"startOffset":2236,"endOffset":2315,"count":0},{"startOffset":2380,"endOffset":3597,"count":0},{"startOffset":3607,"endOffset":3659,"count":6},{"startOffset":3659,"endOffset":3850,"count":2},{"startOffset":3753,"endOffset":3788,"count":0},{"startOffset":3850,"endOffset":3891,"count":4},{"startOffset":3891,"endOffset":4090,"count":0},{"startOffset":4090,"endOffset":4138,"count":4},{"startOffset":4138,"endOffset":4479,"count":0},{"startOffset":4479,"endOffset":4526,"count":4},{"startOffset":4526,"endOffset":5234,"count":0},{"startOffset":5234,"endOffset":5276,"count":4},{"startOffset":5276,"endOffset":5357,"count":2},{"startOffset":5357,"endOffset":5405,"count":0},{"startOffset":5405,"endOffset":5452,"count":2},{"startOffset":5452,"endOffset":7238,"count":0},{"startOffset":7238,"endOffset":7292,"count":2},{"startOffset":7292,"endOffset":7357,"count":0},{"startOffset":7357,"endOffset":7401,"count":2},{"startOffset":7401,"endOffset":7481,"count":0},{"startOffset":7481,"endOffset":7530,"count":2},{"startOffset":7530,"endOffset":7786,"count":0},{"startOffset":7786,"endOffset":7830,"count":2},{"startOffset":7830,"endOffset":7878,"count":0},{"startOffset":7878,"endOffset":7966,"count":2},{"startOffset":7966,"endOffset":8365,"count":0},{"startOffset":8365,"endOffset":8411,"count":2},{"startOffset":8411,"endOffset":9008,"count":0},{"startOffset":9008,"endOffset":9039,"count":2}],"isBlockCoverage":true},{"functionName":"isSpreadable","ranges":[{"startOffset":9217,"endOffset":9449,"count":0}],"isBlockCoverage":false},{"functionName":"shallowEqual","ranges":[{"startOffset":9450,"endOffset":9872,"count":0}],"isBlockCoverage":false},{"functionName":"canCallMethod","ranges":[{"startOffset":9873,"endOffset":11727,"count":0}],"isBlockCoverage":false},{"functionName":"isConstant","ranges":[{"startOffset":11887,"endOffset":12586,"count":2},{"startOffset":11964,"endOffset":11993,"count":0},{"startOffset":12074,"endOffset":12123,"count":0},{"startOffset":12124,"endOffset":12169,"count":0},{"startOffset":12171,"endOffset":12210,"count":0},{"startOffset":12348,"endOffset":12408,"count":0}],"isBlockCoverage":true},{"functionName":"toConstant","ranges":[{"startOffset":12620,"endOffset":12929,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1289","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/constantinople/lib/binaryOperation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1337,"count":1}],"isBlockCoverage":true},{"functionName":"binaryOperation","ranges":[{"startOffset":41,"endOffset":1298,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1290","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-linker/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5733,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":80,"endOffset":153,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":178,"endOffset":1925,"count":2},{"startOffset":461,"endOffset":507,"count":0},{"startOffset":607,"endOffset":1909,"count":0}],"isBlockCoverage":true},{"functionName":"addNode","ranges":[{"startOffset":681,"endOffset":1164,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1299,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1440,"endOffset":1675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1722,"endOffset":1806,"count":0}],"isBlockCoverage":false},{"functionName":"findDeclaredBlocks","ranges":[{"startOffset":1927,"endOffset":2265,"count":2}],"isBlockCoverage":true},{"functionName":"before","ranges":[{"startOffset":2039,"endOffset":2239,"count":12},{"startOffset":2098,"endOffset":2124,"count":0},{"startOffset":2126,"endOffset":2235,"count":0}],"isBlockCoverage":true},{"functionName":"flattenParentBlocks","ranges":[{"startOffset":2267,"endOffset":2569,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2571,"endOffset":3685,"count":0}],"isBlockCoverage":false},{"functionName":"applyIncludes","ranges":[{"startOffset":3687,"endOffset":4190,"count":2}],"isBlockCoverage":true},{"functionName":"before","ranges":[{"startOffset":3752,"endOffset":3910,"count":12},{"startOffset":3823,"endOffset":3904,"count":0}],"isBlockCoverage":true},{"functionName":"after","ranges":[{"startOffset":3916,"endOffset":4183,"count":12},{"startOffset":3983,"endOffset":4177,"count":0}],"isBlockCoverage":true},{"functionName":"removeBlocks","ranges":[{"startOffset":4191,"endOffset":4392,"count":0}],"isBlockCoverage":false},{"functionName":"applyYield","ranges":[{"startOffset":4394,"endOffset":5241,"count":0}],"isBlockCoverage":false},{"functionName":"checkExtendPosition","ranges":[{"startOffset":5243,"endOffset":5732,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5338,"endOffset":5728,"count":12},{"startOffset":5388,"endOffset":5724,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1291","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-code-gen/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24297,"count":1}],"isBlockCoverage":true},{"functionName":"generateCode","ranges":[{"startOffset":740,"endOffset":826,"count":2}],"isBlockCoverage":true},{"functionName":"isConstant","ranges":[{"startOffset":828,"endOffset":925,"count":2}],"isBlockCoverage":true},{"functionName":"toConstant","ranges":[{"startOffset":926,"endOffset":1034,"count":0}],"isBlockCoverage":false},{"functionName":"Compiler","ranges":[{"startOffset":1160,"endOffset":1925,"count":2},{"startOffset":1230,"endOffset":1235,"count":0},{"startOffset":1413,"endOffset":1443,"count":0},{"startOffset":1445,"endOffset":1470,"count":0},{"startOffset":1681,"endOffset":1714,"count":0},{"startOffset":1812,"endOffset":1820,"count":1},{"startOffset":1871,"endOffset":1923,"count":1}],"isBlockCoverage":true},{"functionName":"runtime","ranges":[{"startOffset":1993,"endOffset":2171,"count":2},{"startOffset":2047,"endOffset":2167,"count":1}],"isBlockCoverage":true},{"functionName":"error","ranges":[{"startOffset":2183,"endOffset":2363,"count":0}],"isBlockCoverage":false},{"functionName":"compile","ranges":[{"startOffset":2451,"endOffset":4457,"count":2},{"startOffset":2500,"endOffset":2538,"count":0},{"startOffset":2800,"endOffset":3155,"count":0},{"startOffset":3241,"endOffset":3290,"count":0},{"startOffset":3346,"endOffset":3397,"count":0},{"startOffset":3675,"endOffset":3819,"count":0},{"startOffset":3979,"endOffset":3994,"count":1},{"startOffset":3995,"endOffset":4010,"count":1},{"startOffset":4114,"endOffset":4157,"count":0},{"startOffset":4324,"endOffset":4337,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3525,"endOffset":3587,"count":2}],"isBlockCoverage":true},{"functionName":"setDoctype","ranges":[{"startOffset":4722,"endOffset":4937,"count":0}],"isBlockCoverage":false},{"functionName":"buffer","ranges":[{"startOffset":5108,"endOffset":5954,"count":16},{"startOffset":5269,"endOffset":5315,"count":10},{"startOffset":5322,"endOffset":5684,"count":10},{"startOffset":5368,"endOffset":5457,"count":0},{"startOffset":5684,"endOffset":5950,"count":6}],"isBlockCoverage":true},{"functionName":"bufferExpression","ranges":[{"startOffset":6096,"endOffset":6937,"count":2},{"startOffset":6137,"endOffset":6192,"count":0},{"startOffset":6248,"endOffset":6294,"count":0},{"startOffset":6301,"endOffset":6656,"count":0}],"isBlockCoverage":true},{"functionName":"prettyIndent","ranges":[{"startOffset":7143,"endOffset":7401,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":7491,"endOffset":9051,"count":12},{"startOffset":7560,"endOffset":7925,"count":0},{"startOffset":7991,"endOffset":8209,"count":8},{"startOffset":8247,"endOffset":9020,"count":0}],"isBlockCoverage":true},{"functionName":"visitNode","ranges":[{"startOffset":9145,"endOffset":9209,"count":12}],"isBlockCoverage":true},{"functionName":"visitCase","ranges":[{"startOffset":9311,"endOffset":9439,"count":0}],"isBlockCoverage":false},{"functionName":"visitWhen","ranges":[{"startOffset":9541,"endOffset":9792,"count":0}],"isBlockCoverage":false},{"functionName":"visitLiteral","ranges":[{"startOffset":9900,"endOffset":9947,"count":0}],"isBlockCoverage":false},{"functionName":"visitNamedBlock","ranges":[{"startOffset":9969,"endOffset":10025,"count":0}],"isBlockCoverage":false},{"functionName":"visitBlock","ranges":[{"startOffset":10135,"endOffset":10852,"count":4},{"startOffset":10280,"endOffset":10311,"count":0},{"startOffset":10312,"endOffset":10338,"count":0},{"startOffset":10339,"endOffset":10378,"count":0},{"startOffset":10379,"endOffset":10418,"count":0},{"startOffset":10425,"endOffset":10466,"count":0},{"startOffset":10516,"endOffset":10848,"count":8},{"startOffset":10567,"endOffset":10583,"count":0},{"startOffset":10584,"endOffset":10612,"count":0},{"startOffset":10613,"endOffset":10654,"count":0},{"startOffset":10655,"endOffset":10700,"count":0},{"startOffset":10701,"endOffset":10746,"count":0},{"startOffset":10755,"endOffset":10801,"count":0}],"isBlockCoverage":true},{"functionName":"visitMixinBlock","ranges":[{"startOffset":10978,"endOffset":11215,"count":0}],"isBlockCoverage":false},{"functionName":"visitDoctype","ranges":[{"startOffset":11470,"endOffset":11684,"count":0}],"isBlockCoverage":false},{"functionName":"visitMixin","ranges":[{"startOffset":11849,"endOffset":15278,"count":0}],"isBlockCoverage":false},{"functionName":"visitTag","ranges":[{"startOffset":15489,"endOffset":17622,"count":2},{"startOffset":15787,"endOffset":15816,"count":0},{"startOffset":15904,"endOffset":15942,"count":0},{"startOffset":16015,"endOffset":16031,"count":0},{"startOffset":16033,"endOffset":16060,"count":0},{"startOffset":16126,"endOffset":16927,"count":0},{"startOffset":17168,"endOffset":17193,"count":0},{"startOffset":17273,"endOffset":17297,"count":0},{"startOffset":17298,"endOffset":17354,"count":0},{"startOffset":17355,"endOffset":17384,"count":0},{"startOffset":17401,"endOffset":17428,"count":0},{"startOffset":17567,"endOffset":17597,"count":0}],"isBlockCoverage":true},{"functionName":"bufferName","ranges":[{"startOffset":15608,"endOffset":15724,"count":4},{"startOffset":15656,"endOffset":15688,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16600,"endOffset":16693,"count":0}],"isBlockCoverage":false},{"functionName":"visitInterpolatedTag","ranges":[{"startOffset":17746,"endOffset":17802,"count":0}],"isBlockCoverage":false},{"functionName":"visitText","ranges":[{"startOffset":17901,"endOffset":17948,"count":4}],"isBlockCoverage":true},{"functionName":"visitComment","ranges":[{"startOffset":18100,"endOffset":18248,"count":0}],"isBlockCoverage":false},{"functionName":"visitYieldBlock","ranges":[{"startOffset":18437,"endOffset":18455,"count":0}],"isBlockCoverage":false},{"functionName":"visitBlockComment","ranges":[{"startOffset":18573,"endOffset":18830,"count":0}],"isBlockCoverage":false},{"functionName":"visitCode","ranges":[{"startOffset":19040,"endOffset":19678,"count":2},{"startOffset":19456,"endOffset":19500,"count":0},{"startOffset":19543,"endOffset":19674,"count":0}],"isBlockCoverage":true},{"functionName":"visitConditional","ranges":[{"startOffset":19793,"endOffset":20231,"count":0}],"isBlockCoverage":false},{"functionName":"visitWhile","ranges":[{"startOffset":20328,"endOffset":20477,"count":0}],"isBlockCoverage":false},{"functionName":"visitEach","ranges":[{"startOffset":20577,"endOffset":22077,"count":0}],"isBlockCoverage":false},{"functionName":"visitEachOf","ranges":[{"startOffset":22095,"endOffset":22367,"count":0}],"isBlockCoverage":false},{"functionName":"visitAttributes","ranges":[{"startOffset":22470,"endOffset":23242,"count":2},{"startOffset":22537,"endOffset":23176,"count":0},{"startOffset":23200,"endOffset":23238,"count":0}],"isBlockCoverage":true},{"functionName":"attrs","ranges":[{"startOffset":23292,"endOffset":23546,"count":0}],"isBlockCoverage":false},{"functionName":"attributeBlocks","ranges":[{"startOffset":23612,"endOffset":23783,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23712,"endOffset":23771,"count":0}],"isBlockCoverage":false},{"functionName":"tagCanInline","ranges":[{"startOffset":23789,"endOffset":24296,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1292","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/doctypes/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1009,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1293","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/build.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"build","ranges":[{"startOffset":208,"endOffset":633,"count":2},{"startOffset":376,"endOffset":528,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":283,"endOffset":328,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":563,"endOffset":613,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1294","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/lib/dependencies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":467,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1295","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/lib/internals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":166,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1296","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/lib/sources.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2742,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1297","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6847,"count":1}],"isBlockCoverage":true},{"functionName":"pug_merge","ranges":[{"startOffset":381,"endOffset":1064,"count":0}],"isBlockCoverage":false},{"functionName":"pug_classes_array","ranges":[{"startOffset":1772,"endOffset":2198,"count":0}],"isBlockCoverage":false},{"functionName":"pug_classes_object","ranges":[{"startOffset":2199,"endOffset":2470,"count":0}],"isBlockCoverage":false},{"functionName":"pug_classes","ranges":[{"startOffset":2471,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"pug_style","ranges":[{"startOffset":2893,"endOffset":3225,"count":0}],"isBlockCoverage":false},{"functionName":"pug_attr","ranges":[{"startOffset":3414,"endOffset":4084,"count":0}],"isBlockCoverage":false},{"functionName":"pug_attrs","ranges":[{"startOffset":4277,"endOffset":4717,"count":0}],"isBlockCoverage":false},{"functionName":"pug_escape","ranges":[{"startOffset":4889,"endOffset":5643,"count":1},{"startOffset":5023,"endOffset":5641,"count":0}],"isBlockCoverage":true},{"functionName":"pug_rethrow","ranges":[{"startOffset":5913,"endOffset":6846,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1298","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-attrs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4117,"count":1}],"isBlockCoverage":true},{"functionName":"isConstant","ranges":[{"startOffset":175,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"toConstant","ranges":[{"startOffset":273,"endOffset":381,"count":0}],"isBlockCoverage":false},{"functionName":"compileAttrs","ranges":[{"startOffset":494,"endOffset":4116,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1299","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/js-stringify/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":456,"count":1}],"isBlockCoverage":true},{"functionName":"stringify","ranges":[{"startOffset":43,"endOffset":455,"count":24},{"startOffset":96,"endOffset":162,"count":0},{"startOffset":188,"endOffset":217,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1300","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/void-elements/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":338,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1301","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/with/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4873,"count":1},{"startOffset":239,"endOffset":320,"count":0},{"startOffset":496,"endOffset":538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":498,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":591,"endOffset":842,"count":1},{"startOffset":650,"endOffset":841,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":900,"endOffset":981,"count":1},{"startOffset":958,"endOffset":978,"count":0}],"isBlockCoverage":true},{"functionName":"addWith","ranges":[{"startOffset":1570,"endOffset":3483,"count":2},{"startOffset":1853,"endOffset":2027,"count":0},{"startOffset":2116,"endOffset":2297,"count":0},{"startOffset":2617,"endOffset":2628,"count":0},{"startOffset":2760,"endOffset":2788,"count":0},{"startOffset":2857,"endOffset":2894,"count":0},{"startOffset":3007,"endOffset":3037,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2429,"endOffset":2442,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2514,"endOffset":2537,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2555,"endOffset":2580,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3105,"endOffset":3227,"count":2}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":3570,"endOffset":3662,"count":0}],"isBlockCoverage":false},{"functionName":"ReturnStatement","ranges":[{"startOffset":3668,"endOffset":3913,"count":0}],"isBlockCoverage":false},{"functionName":"unwrapReturns","ranges":[{"startOffset":4192,"endOffset":4779,"count":2},{"startOffset":4630,"endOffset":4650,"count":0},{"startOffset":4722,"endOffset":4764,"count":0}],"isBlockCoverage":true},{"functionName":"source","ranges":[{"startOffset":4326,"endOffset":4402,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":4412,"endOffset":4537,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1302","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-walk/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5030,"count":1},{"startOffset":239,"endOffset":320,"count":0},{"startOffset":496,"endOffset":538,"count":0},{"startOffset":1577,"endOffset":1664,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":498,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":591,"endOffset":842,"count":1},{"startOffset":650,"endOffset":841,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":900,"endOffset":981,"count":1},{"startOffset":958,"endOffset":978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1407,"endOffset":1573,"count":238}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1544,"endOffset":1572,"count":392}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":1665,"endOffset":2703,"count":0}],"isBlockCoverage":false},{"functionName":"ancestor","ranges":[{"startOffset":2729,"endOffset":4006,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2815,"endOffset":4003,"count":8}],"isBlockCoverage":true},{"functionName":"recurse","ranges":[{"startOffset":2873,"endOffset":3989,"count":492},{"startOffset":2937,"endOffset":2944,"count":180},{"startOffset":2944,"endOffset":3172,"count":312},{"startOffset":3173,"endOffset":3181,"count":269},{"startOffset":3182,"endOffset":3197,"count":43},{"startOffset":3199,"endOffset":3328,"count":43},{"startOffset":3328,"endOffset":3383,"count":312},{"startOffset":3383,"endOffset":3388,"count":0},{"startOffset":3390,"endOffset":3714,"count":436},{"startOffset":3479,"endOffset":3621,"count":24},{"startOffset":3535,"endOffset":3603,"count":72},{"startOffset":3621,"endOffset":3700,"count":412},{"startOffset":3714,"endOffset":3769,"count":312},{"startOffset":3770,"endOffset":3778,"count":269},{"startOffset":3779,"endOffset":3793,"count":43},{"startOffset":3795,"endOffset":3923,"count":43},{"startOffset":3843,"endOffset":3909,"count":0},{"startOffset":3923,"endOffset":3979,"count":312}],"isBlockCoverage":true},{"functionName":"recursive","ranges":[{"startOffset":4036,"endOffset":4965,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4123,"endOffset":4962,"count":2}],"isBlockCoverage":true},{"functionName":"recurse","ranges":[{"startOffset":4151,"endOffset":4948,"count":230},{"startOffset":4215,"endOffset":4222,"count":86},{"startOffset":4222,"endOffset":4321,"count":144},{"startOffset":4322,"endOffset":4330,"count":144},{"startOffset":4331,"endOffset":4346,"count":0},{"startOffset":4348,"endOffset":4475,"count":0},{"startOffset":4475,"endOffset":4938,"count":144},{"startOffset":4553,"endOffset":4558,"count":0},{"startOffset":4560,"endOffset":4924,"count":200},{"startOffset":4657,"endOffset":4815,"count":6},{"startOffset":4717,"endOffset":4793,"count":34},{"startOffset":4815,"endOffset":4906,"count":194}],"isBlockCoverage":true}]},{"scriptId":"1303","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-walk/lib/explode.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4311,"count":1},{"startOffset":239,"endOffset":320,"count":0},{"startOffset":496,"endOffset":538,"count":0},{"startOffset":1038,"endOffset":1118,"count":0},{"startOffset":1559,"endOffset":1652,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":498,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":591,"endOffset":842,"count":1},{"startOffset":650,"endOffset":841,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1006,"endOffset":1034,"count":300}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1377,"endOffset":1555,"count":45}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1526,"endOffset":1554,"count":457}],"isBlockCoverage":true},{"functionName":"explode","ranges":[{"startOffset":1944,"endOffset":4248,"count":3},{"startOffset":2023,"endOffset":4226,"count":12},{"startOffset":2095,"endOffset":3246,"count":2},{"startOffset":2144,"endOffset":3236,"count":12},{"startOffset":2190,"endOffset":2656,"count":1},{"startOffset":2342,"endOffset":2638,"count":0},{"startOffset":2656,"endOffset":3222,"count":11},{"startOffset":2924,"endOffset":3204,"count":0},{"startOffset":3246,"endOffset":4220,"count":10},{"startOffset":3314,"endOffset":3716,"count":0},{"startOffset":3948,"endOffset":4196,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1304","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/with/lib/globals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6609,"count":1},{"startOffset":239,"endOffset":320,"count":0},{"startOffset":496,"endOffset":538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":498,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":591,"endOffset":842,"count":1},{"startOffset":650,"endOffset":841,"count":0}],"isBlockCoverage":true},{"functionName":"__importDefault","ranges":[{"startOffset":900,"endOffset":981,"count":2},{"startOffset":958,"endOffset":978,"count":0}],"isBlockCoverage":true},{"functionName":"isScope","ranges":[{"startOffset":1281,"endOffset":1336,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScope","ranges":[{"startOffset":1359,"endOffset":1410,"count":0}],"isBlockCoverage":false},{"functionName":"declaresArguments","ranges":[{"startOffset":1438,"endOffset":1504,"count":0}],"isBlockCoverage":false},{"functionName":"getLocals","ranges":[{"startOffset":1604,"endOffset":1633,"count":249}],"isBlockCoverage":true},{"functionName":"declareLocals","ranges":[{"startOffset":1657,"endOffset":1723,"count":0}],"isBlockCoverage":false},{"functionName":"setLocal","ranges":[{"startOffset":1742,"endOffset":1787,"count":0}],"isBlockCoverage":false},{"functionName":"declareFunction","ranges":[{"startOffset":1803,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"declarePattern","ranges":[{"startOffset":1997,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"declareModuleSpecifier","ranges":[{"startOffset":3221,"endOffset":3453,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":3500,"endOffset":3930,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":3936,"endOffset":4238,"count":0}],"isBlockCoverage":false},{"functionName":"ClassDeclaration","ranges":[{"startOffset":4275,"endOffset":4517,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":4523,"endOffset":4723,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":4942,"endOffset":5611,"count":43},{"startOffset":5071,"endOffset":5078,"count":0},{"startOffset":5233,"endOffset":5240,"count":1},{"startOffset":5240,"endOffset":5283,"count":42},{"startOffset":5283,"endOffset":5561,"count":249},{"startOffset":5326,"endOffset":5354,"count":0},{"startOffset":5356,"endOffset":5403,"count":0},{"startOffset":5484,"endOffset":5498,"count":0},{"startOffset":5500,"endOffset":5547,"count":0},{"startOffset":5561,"endOffset":5610,"count":42}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":5617,"endOffset":5823,"count":0}],"isBlockCoverage":false},{"functionName":"findGlobals","ranges":[{"startOffset":5829,"endOffset":6542,"count":4},{"startOffset":5931,"endOffset":5999,"count":0},{"startOffset":6135,"endOffset":6405,"count":42},{"startOffset":6189,"endOffset":6197,"count":0},{"startOffset":6284,"endOffset":6328,"count":28},{"startOffset":6328,"endOffset":6399,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6450,"endOffset":6486,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6502,"endOffset":6538,"count":20},{"startOffset":6529,"endOffset":6533,"count":11},{"startOffset":6534,"endOffset":6537,"count":9}],"isBlockCoverage":true}]},{"scriptId":"1305","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/assert-never/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":990,"count":1}],"isBlockCoverage":true},{"functionName":"assertNever","ranges":[{"startOffset":749,"endOffset":923,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1306","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/with/lib/reference.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1584,"count":1},{"startOffset":239,"endOffset":320,"count":0},{"startOffset":496,"endOffset":538,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":88,"endOffset":237,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":242,"endOffset":319,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":403,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"__setModuleDefault","ranges":[{"startOffset":498,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"__importStar","ranges":[{"startOffset":591,"endOffset":842,"count":1},{"startOffset":650,"endOffset":841,"count":0}],"isBlockCoverage":true},{"functionName":"isReferenced","ranges":[{"startOffset":956,"endOffset":1514,"count":43},{"startOffset":1113,"endOffset":1196,"count":0},{"startOffset":1262,"endOffset":1284,"count":0},{"startOffset":1293,"endOffset":1344,"count":0},{"startOffset":1412,"endOffset":1465,"count":28},{"startOffset":1471,"endOffset":1513,"count":15}],"isBlockCoverage":true}]},{"scriptId":"1307","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/pug-runtime/wrap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":53,"endOffset":236,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1308","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":269,"count":1},{"startOffset":159,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1309","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/ava/lib/worker/main.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":678,"count":1}],"isBlockCoverage":true},{"functionName":"makeCjsExport","ranges":[{"startOffset":89,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":98,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1310","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/distributable/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":124,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1311","url":"internal/fs/read_file_context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2925,"count":1}],"isBlockCoverage":false},{"functionName":"readFileAfterRead","ranges":[{"startOffset":655,"endOffset":1177,"count":9},{"startOffset":748,"endOffset":774,"count":0},{"startOffset":840,"endOffset":858,"count":0},{"startOffset":886,"endOffset":1175,"count":0}],"isBlockCoverage":true},{"functionName":"readFileAfterClose","ranges":[{"startOffset":1179,"endOffset":1756,"count":9},{"startOffset":1335,"endOffset":1371,"count":0},{"startOffset":1415,"endOffset":1468,"count":0},{"startOffset":1516,"endOffset":1562,"count":0},{"startOffset":1636,"endOffset":1679,"count":6},{"startOffset":1684,"endOffset":1727,"count":0}],"isBlockCoverage":true},{"functionName":"ReadFileContext","ranges":[{"startOffset":1784,"endOffset":2044,"count":33}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":2048,"endOffset":2592,"count":9},{"startOffset":2131,"endOffset":2298,"count":0}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":2596,"endOffset":2887,"count":9},{"startOffset":2755,"endOffset":2857,"count":0}],"isBlockCoverage":true},{"functionName":"tick","ranges":[{"startOffset":2780,"endOffset":2835,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1312","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/physical-cpu-count/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1079,"count":1},{"startOffset":268,"endOffset":389,"count":0},{"startOffset":518,"endOffset":1053,"count":0}],"isBlockCoverage":true},{"functionName":"exec","ranges":[{"startOffset":86,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":647,"endOffset":694,"count":0}],"isBlockCoverage":false},{"functionName":"numbers","ranges":[{"startOffset":708,"endOffset":757,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":771,"endOffset":821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":868,"endOffset":1026,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1313","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/worker.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":491,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":85,"endOffset":294,"count":1},{"startOffset":144,"endOffset":149,"count":0},{"startOffset":193,"endOffset":198,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":296,"endOffset":449,"count":2},{"startOffset":396,"endOffset":448,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1314","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/v8-compile-cache/v8-compile-cache.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10557,"count":1}],"isBlockCoverage":true},{"functionName":"FileSystemBlobStore","ranges":[{"startOffset":465,"endOffset":794,"count":1},{"startOffset":550,"endOffset":554,"count":0}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":798,"endOffset":1088,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1092,"endOffset":1511,"count":298},{"startOffset":1173,"endOffset":1288,"count":0},{"startOffset":1341,"endOffset":1507,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":1515,"endOffset":1666,"count":298}],"isBlockCoverage":true},{"functionName":"delete","ranges":[{"startOffset":1670,"endOffset":2065,"count":0}],"isBlockCoverage":false},{"functionName":"isDirty","ranges":[{"startOffset":2069,"endOffset":2108,"count":1}],"isBlockCoverage":true},{"functionName":"save","ranges":[{"startOffset":2112,"endOffset":2722,"count":1},{"startOffset":2369,"endOffset":2473,"count":0},{"startOffset":2603,"endOffset":2643,"count":0}],"isBlockCoverage":true},{"functionName":"_load","ranges":[{"startOffset":2726,"endOffset":3063,"count":1}],"isBlockCoverage":true},{"functionName":"_getDump","ranges":[{"startOffset":3067,"endOffset":3842,"count":1},{"startOffset":3389,"endOffset":3542,"count":298},{"startOffset":3596,"endOffset":3807,"count":0}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3152,"endOffset":3333,"count":298}],"isBlockCoverage":true},{"functionName":"NativeCompileCache","ranges":[{"startOffset":4060,"endOffset":4148,"count":1}],"isBlockCoverage":true},{"functionName":"setCacheStore","ranges":[{"startOffset":4152,"endOffset":4218,"count":1}],"isBlockCoverage":true},{"functionName":"install","ranges":[{"startOffset":4222,"endOffset":5816,"count":1}],"isBlockCoverage":true},{"functionName":"Module._compile","ranges":[{"startOffset":4430,"endOffset":5811,"count":298}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":4491,"endOffset":4553,"count":747}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":4655,"endOffset":4769,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":5009,"endOffset":5109,"count":0}],"isBlockCoverage":false},{"functionName":"uninstall","ranges":[{"startOffset":5820,"endOffset":5898,"count":1}],"isBlockCoverage":true},{"functionName":"_moduleCompile","ranges":[{"startOffset":5902,"endOffset":7720,"count":298},{"startOffset":6132,"endOffset":6173,"count":0},{"startOffset":6180,"endOffset":6886,"count":0},{"startOffset":7444,"endOffset":7529,"count":0}],"isBlockCoverage":true},{"functionName":"mkdirpSync","ranges":[{"startOffset":8048,"endOffset":8115,"count":1}],"isBlockCoverage":true},{"functionName":"_mkdirpSync","ranges":[{"startOffset":8117,"endOffset":8468,"count":1},{"startOffset":8235,"endOffset":8300,"count":0},{"startOffset":8390,"endOffset":8405,"count":0},{"startOffset":8414,"endOffset":8456,"count":0}],"isBlockCoverage":true},{"functionName":"slashEscape","ranges":[{"startOffset":8470,"endOffset":8681,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8646,"endOffset":8677,"count":11}],"isBlockCoverage":true},{"functionName":"supportsCachedData","ranges":[{"startOffset":8683,"endOffset":8876,"count":1}],"isBlockCoverage":true},{"functionName":"getCacheDir","ranges":[{"startOffset":8878,"endOffset":9387,"count":1},{"startOffset":9059,"endOffset":9079,"count":0},{"startOffset":9169,"endOffset":9304,"count":0}],"isBlockCoverage":true},{"functionName":"getParentName","ranges":[{"startOffset":9389,"endOffset":9750,"count":1},{"startOffset":9711,"endOffset":9726,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10282,"endOffset":10392,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1316","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/Pipeline.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3841,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3839,"count":1}],"isBlockCoverage":true},{"functionName":"Pipeline","ranges":[{"startOffset":257,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":354,"endOffset":1115,"count":2},{"startOffset":436,"endOffset":495,"count":0},{"startOffset":774,"endOffset":865,"count":0}],"isBlockCoverage":true},{"functionName":"processAsset","ranges":[{"startOffset":1119,"endOffset":3170,"count":3},{"startOffset":1192,"endOffset":1256,"count":0},{"startOffset":1489,"endOffset":1551,"count":0},{"startOffset":1850,"endOffset":2474,"count":1},{"startOffset":2262,"endOffset":2416,"count":0},{"startOffset":2474,"endOffset":2524,"count":2},{"startOffset":2701,"endOffset":2765,"count":0}],"isBlockCoverage":true},{"functionName":"iterateRenditions","ranges":[{"startOffset":3174,"endOffset":3806,"count":3},{"startOffset":3286,"endOffset":3805,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1317","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/assets/JSAsset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6465,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6463,"count":1}],"isBlockCoverage":true},{"functionName":"JSAsset","ranges":[{"startOffset":1412,"endOffset":1743,"count":3},{"startOffset":1711,"endOffset":1731,"count":1},{"startOffset":1732,"endOffset":1738,"count":2}],"isBlockCoverage":true},{"functionName":"shouldInvalidate","ranges":[{"startOffset":1747,"endOffset":1824,"count":0}],"isBlockCoverage":false},{"functionName":"mightHaveDependencies","ranges":[{"startOffset":1828,"endOffset":2085,"count":2},{"startOffset":1889,"endOffset":1922,"count":0},{"startOffset":1923,"endOffset":1961,"count":0},{"startOffset":1962,"endOffset":2000,"count":0},{"startOffset":2001,"endOffset":2035,"count":0},{"startOffset":2036,"endOffset":2074,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2089,"endOffset":2354,"count":0}],"isBlockCoverage":false},{"functionName":"traverse","ranges":[{"startOffset":2358,"endOffset":2433,"count":0}],"isBlockCoverage":false},{"functionName":"traverseFast","ranges":[{"startOffset":2437,"endOffset":2513,"count":0}],"isBlockCoverage":false},{"functionName":"collectDependencies","ranges":[{"startOffset":2517,"endOffset":2600,"count":2}],"isBlockCoverage":true},{"functionName":"pretransform","ranges":[{"startOffset":2604,"endOffset":3170,"count":2},{"startOffset":2840,"endOffset":2869,"count":0},{"startOffset":2871,"endOffset":2949,"count":0},{"startOffset":3023,"endOffset":3056,"count":0},{"startOffset":3058,"endOffset":3166,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":3174,"endOffset":4263,"count":2},{"startOffset":3237,"endOffset":3804,"count":0},{"startOffset":3839,"endOffset":3970,"count":0},{"startOffset":4006,"endOffset":4189,"count":1},{"startOffset":4226,"endOffset":4259,"count":0}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":4267,"endOffset":5845,"count":2},{"startOffset":4895,"endOffset":5084,"count":1},{"startOffset":5128,"endOffset":5213,"count":0},{"startOffset":5267,"endOffset":5389,"count":0},{"startOffset":5422,"endOffset":5735,"count":0}],"isBlockCoverage":true},{"functionName":"generateErrorMessage","ranges":[{"startOffset":5849,"endOffset":6431,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1318","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/visitors/dependencies.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5620,"count":1}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":561,"endOffset":666,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":671,"endOffset":812,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":817,"endOffset":925,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":930,"endOffset":1003,"count":1}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":1008,"endOffset":2467,"count":21},{"startOffset":1145,"endOffset":1179,"count":7},{"startOffset":1180,"endOffset":1206,"count":2},{"startOffset":1207,"endOffset":1246,"count":2},{"startOffset":1247,"endOffset":1289,"count":2},{"startOffset":1290,"endOffset":1326,"count":2},{"startOffset":1348,"endOffset":1498,"count":2},{"startOffset":1416,"endOffset":1428,"count":1},{"startOffset":1498,"endOffset":1557,"count":19},{"startOffset":1557,"endOffset":1583,"count":0},{"startOffset":1584,"endOffset":1623,"count":0},{"startOffset":1651,"endOffset":1963,"count":0},{"startOffset":1963,"endOffset":2038,"count":19},{"startOffset":2038,"endOffset":2097,"count":2},{"startOffset":2133,"endOffset":2463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1386,"endOffset":1414,"count":14}],"isBlockCoverage":true},{"functionName":"NewExpression","ranges":[{"startOffset":2472,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"hasBinding","ranges":[{"startOffset":2853,"endOffset":3613,"count":41},{"startOffset":2914,"endOffset":2981,"count":2},{"startOffset":2981,"endOffset":3594,"count":39},{"startOffset":3018,"endOffset":3053,"count":37},{"startOffset":3054,"endOffset":3080,"count":34},{"startOffset":3085,"endOffset":3159,"count":5},{"startOffset":3159,"endOffset":3594,"count":34},{"startOffset":3208,"endOffset":3247,"count":28},{"startOffset":3248,"endOffset":3292,"count":28},{"startOffset":3297,"endOffset":3464,"count":6},{"startOffset":3327,"endOffset":3351,"count":5},{"startOffset":3464,"endOffset":3594,"count":28},{"startOffset":3509,"endOffset":3594,"count":4},{"startOffset":3594,"endOffset":3612,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2937,"endOffset":2975,"count":21}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3113,"endOffset":3153,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3388,"endOffset":3445,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3545,"endOffset":3588,"count":8}],"isBlockCoverage":true},{"functionName":"isInFalsyBranch","ranges":[{"startOffset":3615,"endOffset":4172,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3723,"endOffset":4168,"count":21},{"startOffset":3777,"endOffset":4164,"count":0}],"isBlockCoverage":true},{"functionName":"evaluateExpression","ranges":[{"startOffset":4174,"endOffset":4531,"count":0}],"isBlockCoverage":false},{"functionName":"addDependency","ranges":[{"startOffset":4533,"endOffset":5315,"count":2},{"startOffset":4683,"endOffset":4861,"count":1},{"startOffset":4861,"endOffset":4898,"count":0},{"startOffset":4918,"endOffset":5092,"count":0},{"startOffset":5092,"endOffset":5230,"count":1},{"startOffset":5219,"endOffset":5226,"count":0},{"startOffset":5230,"endOffset":5271,"count":1}],"isBlockCoverage":true},{"functionName":"addURLDependency","ranges":[{"startOffset":5317,"endOffset":5617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1319","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/visitors/globals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1858,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1856,"count":1}],"isBlockCoverage":true},{"functionName":"process","ranges":[{"startOffset":158,"endOffset":256,"count":0}],"isBlockCoverage":false},{"functionName":"global","ranges":[{"startOffset":268,"endOffset":343,"count":0}],"isBlockCoverage":false},{"functionName":"__dirname","ranges":[{"startOffset":358,"endOffset":433,"count":0}],"isBlockCoverage":false},{"functionName":"__filename","ranges":[{"startOffset":449,"endOffset":507,"count":0}],"isBlockCoverage":false},{"functionName":"Buffer","ranges":[{"startOffset":519,"endOffset":621,"count":0}],"isBlockCoverage":false},{"functionName":"define","ranges":[{"startOffset":882,"endOffset":901,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":927,"endOffset":1218,"count":0}],"isBlockCoverage":false},{"functionName":"Declaration","ranges":[{"startOffset":1223,"endOffset":1646,"count":0}],"isBlockCoverage":false},{"functionName":"inScope","ranges":[{"startOffset":1651,"endOffset":1853,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1320","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/visitors/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4803,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4801,"count":1}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":328,"endOffset":635,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":640,"endOffset":1996,"count":0}],"isBlockCoverage":false},{"functionName":"isRequire","ranges":[{"startOffset":2001,"endOffset":2536,"count":0}],"isBlockCoverage":false},{"functionName":"referencesImport","ranges":[{"startOffset":2538,"endOffset":4160,"count":0}],"isBlockCoverage":false},{"functionName":"getBindingPath","ranges":[{"startOffset":4162,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"NodeNotEvaluatedError","ranges":[{"startOffset":4282,"endOffset":4430,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":4432,"endOffset":4798,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1321","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/visitors/env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":863,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":861,"count":1}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":123,"endOffset":649,"count":0}],"isBlockCoverage":false},{"functionName":"morph","ranges":[{"startOffset":683,"endOffset":858,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1322","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/visitors/process.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":552,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"MemberExpression","ranges":[{"startOffset":119,"endOffset":544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1323","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":443,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"babelTransform","ranges":[{"startOffset":179,"endOffset":404,"count":2},{"startOffset":280,"endOffset":321,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1324","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/babel6.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1211,"count":1}],"isBlockCoverage":true},{"functionName":"babel6","ranges":[{"startOffset":173,"endOffset":1040,"count":0}],"isBlockCoverage":false},{"functionName":"dynamicImport","ranges":[{"startOffset":1042,"endOffset":1182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1325","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/astConverter.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2606,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2604,"count":1}],"isBlockCoverage":true},{"functionName":"babel7toBabel6","ranges":[{"startOffset":248,"endOffset":1501,"count":0}],"isBlockCoverage":false},{"functionName":"babel6toBabel7","ranges":[{"startOffset":1503,"endOffset":2518,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1326","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/babel7.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1146,"count":1}],"isBlockCoverage":true},{"functionName":"babel7","ranges":[{"startOffset":121,"endOffset":1117,"count":3},{"startOffset":408,"endOffset":455,"count":0},{"startOffset":456,"endOffset":495,"count":0},{"startOffset":605,"endOffset":628,"count":0},{"startOffset":899,"endOffset":973,"count":1},{"startOffset":973,"endOffset":1039,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1327","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/config.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3500,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3498,"count":1}],"isBlockCoverage":true},{"functionName":"getBabelConfig","ranges":[{"startOffset":562,"endOffset":2702,"count":2},{"startOffset":818,"endOffset":867,"count":0},{"startOffset":1073,"endOffset":1085,"count":0},{"startOffset":1264,"endOffset":1276,"count":0},{"startOffset":1278,"endOffset":1808,"count":0},{"startOffset":1992,"endOffset":2275,"count":0},{"startOffset":2443,"endOffset":2620,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1462,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1725,"endOffset":1796,"count":0}],"isBlockCoverage":false},{"functionName":"mergeConfigs","ranges":[{"startOffset":2738,"endOffset":3296,"count":8},{"startOffset":2797,"endOffset":2940,"count":2},{"startOffset":2829,"endOffset":2866,"count":0},{"startOffset":2945,"endOffset":2962,"count":6},{"startOffset":2962,"endOffset":3022,"count":2},{"startOffset":3022,"endOffset":3241,"count":0},{"startOffset":3241,"endOffset":3294,"count":2}],"isBlockCoverage":true},{"functionName":"hasPlugin","ranges":[{"startOffset":3298,"endOffset":3426,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginName","ranges":[{"startOffset":3428,"endOffset":3495,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1328","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/babelrc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9386,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9384,"count":1}],"isBlockCoverage":true},{"functionName":"getBabelConfig","ranges":[{"startOffset":365,"endOffset":843,"count":2},{"startOffset":501,"endOffset":597,"count":0},{"startOffset":599,"endOffset":654,"count":0},{"startOffset":659,"endOffset":842,"count":0}],"isBlockCoverage":true},{"functionName":"getBabelRc","ranges":[{"startOffset":1184,"endOffset":2101,"count":2},{"startOffset":1366,"endOffset":1404,"count":0},{"startOffset":1406,"endOffset":1847,"count":0},{"startOffset":1968,"endOffset":2100,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1518,"endOffset":1567,"count":0}],"isBlockCoverage":false},{"functionName":"findBabelRc","ranges":[{"startOffset":2103,"endOffset":3319,"count":2},{"startOffset":2538,"endOffset":3275,"count":0},{"startOffset":3277,"endOffset":3318,"count":0}],"isBlockCoverage":true},{"functionName":"getIgnoreConfig","ranges":[{"startOffset":3321,"endOffset":3682,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":3684,"endOffset":3919,"count":0}],"isBlockCoverage":false},{"functionName":"matchesPatterns","ranges":[{"startOffset":3921,"endOffset":4226,"count":0}],"isBlockCoverage":false},{"functionName":"getBabelVersion","ranges":[{"startOffset":4228,"endOffset":5209,"count":0}],"isBlockCoverage":false},{"functionName":"getDependency","ranges":[{"startOffset":5211,"endOffset":5427,"count":0}],"isBlockCoverage":false},{"functionName":"inferBabelVersion","ranges":[{"startOffset":5871,"endOffset":7014,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginName","ranges":[{"startOffset":7016,"endOffset":7083,"count":0}],"isBlockCoverage":false},{"functionName":"getMaxMajor","ranges":[{"startOffset":7085,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"installPlugins","ranges":[{"startOffset":7344,"endOffset":7665,"count":0}],"isBlockCoverage":false},{"functionName":"resolveModule","ranges":[{"startOffset":7667,"endOffset":7878,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeName","ranges":[{"startOffset":8560,"endOffset":9381,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1329","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/env.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1994,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1992,"count":1}],"isBlockCoverage":true},{"functionName":"getEnvConfig","ranges":[{"startOffset":391,"endOffset":1411,"count":2},{"startOffset":662,"endOffset":684,"count":0},{"startOffset":890,"endOffset":1306,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1193,"endOffset":1202,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1239,"endOffset":1300,"count":0}],"isBlockCoverage":false},{"functionName":"getEnvPlugins","ranges":[{"startOffset":1442,"endOffset":1957,"count":2},{"startOffset":1519,"endOffset":1541,"count":0},{"startOffset":1605,"endOffset":1733,"count":1},{"startOffset":1734,"endOffset":1741,"count":0},{"startOffset":1795,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"assertVersion","ranges":[{"startOffset":1876,"endOffset":1886,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1330","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11004,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":11002,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1757,"endOffset":1943,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1945,"endOffset":2688,"count":1},{"startOffset":2027,"endOffset":2100,"count":0},{"startOffset":2102,"endOffset":2198,"count":0},{"startOffset":2200,"endOffset":2328,"count":0},{"startOffset":2351,"endOffset":2687,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2690,"endOffset":2785,"count":11},{"startOffset":2758,"endOffset":2763,"count":10},{"startOffset":2764,"endOffset":2782,"count":1}],"isBlockCoverage":true},{"functionName":"isPluginRequired","ranges":[{"startOffset":2787,"endOffset":2966,"count":0}],"isBlockCoverage":false},{"functionName":"getPluginList","ranges":[{"startOffset":3478,"endOffset":3803,"count":1},{"startOffset":3561,"endOffset":3607,"count":0},{"startOffset":3665,"endOffset":3801,"count":0}],"isBlockCoverage":true},{"functionName":"getPlugin","ranges":[{"startOffset":3823,"endOffset":4058,"count":14},{"startOffset":3911,"endOffset":4038,"count":0}],"isBlockCoverage":true},{"functionName":"transformIncludesAndExcludes","ranges":[{"startOffset":4098,"endOffset":4358,"count":2}],"isBlockCoverage":true},{"functionName":"opts.reduce.all","ranges":[{"startOffset":4129,"endOffset":4284,"count":0}],"isBlockCoverage":false},{"functionName":"getModulesPluginNames","ranges":[{"startOffset":4461,"endOffset":5393,"count":1},{"startOffset":4641,"endOffset":4668,"count":0},{"startOffset":4670,"endOffset":5202,"count":0}],"isBlockCoverage":true},{"functionName":"getPolyfillPlugins","ranges":[{"startOffset":5479,"endOffset":6629,"count":1},{"startOffset":5931,"endOffset":6254,"count":0},{"startOffset":6376,"endOffset":6582,"count":0}],"isBlockCoverage":true},{"functionName":"supportsStaticESM","ranges":[{"startOffset":6682,"endOffset":6785,"count":0}],"isBlockCoverage":false},{"functionName":"supportsDynamicImport","ranges":[{"startOffset":6787,"endOffset":6898,"count":0}],"isBlockCoverage":false},{"functionName":"supportsTopLevelAwait","ranges":[{"startOffset":6900,"endOffset":7011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7060,"endOffset":10969,"count":1},{"startOffset":7551,"endOffset":7559,"count":0},{"startOffset":7585,"endOffset":7834,"count":0},{"startOffset":7866,"endOffset":7874,"count":0},{"startOffset":7903,"endOffset":7929,"count":0},{"startOffset":7931,"endOffset":8167,"count":0},{"startOffset":8509,"endOffset":8513,"count":0},{"startOffset":8687,"endOffset":8752,"count":0},{"startOffset":8807,"endOffset":8876,"count":0},{"startOffset":8920,"endOffset":8956,"count":0},{"startOffset":10275,"endOffset":10938,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9700,"endOffset":10234,"count":14},{"startOffset":9767,"endOffset":9811,"count":13},{"startOffset":9812,"endOffset":9867,"count":12},{"startOffset":9869,"endOffset":10122,"count":2},{"startOffset":9931,"endOffset":10018,"count":0},{"startOffset":10122,"endOffset":10233,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10597,"endOffset":10706,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1331","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2111,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2109,"count":1}],"isBlockCoverage":true},{"functionName":"wordEnds","ranges":[{"startOffset":333,"endOffset":374,"count":0}],"isBlockCoverage":false},{"functionName":"logPluginOrPolyfill","ranges":[{"startOffset":405,"endOffset":714,"count":0}],"isBlockCoverage":false},{"functionName":"logEntryPolyfills","ranges":[{"startOffset":795,"endOffset":1476,"count":0}],"isBlockCoverage":false},{"functionName":"logUsagePolyfills","ranges":[{"startOffset":1553,"endOffset":2058,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1332","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8091,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8089,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":305,"endOffset":360,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":444,"endOffset":497,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":585,"endOffset":641,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":721,"endOffset":771,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":850,"endOffset":903,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1449,"endOffset":1635,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1637,"endOffset":2380,"count":1},{"startOffset":1719,"endOffset":1792,"count":0},{"startOffset":1794,"endOffset":1890,"count":0},{"startOffset":1892,"endOffset":2020,"count":0},{"startOffset":2043,"endOffset":2379,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2382,"endOffset":2477,"count":4},{"startOffset":2450,"endOffset":2455,"count":1},{"startOffset":2456,"endOffset":2474,"count":3}],"isBlockCoverage":true},{"functionName":"objectToBrowserslist","ranges":[{"startOffset":2667,"endOffset":2971,"count":0}],"isBlockCoverage":false},{"functionName":"validateTargetNames","ranges":[{"startOffset":2973,"endOffset":3335,"count":1},{"startOffset":3145,"endOffset":3310,"count":0}],"isBlockCoverage":true},{"functionName":"isBrowsersQueryValid","ranges":[{"startOffset":3337,"endOffset":3446,"count":0}],"isBlockCoverage":false},{"functionName":"validateBrowsers","ranges":[{"startOffset":3448,"endOffset":3675,"count":1},{"startOffset":3544,"endOffset":3577,"count":0}],"isBlockCoverage":true},{"functionName":"getLowestVersions","ranges":[{"startOffset":3677,"endOffset":4977,"count":0}],"isBlockCoverage":false},{"functionName":"outputDecimalWarning","ranges":[{"startOffset":4979,"endOffset":5523,"count":1},{"startOffset":5058,"endOffset":5066,"count":0},{"startOffset":5110,"endOffset":5522,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5234,"endOffset":5303,"count":0}],"isBlockCoverage":false},{"functionName":"semverifyTarget","ranges":[{"startOffset":5525,"endOffset":5738,"count":1},{"startOffset":5620,"endOffset":5736,"count":0}],"isBlockCoverage":true},{"functionName":"__default","ranges":[{"startOffset":5768,"endOffset":5951,"count":0}],"isBlockCoverage":false},{"functionName":"node","ranges":[{"startOffset":5956,"endOffset":6125,"count":1},{"startOffset":6035,"endOffset":6058,"count":0}],"isBlockCoverage":true},{"functionName":"getTargets","ranges":[{"startOffset":6131,"endOffset":8087,"count":1},{"startOffset":6283,"endOffset":6473,"count":0},{"startOffset":6930,"endOffset":7371,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6403,"endOffset":6456,"count":0}],"isBlockCoverage":false},{"functionName":"Object.keys.sort.reduce.targets","ranges":[{"startOffset":7425,"endOffset":7954,"count":1},{"startOffset":7550,"endOffset":7568,"count":0},{"startOffset":7570,"endOffset":7654,"count":0},{"startOffset":7757,"endOffset":7784,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1333","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/browserslist/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":33156,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":33154,"count":1}],"isBlockCoverage":true},{"functionName":"isVersionsMatch","ranges":[{"startOffset":575,"endOffset":680,"count":0}],"isBlockCoverage":false},{"functionName":"isEolReleased","ranges":[{"startOffset":682,"endOffset":837,"count":0}],"isBlockCoverage":false},{"functionName":"normalize","ranges":[{"startOffset":839,"endOffset":962,"count":38}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":896,"endOffset":959,"count":3059}],"isBlockCoverage":true},{"functionName":"normalizeElectron","ranges":[{"startOffset":964,"endOffset":1182,"count":0}],"isBlockCoverage":false},{"functionName":"nameMapper","ranges":[{"startOffset":1184,"endOffset":1288,"count":0}],"isBlockCoverage":false},{"functionName":"getMajor","ranges":[{"startOffset":1290,"endOffset":1362,"count":0}],"isBlockCoverage":false},{"functionName":"getMajorVersions","ranges":[{"startOffset":1364,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"uniq","ranges":[{"startOffset":1781,"endOffset":1958,"count":0}],"isBlockCoverage":false},{"functionName":"fillUsage","ranges":[{"startOffset":1972,"endOffset":2080,"count":19},{"startOffset":2036,"endOffset":2078,"count":324}],"isBlockCoverage":true},{"functionName":"generateFilter","ranges":[{"startOffset":2082,"endOffset":2531,"count":0}],"isBlockCoverage":false},{"functionName":"generateSemverFilter","ranges":[{"startOffset":2533,"endOffset":3265,"count":0}],"isBlockCoverage":false},{"functionName":"parseSimpleInt","ranges":[{"startOffset":3267,"endOffset":3319,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":3321,"endOffset":3405,"count":0}],"isBlockCoverage":false},{"functionName":"compareSemver","ranges":[{"startOffset":3407,"endOffset":3621,"count":0}],"isBlockCoverage":false},{"functionName":"semverFilterLoose","ranges":[{"startOffset":3668,"endOffset":4292,"count":0}],"isBlockCoverage":false},{"functionName":"compareSemverLoose","ranges":[{"startOffset":4339,"endOffset":4601,"count":0}],"isBlockCoverage":false},{"functionName":"resolveVersion","ranges":[{"startOffset":4603,"endOffset":4867,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeVersion","ranges":[{"startOffset":4869,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"filterByYear","ranges":[{"startOffset":5104,"endOffset":5494,"count":0}],"isBlockCoverage":false},{"functionName":"cloneData","ranges":[{"startOffset":5496,"endOffset":5653,"count":0}],"isBlockCoverage":false},{"functionName":"mapVersions","ranges":[{"startOffset":5655,"endOffset":6005,"count":0}],"isBlockCoverage":false},{"functionName":"byName","ranges":[{"startOffset":6007,"endOffset":6598,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAndroidVersions","ranges":[{"startOffset":6600,"endOffset":6937,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAndroidData","ranges":[{"startOffset":6939,"endOffset":7169,"count":0}],"isBlockCoverage":false},{"functionName":"checkName","ranges":[{"startOffset":7171,"endOffset":7326,"count":0}],"isBlockCoverage":false},{"functionName":"unknownQuery","ranges":[{"startOffset":7328,"endOffset":7511,"count":0}],"isBlockCoverage":false},{"functionName":"filterAndroid","ranges":[{"startOffset":7513,"endOffset":7849,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":8145,"endOffset":9939,"count":0}],"isBlockCoverage":false},{"functionName":"browserslist","ranges":[{"startOffset":11333,"endOffset":13070,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":13072,"endOffset":13188,"count":0}],"isBlockCoverage":false},{"functionName":"doMatch","ranges":[{"startOffset":13190,"endOffset":13722,"count":0}],"isBlockCoverage":false},{"functionName":"find","ranges":[{"startOffset":13724,"endOffset":13947,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":13949,"endOffset":14102,"count":0}],"isBlockCoverage":false},{"functionName":"browserslist.coverage","ranges":[{"startOffset":15851,"endOffset":17036,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":17121,"endOffset":17564,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":17629,"endOffset":18061,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":18145,"endOffset":18341,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":18422,"endOffset":18749,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":18825,"endOffset":18980,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19053,"endOffset":19329,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19391,"endOffset":19773,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19847,"endOffset":19882,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":19953,"endOffset":20159,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20226,"endOffset":20321,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20395,"endOffset":20619,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":20683,"endOffset":21378,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":21460,"endOffset":22271,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":22356,"endOffset":23412,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":23497,"endOffset":24394,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":24489,"endOffset":25710,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":25785,"endOffset":26399,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":26470,"endOffset":27178,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":27250,"endOffset":27638,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":27710,"endOffset":27960,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28028,"endOffset":28371,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28439,"endOffset":28795,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28857,"endOffset":28918,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":28982,"endOffset":29030,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29090,"endOffset":29371,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":29440,"endOffset":29984,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30039,"endOffset":30114,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30183,"endOffset":30543,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30599,"endOffset":30644,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30700,"endOffset":30745,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":30805,"endOffset":31531,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31584,"endOffset":31678,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31727,"endOffset":31806,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":31851,"endOffset":32050,"count":0}],"isBlockCoverage":false},{"functionName":"select","ranges":[{"startOffset":32096,"endOffset":32328,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":32373,"endOffset":33117,"count":1},{"startOffset":32414,"endOffset":33115,"count":19},{"startOffset":32829,"endOffset":33111,"count":1558},{"startOffset":32885,"endOffset":32893,"count":1234},{"startOffset":32893,"endOffset":32931,"count":324},{"startOffset":32931,"endOffset":33105,"count":22},{"startOffset":33022,"endOffset":33097,"count":44}],"isBlockCoverage":true}]},{"scriptId":"1334","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/dist/unpacker/agents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1857,"count":1}],"isBlockCoverage":true},{"functionName":"unpackBrowserVersions","ranges":[{"startOffset":315,"endOffset":551,"count":23}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":406,"endOffset":543,"count":344}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":614,"endOffset":1849,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":744,"endOffset":1825,"count":99},{"startOffset":796,"endOffset":883,"count":19},{"startOffset":883,"endOffset":1798,"count":80},{"startOffset":908,"endOffset":1242,"count":19},{"startOffset":1242,"endOffset":1798,"count":61},{"startOffset":1267,"endOffset":1359,"count":4},{"startOffset":1359,"endOffset":1798,"count":57},{"startOffset":1384,"endOffset":1443,"count":19},{"startOffset":1443,"endOffset":1798,"count":38},{"startOffset":1468,"endOffset":1798,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":965,"endOffset":1226,"count":1558},{"startOffset":1028,"endOffset":1084,"count":1234},{"startOffset":1084,"endOffset":1183,"count":324}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1542,"endOffset":1692,"count":324}],"isBlockCoverage":true}]},{"scriptId":"1335","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/dist/unpacker/browsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":209,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1336","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/data/browsers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":286,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":284,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1337","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/dist/unpacker/browserVersions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":230,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1338","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/data/browserVersions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1361,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1359,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1339","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/data/agents.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14000,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":13998,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1340","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/electron-to-chromium/versions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":761,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1341","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/browserslist/error.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":366,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":364,"count":1}],"isBlockCoverage":true},{"functionName":"BrowserslistError","ranges":[{"startOffset":62,"endOffset":278,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1342","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/browserslist/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10385,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10383,"count":1}],"isBlockCoverage":true},{"functionName":"checkExtend","ranges":[{"startOffset":619,"endOffset":1195,"count":0}],"isBlockCoverage":false},{"functionName":"isFile","ranges":[{"startOffset":1197,"endOffset":1456,"count":0}],"isBlockCoverage":false},{"functionName":"eachParent","ranges":[{"startOffset":1458,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":1739,"endOffset":2036,"count":0}],"isBlockCoverage":false},{"functionName":"pickEnv","ranges":[{"startOffset":2038,"endOffset":2426,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackage","ranges":[{"startOffset":2428,"endOffset":2853,"count":0}],"isBlockCoverage":false},{"functionName":"latestReleaseTime","ranges":[{"startOffset":2855,"endOffset":3119,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeStats","ranges":[{"startOffset":3121,"endOffset":3688,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeUsageData","ranges":[{"startOffset":3690,"endOffset":4197,"count":0}],"isBlockCoverage":false},{"functionName":"loadQueries","ranges":[{"startOffset":4233,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"loadStat","ranges":[{"startOffset":4850,"endOffset":5193,"count":0}],"isBlockCoverage":false},{"functionName":"getStat","ranges":[{"startOffset":5207,"endOffset":5867,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfig","ranges":[{"startOffset":5884,"endOffset":6440,"count":0}],"isBlockCoverage":false},{"functionName":"loadCountry","ranges":[{"startOffset":6458,"endOffset":6984,"count":0}],"isBlockCoverage":false},{"functionName":"parseConfig","ranges":[{"startOffset":7002,"endOffset":7878,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":7895,"endOffset":8088,"count":0}],"isBlockCoverage":false},{"functionName":"findConfig","ranges":[{"startOffset":8105,"endOffset":9689,"count":0}],"isBlockCoverage":false},{"functionName":"clearCaches","ranges":[{"startOffset":9707,"endOffset":9810,"count":0}],"isBlockCoverage":false},{"functionName":"oldDataWarning","ranges":[{"startOffset":9831,"endOffset":10288,"count":0}],"isBlockCoverage":false},{"functionName":"currentNode","ranges":[{"startOffset":10306,"endOffset":10378,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1343","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/caniuse-lite/dist/unpacker/region.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":786,"count":1}],"isBlockCoverage":true},{"functionName":"unpackRegion","ranges":[{"startOffset":217,"endOffset":784,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1344","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/levenary/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":671,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":669,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":229,"endOffset":324,"count":1},{"startOffset":297,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"levenArray","ranges":[{"startOffset":326,"endOffset":666,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1345","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/leven/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1830,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1828,"count":1}],"isBlockCoverage":true},{"functionName":"leven","ranges":[{"startOffset":135,"endOffset":1719,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1346","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/invariant/invariant.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1489,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1487,"count":1}],"isBlockCoverage":true},{"functionName":"invariant","ranges":[{"startOffset":685,"endOffset":1454,"count":187},{"startOffset":798,"endOffset":876,"count":0},{"startOffset":900,"endOffset":1452,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1261,"endOffset":1300,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1347","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1857,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":534,"endOffset":629,"count":2},{"startOffset":602,"endOffset":607,"count":0}],"isBlockCoverage":true},{"functionName":"semverMin","ranges":[{"startOffset":673,"endOffset":780,"count":0}],"isBlockCoverage":false},{"functionName":"semverify","ranges":[{"startOffset":782,"endOffset":1195,"count":182},{"startOffset":881,"endOffset":906,"count":0},{"startOffset":1140,"endOffset":1166,"count":266}],"isBlockCoverage":true},{"functionName":"isUnreleasedVersion","ranges":[{"startOffset":1197,"endOffset":1385,"count":362},{"startOffset":1327,"endOffset":1382,"count":0}],"isBlockCoverage":true},{"functionName":"getLowestUnreleased","ranges":[{"startOffset":1387,"endOffset":1659,"count":0}],"isBlockCoverage":false},{"functionName":"getLowestImplementedVersion","ranges":[{"startOffset":1661,"endOffset":1855,"count":183},{"startOffset":1774,"endOffset":1802,"count":2},{"startOffset":1804,"endOffset":1835,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1348","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/targets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":626,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":624,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1349","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":438,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1350","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/pretty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1161,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1159,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":420,"count":1},{"startOffset":393,"endOffset":398,"count":0}],"isBlockCoverage":true},{"functionName":"prettifyVersion","ranges":[{"startOffset":422,"endOffset":791,"count":0}],"isBlockCoverage":false},{"functionName":"prettifyTargets","ranges":[{"startOffset":793,"endOffset":1157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1351","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1232,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1230,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":322,"endOffset":417,"count":1},{"startOffset":390,"endOffset":395,"count":0}],"isBlockCoverage":true},{"functionName":"getInclusionReasons","ranges":[{"startOffset":419,"endOffset":1228,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1352","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-compilation-targets/lib/filter-items.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2647,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2645,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":423,"endOffset":518,"count":2},{"startOffset":491,"endOffset":496,"count":0}],"isBlockCoverage":true},{"functionName":"targetsSupported","ranges":[{"startOffset":520,"endOffset":1599,"count":183},{"startOffset":655,"endOffset":678,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":740,"endOffset":1548,"count":183},{"startOffset":893,"endOffset":919,"count":2},{"startOffset":919,"endOffset":1054,"count":181},{"startOffset":1054,"endOffset":1081,"count":0},{"startOffset":1081,"endOffset":1163,"count":181},{"startOffset":1163,"endOffset":1189,"count":0},{"startOffset":1189,"endOffset":1257,"count":181},{"startOffset":1257,"endOffset":1429,"count":0},{"startOffset":1429,"endOffset":1547,"count":181}],"isBlockCoverage":true},{"functionName":"isRequired","ranges":[{"startOffset":1601,"endOffset":1895,"count":183},{"startOffset":1727,"endOffset":1735,"count":0},{"startOffset":1758,"endOffset":1771,"count":0},{"startOffset":1795,"endOffset":1803,"count":0},{"startOffset":1826,"endOffset":1838,"count":0}],"isBlockCoverage":true},{"functionName":"filterItems","ranges":[{"startOffset":1897,"endOffset":2643,"count":2},{"startOffset":2136,"endOffset":2404,"count":183},{"startOffset":2182,"endOffset":2213,"count":22},{"startOffset":2213,"endOffset":2400,"count":161},{"startOffset":2240,"endOffset":2400,"count":26},{"startOffset":2341,"endOffset":2394,"count":0},{"startOffset":2429,"endOffset":2512,"count":1},{"startOffset":2537,"endOffset":2623,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2459,"endOffset":2506,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2567,"endOffset":2617,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1353","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/get-option-specific-excludes.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":327,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":236,"endOffset":323,"count":1},{"startOffset":284,"endOffset":313,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1354","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/filter-items.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":437,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":435,"count":1}],"isBlockCoverage":true},{"functionName":"removeUnnecessaryItems","ranges":[{"startOffset":200,"endOffset":433,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":270,"endOffset":429,"count":14},{"startOffset":369,"endOffset":424,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":397,"endOffset":423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1355","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/module-transformations.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":439,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1356","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/normalize-options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9270,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9268,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1130,"endOffset":1225,"count":5},{"startOffset":1198,"endOffset":1203,"count":2},{"startOffset":1204,"endOffset":1222,"count":3}],"isBlockCoverage":true},{"functionName":"validateTopLevelOptions","ranges":[{"startOffset":1259,"endOffset":1592,"count":1},{"startOffset":1367,"endOffset":1590,"count":5},{"startOffset":1412,"endOffset":1586,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1760,"endOffset":1798,"count":6}],"isBlockCoverage":true},{"functionName":"getValidIncludesAndExcludes","ranges":[{"startOffset":1839,"endOffset":2088,"count":0}],"isBlockCoverage":false},{"functionName":"pluginToRegExp","ranges":[{"startOffset":2114,"endOffset":2279,"count":0}],"isBlockCoverage":false},{"functionName":"selectPlugins","ranges":[{"startOffset":2304,"endOffset":2445,"count":0}],"isBlockCoverage":false},{"functionName":"flatten","ranges":[{"startOffset":2464,"endOffset":2492,"count":0}],"isBlockCoverage":false},{"functionName":"expandIncludesAndExcludes","ranges":[{"startOffset":2529,"endOffset":3088,"count":2},{"startOffset":2601,"endOffset":3087,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2640,"endOffset":2701,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2747,"endOffset":2788,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePluginName","ranges":[{"startOffset":3119,"endOffset":3179,"count":0}],"isBlockCoverage":false},{"functionName":"checkDuplicateIncludeExcludes","ranges":[{"startOffset":3272,"endOffset":3558,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3342,"endOffset":3374,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeTargets","ranges":[{"startOffset":3658,"endOffset":3821,"count":1},{"startOffset":3732,"endOffset":3781,"count":0}],"isBlockCoverage":true},{"functionName":"validateConfigPathOption","ranges":[{"startOffset":3857,"endOffset":4067,"count":1}],"isBlockCoverage":true},{"functionName":"validateBoolOption","ranges":[{"startOffset":4159,"endOffset":4391,"count":7},{"startOffset":4228,"endOffset":4259,"count":6},{"startOffset":4295,"endOffset":4372,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringOption","ranges":[{"startOffset":4473,"endOffset":4705,"count":1},{"startOffset":4573,"endOffset":4686,"count":0}],"isBlockCoverage":true},{"functionName":"validateIgnoreBrowserslistConfig","ranges":[{"startOffset":4803,"endOffset":4933,"count":1}],"isBlockCoverage":true},{"functionName":"validateModulesOption","ranges":[{"startOffset":5044,"endOffset":5571,"count":1}],"isBlockCoverage":true},{"functionName":"validateUseBuiltInsOption","ranges":[{"startOffset":5664,"endOffset":6063,"count":1},{"startOffset":5768,"endOffset":5819,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeCoreJSOption","ranges":[{"startOffset":6130,"endOffset":7706,"count":1},{"startOffset":6271,"endOffset":7029,"count":0},{"startOffset":7066,"endOffset":7084,"count":0},{"startOffset":7086,"endOffset":7167,"count":0},{"startOffset":7276,"endOffset":7283,"count":0},{"startOffset":7305,"endOffset":7315,"count":0},{"startOffset":7317,"endOffset":7430,"count":0},{"startOffset":7507,"endOffset":7660,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":7708,"endOffset":9266,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1357","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/plugins-compat-data.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1184,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1182,"count":1},{"startOffset":745,"endOffset":879,"count":38},{"startOffset":940,"endOffset":1087,"count":11}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":449,"endOffset":544,"count":3},{"startOffset":517,"endOffset":522,"count":1},{"startOffset":523,"endOffset":541,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1358","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/available-plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11455,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":11453,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":7046,"endOffset":7141,"count":59},{"startOffset":7114,"endOffset":7119,"count":53},{"startOffset":7120,"endOffset":7138,"count":6}],"isBlockCoverage":true}]},{"scriptId":"1359","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-async-generators/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":501,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":468,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":367,"endOffset":460,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1360","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-plugin-utils/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2152,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2150,"count":1}],"isBlockCoverage":true},{"functionName":"declare","ranges":[{"startOffset":170,"endOffset":477,"count":52}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":207,"endOffset":474,"count":22},{"startOffset":264,"endOffset":420,"count":0},{"startOffset":454,"endOffset":459,"count":0}],"isBlockCoverage":true},{"functionName":"assertVersion","ranges":[{"startOffset":322,"endOffset":403,"count":0}],"isBlockCoverage":false},{"functionName":"copyApiObject","ranges":[{"startOffset":479,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":838,"endOffset":921,"count":0}],"isBlockCoverage":false},{"functionName":"throwVersionError","ranges":[{"startOffset":923,"endOffset":2148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1361","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-class-properties/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":552,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":550,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":517,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1362","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-dynamic-import/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":499,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":497,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":365,"endOffset":456,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1363","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-json-strings/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":495,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":493,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":460,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":363,"endOffset":452,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1364","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-nullish-coalescing-operator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":524,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":489,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":378,"endOffset":481,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1365","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-numeric-separator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":368,"endOffset":462,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1366","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-object-rest-spread/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":506,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":504,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":471,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":369,"endOffset":463,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1367","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-optional-catch-binding/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":514,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":512,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":479,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":373,"endOffset":471,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1368","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-optional-chaining/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":505,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":503,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":368,"endOffset":462,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1369","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-syntax-top-level-await/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":500,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":498,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":465,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":366,"endOffset":457,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1370","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-async-generator-functions/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2622,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2620,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":557,"endOffset":652,"count":3},{"startOffset":631,"endOffset":649,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":701,"endOffset":2587,"count":1}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":767,"endOffset":808,"count":0}],"isBlockCoverage":false},{"functionName":"YieldExpression","ranges":[{"startOffset":815,"endOffset":1142,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":1181,"endOffset":1222,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement","ranges":[{"startOffset":1229,"endOffset":1956,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":1987,"endOffset":2365,"count":8},{"startOffset":2046,"endOffset":2364,"count":0}],"isBlockCoverage":true},{"functionName":"Program","ranges":[{"startOffset":2504,"endOffset":2573,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1371","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-remap-async-to-generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2975,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2973,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":417,"endOffset":603,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":605,"endOffset":1348,"count":1},{"startOffset":687,"endOffset":760,"count":0},{"startOffset":762,"endOffset":858,"count":0},{"startOffset":860,"endOffset":988,"count":0},{"startOffset":1011,"endOffset":1347,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1350,"endOffset":1445,"count":2},{"startOffset":1424,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":1472,"endOffset":1509,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":1514,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":1847,"endOffset":2971,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1372","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-wrap-function/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4120,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":394,"endOffset":580,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":582,"endOffset":1325,"count":1},{"startOffset":664,"endOffset":737,"count":0},{"startOffset":739,"endOffset":835,"count":0},{"startOffset":837,"endOffset":965,"count":0},{"startOffset":988,"endOffset":1324,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1327,"endOffset":1422,"count":2},{"startOffset":1401,"endOffset":1419,"count":0}],"isBlockCoverage":true},{"functionName":"classOrObjectMethod","ranges":[{"startOffset":2050,"endOffset":2462,"count":0}],"isBlockCoverage":false},{"functionName":"plainFunction","ranges":[{"startOffset":2464,"endOffset":3935,"count":0}],"isBlockCoverage":false},{"functionName":"wrapFunction","ranges":[{"startOffset":3937,"endOffset":4118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1373","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-annotate-as-pure/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1537,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1535,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":236,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":424,"endOffset":1167,"count":1},{"startOffset":506,"endOffset":579,"count":0},{"startOffset":581,"endOffset":677,"count":0},{"startOffset":679,"endOffset":807,"count":0},{"startOffset":830,"endOffset":1166,"count":0}],"isBlockCoverage":true},{"functionName":"isPureAnnotated","ranges":[{"startOffset":1231,"endOffset":1346,"count":0}],"isBlockCoverage":false},{"functionName":"annotateAsPure","ranges":[{"startOffset":1349,"endOffset":1533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1374","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6742,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6740,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":235,"endOffset":278,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":367,"endOffset":426,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":508,"endOffset":558,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":640,"endOffset":690,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":766,"endOffset":812,"count":67}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":887,"endOffset":936,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1013,"endOffset":1061,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1138,"endOffset":1187,"count":29}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1264,"endOffset":1313,"count":42}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1398,"endOffset":1450,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1536,"endOffset":1591,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1681,"endOffset":1740,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1831,"endOffset":1891,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1971,"endOffset":2020,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2104,"endOffset":2157,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2242,"endOffset":2296,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2374,"endOffset":2424,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2506,"endOffset":2560,"count":25}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2643,"endOffset":2698,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2780,"endOffset":2838,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":2924,"endOffset":2986,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3073,"endOffset":3136,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3221,"endOffset":3281,"count":24}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3370,"endOffset":3434,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3524,"endOffset":3589,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3663,"endOffset":3705,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3783,"endOffset":3829,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3908,"endOffset":3955,"count":23}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4356,"endOffset":4506,"count":1}],"isBlockCoverage":true},{"functionName":"_types","ranges":[{"startOffset":4453,"endOffset":4487,"count":31}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":4577,"endOffset":4615,"count":32}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4621,"endOffset":4749,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":4696,"endOffset":4730,"count":22}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4751,"endOffset":4909,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":4856,"endOffset":4890,"count":28}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":4911,"endOffset":5069,"count":1}],"isBlockCoverage":true},{"functionName":"_template","ranges":[{"startOffset":5016,"endOffset":5050,"count":41}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":5322,"endOffset":5508,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":5510,"endOffset":6253,"count":1},{"startOffset":5592,"endOffset":5665,"count":0},{"startOffset":5667,"endOffset":5763,"count":0},{"startOffset":5765,"endOffset":5893,"count":0},{"startOffset":5916,"endOffset":6252,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":6255,"endOffset":6350,"count":4},{"startOffset":6329,"endOffset":6347,"count":0}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":6508,"endOffset":6567,"count":0}],"isBlockCoverage":false},{"functionName":"Plugin","ranges":[{"startOffset":6612,"endOffset":6738,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1375","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/file/file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6983,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6981,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":169,"endOffset":323,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":325,"endOffset":484,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":431,"endOffset":465,"count":2}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":486,"endOffset":624,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":626,"endOffset":766,"count":0}],"isBlockCoverage":false},{"functionName":"_helperModuleTransforms","ranges":[{"startOffset":768,"endOffset":946,"count":0}],"isBlockCoverage":false},{"functionName":"_semver","ranges":[{"startOffset":948,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1095,"endOffset":1190,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1192,"endOffset":1378,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1380,"endOffset":2123,"count":1},{"startOffset":1462,"endOffset":1535,"count":0},{"startOffset":1537,"endOffset":1633,"count":0},{"startOffset":1635,"endOffset":1763,"count":0},{"startOffset":1786,"endOffset":2122,"count":0}],"isBlockCoverage":true},{"functionName":"enter","ranges":[{"startOffset":2150,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"File","ranges":[{"startOffset":2290,"endOffset":3039,"count":3}],"isBlockCoverage":true},{"functionName":"getCode","ranges":[{"startOffset":2568,"endOffset":2583,"count":0}],"isBlockCoverage":false},{"functionName":"getScope","ranges":[{"startOffset":2601,"endOffset":2617,"count":0}],"isBlockCoverage":false},{"functionName":"get shebang","ranges":[{"startOffset":3043,"endOffset":3165,"count":0}],"isBlockCoverage":false},{"functionName":"set shebang","ranges":[{"startOffset":3169,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3359,"endOffset":3821,"count":27},{"startOffset":3411,"endOffset":3787,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3825,"endOffset":3870,"count":68}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":3874,"endOffset":3919,"count":24}],"isBlockCoverage":true},{"functionName":"getModuleName","ranges":[{"startOffset":3923,"endOffset":4023,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":4027,"endOffset":4308,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":4312,"endOffset":4805,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":4809,"endOffset":5904,"count":0}],"isBlockCoverage":false},{"functionName":"addTemplateObject","ranges":[{"startOffset":5908,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":6034,"endOffset":6951,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1376","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/tools/build-external-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5343,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5341,"count":1}],"isBlockCoverage":true},{"functionName":"helpers","ranges":[{"startOffset":171,"endOffset":325,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":327,"endOffset":488,"count":0}],"isBlockCoverage":false},{"functionName":"_template","ranges":[{"startOffset":490,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":650,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":869,"endOffset":964,"count":1},{"startOffset":943,"endOffset":961,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":966,"endOffset":1152,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1154,"endOffset":1897,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmdWrapper","ranges":[{"startOffset":1923,"endOffset":2328,"count":0}],"isBlockCoverage":false},{"functionName":"buildGlobal","ranges":[{"startOffset":2331,"endOffset":3081,"count":0}],"isBlockCoverage":false},{"functionName":"buildModule","ranges":[{"startOffset":3083,"endOffset":3400,"count":0}],"isBlockCoverage":false},{"functionName":"buildUmd","ranges":[{"startOffset":3402,"endOffset":4074,"count":0}],"isBlockCoverage":false},{"functionName":"buildVar","ranges":[{"startOffset":4076,"endOffset":4429,"count":0}],"isBlockCoverage":false},{"functionName":"buildHelpers","ranges":[{"startOffset":4431,"endOffset":4978,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":4980,"endOffset":5339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1377","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1670,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1668,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":221,"endOffset":275,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":361,"endOffset":423,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":510,"endOffset":573,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":656,"endOffset":715,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":794,"endOffset":849,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":939,"endOffset":1005,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1087,"endOffset":1139,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1221,"endOffset":1273,"count":23}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":1352,"endOffset":1401,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1480,"endOffset":1529,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1378","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/package.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1736,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1734,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":186,"endOffset":325,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":272,"endOffset":306,"count":48}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":361,"endOffset":456,"count":1},{"startOffset":429,"endOffset":434,"count":0}],"isBlockCoverage":true},{"functionName":"findPackageData","ranges":[{"startOffset":500,"endOffset":1079,"count":3},{"startOffset":673,"endOffset":728,"count":15},{"startOffset":730,"endOffset":1006,"count":15},{"startOffset":933,"endOffset":978,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1139,"endOffset":1730,"count":1},{"startOffset":1227,"endOffset":1335,"count":0},{"startOffset":1353,"endOffset":1404,"count":0},{"startOffset":1441,"endOffset":1524,"count":0},{"startOffset":1556,"endOffset":1637,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1379","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1982,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1980,"count":1}],"isBlockCoverage":true},{"functionName":"_fs2","ranges":[{"startOffset":303,"endOffset":438,"count":1}],"isBlockCoverage":true},{"functionName":"_fs2","ranges":[{"startOffset":385,"endOffset":419,"count":6}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":440,"endOffset":535,"count":1},{"startOffset":508,"endOffset":513,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":537,"endOffset":723,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":725,"endOffset":1468,"count":1},{"startOffset":807,"endOffset":880,"count":0},{"startOffset":882,"endOffset":978,"count":0},{"startOffset":980,"endOffset":1108,"count":0},{"startOffset":1131,"endOffset":1467,"count":0}],"isBlockCoverage":true},{"functionName":"makeStaticFileCache","ranges":[{"startOffset":1470,"endOffset":1785,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1544,"endOffset":1781,"count":5},{"startOffset":1664,"endOffset":1713,"count":4},{"startOffset":1713,"endOffset":1780,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1610,"endOffset":1635,"count":7}],"isBlockCoverage":true},{"functionName":"fileMtime","ranges":[{"startOffset":1787,"endOffset":1978,"count":7},{"startOffset":1883,"endOffset":1960,"count":4},{"startOffset":1923,"endOffset":1946,"count":0},{"startOffset":1948,"endOffset":1956,"count":0},{"startOffset":1960,"endOffset":1977,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1380","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/caching.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7451,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7449,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":368,"endOffset":516,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":463,"endOffset":497,"count":17}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":599,"endOffset":694,"count":1},{"startOffset":667,"endOffset":672,"count":0}],"isBlockCoverage":true},{"functionName":"synchronize","ranges":[{"startOffset":716,"endOffset":770,"count":18}],"isBlockCoverage":true},{"functionName":"genTrue","ranges":[{"startOffset":773,"endOffset":815,"count":46}],"isBlockCoverage":true},{"functionName":"makeWeakCache","ranges":[{"startOffset":817,"endOffset":899,"count":17}],"isBlockCoverage":true},{"functionName":"makeWeakCacheSync","ranges":[{"startOffset":901,"endOffset":986,"count":15}],"isBlockCoverage":true},{"functionName":"makeStrongCache","ranges":[{"startOffset":988,"endOffset":1068,"count":7}],"isBlockCoverage":true},{"functionName":"makeStrongCacheSync","ranges":[{"startOffset":1070,"endOffset":1159,"count":3}],"isBlockCoverage":true},{"functionName":"makeCachedFunction","ranges":[{"startOffset":1161,"endOffset":2217,"count":24}],"isBlockCoverage":true},{"functionName":"cachedFunction","ranges":[{"startOffset":1342,"endOffset":2214,"count":115},{"startOffset":1470,"endOffset":1486,"count":0},{"startOffset":1623,"endOffset":1643,"count":56},{"startOffset":1643,"endOffset":1828,"count":59},{"startOffset":1828,"endOffset":2000,"count":53},{"startOffset":2000,"endOffset":2042,"count":6},{"startOffset":2042,"endOffset":2120,"count":59},{"startOffset":2120,"endOffset":2191,"count":0},{"startOffset":2191,"endOffset":2213,"count":59}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1914,"endOffset":1992,"count":0}],"isBlockCoverage":false},{"functionName":"getCachedValue","ranges":[{"startOffset":2219,"endOffset":2535,"count":115},{"startOffset":2322,"endOffset":2482,"count":56},{"startOffset":2478,"endOffset":2482,"count":0},{"startOffset":2482,"endOffset":2534,"count":59}],"isBlockCoverage":true},{"functionName":"getCachedValueOrWait","ranges":[{"startOffset":2537,"endOffset":3032,"count":115},{"startOffset":2702,"endOffset":2726,"count":56},{"startOffset":2726,"endOffset":2748,"count":59},{"startOffset":2748,"endOffset":2979,"count":0},{"startOffset":2979,"endOffset":3031,"count":59}],"isBlockCoverage":true},{"functionName":"setupAsyncLocks","ranges":[{"startOffset":3034,"endOffset":3203,"count":0}],"isBlockCoverage":false},{"functionName":"updateFunctionCache","ranges":[{"startOffset":3205,"endOffset":3981,"count":59},{"startOffset":3291,"endOffset":3308,"count":44},{"startOffset":3400,"endOffset":3534,"count":48},{"startOffset":3540,"endOffset":3688,"count":8},{"startOffset":3694,"endOffset":3974,"count":3},{"startOffset":3731,"endOffset":3832,"count":0}],"isBlockCoverage":true},{"functionName":"CacheConfigurator","ranges":[{"startOffset":4011,"endOffset":4216,"count":59}],"isBlockCoverage":true},{"functionName":"simple","ranges":[{"startOffset":4220,"endOffset":4275,"count":23}],"isBlockCoverage":true},{"functionName":"mode","ranges":[{"startOffset":4279,"endOffset":4436,"count":59},{"startOffset":4309,"endOffset":4324,"count":0},{"startOffset":4348,"endOffset":4365,"count":48},{"startOffset":4365,"endOffset":4392,"count":11},{"startOffset":4392,"endOffset":4412,"count":8},{"startOffset":4412,"endOffset":4435,"count":3}],"isBlockCoverage":true},{"functionName":"forever","ranges":[{"startOffset":4440,"endOffset":4728,"count":48},{"startOffset":4475,"endOffset":4562,"count":0},{"startOffset":4585,"endOffset":4668,"count":0}],"isBlockCoverage":true},{"functionName":"never","ranges":[{"startOffset":4732,"endOffset":5020,"count":0}],"isBlockCoverage":false},{"functionName":"using","ranges":[{"startOffset":5024,"endOffset":5691,"count":15},{"startOffset":5064,"endOffset":5151,"count":0},{"startOffset":5191,"endOffset":5286,"count":0},{"startOffset":5530,"endOffset":5636,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5554,"endOffset":5628,"count":0}],"isBlockCoverage":false},{"functionName":"invalidate","ranges":[{"startOffset":5695,"endOffset":5781,"count":12}],"isBlockCoverage":true},{"functionName":"validator","ranges":[{"startOffset":5785,"endOffset":5990,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5841,"endOffset":5985,"count":10},{"startOffset":5938,"endOffset":5951,"count":0}],"isBlockCoverage":true},{"functionName":"deactivate","ranges":[{"startOffset":5994,"endOffset":6038,"count":59}],"isBlockCoverage":true},{"functionName":"configured","ranges":[{"startOffset":6042,"endOffset":6089,"count":59}],"isBlockCoverage":true},{"functionName":"makeSimpleConfigurator","ranges":[{"startOffset":6094,"endOffset":6578,"count":23}],"isBlockCoverage":true},{"functionName":"cacheFn","ranges":[{"startOffset":6137,"endOffset":6327,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.forever","ranges":[{"startOffset":6349,"endOffset":6370,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.never","ranges":[{"startOffset":6391,"endOffset":6410,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.using","ranges":[{"startOffset":6431,"endOffset":6478,"count":0}],"isBlockCoverage":false},{"functionName":"cacheFn.invalidate","ranges":[{"startOffset":6504,"endOffset":6556,"count":0}],"isBlockCoverage":false},{"functionName":"assertSimpleType","ranges":[{"startOffset":6580,"endOffset":7221,"count":0}],"isBlockCoverage":false},{"functionName":"Lock","ranges":[{"startOffset":7238,"endOffset":7367,"count":0}],"isBlockCoverage":false},{"functionName":"release","ranges":[{"startOffset":7371,"endOffset":7444,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1381","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/gensync-utils/async.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2047,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2045,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":313,"endOffset":461,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":408,"endOffset":442,"count":26}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":463,"endOffset":558,"count":1},{"startOffset":531,"endOffset":536,"count":0}],"isBlockCoverage":true},{"functionName":"id","ranges":[{"startOffset":571,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":625,"endOffset":667,"count":53}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":720,"endOffset":731,"count":115}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":744,"endOffset":764,"count":0}],"isBlockCoverage":false},{"functionName":"maybeAsync","ranges":[{"startOffset":797,"endOffset":1102,"count":15}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":871,"endOffset":1012,"count":10},{"startOffset":960,"endOffset":985,"count":0}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":1019,"endOffset":1093,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1155,"endOffset":1171,"count":7}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":1182,"endOffset":1199,"count":0}],"isBlockCoverage":false},{"functionName":"forwardAsync","ranges":[{"startOffset":1205,"endOffset":1374,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1304,"endOffset":1370,"count":7}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":1467,"endOffset":1524,"count":53}],"isBlockCoverage":true},{"functionName":"errback","ranges":[{"startOffset":1537,"endOffset":1753,"count":0}],"isBlockCoverage":false},{"functionName":"isThenable","ranges":[{"startOffset":1893,"endOffset":2043,"count":25},{"startOffset":1935,"endOffset":1992,"count":21},{"startOffset":1963,"endOffset":1991,"count":7},{"startOffset":1993,"endOffset":2006,"count":14},{"startOffset":2007,"endOffset":2040,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1382","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/gensync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9475,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9473,"count":1}],"isBlockCoverage":true},{"functionName":"gensync","ranges":[{"startOffset":651,"endOffset":905,"count":55},{"startOffset":746,"endOffset":791,"count":22},{"startOffset":791,"endOffset":843,"count":33}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":984,"endOffset":1105,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1120,"endOffset":1561,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":1646,"endOffset":1876,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1891,"endOffset":2193,"count":0}],"isBlockCoverage":false},{"functionName":"makeFunctionAPI","ranges":[{"startOffset":2337,"endOffset":3105,"count":55}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":2397,"endOffset":2474,"count":79}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":2487,"endOffset":2635,"count":0}],"isBlockCoverage":false},{"functionName":"errback","ranges":[{"startOffset":2650,"endOffset":3083,"count":0}],"isBlockCoverage":false},{"functionName":"assertTypeof","ranges":[{"startOffset":3107,"endOffset":3502,"count":110},{"startOffset":3199,"endOffset":3254,"count":64},{"startOffset":3276,"endOffset":3501,"count":0}],"isBlockCoverage":true},{"functionName":"makeError","ranges":[{"startOffset":3503,"endOffset":3586,"count":0}],"isBlockCoverage":false},{"functionName":"newGenerator","ranges":[{"startOffset":3720,"endOffset":5254,"count":22},{"startOffset":4119,"endOffset":4129,"count":17},{"startOffset":4131,"endOffset":4268,"count":0},{"startOffset":4302,"endOffset":4707,"count":21},{"startOffset":4336,"endOffset":4351,"count":4},{"startOffset":4352,"endOffset":4381,"count":4},{"startOffset":4383,"endOffset":4419,"count":2},{"startOffset":4434,"endOffset":4447,"count":17},{"startOffset":4448,"endOffset":4473,"count":17},{"startOffset":4475,"endOffset":4531,"count":1},{"startOffset":4583,"endOffset":4637,"count":3},{"startOffset":4675,"endOffset":4703,"count":3},{"startOffset":4742,"endOffset":4772,"count":21}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":4831,"endOffset":4890,"count":186}],"isBlockCoverage":true},{"functionName":"async","ranges":[{"startOffset":4903,"endOffset":5245,"count":0}],"isBlockCoverage":false},{"functionName":"wrapGenerator","ranges":[{"startOffset":5256,"endOffset":5406,"count":33}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5343,"endOffset":5402,"count":82}],"isBlockCoverage":true},{"functionName":"buildOperation","ranges":[{"startOffset":5408,"endOffset":6234,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5506,"endOffset":6230,"count":186},{"startOffset":5627,"endOffset":6229,"count":0}],"isBlockCoverage":true},{"functionName":"async.call.result.err.err","ranges":[{"startOffset":5709,"endOffset":5810,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5820,"endOffset":5917,"count":0}],"isBlockCoverage":false},{"functionName":"evaluateSync","ranges":[{"startOffset":6236,"endOffset":6371,"count":79},{"startOffset":6319,"endOffset":6353,"count":186}],"isBlockCoverage":true},{"functionName":"evaluateAsync","ranges":[{"startOffset":6373,"endOffset":7304,"count":0}],"isBlockCoverage":false},{"functionName":"assertStart","ranges":[{"startOffset":7306,"endOffset":7619,"count":186},{"startOffset":7379,"endOffset":7618,"count":0}],"isBlockCoverage":true},{"functionName":"assertSuspend","ranges":[{"startOffset":7620,"endOffset":8042,"count":0}],"isBlockCoverage":false},{"functionName":"throwError","ranges":[{"startOffset":8044,"endOffset":8392,"count":0}],"isBlockCoverage":false},{"functionName":"isIterable","ranges":[{"startOffset":8394,"endOffset":8549,"count":0}],"isBlockCoverage":false},{"functionName":"setFunctionMetadata","ranges":[{"startOffset":8551,"endOffset":9470,"count":57},{"startOffset":8631,"endOffset":9113,"count":39},{"startOffset":9022,"endOffset":9027,"count":0},{"startOffset":9362,"endOffset":9367,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1383","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1172,"count":1}],"isBlockCoverage":true},{"functionName":"mergeOptions","ranges":[{"startOffset":229,"endOffset":863,"count":8},{"startOffset":308,"endOffset":861,"count":68},{"startOffset":337,"endOffset":357,"count":6},{"startOffset":359,"endOffset":528,"count":6},{"startOffset":528,"endOffset":857,"count":62},{"startOffset":560,"endOffset":583,"count":0},{"startOffset":585,"endOffset":769,"count":0},{"startOffset":835,"endOffset":851,"count":61}],"isBlockCoverage":true},{"functionName":"mergeDefaultFields","ranges":[{"startOffset":865,"endOffset":1028,"count":6},{"startOffset":950,"endOffset":1026,"count":24}],"isBlockCoverage":true},{"functionName":"isIterableIterator","ranges":[{"startOffset":1030,"endOffset":1170,"count":59},{"startOffset":1120,"endOffset":1167,"count":53}],"isBlockCoverage":true}]},{"scriptId":"1384","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/gensync-utils/fs.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1013,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1011,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":187,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":267,"endOffset":301,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":322,"endOffset":470,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":417,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":472,"endOffset":567,"count":2},{"startOffset":540,"endOffset":545,"count":0}],"isBlockCoverage":true},{"functionName":"sync","ranges":[{"startOffset":758,"endOffset":892,"count":0}],"isBlockCoverage":false},{"functionName":"errback","ranges":[{"startOffset":906,"endOffset":980,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1385","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/configuration.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10370,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10368,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":353,"endOffset":495,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":442,"endOffset":476,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":497,"endOffset":636,"count":0}],"isBlockCoverage":false},{"functionName":"_json","ranges":[{"startOffset":638,"endOffset":778,"count":0}],"isBlockCoverage":false},{"functionName":"_gensync","ranges":[{"startOffset":780,"endOffset":928,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1379,"endOffset":1565,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1567,"endOffset":2310,"count":1},{"startOffset":1649,"endOffset":1722,"count":0},{"startOffset":1724,"endOffset":1820,"count":0},{"startOffset":1822,"endOffset":1950,"count":0},{"startOffset":1973,"endOffset":2309,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2312,"endOffset":2407,"count":5},{"startOffset":2380,"endOffset":2385,"count":4},{"startOffset":2386,"endOffset":2404,"count":1}],"isBlockCoverage":true},{"functionName":"findConfigUpwards","ranges":[{"startOffset":2815,"endOffset":3194,"count":0}],"isBlockCoverage":false},{"functionName":"findRelativeConfig","ranges":[{"startOffset":3196,"endOffset":3986,"count":0}],"isBlockCoverage":false},{"functionName":"findRootConfig","ranges":[{"startOffset":3988,"endOffset":4114,"count":0}],"isBlockCoverage":false},{"functionName":"loadOneConfig","ranges":[{"startOffset":4116,"endOffset":4809,"count":0}],"isBlockCoverage":false},{"functionName":"loadConfig","ranges":[{"startOffset":4811,"endOffset":5179,"count":0}],"isBlockCoverage":false},{"functionName":"readConfig","ranges":[{"startOffset":5181,"endOffset":5425,"count":0}],"isBlockCoverage":false},{"functionName":"readConfigJS","ranges":[{"startOffset":5513,"endOffset":7147,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7211,"endOffset":7560,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7619,"endOffset":8223,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8283,"endOffset":8803,"count":0}],"isBlockCoverage":false},{"functionName":"throwConfigError","ranges":[{"startOffset":8807,"endOffset":10366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1386","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/helpers/config-api.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2271,"count":1}],"isBlockCoverage":true},{"functionName":"_semver","ranges":[{"startOffset":170,"endOffset":315,"count":1}],"isBlockCoverage":true},{"functionName":"_semver","ranges":[{"startOffset":262,"endOffset":296,"count":20}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":384,"endOffset":479,"count":1},{"startOffset":452,"endOffset":457,"count":0}],"isBlockCoverage":true},{"functionName":"makeAPI","ranges":[{"startOffset":481,"endOffset":1186,"count":23}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":521,"endOffset":958,"count":0}],"isBlockCoverage":false},{"functionName":"caller","ranges":[{"startOffset":978,"endOffset":1052,"count":0}],"isBlockCoverage":false},{"functionName":"async","ranges":[{"startOffset":1137,"endOffset":1148,"count":0}],"isBlockCoverage":false},{"functionName":"assertVersion","ranges":[{"startOffset":1188,"endOffset":2269,"count":21},{"startOffset":1289,"endOffset":1356,"count":0},{"startOffset":1427,"endOffset":1490,"count":0},{"startOffset":1552,"endOffset":1638,"count":0},{"startOffset":1640,"endOffset":2268,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1387","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/module-types.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2653,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2651,"count":1},{"startOffset":1307,"endOffset":1325,"count":0}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":234,"endOffset":373,"count":0}],"isBlockCoverage":false},{"functionName":"_url","ranges":[{"startOffset":375,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":489,"endOffset":584,"count":0}],"isBlockCoverage":false},{"functionName":"asyncGeneratorStep","ranges":[{"startOffset":586,"endOffset":851,"count":0}],"isBlockCoverage":false},{"functionName":"_asyncToGenerator","ranges":[{"startOffset":853,"endOffset":1242,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsOrMjsDefault","ranges":[{"startOffset":1327,"endOffset":1807,"count":0}],"isBlockCoverage":false},{"functionName":"guessJSModuleType","ranges":[{"startOffset":1809,"endOffset":2013,"count":0}],"isBlockCoverage":false},{"functionName":"loadCjsDefault","ranges":[{"startOffset":2015,"endOffset":2184,"count":0}],"isBlockCoverage":false},{"functionName":"loadMjsDefault","ranges":[{"startOffset":2186,"endOffset":2266,"count":0}],"isBlockCoverage":false},{"functionName":"_loadMjsDefault","ranges":[{"startOffset":2268,"endOffset":2649,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1388","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/import.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":231,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"import_","ranges":[{"startOffset":170,"endOffset":227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1389","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/pattern-to-regex.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1467,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1465,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":176,"endOffset":315,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":262,"endOffset":296,"count":0}],"isBlockCoverage":false},{"functionName":"_escapeRegExp","ranges":[{"startOffset":317,"endOffset":487,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":489,"endOffset":584,"count":1},{"startOffset":557,"endOffset":562,"count":0}],"isBlockCoverage":true},{"functionName":"pathToPattern","ranges":[{"startOffset":881,"endOffset":1463,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1390","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/gensync-utils/resolve.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":706,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":704,"count":1}],"isBlockCoverage":true},{"functionName":"_resolve","ranges":[{"startOffset":169,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"_resolve","ranges":[{"startOffset":264,"endOffset":298,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":319,"endOffset":467,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":414,"endOffset":448,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":469,"endOffset":564,"count":2},{"startOffset":537,"endOffset":542,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1391","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/node_modules/debug/src/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":378,"count":1},{"startOffset":280,"endOffset":326,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1392","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/node_modules/debug/src/node.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4541,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4539,"count":1},{"startOffset":723,"endOffset":1328,"count":0},{"startOffset":1331,"endOffset":1432,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1656,"endOffset":1696,"count":239}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1705,"endOffset":2163,"count":0}],"isBlockCoverage":false},{"functionName":"useColors","ranges":[{"startOffset":2239,"endOffset":2378,"count":4},{"startOffset":2302,"endOffset":2341,"count":0}],"isBlockCoverage":true},{"functionName":"formatArgs","ranges":[{"startOffset":2451,"endOffset":2885,"count":0}],"isBlockCoverage":false},{"functionName":"getDate","ranges":[{"startOffset":2887,"endOffset":3002,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":3091,"endOffset":3175,"count":0}],"isBlockCoverage":false},{"functionName":"save","ranges":[{"startOffset":3256,"endOffset":3513,"count":1},{"startOffset":3301,"endOffset":3339,"count":0}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3630,"endOffset":3676,"count":1}],"isBlockCoverage":true},{"functionName":"init","ranges":[{"startOffset":3841,"endOffset":4044,"count":4},{"startOffset":3977,"endOffset":4042,"count":0}],"isBlockCoverage":true},{"functionName":"formatters.o","ranges":[{"startOffset":4209,"endOffset":4340,"count":0}],"isBlockCoverage":false},{"functionName":"formatters.O","ranges":[{"startOffset":4433,"endOffset":4535,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1393","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/node_modules/debug/src/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5996,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5994,"count":1}],"isBlockCoverage":true},{"functionName":"setup","ranges":[{"startOffset":170,"endOffset":5966,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":452,"endOffset":494,"count":8}],"isBlockCoverage":true},{"functionName":"selectColor","ranges":[{"startOffset":1118,"endOffset":1396,"count":4},{"startOffset":1214,"endOffset":1319,"count":119}],"isBlockCoverage":true},{"functionName":"createDebug","ranges":[{"startOffset":1566,"endOffset":3313,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1619,"endOffset":2832,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":3316,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":3496,"endOffset":3699,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":3860,"endOffset":4607,"count":1},{"startOffset":4033,"endOffset":4045,"count":0},{"startOffset":4194,"endOffset":4431,"count":0},{"startOffset":4490,"endOffset":4604,"count":0}],"isBlockCoverage":true},{"functionName":"disable","ranges":[{"startOffset":4693,"endOffset":4918,"count":0}],"isBlockCoverage":false},{"functionName":"enabled","ranges":[{"startOffset":5061,"endOffset":5448,"count":4},{"startOffset":5123,"endOffset":5144,"count":0},{"startOffset":5227,"endOffset":5297,"count":0},{"startOffset":5359,"endOffset":5428,"count":0}],"isBlockCoverage":true},{"functionName":"toNamespace","ranges":[{"startOffset":5566,"endOffset":5702,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":5791,"endOffset":5900,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1394","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/node_modules/ms/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3089,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3087,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":484,"endOffset":853,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":977,"endOffset":2060,"count":0}],"isBlockCoverage":false},{"functionName":"fmtShort","ranges":[{"startOffset":2158,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"fmtLong","ranges":[{"startOffset":2572,"endOffset":2908,"count":0}],"isBlockCoverage":false},{"functionName":"plural","ranges":[{"startOffset":2944,"endOffset":3084,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1395","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/files/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4637,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4635,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":287,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":376,"endOffset":410,"count":0}],"isBlockCoverage":false},{"functionName":"_resolve","ranges":[{"startOffset":431,"endOffset":579,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":581,"endOffset":720,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":722,"endOffset":817,"count":1},{"startOffset":790,"endOffset":795,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePlugin","ranges":[{"startOffset":1429,"endOffset":1529,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePreset","ranges":[{"startOffset":1531,"endOffset":1631,"count":0}],"isBlockCoverage":false},{"functionName":"loadPlugin","ranges":[{"startOffset":1633,"endOffset":1961,"count":0}],"isBlockCoverage":false},{"functionName":"loadPreset","ranges":[{"startOffset":1963,"endOffset":2291,"count":0}],"isBlockCoverage":false},{"functionName":"standardizeName","ranges":[{"startOffset":2293,"endOffset":2755,"count":0}],"isBlockCoverage":false},{"functionName":"resolveStandardizedName","ranges":[{"startOffset":2757,"endOffset":4118,"count":0}],"isBlockCoverage":false},{"functionName":"requireModule","ranges":[{"startOffset":4156,"endOffset":4633,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1396","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/helpers/environment.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":293,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":291,"count":1}],"isBlockCoverage":true},{"functionName":"getEnv","ranges":[{"startOffset":168,"endOffset":289,"count":4},{"startOffset":271,"endOffset":286,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1397","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/item.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1628,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1626,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":296,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":496,"endOffset":591,"count":0}],"isBlockCoverage":false},{"functionName":"createItemFromDescriptor","ranges":[{"startOffset":593,"endOffset":667,"count":32}],"isBlockCoverage":true},{"functionName":"createConfigItem","ranges":[{"startOffset":669,"endOffset":938,"count":0}],"isBlockCoverage":false},{"functionName":"getItemDescriptor","ranges":[{"startOffset":940,"endOffset":1066,"count":49},{"startOffset":1009,"endOffset":1043,"count":32},{"startOffset":1043,"endOffset":1065,"count":17}],"isBlockCoverage":true},{"functionName":"ConfigItem","ranges":[{"startOffset":1089,"endOffset":1583,"count":32},{"startOffset":1439,"endOffset":1541,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1398","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/config-descriptors.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5973,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5971,"count":1}],"isBlockCoverage":true},{"functionName":"isEqualDescriptor","ranges":[{"startOffset":414,"endOffset":729,"count":0}],"isBlockCoverage":false},{"functionName":"createCachedDescriptors","ranges":[{"startOffset":731,"endOffset":1098,"count":4},{"startOffset":968,"endOffset":978,"count":0},{"startOffset":1001,"endOffset":1080,"count":0}],"isBlockCoverage":true},{"functionName":"plugins","ranges":[{"startOffset":907,"endOffset":967,"count":4}],"isBlockCoverage":true},{"functionName":"plugins","ranges":[{"startOffset":970,"endOffset":978,"count":0}],"isBlockCoverage":false},{"functionName":"presets","ranges":[{"startOffset":1003,"endOffset":1080,"count":0}],"isBlockCoverage":false},{"functionName":"presets","ranges":[{"startOffset":1083,"endOffset":1091,"count":4}],"isBlockCoverage":true},{"functionName":"createUncachedDescriptors","ranges":[{"startOffset":1100,"endOffset":1572,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1691,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2108,"endOffset":2338,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2158,"endOffset":2168,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2214,"endOffset":2334,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2274,"endOffset":2333,"count":17}],"isBlockCoverage":true},{"functionName":"loadCachedDescriptor","ranges":[{"startOffset":2370,"endOffset":3068,"count":17},{"startOffset":2503,"endOffset":2515,"count":0},{"startOffset":2983,"endOffset":3015,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2900,"endOffset":2951,"count":0}],"isBlockCoverage":false},{"functionName":"createPresetDescriptors","ranges":[{"startOffset":3070,"endOffset":3220,"count":0}],"isBlockCoverage":false},{"functionName":"createPluginDescriptors","ranges":[{"startOffset":3222,"endOffset":3342,"count":3}],"isBlockCoverage":true},{"functionName":"createDescriptors","ranges":[{"startOffset":3344,"endOffset":3624,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3443,"endOffset":3563,"count":17}],"isBlockCoverage":true},{"functionName":"createDescriptor","ranges":[{"startOffset":3626,"endOffset":5208,"count":17},{"startOffset":3765,"endOffset":3787,"count":0},{"startOffset":3865,"endOffset":3989,"count":15},{"startOffset":3895,"endOffset":3940,"count":0},{"startOffset":4072,"endOffset":4446,"count":0},{"startOffset":4462,"endOffset":4532,"count":0},{"startOffset":4566,"endOffset":4585,"count":2},{"startOffset":4587,"endOffset":4744,"count":1},{"startOffset":4648,"endOffset":4740,"count":0},{"startOffset":4778,"endOffset":4808,"count":16},{"startOffset":4810,"endOffset":4910,"count":0},{"startOffset":4936,"endOffset":4964,"count":0},{"startOffset":4965,"endOffset":4973,"count":0},{"startOffset":4975,"endOffset":5090,"count":0}],"isBlockCoverage":true},{"functionName":"assertNoDuplicates","ranges":[{"startOffset":5210,"endOffset":5969,"count":3},{"startOffset":5301,"endOffset":5967,"count":17},{"startOffset":5345,"endOffset":5354,"count":1},{"startOffset":5354,"endOffset":5517,"count":16},{"startOffset":5517,"endOffset":5934,"count":0},{"startOffset":5934,"endOffset":5967,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5556,"endOffset":5583,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1399","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1902,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1900,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":213,"endOffset":256,"count":4}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":438,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":533,"endOffset":567,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":682,"endOffset":777,"count":2},{"startOffset":750,"endOffset":755,"count":1},{"startOffset":756,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":829,"endOffset":1027,"count":0}],"isBlockCoverage":false},{"functionName":"maybeErrback","ranges":[{"startOffset":1052,"endOffset":1267,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1062,"endOffset":1267,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1400","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/full.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9317,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9315,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":169,"endOffset":317,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":264,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"_traverse","ranges":[{"startOffset":600,"endOffset":758,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":705,"endOffset":739,"count":21}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1033,"endOffset":1219,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1221,"endOffset":1964,"count":1},{"startOffset":1303,"endOffset":1376,"count":0},{"startOffset":1378,"endOffset":1474,"count":0},{"startOffset":1476,"endOffset":1604,"count":0},{"startOffset":1627,"endOffset":1963,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1966,"endOffset":2061,"count":5},{"startOffset":2034,"endOffset":2039,"count":4},{"startOffset":2040,"endOffset":2058,"count":1}],"isBlockCoverage":true},{"functionName":"loadFullConfig","ranges":[{"startOffset":2102,"endOffset":5354,"count":4},{"startOffset":2214,"endOffset":2236,"count":0},{"startOffset":2437,"endOffset":2516,"count":0},{"startOffset":4871,"endOffset":4883,"count":0},{"startOffset":4888,"endOffset":5040,"count":0}],"isBlockCoverage":true},{"functionName":"recurseDescriptors","ranges":[{"startOffset":2545,"endOffset":4377,"count":4},{"startOffset":2671,"endOffset":3128,"count":32},{"startOffset":2868,"endOffset":3110,"count":0},{"startOffset":3211,"endOffset":3749,"count":0},{"startOffset":3781,"endOffset":4296,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3826,"endOffset":3837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3846,"endOffset":3861,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4196,"endOffset":4276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4407,"endOffset":4605,"count":32},{"startOffset":4494,"endOffset":4575,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4635,"endOffset":4833,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5183,"endOffset":5212,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5218,"endOffset":5248,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5437,"endOffset":6383,"count":24},{"startOffset":5526,"endOffset":5563,"count":0},{"startOffset":5584,"endOffset":5589,"count":2},{"startOffset":5647,"endOffset":5919,"count":23},{"startOffset":5785,"endOffset":5915,"count":0},{"startOffset":5962,"endOffset":6031,"count":0},{"startOffset":6072,"endOffset":6311,"count":0}],"isBlockCoverage":true},{"functionName":"loadPluginDescriptor","ranges":[{"startOffset":6387,"endOffset":6741,"count":46},{"startOffset":6492,"endOffset":6650,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6797,"endOffset":7789,"count":24},{"startOffset":6994,"endOffset":7084,"count":15},{"startOffset":7109,"endOffset":7732,"count":7},{"startOffset":7698,"endOffset":7703,"count":0},{"startOffset":7720,"endOffset":7725,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7342,"endOffset":7426,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7381,"endOffset":7418,"count":14}],"isBlockCoverage":true},{"functionName":"validateIfOptionNeedsFilename","ranges":[{"startOffset":7831,"endOffset":8326,"count":0}],"isBlockCoverage":false},{"functionName":"validatePreset","ranges":[{"startOffset":8352,"endOffset":8665,"count":0}],"isBlockCoverage":false},{"functionName":"loadPresetDescriptor","ranges":[{"startOffset":8668,"endOffset":8919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8979,"endOffset":9112,"count":0}],"isBlockCoverage":false},{"functionName":"chain","ranges":[{"startOffset":9116,"endOffset":9313,"count":21},{"startOffset":9214,"endOffset":9312,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9224,"endOffset":9310,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1401","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":576,"count":1}],"isBlockCoverage":true},{"functionName":"Plugin","ranges":[{"startOffset":186,"endOffset":544,"count":24},{"startOffset":249,"endOffset":255,"count":0},{"startOffset":402,"endOffset":407,"count":9}],"isBlockCoverage":true}]},{"scriptId":"1402","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/config-chain.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14691,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":14689,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":270,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":411,"endOffset":553,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":500,"endOffset":534,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":813,"endOffset":908,"count":2},{"startOffset":881,"endOffset":886,"count":1},{"startOffset":887,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"buildPresetChain","ranges":[{"startOffset":977,"endOffset":1274,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":1333,"endOffset":1372,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":1381,"endOffset":1443,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":1458,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":1540,"endOffset":1625,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1749,"endOffset":1847,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1915,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2141,"endOffset":2294,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2371,"endOffset":2582,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootChain","ranges":[{"startOffset":2586,"endOffset":4876,"count":4},{"startOffset":2772,"endOffset":2784,"count":0},{"startOffset":2847,"endOffset":2963,"count":0},{"startOffset":3000,"endOffset":3104,"count":0},{"startOffset":3258,"endOffset":3700,"count":0},{"startOffset":3757,"endOffset":3812,"count":3},{"startOffset":3812,"endOffset":3818,"count":1},{"startOffset":3936,"endOffset":3946,"count":0},{"startOffset":3947,"endOffset":4023,"count":0},{"startOffset":4025,"endOffset":4482,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4731,"endOffset":4755,"count":4}],"isBlockCoverage":true},{"functionName":"babelrcLoadEnabled","ranges":[{"startOffset":4878,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5927,"endOffset":6054,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6117,"endOffset":6245,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6307,"endOffset":6435,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":6494,"endOffset":6582,"count":4}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":6591,"endOffset":6698,"count":4}],"isBlockCoverage":true},{"functionName":"overrides","ranges":[{"startOffset":6713,"endOffset":6821,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":6839,"endOffset":6968,"count":0}],"isBlockCoverage":false},{"functionName":"root","ranges":[{"startOffset":7021,"endOffset":7054,"count":0}],"isBlockCoverage":false},{"functionName":"env","ranges":[{"startOffset":7063,"endOffset":7119,"count":0}],"isBlockCoverage":false},{"functionName":"overrides","ranges":[{"startOffset":7134,"endOffset":7192,"count":0}],"isBlockCoverage":false},{"functionName":"overridesEnv","ranges":[{"startOffset":7210,"endOffset":7289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7354,"endOffset":7449,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7515,"endOffset":7664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7736,"endOffset":7886,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7961,"endOffset":8169,"count":0}],"isBlockCoverage":false},{"functionName":"buildRootDescriptors","ranges":[{"startOffset":8173,"endOffset":8299,"count":4}],"isBlockCoverage":true},{"functionName":"buildEnvDescriptors","ranges":[{"startOffset":8301,"endOffset":8521,"count":4},{"startOffset":8414,"endOffset":8437,"count":0},{"startOffset":8453,"endOffset":8511,"count":0}],"isBlockCoverage":true},{"functionName":"buildOverrideDescriptors","ranges":[{"startOffset":8523,"endOffset":8814,"count":0}],"isBlockCoverage":false},{"functionName":"buildOverrideEnvDescriptors","ranges":[{"startOffset":8816,"endOffset":9213,"count":0}],"isBlockCoverage":false},{"functionName":"makeChainWalker","ranges":[{"startOffset":9215,"endOffset":10640,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9299,"endOffset":10637,"count":4},{"startOffset":9623,"endOffset":9671,"count":0},{"startOffset":9673,"endOffset":9722,"count":0},{"startOffset":10359,"endOffset":10385,"count":0},{"startOffset":10544,"endOffset":10574,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9773,"endOffset":10205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10245,"endOffset":10356,"count":4}],"isBlockCoverage":true},{"functionName":"mergeExtendsChain","ranges":[{"startOffset":10642,"endOffset":11292,"count":4},{"startOffset":10756,"endOffset":11291,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11038,"endOffset":11067,"count":0}],"isBlockCoverage":false},{"functionName":"mergeChain","ranges":[{"startOffset":11294,"endOffset":11476,"count":12}],"isBlockCoverage":true},{"functionName":"mergeChainOpts","ranges":[{"startOffset":11478,"endOffset":11673,"count":4}],"isBlockCoverage":true},{"functionName":"emptyChain","ranges":[{"startOffset":11675,"endOffset":11766,"count":16}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":11768,"endOffset":12295,"count":4},{"startOffset":12195,"endOffset":12274,"count":0}],"isBlockCoverage":true},{"functionName":"dedupDescriptors","ranges":[{"startOffset":12297,"endOffset":13047,"count":8},{"startOffset":12412,"endOffset":12947,"count":32},{"startOffset":12456,"endOffset":12875,"count":31},{"startOffset":12827,"endOffset":12869,"count":0},{"startOffset":12875,"endOffset":12943,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12977,"endOffset":13039,"count":32}],"isBlockCoverage":true},{"functionName":"configIsApplicable","ranges":[{"startOffset":13049,"endOffset":13406,"count":4},{"startOffset":13149,"endOffset":13207,"count":0},{"startOffset":13243,"endOffset":13304,"count":0},{"startOffset":13340,"endOffset":13402,"count":0}],"isBlockCoverage":true},{"functionName":"configFieldIsApplicable","ranges":[{"startOffset":13408,"endOffset":13578,"count":0}],"isBlockCoverage":false},{"functionName":"shouldIgnore","ranges":[{"startOffset":13580,"endOffset":14016,"count":4},{"startOffset":13649,"endOffset":13693,"count":0},{"startOffset":13695,"endOffset":13814,"count":0},{"startOffset":13827,"endOffset":13870,"count":0},{"startOffset":13872,"endOffset":13997,"count":0}],"isBlockCoverage":true},{"functionName":"matchesPatterns","ranges":[{"startOffset":14018,"endOffset":14168,"count":0}],"isBlockCoverage":false},{"functionName":"matchPattern","ranges":[{"startOffset":14170,"endOffset":14687,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1403","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/validation/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6964,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6962,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":427,"endOffset":522,"count":2},{"startOffset":501,"endOffset":519,"count":0}],"isBlockCoverage":true},{"functionName":"getSource","ranges":[{"startOffset":2744,"endOffset":2838,"count":4},{"startOffset":2812,"endOffset":2835,"count":0}],"isBlockCoverage":true},{"functionName":"validate","ranges":[{"startOffset":2840,"endOffset":2946,"count":4}],"isBlockCoverage":true},{"functionName":"validateNested","ranges":[{"startOffset":2948,"endOffset":4217,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3080,"endOffset":4198,"count":27},{"startOffset":3201,"endOffset":3229,"count":0},{"startOffset":3231,"endOffset":3335,"count":0},{"startOffset":3366,"endOffset":3389,"count":0},{"startOffset":3391,"endOffset":3507,"count":0},{"startOffset":3538,"endOffset":3562,"count":0},{"startOffset":3563,"endOffset":3589,"count":0},{"startOffset":3591,"endOffset":4012,"count":0},{"startOffset":4059,"endOffset":4087,"count":20},{"startOffset":4088,"endOffset":4114,"count":20},{"startOffset":4115,"endOffset":4138,"count":16},{"startOffset":4139,"endOffset":4159,"count":0}],"isBlockCoverage":true},{"functionName":"throwUnknownError","ranges":[{"startOffset":4219,"endOffset":4771,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4773,"endOffset":4856,"count":4}],"isBlockCoverage":true},{"functionName":"assertNoDuplicateSourcemap","ranges":[{"startOffset":4858,"endOffset":5046,"count":4},{"startOffset":4931,"endOffset":4957,"count":0},{"startOffset":4959,"endOffset":5044,"count":0}],"isBlockCoverage":true},{"functionName":"assertEnvSet","ranges":[{"startOffset":5048,"endOffset":5671,"count":0}],"isBlockCoverage":false},{"functionName":"assertOverridesList","ranges":[{"startOffset":5673,"endOffset":6539,"count":0}],"isBlockCoverage":false},{"functionName":"checkNoUnwrappedItemOptionPairs","ranges":[{"startOffset":6541,"endOffset":6960,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1404","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/validation/removed.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2440,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2438,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1405","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/validation/option-assertions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7420,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7418,"count":1}],"isBlockCoverage":true},{"functionName":"msg","ranges":[{"startOffset":915,"endOffset":1384,"count":0}],"isBlockCoverage":false},{"functionName":"access","ranges":[{"startOffset":1386,"endOffset":1478,"count":62}],"isBlockCoverage":true},{"functionName":"assertRootMode","ranges":[{"startOffset":1480,"endOffset":1737,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceMaps","ranges":[{"startOffset":1739,"endOffset":1988,"count":0}],"isBlockCoverage":false},{"functionName":"assertCompact","ranges":[{"startOffset":1990,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"assertSourceType","ranges":[{"startOffset":2206,"endOffset":2460,"count":0}],"isBlockCoverage":false},{"functionName":"assertCallerMetadata","ranges":[{"startOffset":2462,"endOffset":3066,"count":0}],"isBlockCoverage":false},{"functionName":"assertInputSourceMap","ranges":[{"startOffset":3068,"endOffset":3310,"count":0}],"isBlockCoverage":false},{"functionName":"assertString","ranges":[{"startOffset":3312,"endOffset":3495,"count":30},{"startOffset":3404,"endOffset":3476,"count":0}],"isBlockCoverage":true},{"functionName":"assertFunction","ranges":[{"startOffset":3497,"endOffset":3686,"count":26},{"startOffset":3593,"endOffset":3667,"count":0}],"isBlockCoverage":true},{"functionName":"assertBoolean","ranges":[{"startOffset":3688,"endOffset":3874,"count":10},{"startOffset":3782,"endOffset":3855,"count":0}],"isBlockCoverage":true},{"functionName":"assertObject","ranges":[{"startOffset":3876,"endOffset":4096,"count":18},{"startOffset":4004,"endOffset":4077,"count":0}],"isBlockCoverage":true},{"functionName":"assertArray","ranges":[{"startOffset":4098,"endOffset":4270,"count":4},{"startOffset":4179,"endOffset":4251,"count":0}],"isBlockCoverage":true},{"functionName":"assertIgnoreList","ranges":[{"startOffset":4272,"endOffset":4455,"count":0}],"isBlockCoverage":false},{"functionName":"assertIgnoreItem","ranges":[{"startOffset":4457,"endOffset":4715,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigApplicableTest","ranges":[{"startOffset":4717,"endOffset":5160,"count":0}],"isBlockCoverage":false},{"functionName":"checkValidTest","ranges":[{"startOffset":5162,"endOffset":5290,"count":0}],"isBlockCoverage":false},{"functionName":"assertConfigFileSearch","ranges":[{"startOffset":5292,"endOffset":5560,"count":4},{"startOffset":5394,"endOffset":5422,"count":0},{"startOffset":5424,"endOffset":5541,"count":0}],"isBlockCoverage":true},{"functionName":"assertBabelrcSearch","ranges":[{"startOffset":5562,"endOffset":6086,"count":0}],"isBlockCoverage":false},{"functionName":"assertPluginList","ranges":[{"startOffset":6088,"endOffset":6271,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6197,"endOffset":6248,"count":32}],"isBlockCoverage":true},{"functionName":"assertPluginItem","ranges":[{"startOffset":6273,"endOffset":7172,"count":32},{"startOffset":6341,"endOffset":7106,"count":30},{"startOffset":6371,"endOffset":6439,"count":0},{"startOffset":6467,"endOffset":6551,"count":0},{"startOffset":6780,"endOffset":6879,"count":0},{"startOffset":6915,"endOffset":7102,"count":0},{"startOffset":7106,"endOffset":7153,"count":2}],"isBlockCoverage":true},{"functionName":"assertPluginTarget","ranges":[{"startOffset":7174,"endOffset":7416,"count":32},{"startOffset":7249,"endOffset":7258,"count":2},{"startOffset":7260,"endOffset":7288,"count":30},{"startOffset":7289,"endOffset":7319,"count":30},{"startOffset":7321,"endOffset":7397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1406","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/validation/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2048,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2046,"count":1}],"isBlockCoverage":true},{"functionName":"assertVisitorMap","ranges":[{"startOffset":637,"endOffset":1037,"count":15},{"startOffset":863,"endOffset":1016,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":783,"endOffset":828,"count":28}],"isBlockCoverage":true},{"functionName":"assertVisitorHandler","ranges":[{"startOffset":1039,"endOffset":1461,"count":28},{"startOffset":1125,"endOffset":1336,"count":2},{"startOffset":1336,"endOffset":1442,"count":26},{"startOffset":1375,"endOffset":1442,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1158,"endOffset":1330,"count":2},{"startOffset":1224,"endOffset":1324,"count":0}],"isBlockCoverage":true},{"functionName":"validatePluginObject","ranges":[{"startOffset":1463,"endOffset":2044,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1592,"endOffset":2026,"count":65},{"startOffset":1802,"endOffset":2022,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1407","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/config/partial.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4510,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4508,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":223,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":309,"endOffset":343,"count":10}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":364,"endOffset":512,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":459,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":822,"endOffset":917,"count":3},{"startOffset":890,"endOffset":895,"count":1},{"startOffset":896,"endOffset":914,"count":2}],"isBlockCoverage":true},{"functionName":"resolveRootMode","ranges":[{"startOffset":919,"endOffset":1832,"count":4},{"startOffset":1032,"endOffset":1213,"count":0},{"startOffset":1219,"endOffset":1742,"count":0},{"startOffset":1748,"endOffset":1826,"count":0}],"isBlockCoverage":true},{"functionName":"loadPrivatePartialConfig","ranges":[{"startOffset":1834,"endOffset":3493,"count":4},{"startOffset":1970,"endOffset":2051,"count":0},{"startOffset":2127,"endOffset":2131,"count":0},{"startOffset":2500,"endOffset":2545,"count":3},{"startOffset":2546,"endOffset":2557,"count":1},{"startOffset":2735,"endOffset":2747,"count":0},{"startOffset":3105,"endOffset":3123,"count":3},{"startOffset":3124,"endOffset":3135,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2800,"endOffset":2857,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3181,"endOffset":3242,"count":32}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3289,"endOffset":3350,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3545,"endOffset":4099,"count":0}],"isBlockCoverage":false},{"functionName":"PartialConfig","ranges":[{"startOffset":4174,"endOffset":4363,"count":0}],"isBlockCoverage":false},{"functionName":"hasFilesystemConfig","ranges":[{"startOffset":4367,"endOffset":4462,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1408","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transform.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1283,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1281,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":220,"endOffset":368,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":315,"endOffset":349,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":482,"endOffset":577,"count":2},{"startOffset":550,"endOffset":555,"count":1},{"startOffset":556,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":627,"endOffset":806,"count":2},{"startOffset":736,"endOffset":748,"count":0}],"isBlockCoverage":true},{"functionName":"transform","ranges":[{"startOffset":828,"endOffset":1076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1409","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3601,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":162,"endOffset":320,"count":1}],"isBlockCoverage":true},{"functionName":"_traverse","ranges":[{"startOffset":267,"endOffset":301,"count":5}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":692,"endOffset":787,"count":6},{"startOffset":766,"endOffset":784,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":789,"endOffset":1928,"count":3},{"startOffset":1024,"endOffset":1250,"count":0},{"startOffset":1319,"endOffset":1429,"count":0},{"startOffset":1434,"endOffset":1662,"count":0},{"startOffset":1761,"endOffset":1767,"count":0},{"startOffset":1811,"endOffset":1823,"count":0},{"startOffset":1865,"endOffset":1876,"count":0}],"isBlockCoverage":true},{"functionName":"transformFile","ranges":[{"startOffset":1930,"endOffset":3447,"count":3},{"startOffset":2176,"endOffset":2361,"count":34},{"startOffset":2407,"endOffset":2814,"count":34},{"startOffset":2453,"endOffset":2808,"count":13},{"startOffset":2551,"endOffset":2800,"count":0},{"startOffset":3032,"endOffset":3441,"count":34},{"startOffset":3079,"endOffset":3435,"count":2},{"startOffset":3177,"endOffset":3427,"count":0}],"isBlockCoverage":true},{"functionName":"isThenable","ranges":[{"startOffset":3449,"endOffset":3599,"count":15},{"startOffset":3491,"endOffset":3548,"count":0},{"startOffset":3549,"endOffset":3562,"count":0},{"startOffset":3563,"endOffset":3596,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1410","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/plugin-pass.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":927,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":925,"count":1}],"isBlockCoverage":true},{"functionName":"PluginPass","ranges":[{"startOffset":190,"endOffset":397,"count":34},{"startOffset":317,"endOffset":322,"count":0}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":401,"endOffset":449,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":453,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"availableHelper","ranges":[{"startOffset":502,"endOffset":601,"count":0}],"isBlockCoverage":false},{"functionName":"addHelper","ranges":[{"startOffset":605,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":668,"endOffset":719,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleName","ranges":[{"startOffset":723,"endOffset":782,"count":0}],"isBlockCoverage":false},{"functionName":"buildCodeFrameError","ranges":[{"startOffset":786,"endOffset":889,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1411","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/block-hoist-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1602,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1600,"count":1}],"isBlockCoverage":true},{"functionName":"_sortBy","ranges":[{"startOffset":183,"endOffset":335,"count":1}],"isBlockCoverage":true},{"functionName":"_sortBy","ranges":[{"startOffset":282,"endOffset":316,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":398,"endOffset":493,"count":2},{"startOffset":466,"endOffset":471,"count":1},{"startOffset":472,"endOffset":490,"count":1}],"isBlockCoverage":true},{"functionName":"loadBlockHoistPlugin","ranges":[{"startOffset":515,"endOffset":859,"count":3},{"startOffset":571,"endOffset":832,"count":1},{"startOffset":754,"endOffset":765,"count":0},{"startOffset":791,"endOffset":828,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":951,"endOffset":1584,"count":31},{"startOffset":1065,"endOffset":1255,"count":108},{"startOffset":1141,"endOffset":1149,"count":0},{"startOffset":1183,"endOffset":1245,"count":1},{"startOffset":1281,"endOffset":1288,"count":30},{"startOffset":1288,"endOffset":1583,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1343,"endOffset":1574,"count":3},{"startOffset":1407,"endOffset":1415,"count":0},{"startOffset":1472,"endOffset":1485,"count":1},{"startOffset":1519,"endOffset":1532,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1412","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/normalize-opts.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1755,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1753,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":179,"endOffset":318,"count":1}],"isBlockCoverage":true},{"functionName":"_path","ranges":[{"startOffset":265,"endOffset":299,"count":8}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":320,"endOffset":415,"count":1},{"startOffset":388,"endOffset":393,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeOptions","ranges":[{"startOffset":417,"endOffset":1751,"count":3},{"startOffset":580,"endOffset":591,"count":0},{"startOffset":1027,"endOffset":1037,"count":0},{"startOffset":1610,"endOffset":1726,"count":31},{"startOffset":1648,"endOffset":1720,"count":22}],"isBlockCoverage":true}]},{"scriptId":"1413","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/normalize-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5161,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5159,"count":1}],"isBlockCoverage":true},{"functionName":"_fs","ranges":[{"startOffset":176,"endOffset":309,"count":0}],"isBlockCoverage":false},{"functionName":"_path","ranges":[{"startOffset":311,"endOffset":450,"count":0}],"isBlockCoverage":false},{"functionName":"_debug","ranges":[{"startOffset":452,"endOffset":594,"count":1}],"isBlockCoverage":true},{"functionName":"_debug","ranges":[{"startOffset":541,"endOffset":575,"count":0}],"isBlockCoverage":false},{"functionName":"_cloneDeep","ranges":[{"startOffset":596,"endOffset":757,"count":1}],"isBlockCoverage":true},{"functionName":"_cloneDeep","ranges":[{"startOffset":704,"endOffset":738,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":759,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":846,"endOffset":880,"count":5}],"isBlockCoverage":true},{"functionName":"_convertSourceMap","ranges":[{"startOffset":901,"endOffset":1078,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1202,"endOffset":1388,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1390,"endOffset":2133,"count":1},{"startOffset":1472,"endOffset":1545,"count":0},{"startOffset":1547,"endOffset":1643,"count":0},{"startOffset":1645,"endOffset":1773,"count":0},{"startOffset":1796,"endOffset":2132,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2135,"endOffset":2230,"count":4},{"startOffset":2203,"endOffset":2208,"count":2},{"startOffset":2209,"endOffset":2227,"count":2}],"isBlockCoverage":true},{"functionName":"normalizeFile","ranges":[{"startOffset":2343,"endOffset":4190,"count":3},{"startOffset":2420,"endOffset":2425,"count":0},{"startOffset":2441,"endOffset":2668,"count":1},{"startOffset":2475,"endOffset":2517,"count":0},{"startOffset":2548,"endOffset":2621,"count":0},{"startOffset":2668,"endOffset":2747,"count":2},{"startOffset":2867,"endOffset":2955,"count":0},{"startOffset":3074,"endOffset":3273,"count":0},{"startOffset":3440,"endOffset":4007,"count":0},{"startOffset":4030,"endOffset":4101,"count":0}],"isBlockCoverage":true},{"functionName":"extractCommentsFromList","ranges":[{"startOffset":4403,"endOffset":4702,"count":5544},{"startOffset":4484,"endOffset":4665,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4517,"endOffset":4659,"count":0}],"isBlockCoverage":false},{"functionName":"extractComments","ranges":[{"startOffset":4704,"endOffset":5157,"count":6}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4793,"endOffset":5131,"count":1848}],"isBlockCoverage":true}]},{"scriptId":"1414","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/parser/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2447,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2445,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":169,"endOffset":297,"count":1}],"isBlockCoverage":true},{"functionName":"_parser","ranges":[{"startOffset":244,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"_codeFrame","ranges":[{"startOffset":299,"endOffset":437,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":532,"endOffset":627,"count":1},{"startOffset":606,"endOffset":624,"count":0}],"isBlockCoverage":true},{"functionName":"parser","ranges":[{"startOffset":629,"endOffset":2443,"count":2},{"startOffset":845,"endOffset":1081,"count":30},{"startOffset":937,"endOffset":1073,"count":0},{"startOffset":1179,"endOffset":2441,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1415","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/parser/util/missing-plugin-helper.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7406,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7404,"count":1}],"isBlockCoverage":true},{"functionName":"getNameURLCombination","ranges":[{"startOffset":6237,"endOffset":6278,"count":0}],"isBlockCoverage":false},{"functionName":"generateMissingPluginMessage","ranges":[{"startOffset":6281,"endOffset":7402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1416","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/file/generate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2146,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2144,"count":1}],"isBlockCoverage":true},{"functionName":"_convertSourceMap","ranges":[{"startOffset":175,"endOffset":352,"count":0}],"isBlockCoverage":false},{"functionName":"_generator","ranges":[{"startOffset":354,"endOffset":515,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":582,"endOffset":677,"count":1},{"startOffset":656,"endOffset":674,"count":0}],"isBlockCoverage":true},{"functionName":"generateCode","ranges":[{"startOffset":679,"endOffset":2142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1417","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transformation/file/merge-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5621,"count":1}],"isBlockCoverage":true},{"functionName":"_sourceMap","ranges":[{"startOffset":177,"endOffset":332,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":334,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"mergeSourceMap","ranges":[{"startOffset":431,"endOffset":2190,"count":0}],"isBlockCoverage":false},{"functionName":"makeMappingKey","ranges":[{"startOffset":2192,"endOffset":2270,"count":0}],"isBlockCoverage":false},{"functionName":"eachOverlappingGeneratedOutputRange","ranges":[{"startOffset":2272,"endOffset":2586,"count":0}],"isBlockCoverage":false},{"functionName":"filterApplicableOriginalRanges","ranges":[{"startOffset":2588,"endOffset":2983,"count":0}],"isBlockCoverage":false},{"functionName":"eachInputGeneratedRange","ranges":[{"startOffset":2985,"endOffset":3266,"count":0}],"isBlockCoverage":false},{"functionName":"buildMappingData","ranges":[{"startOffset":3268,"endOffset":4835,"count":0}],"isBlockCoverage":false},{"functionName":"findInsertionLocation","ranges":[{"startOffset":4837,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"filterSortedArray","ranges":[{"startOffset":5367,"endOffset":5619,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1418","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transform-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2239,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2237,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":232,"endOffset":380,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":327,"endOffset":361,"count":0}],"isBlockCoverage":false},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":560,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":748,"endOffset":1491,"count":1},{"startOffset":830,"endOffset":903,"count":0},{"startOffset":905,"endOffset":1001,"count":0},{"startOffset":1003,"endOffset":1131,"count":0},{"startOffset":1154,"endOffset":1490,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1493,"endOffset":1588,"count":2},{"startOffset":1561,"endOffset":1566,"count":1},{"startOffset":1567,"endOffset":1585,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1648,"endOffset":1941,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1419","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/transform-ast.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1481,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1479,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":241,"endOffset":389,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":336,"endOffset":370,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":503,"endOffset":598,"count":2},{"startOffset":571,"endOffset":576,"count":1},{"startOffset":577,"endOffset":595,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":655,"endOffset":880,"count":1},{"startOffset":760,"endOffset":772,"count":0},{"startOffset":785,"endOffset":817,"count":0}],"isBlockCoverage":true},{"functionName":"transformFromAst","ranges":[{"startOffset":909,"endOffset":1204,"count":1},{"startOffset":998,"endOffset":1046,"count":0},{"startOffset":1140,"endOffset":1203,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1420","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/core/lib/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1357,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1355,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":208,"endOffset":356,"count":1}],"isBlockCoverage":true},{"functionName":"_gensync","ranges":[{"startOffset":303,"endOffset":337,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":568,"endOffset":663,"count":4},{"startOffset":636,"endOffset":641,"count":3},{"startOffset":642,"endOffset":660,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":709,"endOffset":936,"count":0}],"isBlockCoverage":false},{"functionName":"parse","ranges":[{"startOffset":954,"endOffset":1190,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1421","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-async-generator-functions/lib/for-await.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2535,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2533,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1074,"endOffset":2531,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1422","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-class-properties/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":790,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":788,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":755,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":627,"endOffset":746,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1423","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5986,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5984,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":287,"endOffset":343,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":420,"endOffset":468,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":897,"endOffset":992,"count":3},{"startOffset":965,"endOffset":970,"count":2},{"startOffset":971,"endOffset":989,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1053,"endOffset":1075,"count":3}],"isBlockCoverage":true},{"functionName":"createClassFeaturePlugin","ranges":[{"startOffset":1142,"endOffset":5982,"count":2}],"isBlockCoverage":true},{"functionName":"pre","ranges":[{"startOffset":1280,"endOffset":1488,"count":4},{"startOffset":1389,"endOffset":1427,"count":2},{"startOffset":1429,"endOffset":1482,"count":2}],"isBlockCoverage":true},{"functionName":"Class","ranges":[{"startOffset":1512,"endOffset":5378,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":5387,"endOffset":5546,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":5555,"endOffset":5968,"count":2},{"startOffset":5639,"endOffset":5646,"count":0},{"startOffset":5732,"endOffset":5776,"count":0},{"startOffset":5778,"endOffset":5960,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1424","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/fields.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":22702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":22700,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":797,"endOffset":892,"count":2},{"startOffset":871,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":894,"endOffset":1080,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1082,"endOffset":1825,"count":2},{"startOffset":1164,"endOffset":1237,"count":0},{"startOffset":1239,"endOffset":1335,"count":0},{"startOffset":1337,"endOffset":1465,"count":0},{"startOffset":1488,"endOffset":1824,"count":0}],"isBlockCoverage":true},{"functionName":"buildPrivateNamesMap","ranges":[{"startOffset":1827,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateNamesNodes","ranges":[{"startOffset":2760,"endOffset":3601,"count":0}],"isBlockCoverage":false},{"functionName":"privateNameVisitorFactory","ranges":[{"startOffset":3603,"endOffset":4609,"count":2}],"isBlockCoverage":true},{"functionName":"Class","ranges":[{"startOffset":3711,"endOffset":4443,"count":0}],"isBlockCoverage":false},{"functionName":"PrivateName","ranges":[{"startOffset":4668,"endOffset":5148,"count":0}],"isBlockCoverage":false},{"functionName":"BinaryExpression","ranges":[{"startOffset":5209,"endOffset":6123,"count":0}],"isBlockCoverage":false},{"functionName":"memoise","ranges":[{"startOffset":6164,"endOffset":6415,"count":0}],"isBlockCoverage":false},{"functionName":"receiver","ranges":[{"startOffset":6420,"endOffset":6638,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6643,"endOffset":7769,"count":0}],"isBlockCoverage":false},{"functionName":"boundGet","ranges":[{"startOffset":7774,"endOffset":7969,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7974,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"destructureSet","ranges":[{"startOffset":9031,"endOffset":9436,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":9441,"endOffset":9603,"count":0}],"isBlockCoverage":false},{"functionName":"optionalCall","ranges":[{"startOffset":9608,"endOffset":9777,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":9818,"endOffset":10185,"count":0}],"isBlockCoverage":false},{"functionName":"boundGet","ranges":[{"startOffset":10190,"endOffset":10376,"count":0}],"isBlockCoverage":false},{"functionName":"simpleSet","ranges":[{"startOffset":10381,"endOffset":10433,"count":0}],"isBlockCoverage":false},{"functionName":"destructureSet","ranges":[{"startOffset":10438,"endOffset":10495,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":10500,"endOffset":10587,"count":0}],"isBlockCoverage":false},{"functionName":"optionalCall","ranges":[{"startOffset":10592,"endOffset":10701,"count":0}],"isBlockCoverage":false},{"functionName":"transformPrivateNamesUsage","ranges":[{"startOffset":10707,"endOffset":11207,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateFieldInitLoose","ranges":[{"startOffset":11209,"endOffset":11632,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateInstanceFieldInitSpec","ranges":[{"startOffset":11634,"endOffset":12061,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateStaticFieldInitSpec","ranges":[{"startOffset":12063,"endOffset":13116,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateMethodInitLoose","ranges":[{"startOffset":13118,"endOffset":14204,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateInstanceMethodInitSpec","ranges":[{"startOffset":14206,"endOffset":14900,"count":0}],"isBlockCoverage":false},{"functionName":"buildPublicFieldInitLoose","ranges":[{"startOffset":14902,"endOffset":15236,"count":0}],"isBlockCoverage":false},{"functionName":"buildPublicFieldInitSpec","ranges":[{"startOffset":15238,"endOffset":15613,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateStaticMethodInitLoose","ranges":[{"startOffset":15615,"endOffset":16660,"count":0}],"isBlockCoverage":false},{"functionName":"buildPrivateMethodDeclaration","ranges":[{"startOffset":16662,"endOffset":18033,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":18097,"endOffset":18223,"count":0}],"isBlockCoverage":false},{"functionName":"replaceThisContext","ranges":[{"startOffset":18272,"endOffset":18834,"count":0}],"isBlockCoverage":false},{"functionName":"buildFieldsInitNodes","ranges":[{"startOffset":18836,"endOffset":22698,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1425","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-replace-supers/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7443,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7441,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":616,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":804,"endOffset":1547,"count":1},{"startOffset":886,"endOffset":959,"count":0},{"startOffset":961,"endOffset":1057,"count":0},{"startOffset":1059,"endOffset":1187,"count":0},{"startOffset":1210,"endOffset":1546,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1549,"endOffset":1644,"count":3},{"startOffset":1623,"endOffset":1641,"count":0}],"isBlockCoverage":true},{"functionName":"getPrototypeOfExpression","ranges":[{"startOffset":1646,"endOffset":1959,"count":0}],"isBlockCoverage":false},{"functionName":"skipAllButComputedKey","ranges":[{"startOffset":1961,"endOffset":2181,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation","ranges":[{"startOffset":2214,"endOffset":2257,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":2262,"endOffset":2382,"count":0}],"isBlockCoverage":false},{"functionName":"Method|ClassProperty|ClassPrivateProperty","ranges":[{"startOffset":2387,"endOffset":2475,"count":0}],"isBlockCoverage":false},{"functionName":"Super","ranges":[{"startOffset":2604,"endOffset":2789,"count":0}],"isBlockCoverage":false},{"functionName":"memoise","ranges":[{"startOffset":2822,"endOffset":3153,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":3158,"endOffset":3458,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3463,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"_get","ranges":[{"startOffset":3546,"endOffset":3860,"count":0}],"isBlockCoverage":false},{"functionName":"_getThisRefs","ranges":[{"startOffset":3865,"endOffset":4185,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":4190,"endOffset":4598,"count":0}],"isBlockCoverage":false},{"functionName":"destructureSet","ranges":[{"startOffset":4603,"endOffset":4735,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":4740,"endOffset":4942,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":5005,"endOffset":5217,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":5222,"endOffset":5798,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5803,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"destructureSet","ranges":[{"startOffset":6034,"endOffset":6228,"count":0}],"isBlockCoverage":false},{"functionName":"call","ranges":[{"startOffset":6233,"endOffset":6373,"count":0}],"isBlockCoverage":false},{"functionName":"ReplaceSupers","ranges":[{"startOffset":6404,"endOffset":6839,"count":0}],"isBlockCoverage":false},{"functionName":"getObjectRef","ranges":[{"startOffset":6843,"endOffset":6936,"count":0}],"isBlockCoverage":false},{"functionName":"replace","ranges":[{"startOffset":6940,"endOffset":7402,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1426","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-member-expression-to-functions/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9749,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9747,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":249,"endOffset":435,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":437,"endOffset":1180,"count":1},{"startOffset":519,"endOffset":592,"count":0},{"startOffset":594,"endOffset":690,"count":0},{"startOffset":692,"endOffset":820,"count":0},{"startOffset":843,"endOffset":1179,"count":0}],"isBlockCoverage":true},{"functionName":"AssignmentMemoiser","ranges":[{"startOffset":1211,"endOffset":1261,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1265,"endOffset":1310,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1314,"endOffset":1571,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":1575,"endOffset":1668,"count":0}],"isBlockCoverage":false},{"functionName":"toNonOptional","ranges":[{"startOffset":1673,"endOffset":2412,"count":0}],"isBlockCoverage":false},{"functionName":"isInDetachedTree","ranges":[{"startOffset":2414,"endOffset":2805,"count":0}],"isBlockCoverage":false},{"functionName":"memoise","ranges":[{"startOffset":2826,"endOffset":2838,"count":0}],"isBlockCoverage":false},{"functionName":"handle","ranges":[{"startOffset":2843,"endOffset":9571,"count":0}],"isBlockCoverage":false},{"functionName":"memberExpressionToFunctions","ranges":[{"startOffset":9577,"endOffset":9745,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1427","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-optimise-call-expression/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1734,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1732,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":230,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":418,"endOffset":1161,"count":1},{"startOffset":500,"endOffset":573,"count":0},{"startOffset":575,"endOffset":671,"count":0},{"startOffset":673,"endOffset":801,"count":0},{"startOffset":824,"endOffset":1160,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1163,"endOffset":1730,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1428","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/typescript.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":716,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":714,"count":1}],"isBlockCoverage":true},{"functionName":"assertFieldTransformed","ranges":[{"startOffset":200,"endOffset":712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1429","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/decorators.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4810,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4808,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":499,"endOffset":594,"count":2},{"startOffset":573,"endOffset":591,"count":0}],"isBlockCoverage":true},{"functionName":"hasOwnDecorators","ranges":[{"startOffset":596,"endOffset":687,"count":0}],"isBlockCoverage":false},{"functionName":"hasDecorators","ranges":[{"startOffset":689,"endOffset":795,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":797,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"method","ranges":[{"startOffset":928,"endOffset":1070,"count":0}],"isBlockCoverage":false},{"functionName":"takeDecorators","ranges":[{"startOffset":1072,"endOffset":1326,"count":0}],"isBlockCoverage":false},{"functionName":"getKey","ranges":[{"startOffset":1328,"endOffset":1578,"count":0}],"isBlockCoverage":false},{"functionName":"extractElementDescriptor","ranges":[{"startOffset":1580,"endOffset":2817,"count":0}],"isBlockCoverage":false},{"functionName":"addDecorateHelper","ranges":[{"startOffset":2819,"endOffset":3170,"count":0}],"isBlockCoverage":false},{"functionName":"buildDecoratedClass","ranges":[{"startOffset":3172,"endOffset":4806,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1430","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/misc.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3319,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3317,"count":1}],"isBlockCoverage":true},{"functionName":"Super","ranges":[{"startOffset":411,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"TSTypeAnnotation|TypeAnnotation","ranges":[{"startOffset":664,"endOffset":726,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":731,"endOffset":881,"count":0}],"isBlockCoverage":false},{"functionName":"handleClassTDZ","ranges":[{"startOffset":887,"endOffset":1307,"count":0}],"isBlockCoverage":false},{"functionName":"injectInitialization","ranges":[{"startOffset":1403,"endOffset":2348,"count":0}],"isBlockCoverage":false},{"functionName":"extractComputedKeys","ranges":[{"startOffset":2350,"endOffset":3315,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1431","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-class-features-plugin/lib/features.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5020,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5018,"count":1}],"isBlockCoverage":true},{"functionName":"enableFeature","ranges":[{"startOffset":1010,"endOffset":3170,"count":4},{"startOffset":1090,"endOffset":1122,"count":0},{"startOffset":1292,"endOffset":1414,"count":0},{"startOffset":1644,"endOffset":1695,"count":0},{"startOffset":1803,"endOffset":2318,"count":12},{"startOffset":1838,"endOffset":1947,"count":6},{"startOffset":1947,"endOffset":2314,"count":0},{"startOffset":2355,"endOffset":3168,"count":0}],"isBlockCoverage":true},{"functionName":"hasFeature","ranges":[{"startOffset":3172,"endOffset":3256,"count":16}],"isBlockCoverage":true},{"functionName":"isLoose","ranges":[{"startOffset":3258,"endOffset":3336,"count":6}],"isBlockCoverage":true},{"functionName":"setLoose","ranges":[{"startOffset":3338,"endOffset":3574,"count":4},{"startOffset":3393,"endOffset":3442,"count":0}],"isBlockCoverage":true},{"functionName":"canIgnoreLoose","ranges":[{"startOffset":3576,"endOffset":3672,"count":6}],"isBlockCoverage":true},{"functionName":"verifyUsedFeatures","ranges":[{"startOffset":3674,"endOffset":5016,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1432","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-dynamic-import/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1577,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":384,"endOffset":479,"count":1},{"startOffset":458,"endOffset":476,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1073,"endOffset":1544,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1433","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-json-strings/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1151,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1149,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":336,"endOffset":431,"count":1},{"startOffset":410,"endOffset":428,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":480,"endOffset":1116,"count":1}],"isBlockCoverage":true},{"functionName":"replace","ranges":[{"startOffset":558,"endOffset":755,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral|StringLiteral","ranges":[{"startOffset":872,"endOffset":1102,"count":34},{"startOffset":1009,"endOffset":1017,"count":0},{"startOffset":1032,"endOffset":1039,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1434","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-nullish-coalescing-operator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1654,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1652,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":402,"endOffset":497,"count":1},{"startOffset":476,"endOffset":494,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":546,"endOffset":1619,"count":1}],"isBlockCoverage":true},{"functionName":"LogicalExpression","ranges":[{"startOffset":746,"endOffset":1605,"count":7},{"startOffset":904,"endOffset":1347,"count":0},{"startOffset":1348,"endOffset":1554,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1435","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-numeric-separator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":901,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":899,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":346,"endOffset":441,"count":1},{"startOffset":420,"endOffset":438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":490,"endOffset":866,"count":1}],"isBlockCoverage":true},{"functionName":"NumericLiteral","ranges":[{"startOffset":648,"endOffset":852,"count":13},{"startOffset":782,"endOffset":844,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1436","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-object-rest-spread/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16077,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":16075,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":465,"endOffset":560,"count":1},{"startOffset":539,"endOffset":557,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":581,"endOffset":846,"count":1},{"startOffset":836,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":899,"endOffset":16042,"count":1},{"startOffset":1040,"endOffset":1108,"count":0}],"isBlockCoverage":true},{"functionName":"getExtendsHelper","ranges":[{"startOffset":1112,"endOffset":1300,"count":0}],"isBlockCoverage":false},{"functionName":"hasRestElement","ranges":[{"startOffset":1304,"endOffset":1512,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1398,"endOffset":1477,"count":0}],"isBlockCoverage":false},{"functionName":"hasObjectPatternRestElement","ranges":[{"startOffset":1516,"endOffset":1803,"count":0}],"isBlockCoverage":false},{"functionName":"visitRestElements","ranges":[{"startOffset":1807,"endOffset":2178,"count":11}],"isBlockCoverage":true},{"functionName":"Expression","ranges":[{"startOffset":1877,"endOffset":2137,"count":0}],"isBlockCoverage":false},{"functionName":"hasSpread","ranges":[{"startOffset":2182,"endOffset":2355,"count":5},{"startOffset":2249,"endOffset":2332,"count":4},{"startOffset":2296,"endOffset":2326,"count":0}],"isBlockCoverage":true},{"functionName":"extractNormalizedKeys","ranges":[{"startOffset":2359,"endOffset":3042,"count":0}],"isBlockCoverage":false},{"functionName":"replaceImpureComputedKeys","ranges":[{"startOffset":3046,"endOffset":3628,"count":0}],"isBlockCoverage":false},{"functionName":"removeUnusedExcludedKeys","ranges":[{"startOffset":3632,"endOffset":4034,"count":0}],"isBlockCoverage":false},{"functionName":"createObjectSpread","ranges":[{"startOffset":4038,"endOffset":5233,"count":0}],"isBlockCoverage":false},{"functionName":"replaceRestElement","ranges":[{"startOffset":5237,"endOffset":6179,"count":3},{"startOffset":5342,"endOffset":5435,"count":0},{"startOffset":5472,"endOffset":5500,"count":0},{"startOffset":5502,"endOffset":5682,"count":0},{"startOffset":5720,"endOffset":5748,"count":0},{"startOffset":5750,"endOffset":6175,"count":0}],"isBlockCoverage":true},{"functionName":"Function","ranges":[{"startOffset":6307,"endOffset":8168,"count":8},{"startOffset":6508,"endOffset":6781,"count":11},{"startOffset":6583,"endOffset":6771,"count":0},{"startOffset":7162,"endOffset":7174,"count":11},{"startOffset":7181,"endOffset":7669,"count":11},{"startOffset":7411,"endOffset":7647,"count":0},{"startOffset":7746,"endOffset":7918,"count":11},{"startOffset":7832,"endOffset":7906,"count":0},{"startOffset":7928,"endOffset":8160,"count":0}],"isBlockCoverage":true},{"functionName":"IdentifierHandler","ranges":[{"startOffset":6848,"endOffset":7105,"count":11},{"startOffset":7028,"endOffset":7095,"count":0}],"isBlockCoverage":true},{"functionName":"Scope|TypeAnnotation|TSTypeAnnotation","ranges":[{"startOffset":7507,"endOffset":7526,"count":0}],"isBlockCoverage":false},{"functionName":"shouldTransformParam","ranges":[{"startOffset":7975,"endOffset":8028,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclarator","ranges":[{"startOffset":8177,"endOffset":10660,"count":20},{"startOffset":8286,"endOffset":10659,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8399,"endOffset":10650,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":10669,"endOffset":11327,"count":0}],"isBlockCoverage":false},{"functionName":"CatchClause","ranges":[{"startOffset":11336,"endOffset":11469,"count":3}],"isBlockCoverage":true},{"functionName":"AssignmentExpression","ranges":[{"startOffset":11478,"endOffset":12684,"count":26},{"startOffset":11596,"endOffset":11623,"count":0},{"startOffset":11625,"endOffset":12676,"count":0}],"isBlockCoverage":true},{"functionName":"ForXStatement","ranges":[{"startOffset":12693,"endOffset":13951,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPattern","ranges":[{"startOffset":13960,"endOffset":14681,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":14690,"endOffset":16028,"count":5},{"startOffset":14763,"endOffset":16027,"count":0}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":15159,"endOffset":15713,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1437","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-parameters/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1252,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1250,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":227,"endOffset":272,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":485,"endOffset":580,"count":2},{"startOffset":559,"endOffset":577,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":629,"endOffset":1217,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1438","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-parameters/lib/params.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6356,"count":1}],"isBlockCoverage":true},{"functionName":"ReferencedIdentifier|BindingIdentifier","ranges":[{"startOffset":888,"endOffset":1226,"count":0}],"isBlockCoverage":false},{"functionName":"TypeAnnotation|TSTypeAnnotation|TypeParameterDeclaration|TSTypeParameterDeclaration","ranges":[{"startOffset":1318,"endOffset":1337,"count":0}],"isBlockCoverage":false},{"functionName":"convertFunctionParams","ranges":[{"startOffset":1342,"endOffset":6001,"count":0}],"isBlockCoverage":false},{"functionName":"buildScopeIIFE","ranges":[{"startOffset":6003,"endOffset":6354,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1439","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-parameters/lib/rest.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8018,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8016,"count":1}],"isBlockCoverage":true},{"functionName":"referencesRest","ranges":[{"startOffset":806,"endOffset":985,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":1035,"endOffset":1163,"count":0}],"isBlockCoverage":false},{"functionName":"Flow","ranges":[{"startOffset":1168,"endOffset":1246,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":1251,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1474,"endOffset":3355,"count":0}],"isBlockCoverage":false},{"functionName":"BindingIdentifier","ranges":[{"startOffset":3360,"endOffset":3469,"count":0}],"isBlockCoverage":false},{"functionName":"getParamsCount","ranges":[{"startOffset":3475,"endOffset":3667,"count":0}],"isBlockCoverage":false},{"functionName":"hasRest","ranges":[{"startOffset":3669,"endOffset":3807,"count":0}],"isBlockCoverage":false},{"functionName":"optimiseIndexGetter","ranges":[{"startOffset":3809,"endOffset":5149,"count":0}],"isBlockCoverage":false},{"functionName":"optimiseLengthGetter","ranges":[{"startOffset":5151,"endOffset":5395,"count":0}],"isBlockCoverage":false},{"functionName":"convertFunctionRest","ranges":[{"startOffset":5397,"endOffset":8014,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1440","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-optional-catch-binding/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":933,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":355,"endOffset":450,"count":1},{"startOffset":429,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":499,"endOffset":900,"count":1}],"isBlockCoverage":true},{"functionName":"CatchClause","ranges":[{"startOffset":666,"endOffset":886,"count":3},{"startOffset":716,"endOffset":878,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1441","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-optional-chaining/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5404,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5402,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":383,"endOffset":478,"count":1},{"startOffset":457,"endOffset":475,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":527,"endOffset":5369,"count":1}],"isBlockCoverage":true},{"functionName":"isSimpleMemberExpression","ranges":[{"startOffset":617,"endOffset":869,"count":0}],"isBlockCoverage":false},{"functionName":"OptionalCallExpression|OptionalMemberExpression","ranges":[{"startOffset":996,"endOffset":5355,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1442","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-private-methods/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":775,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":773,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":376,"endOffset":740,"count":1}],"isBlockCoverage":true},{"functionName":"manipulateOptions","ranges":[{"startOffset":634,"endOffset":731,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1443","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-proposal-unicode-property-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":839,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":837,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":378,"endOffset":804,"count":1},{"startOffset":517,"endOffset":594,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1444","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-regexp-features-plugin/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3375,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3373,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":600,"endOffset":695,"count":3},{"startOffset":668,"endOffset":673,"count":1},{"startOffset":674,"endOffset":692,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":756,"endOffset":778,"count":3}],"isBlockCoverage":true},{"functionName":"createRegExpFeaturePlugin","ranges":[{"startOffset":846,"endOffset":3171,"count":3}],"isBlockCoverage":true},{"functionName":"pre","ranges":[{"startOffset":948,"endOffset":1733,"count":6},{"startOffset":1098,"endOffset":1109,"count":4},{"startOffset":1110,"endOffset":1113,"count":2},{"startOffset":1325,"endOffset":1431,"count":0},{"startOffset":1554,"endOffset":1610,"count":0},{"startOffset":1644,"endOffset":1677,"count":4},{"startOffset":1679,"endOffset":1727,"count":2}],"isBlockCoverage":true},{"functionName":"RegExpLiteral","ranges":[{"startOffset":1757,"endOffset":3157,"count":3},{"startOffset":2038,"endOffset":2050,"count":0},{"startOffset":2208,"endOffset":2596,"count":0},{"startOffset":2597,"endOffset":2607,"count":0},{"startOffset":2608,"endOffset":2630,"count":0},{"startOffset":2632,"endOffset":3149,"count":0}],"isBlockCoverage":true},{"functionName":"RegExpLiteral.regexpuOptions.onNamedGroup","ranges":[{"startOffset":2331,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"isRegExpTest","ranges":[{"startOffset":3173,"endOffset":3371,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1445","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regexpu-core/rewrite-pattern.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9870,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9868,"count":1}],"isBlockCoverage":true},{"functionName":"getCharacterClassEscapeSet","ranges":[{"startOffset":1265,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"getUnicodeDotSet","ranges":[{"startOffset":1522,"endOffset":1585,"count":0}],"isBlockCoverage":false},{"functionName":"getUnicodePropertyValueSet","ranges":[{"startOffset":1623,"endOffset":1942,"count":0}],"isBlockCoverage":false},{"functionName":"handleLoneUnicodePropertyNameOrValue","ranges":[{"startOffset":1990,"endOffset":2556,"count":0}],"isBlockCoverage":false},{"functionName":"getUnicodePropertyEscapeSet","ranges":[{"startOffset":2595,"endOffset":3105,"count":0}],"isBlockCoverage":false},{"functionName":"regenerate.iuAddRange","ranges":[{"startOffset":3234,"endOffset":3397,"count":0}],"isBlockCoverage":false},{"functionName":"update","ranges":[{"startOffset":3415,"endOffset":3736,"count":0}],"isBlockCoverage":false},{"functionName":"wrap","ranges":[{"startOffset":3752,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"caseFold","ranges":[{"startOffset":3944,"endOffset":4006,"count":0}],"isBlockCoverage":false},{"functionName":"processCharacterClass","ranges":[{"startOffset":4039,"endOffset":5362,"count":0}],"isBlockCoverage":false},{"functionName":"updateNamedReference","ranges":[{"startOffset":5394,"endOffset":5459,"count":0}],"isBlockCoverage":false},{"functionName":"assertNoUnmatchedReferences","ranges":[{"startOffset":5498,"endOffset":5706,"count":0}],"isBlockCoverage":false},{"functionName":"processTerm","ranges":[{"startOffset":5729,"endOffset":8509,"count":0}],"isBlockCoverage":false},{"functionName":"rewritePattern","ranges":[{"startOffset":8694,"endOffset":9830,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1446","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regjsgen/regjsgen.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11202,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":11200,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":247,"endOffset":11184,"count":1},{"startOffset":502,"endOffset":511,"count":0},{"startOffset":1003,"endOffset":1038,"count":0},{"startOffset":1039,"endOffset":1072,"count":0},{"startOffset":10672,"endOffset":10704,"count":0},{"startOffset":10705,"endOffset":10718,"count":0},{"startOffset":10720,"endOffset":10891,"count":0},{"startOffset":11103,"endOffset":11182,"count":0}],"isBlockCoverage":true},{"functionName":"fromCodePoint","ranges":[{"startOffset":1405,"endOffset":2261,"count":0}],"isBlockCoverage":false},{"functionName":"assertType","ranges":[{"startOffset":2426,"endOffset":2961,"count":0}],"isBlockCoverage":false},{"functionName":"generate","ranges":[{"startOffset":3107,"endOffset":3303,"count":0}],"isBlockCoverage":false},{"functionName":"generateSequence","ranges":[{"startOffset":3375,"endOffset":4057,"count":0}],"isBlockCoverage":false},{"functionName":"generateAlternative","ranges":[{"startOffset":4143,"endOffset":4280,"count":0}],"isBlockCoverage":false},{"functionName":"generateAnchor","ranges":[{"startOffset":4284,"endOffset":4617,"count":0}],"isBlockCoverage":false},{"functionName":"generateAtom","ranges":[{"startOffset":4621,"endOffset":4781,"count":0}],"isBlockCoverage":false},{"functionName":"generateCharacterClass","ranges":[{"startOffset":4785,"endOffset":4990,"count":0}],"isBlockCoverage":false},{"functionName":"generateCharacterClassEscape","ranges":[{"startOffset":4994,"endOffset":5125,"count":0}],"isBlockCoverage":false},{"functionName":"generateCharacterClassRange","ranges":[{"startOffset":5129,"endOffset":5484,"count":0}],"isBlockCoverage":false},{"functionName":"generateClassAtom","ranges":[{"startOffset":5488,"endOffset":5642,"count":0}],"isBlockCoverage":false},{"functionName":"generateDisjunction","ranges":[{"startOffset":5646,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"generateDot","ranges":[{"startOffset":5966,"endOffset":6049,"count":0}],"isBlockCoverage":false},{"functionName":"generateGroup","ranges":[{"startOffset":6053,"endOffset":6810,"count":0}],"isBlockCoverage":false},{"functionName":"generateIdentifier","ranges":[{"startOffset":6814,"endOffset":6918,"count":0}],"isBlockCoverage":false},{"functionName":"generateQuantifier","ranges":[{"startOffset":6922,"endOffset":7569,"count":0}],"isBlockCoverage":false},{"functionName":"generateReference","ranges":[{"startOffset":7573,"endOffset":7856,"count":0}],"isBlockCoverage":false},{"functionName":"generateTerm","ranges":[{"startOffset":7860,"endOffset":8059,"count":0}],"isBlockCoverage":false},{"functionName":"generateUnicodePropertyEscape","ranges":[{"startOffset":8063,"endOffset":8238,"count":0}],"isBlockCoverage":false},{"functionName":"generateValue","ranges":[{"startOffset":8242,"endOffset":9748,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10813,"endOffset":10854,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1447","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regjsparser/parser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":43782,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":43780,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3066,"endOffset":43773,"count":1},{"startOffset":3123,"endOffset":4756,"count":0},{"startOffset":43721,"endOffset":43770,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3127,"endOffset":4753,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":4761,"endOffset":43580,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1448","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerate/regenerate.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34583,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":34581,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":131,"endOffset":34570,"count":1},{"startOffset":576,"endOffset":611,"count":0},{"startOffset":34151,"endOffset":34185,"count":0},{"startOffset":34186,"endOffset":34201,"count":0},{"startOffset":34205,"endOffset":34259,"count":0},{"startOffset":34409,"endOffset":34493,"count":0},{"startOffset":34496,"endOffset":34567,"count":0}],"isBlockCoverage":true},{"functionName":"extend","ranges":[{"startOffset":1421,"endOffset":1600,"count":1},{"startOffset":1486,"endOffset":1575,"count":10}],"isBlockCoverage":true},{"functionName":"forEach","ranges":[{"startOffset":1618,"endOffset":1762,"count":5},{"startOffset":1720,"endOffset":1759,"count":28}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":1813,"endOffset":1884,"count":38}],"isBlockCoverage":true},{"functionName":"isNumber","ranges":[{"startOffset":1902,"endOffset":2005,"count":185},{"startOffset":1954,"endOffset":2001,"count":0}],"isBlockCoverage":true},{"functionName":"pad","ranges":[{"startOffset":2171,"endOffset":2341,"count":0}],"isBlockCoverage":false},{"functionName":"hex","ranges":[{"startOffset":2355,"endOffset":2428,"count":0}],"isBlockCoverage":false},{"functionName":"dataFromCodePoints","ranges":[{"startOffset":2562,"endOffset":3252,"count":0}],"isBlockCoverage":false},{"functionName":"dataRemove","ranges":[{"startOffset":3273,"endOffset":4190,"count":4},{"startOffset":3447,"endOffset":4172,"count":10},{"startOffset":3545,"endOffset":4153,"count":4},{"startOffset":3600,"endOffset":3847,"count":1},{"startOffset":3629,"endOffset":3725,"count":0},{"startOffset":3847,"endOffset":4148,"count":3},{"startOffset":3879,"endOffset":3983,"count":0},{"startOffset":4153,"endOffset":4172,"count":6},{"startOffset":4172,"endOffset":4189,"count":0}],"isBlockCoverage":true},{"functionName":"dataRemoveRange","ranges":[{"startOffset":4216,"endOffset":6326,"count":0}],"isBlockCoverage":false},{"functionName":"dataAdd","ranges":[{"startOffset":6345,"endOffset":7873,"count":29},{"startOffset":6565,"endOffset":6614,"count":0},{"startOffset":6640,"endOffset":7743,"count":66},{"startOffset":6792,"endOffset":6815,"count":0},{"startOffset":6848,"endOffset":6946,"count":0},{"startOffset":7166,"endOffset":7300,"count":0},{"startOffset":7327,"endOffset":7702,"count":0}],"isBlockCoverage":true},{"functionName":"dataAddData","ranges":[{"startOffset":7895,"endOffset":8305,"count":0}],"isBlockCoverage":false},{"functionName":"dataRemoveData","ranges":[{"startOffset":8330,"endOffset":8746,"count":0}],"isBlockCoverage":false},{"functionName":"dataAddRange","ranges":[{"startOffset":8769,"endOffset":12062,"count":76},{"startOffset":8837,"endOffset":8877,"count":0},{"startOffset":8978,"endOffset":9027,"count":0},{"startOffset":9195,"endOffset":11883,"count":264},{"startOffset":9262,"endOffset":10703,"count":0},{"startOffset":10761,"endOffset":10814,"count":0},{"startOffset":10915,"endOffset":10991,"count":25},{"startOffset":10991,"endOffset":11863,"count":239},{"startOffset":11045,"endOffset":11067,"count":0},{"startOffset":11069,"endOffset":11183,"count":0},{"startOffset":11375,"endOffset":11662,"count":0},{"startOffset":11696,"endOffset":11718,"count":0},{"startOffset":11720,"endOffset":11863,"count":0},{"startOffset":11863,"endOffset":11883,"count":239},{"startOffset":11883,"endOffset":12061,"count":51}],"isBlockCoverage":true},{"functionName":"dataContains","ranges":[{"startOffset":12085,"endOffset":12615,"count":0}],"isBlockCoverage":false},{"functionName":"dataIntersection","ranges":[{"startOffset":12642,"endOffset":12947,"count":0}],"isBlockCoverage":false},{"functionName":"dataIsEmpty","ranges":[{"startOffset":12969,"endOffset":13011,"count":0}],"isBlockCoverage":false},{"functionName":"dataIsSingleton","ranges":[{"startOffset":13037,"endOffset":13168,"count":0}],"isBlockCoverage":false},{"functionName":"dataToArray","ranges":[{"startOffset":13190,"endOffset":13529,"count":0}],"isBlockCoverage":false},{"functionName":"highSurrogate","ranges":[{"startOffset":13733,"endOffset":13849,"count":0}],"isBlockCoverage":false},{"functionName":"lowSurrogate","ranges":[{"startOffset":13872,"endOffset":13980,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToString","ranges":[{"startOffset":14055,"endOffset":16634,"count":0}],"isBlockCoverage":false},{"functionName":"codePointToStringUnicode","ranges":[{"startOffset":16669,"endOffset":16828,"count":0}],"isBlockCoverage":false},{"functionName":"symbolToCodePoint","ranges":[{"startOffset":16856,"endOffset":17448,"count":0}],"isBlockCoverage":false},{"functionName":"createBMPCharacterClasses","ranges":[{"startOffset":17484,"endOffset":18137,"count":0}],"isBlockCoverage":false},{"functionName":"createUnicodeCharacterClasses","ranges":[{"startOffset":18177,"endOffset":18872,"count":0}],"isBlockCoverage":false},{"functionName":"splitAtBMP","ranges":[{"startOffset":18893,"endOffset":22974,"count":0}],"isBlockCoverage":false},{"functionName":"optimizeSurrogateMappings","ranges":[{"startOffset":23010,"endOffset":24538,"count":0}],"isBlockCoverage":false},{"functionName":"optimizeByLowSurrogates","ranges":[{"startOffset":24572,"endOffset":25832,"count":0}],"isBlockCoverage":false},{"functionName":"surrogateSet","ranges":[{"startOffset":25855,"endOffset":28062,"count":0}],"isBlockCoverage":false},{"functionName":"createSurrogateCharacterClasses","ranges":[{"startOffset":28104,"endOffset":28450,"count":0}],"isBlockCoverage":false},{"functionName":"createCharacterClassesFromData","ranges":[{"startOffset":28491,"endOffset":30206,"count":0}],"isBlockCoverage":false},{"functionName":"regenerate","ranges":[{"startOffset":30542,"endOffset":30769,"count":41},{"startOffset":30588,"endOffset":30627,"count":4},{"startOffset":30662,"endOffset":30728,"count":21},{"startOffset":30699,"endOffset":30716,"count":0},{"startOffset":30728,"endOffset":30768,"count":20}],"isBlockCoverage":true},{"functionName":"add","ranges":[{"startOffset":30865,"endOffset":31422,"count":44},{"startOffset":30926,"endOffset":30950,"count":11},{"startOffset":30950,"endOffset":30987,"count":33},{"startOffset":30987,"endOffset":31114,"count":0},{"startOffset":31114,"endOffset":31144,"count":33},{"startOffset":31144,"endOffset":31185,"count":0},{"startOffset":31185,"endOffset":31209,"count":33},{"startOffset":31209,"endOffset":31299,"count":4},{"startOffset":31299,"endOffset":31368,"count":29},{"startOffset":31369,"endOffset":31395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31230,"endOffset":31274,"count":24}],"isBlockCoverage":true},{"functionName":"remove","ranges":[{"startOffset":31436,"endOffset":32002,"count":5},{"startOffset":31497,"endOffset":31521,"count":0},{"startOffset":31558,"endOffset":31688,"count":0},{"startOffset":31718,"endOffset":31759,"count":1},{"startOffset":31783,"endOffset":31876,"count":1},{"startOffset":31876,"endOffset":31948,"count":4},{"startOffset":31949,"endOffset":31975,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31804,"endOffset":31851,"count":4}],"isBlockCoverage":true},{"functionName":"addRange","ranges":[{"startOffset":32018,"endOffset":32234,"count":76},{"startOffset":32131,"endOffset":32157,"count":0},{"startOffset":32183,"endOffset":32207,"count":0}],"isBlockCoverage":true},{"functionName":"removeRange","ranges":[{"startOffset":32253,"endOffset":32553,"count":0}],"isBlockCoverage":false},{"functionName":"intersection","ranges":[{"startOffset":32573,"endOffset":32904,"count":0}],"isBlockCoverage":false},{"functionName":"contains","ranges":[{"startOffset":32920,"endOffset":33057,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":33070,"endOffset":33164,"count":1}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":33180,"endOffset":33663,"count":0}],"isBlockCoverage":false},{"functionName":"toRegExp","ranges":[{"startOffset":33679,"endOffset":33862,"count":0}],"isBlockCoverage":false},{"functionName":"valueOf","ranges":[{"startOffset":33877,"endOffset":33971,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":34216,"endOffset":34254,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1449","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-match-property-ecmascript/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":515,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":513,"count":1}],"isBlockCoverage":true},{"functionName":"matchProperty","ranges":[{"startOffset":256,"endOffset":476,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1450","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-canonical-property-names-ecmascript/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1217,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1215,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1451","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-property-aliases-ecmascript/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1754,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1752,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1452","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-match-property-value-ecmascript/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":570,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":568,"count":1}],"isBlockCoverage":true},{"functionName":"matchPropertyValue","ranges":[{"startOffset":167,"endOffset":526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1453","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/unicode-match-property-value-ecmascript/data/mappings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":19577,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1454","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regexpu-core/data/iu-mappings.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17578,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":17576,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1455","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regexpu-core/data/character-class-escape-sets.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2764,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2762,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1456","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-regexp-features-plugin/lib/features.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":809,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":807,"count":1}],"isBlockCoverage":true},{"functionName":"enableFeature","ranges":[{"startOffset":654,"endOffset":728,"count":6}],"isBlockCoverage":true},{"functionName":"hasFeature","ranges":[{"startOffset":730,"endOffset":805,"count":6}],"isBlockCoverage":true}]},{"scriptId":"1457","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-create-regexp-features-plugin/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1431,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1429,"count":1}],"isBlockCoverage":true},{"functionName":"generateRegexpuOptions","ranges":[{"startOffset":240,"endOffset":1427,"count":3},{"startOffset":523,"endOffset":802,"count":0},{"startOffset":905,"endOffset":933,"count":0},{"startOffset":1050,"endOffset":1078,"count":0},{"startOffset":1159,"endOffset":1176,"count":0},{"startOffset":1201,"endOffset":1250,"count":0},{"startOffset":1252,"endOffset":1426,"count":0}],"isBlockCoverage":true},{"functionName":"onNamedGroup","ranges":[{"startOffset":1331,"endOffset":1339,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1458","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":634,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":632,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":250,"endOffset":345,"count":1},{"startOffset":318,"endOffset":323,"count":0}],"isBlockCoverage":true},{"functionName":"is","ranges":[{"startOffset":347,"endOffset":447,"count":0}],"isBlockCoverage":false},{"functionName":"pullFlag","ranges":[{"startOffset":449,"endOffset":630,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1459","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/pull.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":824,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":822,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1460","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/pullAll.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"pullAll","ranges":[{"startOffset":603,"endOffset":744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1461","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_basePullAll.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1525,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1523,"count":1}],"isBlockCoverage":true},{"functionName":"basePullAll","ranges":[{"startOffset":804,"endOffset":1489,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1462","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIndexOfWith.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":726,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":724,"count":1}],"isBlockCoverage":true},{"functionName":"baseIndexOfWith","ranges":[{"startOffset":447,"endOffset":686,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1463","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-async-to-generator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1621,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1619,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":451,"endOffset":546,"count":1},{"startOffset":525,"endOffset":543,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":595,"endOffset":1586,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1464","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-imports/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1320,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1318,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":358,"endOffset":411,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":488,"endOffset":535,"count":2}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":683,"endOffset":778,"count":2},{"startOffset":757,"endOffset":775,"count":0}],"isBlockCoverage":true},{"functionName":"addDefault","ranges":[{"startOffset":780,"endOffset":908,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":910,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":1048,"endOffset":1180,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":1182,"endOffset":1316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1465","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-imports/lib/import-injector.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9060,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9058,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":426,"endOffset":612,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":614,"endOffset":1357,"count":1},{"startOffset":696,"endOffset":769,"count":0},{"startOffset":771,"endOffset":867,"count":0},{"startOffset":869,"endOffset":997,"count":0},{"startOffset":1020,"endOffset":1356,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1359,"endOffset":1454,"count":3},{"startOffset":1427,"endOffset":1432,"count":2},{"startOffset":1433,"endOffset":1451,"count":1}],"isBlockCoverage":true},{"functionName":"ImportInjector","ranges":[{"startOffset":1481,"endOffset":1989,"count":0}],"isBlockCoverage":false},{"functionName":"addDefault","ranges":[{"startOffset":1993,"endOffset":2094,"count":0}],"isBlockCoverage":false},{"functionName":"addNamed","ranges":[{"startOffset":2098,"endOffset":2296,"count":0}],"isBlockCoverage":false},{"functionName":"addNamespace","ranges":[{"startOffset":2300,"endOffset":2426,"count":0}],"isBlockCoverage":false},{"functionName":"addSideEffect","ranges":[{"startOffset":2430,"endOffset":2558,"count":0}],"isBlockCoverage":false},{"functionName":"_applyDefaults","ranges":[{"startOffset":2562,"endOffset":3352,"count":0}],"isBlockCoverage":false},{"functionName":"_generateImport","ranges":[{"startOffset":3356,"endOffset":8580,"count":0}],"isBlockCoverage":false},{"functionName":"_insertStatements","ranges":[{"startOffset":8584,"endOffset":9018,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1466","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-imports/lib/import-builder.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5244,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5242,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":286,"endOffset":472,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":474,"endOffset":1217,"count":1},{"startOffset":556,"endOffset":629,"count":0},{"startOffset":631,"endOffset":727,"count":0},{"startOffset":729,"endOffset":857,"count":0},{"startOffset":880,"endOffset":1216,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1219,"endOffset":1314,"count":1},{"startOffset":1287,"endOffset":1292,"count":0}],"isBlockCoverage":true},{"functionName":"ImportBuilder","ranges":[{"startOffset":1340,"endOffset":1576,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":1580,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":1687,"endOffset":1810,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":1814,"endOffset":1981,"count":0}],"isBlockCoverage":false},{"functionName":"namespace","ranges":[{"startOffset":1985,"endOffset":2390,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":2394,"endOffset":2781,"count":0}],"isBlockCoverage":false},{"functionName":"named","ranges":[{"startOffset":2785,"endOffset":3262,"count":0}],"isBlockCoverage":false},{"functionName":"var","ranges":[{"startOffset":3266,"endOffset":3799,"count":0}],"isBlockCoverage":false},{"functionName":"defaultInterop","ranges":[{"startOffset":3803,"endOffset":3897,"count":0}],"isBlockCoverage":false},{"functionName":"wildcardInterop","ranges":[{"startOffset":3901,"endOffset":3997,"count":0}],"isBlockCoverage":false},{"functionName":"_interop","ranges":[{"startOffset":4001,"endOffset":4532,"count":0}],"isBlockCoverage":false},{"functionName":"prop","ranges":[{"startOffset":4536,"endOffset":5102,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":5106,"endOffset":5203,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1467","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-imports/lib/is-module.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":447,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":445,"count":1}],"isBlockCoverage":true},{"functionName":"isModule","ranges":[{"startOffset":171,"endOffset":443,"count":2},{"startOffset":270,"endOffset":296,"count":0},{"startOffset":298,"endOffset":396,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1468","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-arrow-functions/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":693,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":691,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":658,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1469","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-block-scoped-functions/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":1227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1470","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-block-scoping/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20983,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":20981,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":431,"endOffset":526,"count":2},{"startOffset":499,"endOffset":504,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":604,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"ignoreBlock","ranges":[{"startOffset":2923,"endOffset":3037,"count":0}],"isBlockCoverage":false},{"functionName":"isBlockScoped","ranges":[{"startOffset":3139,"endOffset":3372,"count":0}],"isBlockCoverage":false},{"functionName":"isInLoop","ranges":[{"startOffset":3374,"endOffset":3567,"count":0}],"isBlockCoverage":false},{"functionName":"convertBlockScopedToVar","ranges":[{"startOffset":3569,"endOffset":4326,"count":0}],"isBlockCoverage":false},{"functionName":"isVar","ranges":[{"startOffset":4328,"endOffset":4449,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":4531,"endOffset":4582,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4589,"endOffset":4639,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":4649,"endOffset":4850,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":4943,"endOffset":5213,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":5275,"endOffset":6005,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledStatement","ranges":[{"startOffset":6039,"endOffset":6129,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":6166,"endOffset":6588,"count":0}],"isBlockCoverage":false},{"functionName":"loopNodeTo","ranges":[{"startOffset":6594,"endOffset":6768,"count":0}],"isBlockCoverage":false},{"functionName":"Loop","ranges":[{"startOffset":6794,"endOffset":7004,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":7009,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":7051,"endOffset":7257,"count":0}],"isBlockCoverage":false},{"functionName":"BreakStatement|ContinueStatement|ReturnStatement","ranges":[{"startOffset":7262,"endOffset":8362,"count":0}],"isBlockCoverage":false},{"functionName":"BlockScoping","ranges":[{"startOffset":8391,"endOffset":9102,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":9106,"endOffset":9740,"count":0}],"isBlockCoverage":false},{"functionName":"checkConstants","ranges":[{"startOffset":9744,"endOffset":10716,"count":0}],"isBlockCoverage":false},{"functionName":"updateScopeInfo","ranges":[{"startOffset":10720,"endOffset":11437,"count":0}],"isBlockCoverage":false},{"functionName":"remap","ranges":[{"startOffset":11441,"endOffset":12190,"count":0}],"isBlockCoverage":false},{"functionName":"wrapClosure","ranges":[{"startOffset":12194,"endOffset":15372,"count":0}],"isBlockCoverage":false},{"functionName":"addContinuations","ranges":[{"startOffset":15376,"endOffset":16367,"count":0}],"isBlockCoverage":false},{"functionName":"getLetReferences","ranges":[{"startOffset":16371,"endOffset":18451,"count":0}],"isBlockCoverage":false},{"functionName":"checkLoop","ranges":[{"startOffset":18455,"endOffset":18824,"count":0}],"isBlockCoverage":false},{"functionName":"hoistVarDeclarations","ranges":[{"startOffset":18828,"endOffset":18920,"count":0}],"isBlockCoverage":false},{"functionName":"pushDeclar","ranges":[{"startOffset":18924,"endOffset":19593,"count":0}],"isBlockCoverage":false},{"functionName":"buildHas","ranges":[{"startOffset":19597,"endOffset":20976,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1471","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-block-scoping/lib/tdz.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2493,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2491,"count":1}],"isBlockCoverage":true},{"functionName":"getTDZStatus","ranges":[{"startOffset":206,"endOffset":494,"count":0}],"isBlockCoverage":false},{"functionName":"buildTDZAssert","ranges":[{"startOffset":496,"endOffset":651,"count":0}],"isBlockCoverage":false},{"functionName":"isReference","ranges":[{"startOffset":653,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":862,"endOffset":1835,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":1868,"endOffset":2454,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1472","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/extend.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":106,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":104,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1473","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/assignIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":972,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":970,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":863,"endOffset":937,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1474","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-classes/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2427,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2425,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":706,"endOffset":801,"count":5},{"startOffset":774,"endOffset":779,"count":4},{"startOffset":780,"endOffset":798,"count":1}],"isBlockCoverage":true},{"functionName":"getBuiltinClasses","ranges":[{"startOffset":829,"endOffset":916,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":888,"endOffset":915,"count":768}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1067,"endOffset":2392,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1475","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-classes/lib/transformClass.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":18278,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":784,"endOffset":970,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":972,"endOffset":1715,"count":2},{"startOffset":1054,"endOffset":1127,"count":0},{"startOffset":1129,"endOffset":1225,"count":0},{"startOffset":1227,"endOffset":1355,"count":0},{"startOffset":1378,"endOffset":1714,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1717,"endOffset":1812,"count":4},{"startOffset":1791,"endOffset":1809,"count":0}],"isBlockCoverage":true},{"functionName":"buildConstructor","ranges":[{"startOffset":1814,"endOffset":2031,"count":0}],"isBlockCoverage":false},{"functionName":"transformClass","ranges":[{"startOffset":2033,"endOffset":18276,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1476","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-define-map/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4787,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4785,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":551,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":739,"endOffset":1482,"count":1},{"startOffset":821,"endOffset":894,"count":0},{"startOffset":896,"endOffset":992,"count":0},{"startOffset":994,"endOffset":1122,"count":0},{"startOffset":1145,"endOffset":1481,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1484,"endOffset":1579,"count":2},{"startOffset":1552,"endOffset":1557,"count":1},{"startOffset":1558,"endOffset":1576,"count":1}],"isBlockCoverage":true},{"functionName":"toKind","ranges":[{"startOffset":1581,"endOffset":1770,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":1772,"endOffset":3300,"count":0}],"isBlockCoverage":false},{"functionName":"hasComputed","ranges":[{"startOffset":3302,"endOffset":3468,"count":0}],"isBlockCoverage":false},{"functionName":"toComputedObjectFromClass","ranges":[{"startOffset":3470,"endOffset":3816,"count":0}],"isBlockCoverage":false},{"functionName":"toClassObject","ranges":[{"startOffset":3818,"endOffset":4466,"count":0}],"isBlockCoverage":false},{"functionName":"toDefineObject","ranges":[{"startOffset":4468,"endOffset":4783,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1477","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/has.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":823,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":821,"count":1}],"isBlockCoverage":true},{"functionName":"has","ranges":[{"startOffset":706,"endOffset":795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1478","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseHas.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":625,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":623,"count":1}],"isBlockCoverage":true},{"functionName":"baseHas","ranges":[{"startOffset":499,"endOffset":593,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1479","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_hasPath.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1151,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1149,"count":1}],"isBlockCoverage":true},{"functionName":"hasPath","ranges":[{"startOffset":581,"endOffset":1119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1480","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_castPath.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":635,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":633,"count":1}],"isBlockCoverage":true},{"functionName":"castPath","ranges":[{"startOffset":447,"endOffset":602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1481","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":946,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":944,"count":1}],"isBlockCoverage":true},{"functionName":"isKey","ranges":[{"startOffset":564,"endOffset":916,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1482","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_stringToPath.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":906,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":904,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":578,"endOffset":867,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1483","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_memoizeCapped.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":699,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":697,"count":1}],"isBlockCoverage":true},{"functionName":"memoizeCapped","ranges":[{"startOffset":446,"endOffset":661,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":506,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1484","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/memoize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2290,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2288,"count":1}],"isBlockCoverage":true},{"functionName":"memoize","ranges":[{"startOffset":1634,"endOffset":2209,"count":1},{"startOffset":1757,"endOffset":1804,"count":0},{"startOffset":2175,"endOffset":2186,"count":0}],"isBlockCoverage":true},{"functionName":"memoized","ranges":[{"startOffset":1822,"endOffset":2135,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1485","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_toKey.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":587,"count":1}],"isBlockCoverage":true},{"functionName":"toKey","ranges":[{"startOffset":360,"endOffset":559,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1486","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2445,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2443,"count":1}],"isBlockCoverage":true},{"functionName":"addCreateSuperHelper","ranges":[{"startOffset":254,"endOffset":890,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1487","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-computed-properties/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":5337,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":5304,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1488","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-destructuring/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17562,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":17560,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":17527,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1489","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-dotall-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":589,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":378,"endOffset":556,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1490","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-duplicate-keys/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1908,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1906,"count":1}],"isBlockCoverage":true},{"functionName":"getName","ranges":[{"startOffset":271,"endOffset":392,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":441,"endOffset":1873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1491","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-exponentiation-operator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":984,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":982,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":417,"endOffset":512,"count":1},{"startOffset":491,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":561,"endOffset":949,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1492","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-builder-binary-assignment-operator-visitor/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2084,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2082,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":352,"endOffset":538,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":540,"endOffset":1283,"count":1},{"startOffset":622,"endOffset":695,"count":0},{"startOffset":697,"endOffset":793,"count":0},{"startOffset":795,"endOffset":923,"count":0},{"startOffset":946,"endOffset":1282,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1285,"endOffset":1380,"count":1},{"startOffset":1359,"endOffset":1377,"count":0}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1382,"endOffset":2080,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1493","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-explode-assignable-expression/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2844,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2842,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":230,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":418,"endOffset":1161,"count":1},{"startOffset":500,"endOffset":573,"count":0},{"startOffset":575,"endOffset":671,"count":0},{"startOffset":673,"endOffset":801,"count":0},{"startOffset":824,"endOffset":1160,"count":0}],"isBlockCoverage":true},{"functionName":"getObjRef","ranges":[{"startOffset":1163,"endOffset":1841,"count":0}],"isBlockCoverage":false},{"functionName":"getPropRef","ranges":[{"startOffset":1843,"endOffset":2212,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":2214,"endOffset":2840,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1494","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-for-of/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6938,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6936,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":365,"endOffset":460,"count":1},{"startOffset":439,"endOffset":457,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":509,"endOffset":6903,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1495","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-for-of/lib/no-helper-implementation.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4995,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4993,"count":1}],"isBlockCoverage":true},{"functionName":"transformWithoutHelper","ranges":[{"startOffset":222,"endOffset":891,"count":0}],"isBlockCoverage":false},{"functionName":"pushComputedPropsLoose","ranges":[{"startOffset":2021,"endOffset":3444,"count":0}],"isBlockCoverage":false},{"functionName":"pushComputedPropsSpec","ranges":[{"startOffset":3446,"endOffset":4991,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1496","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-function-name/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1145,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1143,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":325,"endOffset":420,"count":1},{"startOffset":399,"endOffset":417,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":469,"endOffset":1110,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1497","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-literals/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":739,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":737,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":281,"endOffset":704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1498","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-member-expression-literals/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":827,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":825,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":792,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1499","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-modules-amd/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4952,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4950,"count":1}],"isBlockCoverage":true},{"functionName":"injectWrapper","ranges":[{"startOffset":629,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1098,"endOffset":4917,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1500","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-transforms/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10124,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10122,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":468,"endOffset":527,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":607,"endOffset":657,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":736,"endOffset":802,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":889,"endOffset":963,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1045,"endOffset":1097,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":1760,"endOffset":1946,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":1948,"endOffset":2691,"count":2},{"startOffset":2030,"endOffset":2103,"count":0},{"startOffset":2105,"endOffset":2201,"count":0},{"startOffset":2203,"endOffset":2331,"count":0},{"startOffset":2354,"endOffset":2690,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":2693,"endOffset":2788,"count":6},{"startOffset":2761,"endOffset":2766,"count":4},{"startOffset":2767,"endOffset":2785,"count":2}],"isBlockCoverage":true},{"functionName":"rewriteModuleStatementsAndPrepareHeader","ranges":[{"startOffset":2790,"endOffset":4077,"count":1},{"startOffset":3873,"endOffset":3961,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3445,"endOffset":3518,"count":0}],"isBlockCoverage":false},{"functionName":"ensureStatementsHoisted","ranges":[{"startOffset":4079,"endOffset":4194,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4147,"endOffset":4190,"count":2}],"isBlockCoverage":true},{"functionName":"wrapInterop","ranges":[{"startOffset":4196,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"buildNamespaceInitStatements","ranges":[{"startOffset":4586,"endOffset":5933,"count":0}],"isBlockCoverage":false},{"functionName":"getTemplateForReexport","ranges":[{"startOffset":5966,"endOffset":6269,"count":0}],"isBlockCoverage":false},{"functionName":"buildReexportsFromMeta","ranges":[{"startOffset":6303,"endOffset":6742,"count":0}],"isBlockCoverage":false},{"functionName":"buildESModuleHeader","ranges":[{"startOffset":6745,"endOffset":7073,"count":1},{"startOffset":6827,"endOffset":6900,"count":0}],"isBlockCoverage":true},{"functionName":"buildNamespaceReexport","ranges":[{"startOffset":7075,"endOffset":8069,"count":0}],"isBlockCoverage":false},{"functionName":"buildExportNameListDeclaration","ranges":[{"startOffset":8071,"endOffset":8962,"count":1},{"startOffset":8385,"endOffset":8642,"count":0},{"startOffset":8663,"endOffset":8704,"count":0},{"startOffset":8718,"endOffset":8961,"count":0}],"isBlockCoverage":true},{"functionName":"buildExportInitializationStatements","ranges":[{"startOffset":8964,"endOffset":9841,"count":1},{"startOffset":9189,"endOffset":9191,"count":0},{"startOffset":9327,"endOffset":9379,"count":0},{"startOffset":9432,"endOffset":9636,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9705,"endOffset":9811,"count":0}],"isBlockCoverage":false},{"functionName":"buildInitStatement","ranges":[{"startOffset":9843,"endOffset":10120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9956,"endOffset":10105,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1501","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/chunk.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1477,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1475,"count":1}],"isBlockCoverage":true},{"functionName":"chunk","ranges":[{"startOffset":964,"endOffset":1447,"count":1},{"startOffset":1014,"endOffset":1050,"count":0},{"startOffset":1074,"endOffset":1093,"count":0},{"startOffset":1176,"endOffset":1179,"count":0},{"startOffset":1210,"endOffset":1221,"count":0},{"startOffset":1243,"endOffset":1446,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1502","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseSlice.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":822,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":820,"count":1}],"isBlockCoverage":true},{"functionName":"baseSlice","ranges":[{"startOffset":356,"endOffset":788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1503","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-transforms/lib/rewrite-this.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":750,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":748,"count":1}],"isBlockCoverage":true},{"functionName":"rewriteThis","ranges":[{"startOffset":243,"endOffset":324,"count":1}],"isBlockCoverage":true},{"functionName":"ThisExpression","ranges":[{"startOffset":357,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":443,"endOffset":599,"count":1},{"startOffset":485,"endOffset":539,"count":0}],"isBlockCoverage":true},{"functionName":"ClassProperty","ranges":[{"startOffset":604,"endOffset":688,"count":0}],"isBlockCoverage":false},{"functionName":"ClassPrivateProperty","ranges":[{"startOffset":693,"endOffset":742,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1504","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-transforms/lib/rewrite-live-references.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9527,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":9525,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":461,"endOffset":647,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":649,"endOffset":1392,"count":1},{"startOffset":731,"endOffset":804,"count":0},{"startOffset":806,"endOffset":902,"count":0},{"startOffset":904,"endOffset":1032,"count":0},{"startOffset":1055,"endOffset":1391,"count":0}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":1394,"endOffset":1489,"count":3},{"startOffset":1462,"endOffset":1467,"count":2},{"startOffset":1468,"endOffset":1486,"count":1}],"isBlockCoverage":true},{"functionName":"rewriteLiveReferences","ranges":[{"startOffset":1491,"endOffset":3077,"count":1},{"startOffset":1729,"endOffset":1975,"count":0}],"isBlockCoverage":true},{"functionName":"requeueInParent","ranges":[{"startOffset":1634,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"buildImportReference","ranges":[{"startOffset":2656,"endOffset":3069,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":3117,"endOffset":3151,"count":1}],"isBlockCoverage":true},{"functionName":"ClassDeclaration","ranges":[{"startOffset":3156,"endOffset":3737,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":3742,"endOffset":4286,"count":0}],"isBlockCoverage":false},{"functionName":"buildBindingExportAssignmentExpression","ranges":[{"startOffset":4339,"endOffset":4584,"count":0}],"isBlockCoverage":false},{"functionName":"buildImportThrow","ranges":[{"startOffset":4612,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":4808,"endOffset":6094,"count":85},{"startOffset":4983,"endOffset":4990,"count":0},{"startOffset":5204,"endOffset":5211,"count":77},{"startOffset":5211,"endOffset":5281,"count":8},{"startOffset":5281,"endOffset":6090,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":6127,"endOffset":8436,"count":26},{"startOffset":6320,"endOffset":6327,"count":0},{"startOffset":6429,"endOffset":6436,"count":3},{"startOffset":6436,"endOffset":7332,"count":23},{"startOffset":6621,"endOffset":6774,"count":0},{"startOffset":6775,"endOffset":6797,"count":0},{"startOffset":6803,"endOffset":6816,"count":0},{"startOffset":6818,"endOffset":7324,"count":0},{"startOffset":7332,"endOffset":8430,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7451,"endOffset":7528,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7571,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7789,"endOffset":8050,"count":0}],"isBlockCoverage":false},{"functionName":"ForOfStatement|ForInStatement","ranges":[{"startOffset":8446,"endOffset":9519,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1505","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-simple-access/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3407,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":236,"endOffset":422,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":424,"endOffset":1167,"count":1},{"startOffset":506,"endOffset":579,"count":0},{"startOffset":581,"endOffset":677,"count":0},{"startOffset":679,"endOffset":807,"count":0},{"startOffset":830,"endOffset":1166,"count":0}],"isBlockCoverage":true},{"functionName":"simplifyAccess","ranges":[{"startOffset":1169,"endOffset":1330,"count":1}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":1392,"endOffset":2726,"count":1},{"startOffset":1542,"endOffset":1549,"count":0},{"startOffset":1636,"endOffset":1820,"count":0},{"startOffset":1822,"endOffset":2720,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":2763,"endOffset":3397,"count":26},{"startOffset":2894,"endOffset":2901,"count":23},{"startOffset":2901,"endOffset":2933,"count":3},{"startOffset":2933,"endOffset":2940,"count":0},{"startOffset":2940,"endOffset":3037,"count":3},{"startOffset":3037,"endOffset":3044,"count":1},{"startOffset":3044,"endOffset":3132,"count":2},{"startOffset":3132,"endOffset":3396,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1506","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-transforms/lib/normalize-and-load-metadata.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":10407,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":417,"endOffset":512,"count":1},{"startOffset":491,"endOffset":509,"count":0}],"isBlockCoverage":true},{"functionName":"hasExports","ranges":[{"startOffset":514,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"isSideEffectImport","ranges":[{"startOffset":579,"endOffset":785,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeModuleAndLoadMetadata","ranges":[{"startOffset":787,"endOffset":1676,"count":1},{"startOffset":963,"endOffset":1042,"count":0},{"startOffset":1273,"endOffset":1573,"count":0}],"isBlockCoverage":true},{"functionName":"getModuleMetadata","ranges":[{"startOffset":1678,"endOffset":6271,"count":1},{"startOffset":5021,"endOffset":5695,"count":0},{"startOffset":5744,"endOffset":6191,"count":0}],"isBlockCoverage":true},{"functionName":"getData","ranges":[{"startOffset":1856,"endOffset":2394,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2457,"endOffset":4971,"count":2},{"startOffset":2505,"endOffset":3939,"count":0},{"startOffset":3981,"endOffset":4172,"count":0},{"startOffset":4215,"endOffset":4235,"count":1},{"startOffset":4237,"endOffset":4853,"count":0},{"startOffset":4896,"endOffset":4933,"count":1},{"startOffset":4935,"endOffset":4967,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2640,"endOffset":3931,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4397,"endOffset":4845,"count":0}],"isBlockCoverage":false},{"functionName":"getLocalExportMetadata","ranges":[{"startOffset":6273,"endOffset":9303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6400,"endOffset":7455,"count":2},{"startOffset":6463,"endOffset":6493,"count":0},{"startOffset":6547,"endOffset":6580,"count":0},{"startOffset":6626,"endOffset":6970,"count":1},{"startOffset":6664,"endOffset":6719,"count":0},{"startOffset":6735,"endOffset":6755,"count":0},{"startOffset":6756,"endOffset":6796,"count":0},{"startOffset":6798,"endOffset":6962,"count":0},{"startOffset":7013,"endOffset":7325,"count":1},{"startOffset":7086,"endOffset":7119,"count":0},{"startOffset":7189,"endOffset":7220,"count":0},{"startOffset":7261,"endOffset":7294,"count":0},{"startOffset":7331,"endOffset":7454,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6840,"endOffset":6932,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7393,"endOffset":7449,"count":1}],"isBlockCoverage":true},{"functionName":"getLocalMetadata","ranges":[{"startOffset":7521,"endOffset":7976,"count":1},{"startOffset":7728,"endOffset":7837,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8013,"endOffset":9275,"count":2},{"startOffset":8065,"endOffset":8097,"count":1},{"startOffset":8099,"endOffset":8898,"count":1},{"startOffset":8135,"endOffset":8510,"count":0},{"startOffset":8898,"endOffset":9271,"count":1},{"startOffset":8944,"endOffset":9271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8290,"endOffset":8500,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8558,"endOffset":8882,"count":1},{"startOffset":8712,"endOffset":8805,"count":0}],"isBlockCoverage":true},{"functionName":"nameAnonymousExports","ranges":[{"startOffset":9305,"endOffset":9510,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9384,"endOffset":9506,"count":1},{"startOffset":9440,"endOffset":9447,"count":0}],"isBlockCoverage":true},{"functionName":"removeModuleDeclarations","ranges":[{"startOffset":9512,"endOffset":10405,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9595,"endOffset":10401,"count":2},{"startOffset":9643,"endOffset":9672,"count":0},{"startOffset":9716,"endOffset":9926,"count":1},{"startOffset":9752,"endOffset":9881,"count":0},{"startOffset":9926,"endOffset":10397,"count":1},{"startOffset":9972,"endOffset":10326,"count":0},{"startOffset":10368,"endOffset":10397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1507","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-module-transforms/lib/get-module-name.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1343,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1341,"count":1}],"isBlockCoverage":true},{"functionName":"getModuleName","ranges":[{"startOffset":176,"endOffset":1339,"count":1},{"startOffset":426,"endOffset":449,"count":0},{"startOffset":599,"endOffset":620,"count":0},{"startOffset":745,"endOffset":767,"count":0},{"startOffset":829,"endOffset":869,"count":0},{"startOffset":871,"endOffset":955,"count":0},{"startOffset":956,"endOffset":960,"count":0},{"startOffset":987,"endOffset":1337,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1508","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-plugin-dynamic-import-node/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":309,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":307,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1509","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/babel-plugin-dynamic-import-node/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2614,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2612,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":164,"endOffset":804,"count":1}],"isBlockCoverage":true},{"functionName":"sliceIterator","ranges":[{"startOffset":178,"endOffset":571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":579,"endOffset":801,"count":0}],"isBlockCoverage":false},{"functionName":"getImportSource","ranges":[{"startOffset":921,"endOffset":1413,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicImportTransform","ranges":[{"startOffset":1415,"endOffset":2610,"count":1}],"isBlockCoverage":true},{"functionName":"isString","ranges":[{"startOffset":1983,"endOffset":2110,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2122,"endOffset":2607,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1510","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-modules-commonjs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6696,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6694,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":502,"endOffset":597,"count":1},{"startOffset":576,"endOffset":594,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":646,"endOffset":6661,"count":1},{"startOffset":1012,"endOffset":1041,"count":0},{"startOffset":1042,"endOffset":1116,"count":0},{"startOffset":1118,"endOffset":1204,"count":0},{"startOffset":1250,"endOffset":1328,"count":0},{"startOffset":1377,"endOffset":1458,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1082,"endOffset":1114,"count":0}],"isBlockCoverage":false},{"functionName":"getAssertion","ranges":[{"startOffset":1483,"endOffset":1801,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":1841,"endOffset":2485,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":2492,"endOffset":3550,"count":0}],"isBlockCoverage":false},{"functionName":"pre","ranges":[{"startOffset":3613,"endOffset":3696,"count":1}],"isBlockCoverage":true},{"functionName":"CallExpression","ranges":[{"startOffset":3720,"endOffset":4072,"count":18},{"startOffset":3819,"endOffset":4071,"count":0}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":4100,"endOffset":6639,"count":1},{"startOffset":4180,"endOffset":4187,"count":0},{"startOffset":4430,"endOffset":4625,"count":0},{"startOffset":4749,"endOffset":4800,"count":0},{"startOffset":5215,"endOffset":5235,"count":0},{"startOffset":5325,"endOffset":6505,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1511","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-modules-systemjs/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16290,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":16288,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":506,"endOffset":601,"count":1},{"startOffset":580,"endOffset":598,"count":0}],"isBlockCoverage":true},{"functionName":"constructExportCall","ranges":[{"startOffset":1279,"endOffset":2979,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3028,"endOffset":16255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1512","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/helper-hoist-variables/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2130,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2128,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":230,"endOffset":416,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":418,"endOffset":1161,"count":1},{"startOffset":500,"endOffset":573,"count":0},{"startOffset":575,"endOffset":671,"count":0},{"startOffset":673,"endOffset":801,"count":0},{"startOffset":824,"endOffset":1160,"count":0}],"isBlockCoverage":true},{"functionName":"Scope","ranges":[{"startOffset":1183,"endOffset":1250,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":1255,"endOffset":1292,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":1297,"endOffset":2021,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":2027,"endOffset":2126,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1513","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-modules-umd/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6586,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6584,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1057,"endOffset":6551,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1514","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-named-capturing-groups-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":661,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":659,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":268,"endOffset":657,"count":1},{"startOffset":384,"endOffset":450,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1515","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-new-target/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2045,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2043,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":2010,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1516","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-object-super/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1456,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1454,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":364,"endOffset":459,"count":1},{"startOffset":438,"endOffset":456,"count":0}],"isBlockCoverage":true},{"functionName":"replacePropertySuper","ranges":[{"startOffset":461,"endOffset":681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":730,"endOffset":1421,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1517","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-property-literals/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":768,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":766,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":733,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1518","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-regenerator/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":464,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":462,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":213,"endOffset":272,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":365,"endOffset":460,"count":1},{"startOffset":439,"endOffset":457,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1519","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":955,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":953,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":353,"endOffset":951,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1520","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/visit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11422,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":11420,"count":1}],"isBlockCoverage":true},{"functionName":"exports.getVisitor","ranges":[{"startOffset":741,"endOffset":7302,"count":0}],"isBlockCoverage":false},{"functionName":"shouldRegenerate","ranges":[{"startOffset":7362,"endOffset":7779,"count":0}],"isBlockCoverage":false},{"functionName":"getOuterFnExpr","ranges":[{"startOffset":8057,"endOffset":8654,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkInfo","ranges":[{"startOffset":8687,"endOffset":8808,"count":0}],"isBlockCoverage":false},{"functionName":"getMarkedFunctionId","ranges":[{"startOffset":8810,"endOffset":9988,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpressionFunctionDeclarationMethod","ranges":[{"startOffset":10070,"endOffset":10151,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":10167,"endOffset":10370,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":10390,"endOffset":10459,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":10507,"endOffset":10782,"count":0}],"isBlockCoverage":false},{"functionName":"Function","ranges":[{"startOffset":10819,"endOffset":10911,"count":0}],"isBlockCoverage":false},{"functionName":"AwaitExpression","ranges":[{"startOffset":10932,"endOffset":11415,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1521","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/runtime/helpers/interopRequireWildcard.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1245,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1243,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":107,"endOffset":333,"count":1},{"startOffset":182,"endOffset":194,"count":0}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":254,"endOffset":313,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":335,"endOffset":1198,"count":6},{"startOffset":404,"endOffset":425,"count":4},{"startOffset":425,"endOffset":503,"count":2},{"startOffset":475,"endOffset":503,"count":0},{"startOffset":505,"endOffset":551,"count":0},{"startOffset":551,"endOffset":625,"count":2},{"startOffset":627,"endOffset":659,"count":0},{"startOffset":659,"endOffset":766,"count":2},{"startOffset":792,"endOffset":1102,"count":10},{"startOffset":935,"endOffset":941,"count":0},{"startOffset":986,"endOffset":1045,"count":0},{"startOffset":1102,"endOffset":1197,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1522","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/runtime/helpers/typeof.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":545,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":543,"count":1}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":62,"endOffset":514,"count":2},{"startOffset":283,"endOffset":488,"count":0}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":224,"endOffset":278,"count":2}],"isBlockCoverage":true},{"functionName":"_typeof","ranges":[{"startOffset":322,"endOffset":483,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1523","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/runtime/helpers/interopRequireDefault.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":62,"endOffset":167,"count":5},{"startOffset":132,"endOffset":137,"count":1},{"startOffset":138,"endOffset":164,"count":4}],"isBlockCoverage":true}]},{"scriptId":"1524","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/hoist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4910,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4908,"count":1}],"isBlockCoverage":true},{"functionName":"exports.hoist","ranges":[{"startOffset":704,"endOffset":4905,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1525","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/util.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1352,"count":1}],"isBlockCoverage":true},{"functionName":"wrapWithTypes","ranges":[{"startOffset":511,"endOffset":878,"count":0}],"isBlockCoverage":false},{"functionName":"getTypes","ranges":[{"startOffset":880,"endOffset":926,"count":0}],"isBlockCoverage":false},{"functionName":"runtimeProperty","ranges":[{"startOffset":928,"endOffset":1076,"count":0}],"isBlockCoverage":false},{"functionName":"isReference","ranges":[{"startOffset":1078,"endOffset":1207,"count":0}],"isBlockCoverage":false},{"functionName":"replaceWithOrRemove","ranges":[{"startOffset":1209,"endOffset":1350,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1526","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/emit.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":34892,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":34890,"count":1}],"isBlockCoverage":true},{"functionName":"Emitter","ranges":[{"startOffset":709,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.loc","ranges":[{"startOffset":2254,"endOffset":2355,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getInsertedLocs","ranges":[{"startOffset":2379,"endOffset":2422,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getContextId","ranges":[{"startOffset":2443,"endOffset":2506,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.mark","ranges":[{"startOffset":2614,"endOffset":2975,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.emit","ranges":[{"startOffset":2988,"endOffset":3164,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.emitAssign","ranges":[{"startOffset":3300,"endOffset":3373,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.assign","ranges":[{"startOffset":3431,"endOffset":3565,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.contextProperty","ranges":[{"startOffset":3695,"endOffset":3868,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.stop","ranges":[{"startOffset":3953,"endOffset":4050,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.setReturnValue","ranges":[{"startOffset":4073,"endOffset":4234,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.clearPendingException","ranges":[{"startOffset":4264,"endOffset":4543,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.jump","ranges":[{"startOffset":4681,"endOffset":4804,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.jumpIf","ranges":[{"startOffset":4841,"endOffset":5072,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.jumpIfNot","ranges":[{"startOffset":5140,"endOffset":5585,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.makeTempVar","ranges":[{"startOffset":5928,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getContextFunction","ranges":[{"startOffset":6026,"endOffset":6268,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getDispatchLoop","ranges":[{"startOffset":6548,"endOffset":7865,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getTryLocsList","ranges":[{"startOffset":7888,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.explode","ranges":[{"startOffset":8960,"endOffset":9837,"count":0}],"isBlockCoverage":false},{"functionName":"getDeclError","ranges":[{"startOffset":9840,"endOffset":10022,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.explodeStatement","ranges":[{"startOffset":10046,"endOffset":20253,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":20296,"endOffset":20477,"count":0}],"isBlockCoverage":false},{"functionName":"Scope","ranges":[{"startOffset":20488,"endOffset":20716,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.emitAbruptCompletion","ranges":[{"startOffset":20747,"endOffset":21617,"count":0}],"isBlockCoverage":false},{"functionName":"isValidCompletion","ranges":[{"startOffset":21620,"endOffset":22043,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.getUnmarkedCurrentLoc","ranges":[{"startOffset":22667,"endOffset":22744,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.updateContextPrevLoc","ranges":[{"startOffset":23470,"endOffset":24211,"count":0}],"isBlockCoverage":false},{"functionName":"Ep.explodeExpression","ranges":[{"startOffset":24237,"endOffset":34887,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1527","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/leap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4223,"count":1}],"isBlockCoverage":true},{"functionName":"Entry","ranges":[{"startOffset":500,"endOffset":568,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionEntry","ranges":[{"startOffset":570,"endOffset":708,"count":0}],"isBlockCoverage":false},{"functionName":"LoopEntry","ranges":[{"startOffset":793,"endOffset":1125,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchEntry","ranges":[{"startOffset":1198,"endOffset":1330,"count":0}],"isBlockCoverage":false},{"functionName":"TryEntry","ranges":[{"startOffset":1409,"endOffset":1993,"count":0}],"isBlockCoverage":false},{"functionName":"CatchEntry","ranges":[{"startOffset":2063,"endOffset":2273,"count":0}],"isBlockCoverage":false},{"functionName":"FinallyEntry","ranges":[{"startOffset":2349,"endOffset":2562,"count":0}],"isBlockCoverage":false},{"functionName":"LabeledEntry","ranges":[{"startOffset":2644,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"LeapManager","ranges":[{"startOffset":2930,"endOffset":3163,"count":0}],"isBlockCoverage":false},{"functionName":"LMp.withEntry","ranges":[{"startOffset":3250,"endOffset":3513,"count":0}],"isBlockCoverage":false},{"functionName":"LMp._findLeapLocation","ranges":[{"startOffset":3540,"endOffset":4028,"count":0}],"isBlockCoverage":false},{"functionName":"LMp.getBreakLoc","ranges":[{"startOffset":4049,"endOffset":4121,"count":0}],"isBlockCoverage":false},{"functionName":"LMp.getContinueLoc","ranges":[{"startOffset":4145,"endOffset":4220,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1528","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/meta.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3081,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3079,"count":1},{"startOffset":2846,"endOffset":2936,"count":5}],"isBlockCoverage":true},{"functionName":"m","ranges":[{"startOffset":467,"endOffset":566,"count":0}],"isBlockCoverage":false},{"functionName":"makePredicate","ranges":[{"startOffset":615,"endOffset":1930,"count":2}],"isBlockCoverage":true},{"functionName":"onlyChildren","ranges":[{"startOffset":668,"endOffset":1354,"count":0}],"isBlockCoverage":false},{"functionName":"predicate","ranges":[{"startOffset":1358,"endOffset":1866,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1529","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/regenerator-transform/lib/replaceShorthandObjectMethod.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2752,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2750,"count":1}],"isBlockCoverage":true},{"functionName":"replaceShorthandObjectMethod","ranges":[{"startOffset":1508,"endOffset":2748,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1530","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-reserved-words/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":646,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":644,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1531","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-shorthand-properties/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":979,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":977,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":944,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1532","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-spread/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4341,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":4339,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":4306,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1533","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-sticky-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1760,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1758,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":341,"endOffset":527,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":529,"endOffset":1272,"count":1},{"startOffset":611,"endOffset":684,"count":0},{"startOffset":686,"endOffset":782,"count":0},{"startOffset":784,"endOffset":912,"count":0},{"startOffset":935,"endOffset":1271,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1321,"endOffset":1725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1534","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-template-literals/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3801,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3799,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":3766,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1535","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-typeof-symbol/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2294,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2292,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":2259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1536","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-unicode-escapes/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3315,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3313,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":318,"endOffset":3280,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1537","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/plugin-transform-unicode-regex/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":593,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":378,"endOffset":558,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1538","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-async-arrows-in-class/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1214,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1212,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":899,"endOffset":1146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1539","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-edge-default-parameters/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1186,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":422,"endOffset":1120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1540","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-edge-function-name/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1472,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1470,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":893,"endOffset":1404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1541","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-tagged-template-caching/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3217,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3215,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1031,"endOffset":3149,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1542","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-safari-block-shadowing/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1405,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1403,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":280,"endOffset":1366,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1543","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-modules/lib/plugins/transform-safari-for-shadowing/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1194,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1192,"count":1}],"isBlockCoverage":true},{"functionName":"handle","ranges":[{"startOffset":519,"endOffset":909,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":926,"endOffset":1126,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1544","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/options.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1038,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1036,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1545","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs2/get-platform-specific-default.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":588,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":586,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":337,"endOffset":584,"count":1},{"startOffset":554,"endOffset":574,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":492,"endOffset":515,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1546","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/data/shipped-proposals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1352,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1177,"endOffset":1236,"count":10}],"isBlockCoverage":true}]},{"scriptId":"1547","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs2/usage-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6433,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6431,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":588,"endOffset":683,"count":2},{"startOffset":656,"endOffset":661,"count":1},{"startOffset":662,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":910,"endOffset":6429,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1548","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs2/built-in-definitions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6104,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6102,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1549","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/utils.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3262,"count":1}],"isBlockCoverage":true},{"functionName":"_getRequireWildcardCache","ranges":[{"startOffset":654,"endOffset":840,"count":0}],"isBlockCoverage":false},{"functionName":"_interopRequireWildcard","ranges":[{"startOffset":842,"endOffset":1585,"count":1},{"startOffset":924,"endOffset":997,"count":0},{"startOffset":999,"endOffset":1095,"count":0},{"startOffset":1097,"endOffset":1225,"count":0},{"startOffset":1248,"endOffset":1584,"count":0}],"isBlockCoverage":true},{"functionName":"getType","ranges":[{"startOffset":1675,"endOffset":1779,"count":0}],"isBlockCoverage":false},{"functionName":"intersection","ranges":[{"startOffset":1781,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"filterStageFromList","ranges":[{"startOffset":1966,"endOffset":2170,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2048,"endOffset":2162,"count":82},{"startOffset":2098,"endOffset":2138,"count":76}],"isBlockCoverage":true},{"functionName":"getImportSource","ranges":[{"startOffset":2172,"endOffset":2274,"count":0}],"isBlockCoverage":false},{"functionName":"getRequireSource","ranges":[{"startOffset":2276,"endOffset":2667,"count":5},{"startOffset":2354,"endOffset":2361,"count":3},{"startOffset":2361,"endOffset":2486,"count":2},{"startOffset":2487,"endOffset":2526,"count":0},{"startOffset":2527,"endOffset":2563,"count":0},{"startOffset":2564,"endOffset":2609,"count":0},{"startOffset":2628,"endOffset":2665,"count":0}],"isBlockCoverage":true},{"functionName":"isPolyfillSource","ranges":[{"startOffset":2669,"endOffset":2769,"count":5}],"isBlockCoverage":true},{"functionName":"getModulePath","ranges":[{"startOffset":2854,"endOffset":2942,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":2944,"endOffset":3056,"count":0}],"isBlockCoverage":false},{"functionName":"isNamespaced","ranges":[{"startOffset":3058,"endOffset":3260,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1550","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs3/usage-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8108,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8106,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":696,"endOffset":791,"count":3},{"startOffset":764,"endOffset":769,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1087,"endOffset":1122,"count":334}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":1198,"count":215}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1291,"endOffset":1358,"count":3}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":1415,"endOffset":8104,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1551","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/get-modules-list-for-target-version.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":650,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":648,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":256,"endOffset":644,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1552","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/helpers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":702,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":225,"endOffset":307,"count":0}],"isBlockCoverage":false},{"functionName":"intersection","ranges":[{"startOffset":309,"endOffset":451,"count":0}],"isBlockCoverage":false},{"functionName":"sortObjectByKey","ranges":[{"startOffset":453,"endOffset":611,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1553","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/cmp.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":973,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":971,"count":1}],"isBlockCoverage":true},{"functionName":"cmp","ranges":[{"startOffset":243,"endOffset":947,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1554","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/eq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"eq","ranges":[{"startOffset":110,"endOffset":153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1555","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":222,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":122,"endOffset":191,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1556","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/classes/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8098,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":8096,"count":1}],"isBlockCoverage":true},{"functionName":"SemVer","ranges":[{"startOffset":307,"endOffset":2302,"count":0}],"isBlockCoverage":false},{"functionName":"format","ranges":[{"startOffset":2306,"endOffset":2502,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2506,"endOffset":2547,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":2551,"endOffset":2941,"count":0}],"isBlockCoverage":false},{"functionName":"compareMain","ranges":[{"startOffset":2945,"endOffset":3236,"count":0}],"isBlockCoverage":false},{"functionName":"comparePre","ranges":[{"startOffset":3240,"endOffset":4091,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":4095,"endOffset":4637,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":4790,"endOffset":8066,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1557","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/internal/debug.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":292,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":290,"count":1},{"startOffset":153,"endOffset":200,"count":0},{"startOffset":203,"endOffset":250,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":205,"endOffset":250,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":255,"endOffset":263,"count":38}],"isBlockCoverage":true}]},{"scriptId":"1558","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/internal/constants.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":534,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":532,"count":1},{"startOffset":295,"endOffset":343,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1559","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/internal/re.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":6601,"count":1}],"isBlockCoverage":true},{"functionName":"createToken","ranges":[{"startOffset":338,"endOffset":509,"count":38},{"startOffset":489,"endOffset":494,"count":4},{"startOffset":495,"endOffset":506,"count":34}],"isBlockCoverage":true}]},{"scriptId":"1560","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/internal/identifiers.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":475,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":473,"count":1}],"isBlockCoverage":true},{"functionName":"compareIdentifiers","ranges":[{"startOffset":116,"endOffset":340,"count":0}],"isBlockCoverage":false},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":370,"endOffset":404,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1561","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/neq.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"neq","ranges":[{"startOffset":111,"endOffset":154,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1562","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/gt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"gt","ranges":[{"startOffset":110,"endOffset":151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1563","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/gte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"gte","ranges":[{"startOffset":111,"endOffset":153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1564","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/lt.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"lt","ranges":[{"startOffset":110,"endOffset":151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1565","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/lte.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":111,"endOffset":153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1566","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/coerce.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1563,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1561,"count":1}],"isBlockCoverage":true},{"functionName":"coerce","ranges":[{"startOffset":197,"endOffset":1534,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1567","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/core-js-compat/node_modules/semver/functions/parse.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":764,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":762,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":219,"endOffset":735,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1568","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs3/built-in-definitions.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":14226,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1569","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/regenerator/usage-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":969,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":967,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":209,"endOffset":965,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1570","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs2/entry-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2098,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2096,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":526,"endOffset":621,"count":2},{"startOffset":594,"endOffset":599,"count":1},{"startOffset":600,"endOffset":618,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":623,"endOffset":2094,"count":1}],"isBlockCoverage":true},{"functionName":"ImportDeclaration","ranges":[{"startOffset":932,"endOffset":1099,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":1106,"endOffset":1333,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1153,"endOffset":1325,"count":5},{"startOffset":1249,"endOffset":1317,"count":0}],"isBlockCoverage":true},{"functionName":"pre","ranges":[{"startOffset":1414,"endOffset":1872,"count":2}],"isBlockCoverage":true},{"functionName":"replaceBySeparateModulesImport","ranges":[{"startOffset":1510,"endOffset":1865,"count":0}],"isBlockCoverage":false},{"functionName":"post","ranges":[{"startOffset":1879,"endOffset":2086,"count":2},{"startOffset":1905,"endOffset":2080,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1571","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/corejs3/entry-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3763,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3761,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":596,"endOffset":691,"count":3},{"startOffset":664,"endOffset":669,"count":0}],"isBlockCoverage":true},{"functionName":"isBabelPolyfillSource","ranges":[{"startOffset":693,"endOffset":805,"count":0}],"isBlockCoverage":false},{"functionName":"isCoreJSSource","ranges":[{"startOffset":807,"endOffset":1056,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":1226,"endOffset":3759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1572","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/lib/polyfills/regenerator/entry-plugin.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1258,"count":1}],"isBlockCoverage":true},{"functionName":"isRegeneratorSource","ranges":[{"startOffset":209,"endOffset":300,"count":0}],"isBlockCoverage":false},{"functionName":"_default","ranges":[{"startOffset":302,"endOffset":1256,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1573","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/getTargetEngines.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3766,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3764,"count":1}],"isBlockCoverage":true},{"functionName":"getTargetEngines","ranges":[{"startOffset":498,"endOffset":2872,"count":2},{"startOffset":649,"endOffset":661,"count":0},{"startOffset":724,"endOffset":736,"count":0},{"startOffset":886,"endOffset":915,"count":0},{"startOffset":1066,"endOffset":1107,"count":0},{"startOffset":1111,"endOffset":2036,"count":0},{"startOffset":2334,"endOffset":2736,"count":0},{"startOffset":2829,"endOffset":2851,"count":0}],"isBlockCoverage":true},{"functionName":"getMinSemver","ranges":[{"startOffset":2874,"endOffset":3115,"count":0}],"isBlockCoverage":false},{"functionName":"loadBrowserslist","ranges":[{"startOffset":3117,"endOffset":3338,"count":0}],"isBlockCoverage":false},{"functionName":"loadBabelrc","ranges":[{"startOffset":3340,"endOffset":3725,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1574","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/jsx.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2104,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2102,"count":1}],"isBlockCoverage":true},{"functionName":"createJSXRegexFor","ranges":[{"startOffset":273,"endOffset":495,"count":4}],"isBlockCoverage":true},{"functionName":"maybeCreateFallbackPragma","ranges":[{"startOffset":723,"endOffset":1021,"count":2},{"startOffset":799,"endOffset":1019,"count":8},{"startOffset":857,"endOffset":939,"count":4},{"startOffset":978,"endOffset":1015,"count":0}],"isBlockCoverage":true},{"functionName":"getJSXConfig","ranges":[{"startOffset":1156,"endOffset":2067,"count":2},{"startOffset":1270,"endOffset":1292,"count":0},{"startOffset":1439,"endOffset":1638,"count":8},{"startOffset":1582,"endOffset":1634,"count":0},{"startOffset":1767,"endOffset":2065,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1575","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/babel/flow.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":453,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":451,"count":1}],"isBlockCoverage":true},{"functionName":"getFlowConfig","ranges":[{"startOffset":129,"endOffset":415,"count":2},{"startOffset":230,"endOffset":397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1576","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/@babel/preset-env/data/plugins.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":150,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":148,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1577","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/transforms/terser.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1554,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1552,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":159,"endOffset":1548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1578","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/terser/dist/bundle.min.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":336950,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":336948,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":63,"endOffset":273,"count":1},{"startOffset":162,"endOffset":272,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":279,"endOffset":336905,"count":1},{"startOffset":1048,"endOffset":1058,"count":0},{"startOffset":313619,"endOffset":313624,"count":0},{"startOffset":313706,"endOffset":313711,"count":0}],"isBlockCoverage":true},{"functionName":"n","ranges":[{"startOffset":306,"endOffset":339,"count":6}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":339,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":376,"endOffset":446,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":446,"endOffset":605,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":507,"endOffset":602,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":605,"endOffset":648,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":648,"endOffset":836,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":836,"endOffset":908,"count":1},{"startOffset":875,"endOffset":899,"count":8}],"isBlockCoverage":true},{"functionName":"c","ranges":[{"startOffset":908,"endOffset":922,"count":0}],"isBlockCoverage":false},{"functionName":"l","ranges":[{"startOffset":922,"endOffset":944,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":944,"endOffset":966,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":966,"endOffset":991,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":991,"endOffset":1016,"count":0}],"isBlockCoverage":false},{"functionName":"a.croak","ranges":[{"startOffset":1176,"endOffset":1207,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1214,"endOffset":1871,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":1225,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"e.at_top","ranges":[{"startOffset":1674,"endOffset":1702,"count":0}],"isBlockCoverage":false},{"functionName":"e.splice","ranges":[{"startOffset":1712,"endOffset":1740,"count":0}],"isBlockCoverage":false},{"functionName":"e.last","ranges":[{"startOffset":1748,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":1793,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":1816,"endOffset":1839,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":1839,"endOffset":1862,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":1874,"endOffset":1915,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":1915,"endOffset":1990,"count":0}],"isBlockCoverage":false},{"functionName":"h","ranges":[{"startOffset":1990,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":2057,"endOffset":2427,"count":0}],"isBlockCoverage":false},{"functionName":"g","ranges":[{"startOffset":2427,"endOffset":3148,"count":40},{"startOffset":2459,"endOffset":2477,"count":15},{"startOffset":2521,"endOffset":2623,"count":407},{"startOffset":2549,"endOffset":2608,"count":1139},{"startOffset":2580,"endOffset":2608,"count":263},{"startOffset":2608,"endOffset":2623,"count":144},{"startOffset":2961,"endOffset":3109,"count":14},{"startOffset":3058,"endOffset":3102,"count":92},{"startOffset":3109,"endOffset":3119,"count":26}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":2623,"endOffset":2779,"count":407}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2688,"endOffset":2777,"count":4},{"startOffset":2710,"endOffset":2767,"count":2},{"startOffset":2768,"endOffset":2776,"count":0}],"isBlockCoverage":true},{"functionName":"a","ranges":[{"startOffset":2779,"endOffset":2947,"count":118},{"startOffset":2808,"endOffset":2848,"count":40},{"startOffset":2848,"endOffset":2893,"count":78},{"startOffset":2893,"endOffset":2916,"count":367},{"startOffset":2916,"endOffset":2946,"count":78}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2969,"endOffset":3008,"count":169}],"isBlockCoverage":true},{"functionName":"S","ranges":[{"startOffset":3148,"endOffset":3221,"count":0}],"isBlockCoverage":false},{"functionName":"A","ranges":[{"startOffset":3221,"endOffset":3280,"count":0}],"isBlockCoverage":false},{"functionName":"v","ranges":[{"startOffset":3280,"endOffset":3345,"count":235}],"isBlockCoverage":true},{"functionName":"T","ranges":[{"startOffset":3345,"endOffset":3707,"count":0}],"isBlockCoverage":false},{"functionName":"b","ranges":[{"startOffset":3707,"endOffset":3768,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":3785,"endOffset":3859,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":3864,"endOffset":3938,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":3943,"endOffset":3982,"count":0}],"isBlockCoverage":false},{"functionName":"del","ranges":[{"startOffset":3987,"endOffset":4066,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":4071,"endOffset":4111,"count":0}],"isBlockCoverage":false},{"functionName":"each","ranges":[{"startOffset":4117,"endOffset":4186,"count":0}],"isBlockCoverage":false},{"functionName":"size","ranges":[{"startOffset":4192,"endOffset":4221,"count":0}],"isBlockCoverage":false},{"functionName":"map","ranges":[{"startOffset":4226,"endOffset":4321,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":4328,"endOffset":4434,"count":0}],"isBlockCoverage":false},{"functionName":"toObject","ranges":[{"startOffset":4444,"endOffset":4475,"count":0}],"isBlockCoverage":false},{"functionName":"A.fromObject","ranges":[{"startOffset":4490,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"H","ranges":[{"startOffset":20128,"endOffset":20267,"count":0}],"isBlockCoverage":false},{"functionName":"X","ranges":[{"startOffset":20267,"endOffset":20346,"count":0}],"isBlockCoverage":false},{"functionName":"z","ranges":[{"startOffset":20346,"endOffset":20425,"count":0}],"isBlockCoverage":false},{"functionName":"W","ranges":[{"startOffset":20425,"endOffset":20459,"count":0}],"isBlockCoverage":false},{"functionName":"Y","ranges":[{"startOffset":20459,"endOffset":20505,"count":0}],"isBlockCoverage":false},{"functionName":"q","ranges":[{"startOffset":20505,"endOffset":20581,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":20581,"endOffset":20678,"count":0}],"isBlockCoverage":false},{"functionName":"j","ranges":[{"startOffset":20678,"endOffset":20730,"count":0}],"isBlockCoverage":false},{"functionName":"Z","ranges":[{"startOffset":20730,"endOffset":20817,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":20817,"endOffset":20862,"count":0}],"isBlockCoverage":false},{"functionName":"J","ranges":[{"startOffset":20862,"endOffset":20920,"count":0}],"isBlockCoverage":false},{"functionName":"te","ranges":[{"startOffset":21035,"endOffset":28347,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28508,"endOffset":28604,"count":1},{"startOffset":28549,"endOffset":28595,"count":11},{"startOffset":28583,"endOffset":28595,"count":24}],"isBlockCoverage":true},{"functionName":"se","ranges":[{"startOffset":28800,"endOffset":51982,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":51982,"endOffset":52602,"count":115},{"startOffset":52021,"endOffset":52029,"count":23},{"startOffset":52039,"endOffset":52054,"count":58},{"startOffset":52054,"endOffset":52057,"count":57},{"startOffset":52059,"endOffset":52091,"count":113},{"startOffset":52171,"endOffset":52208,"count":598},{"startOffset":52215,"endOffset":52222,"count":113},{"startOffset":52225,"endOffset":52239,"count":113},{"startOffset":52257,"endOffset":52284,"count":1},{"startOffset":52321,"endOffset":52347,"count":113},{"startOffset":52349,"endOffset":52371,"count":113},{"startOffset":52400,"endOffset":52406,"count":0},{"startOffset":52482,"endOffset":52546,"count":227},{"startOffset":52504,"endOffset":52524,"count":166},{"startOffset":52524,"endOffset":52544,"count":61}],"isBlockCoverage":true},{"functionName":"u.DEFMETHOD","ranges":[{"startOffset":52565,"endOffset":52599,"count":514}],"isBlockCoverage":true},{"functionName":"_clone","ranges":[{"startOffset":52754,"endOffset":52887,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":52894,"endOffset":52928,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":53086,"endOffset":53120,"count":0}],"isBlockCoverage":false},{"functionName":"walk","ranges":[{"startOffset":53126,"endOffset":53159,"count":0}],"isBlockCoverage":false},{"functionName":"le.warn","ranges":[{"startOffset":53197,"endOffset":53254,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":53852,"endOffset":53917,"count":0}],"isBlockCoverage":false},{"functionName":"me","ranges":[{"startOffset":53923,"endOffset":54033,"count":0}],"isBlockCoverage":false},{"functionName":"Ee","ranges":[{"startOffset":54033,"endOffset":54137,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":54336,"endOffset":54393,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":54978,"endOffset":55063,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":55070,"endOffset":55260,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":55702,"endOffset":55791,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":55860,"endOffset":55949,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":56241,"endOffset":56406,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":56609,"endOffset":56714,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":56916,"endOffset":57006,"count":0}],"isBlockCoverage":false},{"functionName":"get_defun_scope","ranges":[{"startOffset":57800,"endOffset":57872,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":57879,"endOffset":58077,"count":0}],"isBlockCoverage":false},{"functionName":"pinned","ranges":[{"startOffset":58085,"endOffset":58134,"count":0}],"isBlockCoverage":false},{"functionName":"wrap_commonjs","ranges":[{"startOffset":58302,"endOffset":58516,"count":0}],"isBlockCoverage":false},{"functionName":"wrap_enclose","ranges":[{"startOffset":58530,"endOffset":58792,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":59064,"endOffset":59142,"count":0}],"isBlockCoverage":false},{"functionName":"args_as_names","ranges":[{"startOffset":59662,"endOffset":59824,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":59831,"endOffset":59979,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":60631,"endOffset":60721,"count":0}],"isBlockCoverage":false},{"functionName":"all_symbols","ranges":[{"startOffset":60734,"endOffset":60860,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":61208,"endOffset":61271,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":61549,"endOffset":61642,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":62137,"endOffset":62215,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":62525,"endOffset":62603,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":62939,"endOffset":63072,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":63214,"endOffset":63296,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":63584,"endOffset":63666,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":63885,"endOffset":64014,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":64244,"endOffset":64337,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":64656,"endOffset":64766,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":65311,"endOffset":65403,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":65779,"endOffset":65973,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":66464,"endOffset":66731,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":67022,"endOffset":67119,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":67310,"endOffset":67438,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":67757,"endOffset":67853,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":68269,"endOffset":68340,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":68432,"endOffset":68526,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":68740,"endOffset":68811,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":69225,"endOffset":69310,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":69543,"endOffset":69664,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":69972,"endOffset":70079,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":70218,"endOffset":70327,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":70664,"endOffset":70772,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":71975,"endOffset":72136,"count":0}],"isBlockCoverage":false},{"functionName":"initialize","ranges":[{"startOffset":74232,"endOffset":74279,"count":0}],"isBlockCoverage":false},{"functionName":"getValue","ranges":[{"startOffset":74929,"endOffset":74958,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":76191,"endOffset":76262,"count":0}],"isBlockCoverage":false},{"functionName":"_walk","ranges":[{"startOffset":76569,"endOffset":76657,"count":0}],"isBlockCoverage":false},{"functionName":"gn","ranges":[{"startOffset":76660,"endOffset":76738,"count":3}],"isBlockCoverage":true},{"functionName":"Sn","ranges":[{"startOffset":76738,"endOffset":76796,"count":1}],"isBlockCoverage":true},{"functionName":"_visit","ranges":[{"startOffset":76817,"endOffset":76926,"count":0}],"isBlockCoverage":false},{"functionName":"parent","ranges":[{"startOffset":76934,"endOffset":76992,"count":0}],"isBlockCoverage":false},{"functionName":"push","ranges":[{"startOffset":76998,"endOffset":77293,"count":0}],"isBlockCoverage":false},{"functionName":"pop","ranges":[{"startOffset":77298,"endOffset":77425,"count":0}],"isBlockCoverage":false},{"functionName":"self","ranges":[{"startOffset":77431,"endOffset":77481,"count":0}],"isBlockCoverage":false},{"functionName":"find_parent","ranges":[{"startOffset":77494,"endOffset":77586,"count":0}],"isBlockCoverage":false},{"functionName":"has_directive","ranges":[{"startOffset":77601,"endOffset":77818,"count":0}],"isBlockCoverage":false},{"functionName":"loopcontrol_target","ranges":[{"startOffset":77838,"endOffset":78077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80052,"endOffset":83768,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":80064,"endOffset":80249,"count":39}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":80104,"endOffset":80247,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":80249,"endOffset":80315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80328,"endOffset":80398,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80405,"endOffset":80446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80453,"endOffset":80486,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80493,"endOffset":80571,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80578,"endOffset":80656,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80663,"endOffset":80830,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80837,"endOffset":80936,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":80943,"endOffset":81023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81030,"endOffset":81084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81091,"endOffset":81145,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81152,"endOffset":81288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81295,"endOffset":81367,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81374,"endOffset":81446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81453,"endOffset":81578,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81585,"endOffset":81664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81671,"endOffset":81718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81725,"endOffset":81806,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81813,"endOffset":81848,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81855,"endOffset":82000,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82007,"endOffset":82079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82086,"endOffset":82133,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82140,"endOffset":82193,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82200,"endOffset":82288,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82295,"endOffset":82364,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82371,"endOffset":82424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82431,"endOffset":82484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82491,"endOffset":82561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82568,"endOffset":82699,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82706,"endOffset":82747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82754,"endOffset":82799,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82806,"endOffset":82897,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":82904,"endOffset":83032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83039,"endOffset":83092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83099,"endOffset":83183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83190,"endOffset":83349,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83356,"endOffset":83617,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83624,"endOffset":83665,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":83672,"endOffset":83766,"count":0}],"isBlockCoverage":false},{"functionName":"Tn","ranges":[{"startOffset":83796,"endOffset":83880,"count":0}],"isBlockCoverage":false},{"functionName":"bn","ranges":[{"startOffset":83880,"endOffset":90982,"count":0}],"isBlockCoverage":false},{"functionName":"yn","ranges":[{"startOffset":90982,"endOffset":91203,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":91204,"endOffset":107282,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":91215,"endOffset":91257,"count":63}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":91280,"endOffset":91374,"count":17},{"startOffset":91312,"endOffset":91343,"count":1},{"startOffset":91343,"endOffset":91373,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":91323,"endOffset":91342,"count":2}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":91374,"endOffset":91667,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":91667,"endOffset":91776,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":91776,"endOffset":91860,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":91860,"endOffset":92015,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":92015,"endOffset":92222,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":92222,"endOffset":92315,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":92315,"endOffset":92376,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":92376,"endOffset":92773,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":92773,"endOffset":92910,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":92910,"endOffset":92982,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":92936,"endOffset":92980,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":93003,"endOffset":93277,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93352,"endOffset":93405,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93420,"endOffset":93637,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93644,"endOffset":93717,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93724,"endOffset":93764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":93779,"endOffset":94005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94012,"endOffset":94162,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94169,"endOffset":94459,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94466,"endOffset":94740,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94747,"endOffset":94963,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":94970,"endOffset":95156,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95163,"endOffset":95414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95421,"endOffset":95530,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95537,"endOffset":95663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95675,"endOffset":95965,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":95972,"endOffset":96032,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96039,"endOffset":96090,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96097,"endOffset":96281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96288,"endOffset":96336,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96368,"endOffset":96395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96402,"endOffset":96446,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96453,"endOffset":96497,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96504,"endOffset":96561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96568,"endOffset":96612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96619,"endOffset":96640,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96647,"endOffset":96675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96682,"endOffset":96831,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96838,"endOffset":96957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":96964,"endOffset":97252,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97259,"endOffset":97482,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97489,"endOffset":97608,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97635,"endOffset":97977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":97984,"endOffset":98013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98020,"endOffset":98212,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98219,"endOffset":98484,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98511,"endOffset":98924,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":98951,"endOffset":99034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99041,"endOffset":99079,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99086,"endOffset":99123,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99130,"endOffset":99234,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99241,"endOffset":99444,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99471,"endOffset":99554,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99561,"endOffset":99598,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99605,"endOffset":99645,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":99652,"endOffset":100166,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100173,"endOffset":100422,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100454,"endOffset":100544,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100551,"endOffset":100605,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100612,"endOffset":100707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100714,"endOffset":100844,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100851,"endOffset":100968,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":100975,"endOffset":101025,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101052,"endOffset":101240,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101247,"endOffset":101282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101289,"endOffset":101324,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101331,"endOffset":101368,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101375,"endOffset":101895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101902,"endOffset":102169,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":102176,"endOffset":102919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":102926,"endOffset":103070,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103077,"endOffset":103304,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103311,"endOffset":103377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103404,"endOffset":103528,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103535,"endOffset":103564,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103571,"endOffset":103850,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103857,"endOffset":103939,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":103946,"endOffset":104123,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104130,"endOffset":104186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104193,"endOffset":104502,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104509,"endOffset":104642,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104649,"endOffset":104834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":104841,"endOffset":105011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105018,"endOffset":105453,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105460,"endOffset":105496,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":105503,"endOffset":105978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106016,"endOffset":106217,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106224,"endOffset":106270,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106277,"endOffset":106323,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106330,"endOffset":106455,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106482,"endOffset":106567,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106574,"endOffset":106603,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106618,"endOffset":106648,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106655,"endOffset":106686,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106693,"endOffset":106729,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106736,"endOffset":106789,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106796,"endOffset":106886,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":106893,"endOffset":107046,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107122,"endOffset":107160,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107172,"endOffset":107224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":107233,"endOffset":107280,"count":0}],"isBlockCoverage":false},{"functionName":"Fn","ranges":[{"startOffset":107312,"endOffset":107514,"count":0}],"isBlockCoverage":false},{"functionName":"unmangleable","ranges":[{"startOffset":107541,"endOffset":107873,"count":0}],"isBlockCoverage":false},{"functionName":"mangle","ranges":[{"startOffset":107881,"endOffset":108276,"count":0}],"isBlockCoverage":false},{"functionName":"redefined","ranges":[{"startOffset":108287,"endOffset":108353,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":108387,"endOffset":111669,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":111697,"endOffset":111834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":111867,"endOffset":112008,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112272,"endOffset":112433,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112466,"endOffset":112551,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112582,"endOffset":112779,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112806,"endOffset":112880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":112911,"endOffset":113035,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113065,"endOffset":113189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113219,"endOffset":113443,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113473,"endOffset":113503,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113533,"endOffset":113609,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113639,"endOffset":113795,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113825,"endOffset":113889,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":113950,"endOffset":114026,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":114054,"endOffset":114084,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":114108,"endOffset":114151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":114193,"endOffset":114400,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":114430,"endOffset":115036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":115074,"endOffset":115418,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":115448,"endOffset":115950,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":116005,"endOffset":116067,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":116107,"endOffset":116612,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":116621,"endOffset":117084,"count":1}],"isBlockCoverage":true},{"functionName":"r","ranges":[{"startOffset":116734,"endOffset":116831,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116779,"endOffset":116798,"count":54}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":116810,"endOffset":116829,"count":10}],"isBlockCoverage":true},{"functionName":"o","ranges":[{"startOffset":116831,"endOffset":116864,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":116864,"endOffset":116954,"count":0}],"isBlockCoverage":false},{"functionName":"a.consider","ranges":[{"startOffset":116972,"endOffset":117024,"count":0}],"isBlockCoverage":false},{"functionName":"a.sort","ranges":[{"startOffset":117032,"endOffset":117067,"count":0}],"isBlockCoverage":false},{"functionName":"Mn","ranges":[{"startOffset":117087,"endOffset":118888,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":118931,"endOffset":118966,"count":0}],"isBlockCoverage":false},{"functionName":"exposed","ranges":[{"startOffset":118975,"endOffset":119131,"count":0}],"isBlockCoverage":false},{"functionName":"in_boolean_context","ranges":[{"startOffset":119151,"endOffset":119575,"count":0}],"isBlockCoverage":false},{"functionName":"compress","ranges":[{"startOffset":119585,"endOffset":120118,"count":0}],"isBlockCoverage":false},{"functionName":"info","ranges":[{"startOffset":120124,"endOffset":120197,"count":0}],"isBlockCoverage":false},{"functionName":"warn","ranges":[{"startOffset":120203,"endOffset":120345,"count":0}],"isBlockCoverage":false},{"functionName":"clear_warnings","ranges":[{"startOffset":120361,"endOffset":120398,"count":0}],"isBlockCoverage":false},{"functionName":"before","ranges":[{"startOffset":120406,"endOffset":120663,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":120666,"endOffset":218159,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":120677,"endOffset":120844,"count":47}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":120716,"endOffset":120842,"count":0}],"isBlockCoverage":false},{"functionName":"t","ranges":[{"startOffset":120844,"endOffset":121188,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":121188,"endOffset":121626,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":121626,"endOffset":121680,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":121680,"endOffset":121948,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":121948,"endOffset":122073,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":122073,"endOffset":122236,"count":0}],"isBlockCoverage":false},{"functionName":"m","ranges":[{"startOffset":122236,"endOffset":122333,"count":0}],"isBlockCoverage":false},{"functionName":"D","ranges":[{"startOffset":122333,"endOffset":122410,"count":0}],"isBlockCoverage":false},{"functionName":"y","ranges":[{"startOffset":122410,"endOffset":122899,"count":0}],"isBlockCoverage":false},{"functionName":"C","ranges":[{"startOffset":122899,"endOffset":123078,"count":0}],"isBlockCoverage":false},{"functionName":"O","ranges":[{"startOffset":123078,"endOffset":123159,"count":0}],"isBlockCoverage":false},{"functionName":"F","ranges":[{"startOffset":123159,"endOffset":123342,"count":0}],"isBlockCoverage":false},{"functionName":"R","ranges":[{"startOffset":123342,"endOffset":123426,"count":0}],"isBlockCoverage":false},{"functionName":"M","ranges":[{"startOffset":123426,"endOffset":123550,"count":0}],"isBlockCoverage":false},{"functionName":"N","ranges":[{"startOffset":123550,"endOffset":123618,"count":0}],"isBlockCoverage":false},{"functionName":"w","ranges":[{"startOffset":123618,"endOffset":123700,"count":0}],"isBlockCoverage":false},{"functionName":"x","ranges":[{"startOffset":123700,"endOffset":123764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":123769,"endOffset":123792,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":123822,"endOffset":124031,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":124062,"endOffset":124144,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":124180,"endOffset":124794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":124796,"endOffset":130936,"count":1}],"isBlockCoverage":true},{"functionName":"i","ranges":[{"startOffset":124808,"endOffset":125056,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":125056,"endOffset":125209,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":125209,"endOffset":125290,"count":0}],"isBlockCoverage":false},{"functionName":"a","ranges":[{"startOffset":125290,"endOffset":125341,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":125341,"endOffset":125400,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":125400,"endOffset":125437,"count":0}],"isBlockCoverage":false},{"functionName":"l","ranges":[{"startOffset":125437,"endOffset":125641,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":125641,"endOffset":125949,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":125949,"endOffset":126802,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":126823,"endOffset":126931,"count":0}],"isBlockCoverage":false},{"functionName":"d","ranges":[{"startOffset":126933,"endOffset":127054,"count":0}],"isBlockCoverage":false},{"functionName":"E","ranges":[{"startOffset":127054,"endOffset":127424,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":127429,"endOffset":127481,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":127496,"endOffset":128009,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128016,"endOffset":128105,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128112,"endOffset":128138,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128145,"endOffset":128222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128229,"endOffset":128283,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128290,"endOffset":128404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128411,"endOffset":128449,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128472,"endOffset":128624,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128631,"endOffset":128859,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":128866,"endOffset":129011,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129026,"endOffset":129154,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129161,"endOffset":129211,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129218,"endOffset":129256,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129263,"endOffset":129978,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":129985,"endOffset":130052,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130059,"endOffset":130198,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130205,"endOffset":130593,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130600,"endOffset":130834,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130841,"endOffset":130934,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":130937,"endOffset":130980,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":131013,"endOffset":131293,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":131322,"endOffset":131395,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":131425,"endOffset":131503,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":131854,"endOffset":131936,"count":0}],"isBlockCoverage":false},{"functionName":"K","ranges":[{"startOffset":131980,"endOffset":132051,"count":0}],"isBlockCoverage":false},{"functionName":"U","ranges":[{"startOffset":132051,"endOffset":146909,"count":0}],"isBlockCoverage":false},{"functionName":"G","ranges":[{"startOffset":146909,"endOffset":147347,"count":0}],"isBlockCoverage":false},{"functionName":"H","ranges":[{"startOffset":147347,"endOffset":147470,"count":0}],"isBlockCoverage":false},{"functionName":"X","ranges":[{"startOffset":147470,"endOffset":147597,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147598,"endOffset":148706,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":147610,"endOffset":147670,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147705,"endOffset":147769,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147816,"endOffset":147941,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":147964,"endOffset":148013,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148044,"endOffset":148083,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148090,"endOffset":148204,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148211,"endOffset":148274,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148281,"endOffset":148362,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148369,"endOffset":148456,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148463,"endOffset":148513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148520,"endOffset":148704,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148707,"endOffset":148749,"count":19}],"isBlockCoverage":true},{"functionName":"I","ranges":[{"startOffset":148833,"endOffset":148875,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":148888,"endOffset":148925,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":148932,"endOffset":149036,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149043,"endOffset":149121,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149128,"endOffset":149189,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149196,"endOffset":149244,"count":0}],"isBlockCoverage":false},{"functionName":"P","ranges":[{"startOffset":149262,"endOffset":149744,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":149318,"endOffset":149353,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149395,"endOffset":149500,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149507,"endOffset":149600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149607,"endOffset":149656,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149663,"endOffset":149742,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149745,"endOffset":149786,"count":7}],"isBlockCoverage":true},{"functionName":"P","ranges":[{"startOffset":149791,"endOffset":149832,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":149853,"endOffset":149896,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149903,"endOffset":149944,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":149951,"endOffset":150039,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150046,"endOffset":150131,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150138,"endOffset":150187,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150194,"endOffset":150273,"count":0}],"isBlockCoverage":false},{"functionName":"Y","ranges":[{"startOffset":150312,"endOffset":150416,"count":0}],"isBlockCoverage":false},{"functionName":"q","ranges":[{"startOffset":150416,"endOffset":150497,"count":0}],"isBlockCoverage":false},{"functionName":"$","ranges":[{"startOffset":150497,"endOffset":150599,"count":0}],"isBlockCoverage":false},{"functionName":"Q","ranges":[{"startOffset":150599,"endOffset":150641,"count":3},{"startOffset":150628,"endOffset":150640,"count":14}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":150642,"endOffset":151622,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":150654,"endOffset":150756,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":150787,"endOffset":151057,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":151072,"endOffset":151143,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":151150,"endOffset":151225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":151232,"endOffset":151620,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":151623,"endOffset":151665,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":152409,"endOffset":157078,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":152445,"endOffset":152596,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":152649,"endOffset":152776,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":152783,"endOffset":152877,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":152908,"endOffset":152942,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":152949,"endOffset":153020,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":153027,"endOffset":153172,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":153179,"endOffset":153355,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":153362,"endOffset":153765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":153797,"endOffset":154210,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":154242,"endOffset":154957,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":154964,"endOffset":155120,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":155127,"endOffset":155404,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":155635,"endOffset":156265,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":156272,"endOffset":157068,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157079,"endOffset":157116,"count":16}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":157118,"endOffset":158319,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":157130,"endOffset":157187,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":157187,"endOffset":157281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157286,"endOffset":157312,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157319,"endOffset":157375,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157382,"endOffset":157408,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157415,"endOffset":157441,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157448,"endOffset":157508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157515,"endOffset":157601,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157608,"endOffset":157734,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":157741,"endOffset":158317,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":158320,"endOffset":158395,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":158355,"endOffset":158393,"count":0}],"isBlockCoverage":false},{"functionName":"ie","ranges":[{"startOffset":158625,"endOffset":158661,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":158689,"endOffset":159093,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159154,"endOffset":159420,"count":0}],"isBlockCoverage":false},{"functionName":"re","ranges":[{"startOffset":159422,"endOffset":161317,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":159434,"endOffset":159523,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159560,"endOffset":159594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159601,"endOffset":159730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159737,"endOffset":159808,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159815,"endOffset":159886,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":159893,"endOffset":160023,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160030,"endOffset":160182,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160189,"endOffset":160238,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160245,"endOffset":160294,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160325,"endOffset":160406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160421,"endOffset":160550,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160557,"endOffset":160630,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160637,"endOffset":160676,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160691,"endOffset":160731,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160738,"endOffset":160845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160852,"endOffset":160890,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160897,"endOffset":160992,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":160999,"endOffset":161129,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161136,"endOffset":161177,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161184,"endOffset":161225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161232,"endOffset":161262,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161277,"endOffset":161315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161318,"endOffset":161366,"count":31}],"isBlockCoverage":true},{"functionName":"re","ranges":[{"startOffset":161368,"endOffset":163304,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":161380,"endOffset":161462,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161523,"endOffset":161561,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161568,"endOffset":161716,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161723,"endOffset":161790,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161797,"endOffset":161831,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":161838,"endOffset":161993,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162000,"endOffset":162064,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162071,"endOffset":162179,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162186,"endOffset":162227,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162234,"endOffset":162322,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162329,"endOffset":162460,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162467,"endOffset":162509,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162516,"endOffset":162556,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162563,"endOffset":162606,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162613,"endOffset":162668,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162675,"endOffset":162716,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162723,"endOffset":162765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162772,"endOffset":162888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162895,"endOffset":162959,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":162966,"endOffset":163005,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163012,"endOffset":163126,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163133,"endOffset":163239,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163246,"endOffset":163302,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163305,"endOffset":163346,"count":29}],"isBlockCoverage":true},{"functionName":"re","ranges":[{"startOffset":163348,"endOffset":164252,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":163360,"endOffset":163453,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":163453,"endOffset":163794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163815,"endOffset":163906,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163921,"endOffset":163980,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":163987,"endOffset":164077,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164084,"endOffset":164119,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164126,"endOffset":164163,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164170,"endOffset":164250,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164253,"endOffset":164307,"count":9}],"isBlockCoverage":true},{"functionName":"re","ranges":[{"startOffset":164309,"endOffset":164568,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":164321,"endOffset":164421,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164442,"endOffset":164465,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164488,"endOffset":164566,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164569,"endOffset":164607,"count":6}],"isBlockCoverage":true},{"functionName":"ae","ranges":[{"startOffset":164641,"endOffset":164784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164789,"endOffset":164888,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164895,"endOffset":164952,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":164959,"endOffset":165086,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":165093,"endOffset":165128,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":165135,"endOffset":165388,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":165426,"endOffset":170714,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":170750,"endOffset":172473,"count":0}],"isBlockCoverage":false},{"functionName":"e","ranges":[{"startOffset":172500,"endOffset":172770,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":172801,"endOffset":172929,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":172963,"endOffset":173882,"count":0}],"isBlockCoverage":false},{"functionName":"ue","ranges":[{"startOffset":173884,"endOffset":176841,"count":1}],"isBlockCoverage":true},{"functionName":"t","ranges":[{"startOffset":173896,"endOffset":174075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174104,"endOffset":174573,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174612,"endOffset":174911,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":174918,"endOffset":175206,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175213,"endOffset":175610,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175617,"endOffset":175914,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175921,"endOffset":175970,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":175977,"endOffset":176040,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176047,"endOffset":176106,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176113,"endOffset":176174,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176181,"endOffset":176289,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176296,"endOffset":176537,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176544,"endOffset":176694,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176701,"endOffset":176765,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176780,"endOffset":176839,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":176842,"endOffset":176895,"count":22}],"isBlockCoverage":true},{"functionName":"ce","ranges":[{"startOffset":177002,"endOffset":177201,"count":0}],"isBlockCoverage":false},{"functionName":"Ee","ranges":[{"startOffset":177201,"endOffset":177293,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":177298,"endOffset":177594,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":177601,"endOffset":177664,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":177671,"endOffset":178001,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":178008,"endOffset":179508,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":179515,"endOffset":181930,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":181937,"endOffset":183519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":183526,"endOffset":183935,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":183972,"endOffset":184183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":184215,"endOffset":184634,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":184641,"endOffset":184696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":184703,"endOffset":184726,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":184733,"endOffset":192667,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":192674,"endOffset":193059,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":193066,"endOffset":193488,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":193520,"endOffset":193718,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":193725,"endOffset":193766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":193773,"endOffset":194860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":194892,"endOffset":195473,"count":0}],"isBlockCoverage":false},{"functionName":"Fe","ranges":[{"startOffset":195509,"endOffset":195631,"count":0}],"isBlockCoverage":false},{"functionName":"ze","ranges":[{"startOffset":195631,"endOffset":195688,"count":0}],"isBlockCoverage":false},{"functionName":"st","ranges":[{"startOffset":195688,"endOffset":195964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":195969,"endOffset":203511,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":203518,"endOffset":203541,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":203548,"endOffset":205760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":205767,"endOffset":206031,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":206038,"endOffset":206230,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":206237,"endOffset":206383,"count":0}],"isBlockCoverage":false},{"functionName":"Kt","ranges":[{"startOffset":206463,"endOffset":206612,"count":0}],"isBlockCoverage":false},{"functionName":"zt","ranges":[{"startOffset":206612,"endOffset":206697,"count":0}],"isBlockCoverage":false},{"functionName":"Wt","ranges":[{"startOffset":206697,"endOffset":206870,"count":0}],"isBlockCoverage":false},{"functionName":"qt","ranges":[{"startOffset":206870,"endOffset":207183,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":207188,"endOffset":208216,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":208223,"endOffset":208377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":208384,"endOffset":211224,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":211231,"endOffset":211825,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":211832,"endOffset":213662,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":213693,"endOffset":213840,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":213872,"endOffset":214430,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":214437,"endOffset":215327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215334,"endOffset":215396,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215403,"endOffset":215681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215697,"endOffset":215758,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215765,"endOffset":215922,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":215929,"endOffset":216190,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216197,"endOffset":216220,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216227,"endOffset":216315,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216322,"endOffset":216694,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216701,"endOffset":216724,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":216740,"endOffset":217137,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":217144,"endOffset":217519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":217526,"endOffset":218157,"count":0}],"isBlockCoverage":false},{"functionName":"wn","ranges":[{"startOffset":310648,"endOffset":310822,"count":0}],"isBlockCoverage":false},{"functionName":"xn","ranges":[{"startOffset":310822,"endOffset":310999,"count":0}],"isBlockCoverage":false},{"functionName":"kn","ranges":[{"startOffset":310999,"endOffset":313533,"count":0}],"isBlockCoverage":false},{"functionName":"In","ranges":[{"startOffset":313565,"endOffset":313619,"count":0}],"isBlockCoverage":false},{"functionName":"Ln","ranges":[{"startOffset":313653,"endOffset":313706,"count":0}],"isBlockCoverage":false},{"functionName":"Vn","ranges":[{"startOffset":313712,"endOffset":313828,"count":0}],"isBlockCoverage":false},{"functionName":"Pn","ranges":[{"startOffset":313828,"endOffset":313928,"count":0}],"isBlockCoverage":false},{"functionName":"Bn","ranges":[{"startOffset":313928,"endOffset":313976,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":313977,"endOffset":330013,"count":1}],"isBlockCoverage":true},{"functionName":"e","ranges":[{"startOffset":313994,"endOffset":314215,"count":0}],"isBlockCoverage":false},{"functionName":"Program","ranges":[{"startOffset":314227,"endOffset":314298,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayPattern","ranges":[{"startOffset":314312,"endOffset":314436,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectPattern","ranges":[{"startOffset":314451,"endOffset":314538,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentPattern","ranges":[{"startOffset":314557,"endOffset":314651,"count":0}],"isBlockCoverage":false},{"functionName":"SpreadElement","ranges":[{"startOffset":314666,"endOffset":314740,"count":0}],"isBlockCoverage":false},{"functionName":"RestElement","ranges":[{"startOffset":314753,"endOffset":314827,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateElement","ranges":[{"startOffset":314844,"endOffset":314930,"count":0}],"isBlockCoverage":false},{"functionName":"TemplateLiteral","ranges":[{"startOffset":314947,"endOffset":315115,"count":0}],"isBlockCoverage":false},{"functionName":"TaggedTemplateExpression","ranges":[{"startOffset":315141,"endOffset":315233,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionDeclaration","ranges":[{"startOffset":315254,"endOffset":315403,"count":0}],"isBlockCoverage":false},{"functionName":"FunctionExpression","ranges":[{"startOffset":315423,"endOffset":315572,"count":0}],"isBlockCoverage":false},{"functionName":"ArrowFunctionExpression","ranges":[{"startOffset":315597,"endOffset":315700,"count":0}],"isBlockCoverage":false},{"functionName":"ExpressionStatement","ranges":[{"startOffset":315721,"endOffset":315791,"count":0}],"isBlockCoverage":false},{"functionName":"TryStatement","ranges":[{"startOffset":315805,"endOffset":316089,"count":0}],"isBlockCoverage":false},{"functionName":"Property","ranges":[{"startOffset":316099,"endOffset":316735,"count":0}],"isBlockCoverage":false},{"functionName":"MethodDefinition","ranges":[{"startOffset":316753,"endOffset":317010,"count":0}],"isBlockCoverage":false},{"functionName":"ArrayExpression","ranges":[{"startOffset":317027,"endOffset":317142,"count":0}],"isBlockCoverage":false},{"functionName":"ObjectExpression","ranges":[{"startOffset":317160,"endOffset":317312,"count":0}],"isBlockCoverage":false},{"functionName":"SequenceExpression","ranges":[{"startOffset":317332,"endOffset":317414,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":317432,"endOffset":317569,"count":0}],"isBlockCoverage":false},{"functionName":"SwitchCase","ranges":[{"startOffset":317581,"endOffset":317687,"count":0}],"isBlockCoverage":false},{"functionName":"VariableDeclaration","ranges":[{"startOffset":317708,"endOffset":317830,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":317849,"endOffset":318310,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":318332,"endOffset":318488,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":318512,"endOffset":318767,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":318793,"endOffset":318888,"count":0}],"isBlockCoverage":false},{"functionName":"Literal","ranges":[{"startOffset":318897,"endOffset":319351,"count":0}],"isBlockCoverage":false},{"functionName":"MetaProperty","ranges":[{"startOffset":319365,"endOffset":319465,"count":0}],"isBlockCoverage":false},{"functionName":"Identifier","ranges":[{"startOffset":319477,"endOffset":320181,"count":0}],"isBlockCoverage":false},{"functionName":"n","ranges":[{"startOffset":320183,"endOffset":320254,"count":0}],"isBlockCoverage":false},{"functionName":"i","ranges":[{"startOffset":320254,"endOffset":320455,"count":0}],"isBlockCoverage":false},{"functionName":"r","ranges":[{"startOffset":320455,"endOffset":320650,"count":0}],"isBlockCoverage":false},{"functionName":"o","ranges":[{"startOffset":320650,"endOffset":321582,"count":28},{"startOffset":320864,"endOffset":321374,"count":24}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":320893,"endOffset":321373,"count":52},{"startOffset":320963,"endOffset":321016,"count":0},{"startOffset":321083,"endOffset":321149,"count":4},{"startOffset":321149,"endOffset":321207,"count":42},{"startOffset":321207,"endOffset":321241,"count":5},{"startOffset":321241,"endOffset":321304,"count":1},{"startOffset":321304,"endOffset":321371,"count":0}],"isBlockCoverage":true},{"functionName":"t.UpdateExpression.t.UnaryExpression","ranges":[{"startOffset":321619,"endOffset":321767,"count":0}],"isBlockCoverage":false},{"functionName":"t.ClassDeclaration.t.ClassExpression","ranges":[{"startOffset":321805,"endOffset":321953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":323418,"endOffset":323452,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":323459,"endOffset":323545,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":323552,"endOffset":323647,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":323654,"endOffset":323917,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":323924,"endOffset":324075,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324082,"endOffset":324281,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324288,"endOffset":324468,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324475,"endOffset":324600,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324607,"endOffset":324696,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324703,"endOffset":324771,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324778,"endOffset":324862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324869,"endOffset":324983,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":324990,"endOffset":325069,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":325076,"endOffset":325214,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":325221,"endOffset":325687,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":325694,"endOffset":326139,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326146,"endOffset":326225,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326232,"endOffset":326393,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326400,"endOffset":326565,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326572,"endOffset":326803,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326810,"endOffset":326880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326887,"endOffset":326962,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":326969,"endOffset":327536,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":327543,"endOffset":327891,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":327898,"endOffset":328074,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328081,"endOffset":328200,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328207,"endOffset":328369,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328376,"endOffset":328547,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328554,"endOffset":328766,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328773,"endOffset":328832,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":328982,"endOffset":329005,"count":0}],"isBlockCoverage":false},{"functionName":"s","ranges":[{"startOffset":329136,"endOffset":329209,"count":0}],"isBlockCoverage":false},{"functionName":"u","ranges":[{"startOffset":329209,"endOffset":329515,"count":58}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":329254,"endOffset":329513,"count":0}],"isBlockCoverage":false},{"functionName":"le.from_mozilla_ast","ranges":[{"startOffset":329535,"endOffset":329584,"count":0}],"isBlockCoverage":false},{"functionName":"l","ranges":[{"startOffset":329596,"endOffset":329728,"count":0}],"isBlockCoverage":false},{"functionName":"f","ranges":[{"startOffset":329728,"endOffset":329804,"count":0}],"isBlockCoverage":false},{"functionName":"p","ranges":[{"startOffset":329804,"endOffset":329867,"count":0}],"isBlockCoverage":false},{"functionName":"_","ranges":[{"startOffset":329867,"endOffset":330012,"count":0}],"isBlockCoverage":false},{"functionName":"e.minify","ranges":[{"startOffset":330025,"endOffset":334525,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1579","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":769,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":768,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1580","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1038,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1037,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1581","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":301,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1582","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":105,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":104,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1583","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1584","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":762,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":761,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1585","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":312,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":311,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1586","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":115,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1587","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":113,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":112,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1588","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1589","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":148,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1590","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":296,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":295,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1591","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":87,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1592","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":307,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":306,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1593","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":131,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":130,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1594","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":425,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Token","ranges":[{"startOffset":32,"endOffset":423,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1595","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Node","ranges":[{"startOffset":32,"endOffset":119,"count":23},{"startOffset":69,"endOffset":118,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1596","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Statement","ranges":[{"startOffset":32,"endOffset":124,"count":9},{"startOffset":74,"endOffset":123,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1597","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Debugger","ranges":[{"startOffset":32,"endOffset":123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1598","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":176,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Directive","ranges":[{"startOffset":32,"endOffset":174,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1599","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":156,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":155,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SimpleStatement","ranges":[{"startOffset":32,"endOffset":153,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1600","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":183,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":182,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Block","ranges":[{"startOffset":32,"endOffset":180,"count":7},{"startOffset":70,"endOffset":179,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1601","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":192,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"AST_BlockStatement","ranges":[{"startOffset":32,"endOffset":189,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1602","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":132,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":131,"count":1}],"isBlockCoverage":true},{"functionName":"AST_EmptyStatement","ranges":[{"startOffset":32,"endOffset":129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1603","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":157,"count":1}],"isBlockCoverage":true},{"functionName":"AST_StatementWithBody","ranges":[{"startOffset":32,"endOffset":155,"count":4},{"startOffset":82,"endOffset":154,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1604","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"AST_LabeledStatement","ranges":[{"startOffset":32,"endOffset":179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1605","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"AST_IterationStatement","ranges":[{"startOffset":32,"endOffset":193,"count":3},{"startOffset":83,"endOffset":192,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1606","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"AST_DWLoop","ranges":[{"startOffset":32,"endOffset":214,"count":2},{"startOffset":71,"endOffset":213,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1607","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Do","ranges":[{"startOffset":32,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1608","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"AST_While","ranges":[{"startOffset":32,"endOffset":213,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1609","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":260,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":259,"count":1}],"isBlockCoverage":true},{"functionName":"AST_For","ranges":[{"startOffset":32,"endOffset":257,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1610","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ForIn","ranges":[{"startOffset":32,"endOffset":230,"count":1},{"startOffset":70,"endOffset":229,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1611","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":257,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ForOf","ranges":[{"startOffset":32,"endOffset":255,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1612","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"AST_With","ranges":[{"startOffset":32,"endOffset":177,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1613","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":410,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":409,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Scope","ranges":[{"startOffset":32,"endOffset":407,"count":3},{"startOffset":70,"endOffset":406,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1614","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":442,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":441,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Toplevel","ranges":[{"startOffset":32,"endOffset":439,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1615","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Expansion","ranges":[{"startOffset":32,"endOffset":159,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1616","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":572,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":571,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Lambda","ranges":[{"startOffset":32,"endOffset":569,"count":4},{"startOffset":71,"endOffset":568,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1617","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":574,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":573,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Accessor","ranges":[{"startOffset":32,"endOffset":571,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1618","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":603,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":602,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Function","ranges":[{"startOffset":32,"endOffset":600,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1619","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Arrow","ranges":[{"startOffset":32,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1620","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":600,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":599,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Defun","ranges":[{"startOffset":32,"endOffset":597,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1621","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Destructuring","ranges":[{"startOffset":32,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1622","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"AST_PrefixedTemplateString","ranges":[{"startOffset":32,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1623","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"AST_TemplateString","ranges":[{"startOffset":32,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1624","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"AST_TemplateSegment","ranges":[{"startOffset":32,"endOffset":176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1625","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Jump","ranges":[{"startOffset":32,"endOffset":119,"count":2},{"startOffset":69,"endOffset":118,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1626","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":146,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Exit","ranges":[{"startOffset":32,"endOffset":144,"count":2},{"startOffset":69,"endOffset":143,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1627","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":148,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Return","ranges":[{"startOffset":32,"endOffset":146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1628","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Throw","ranges":[{"startOffset":32,"endOffset":145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1629","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":153,"count":1}],"isBlockCoverage":true},{"functionName":"AST_LoopControl","ranges":[{"startOffset":32,"endOffset":151,"count":2},{"startOffset":76,"endOffset":150,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1630","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":148,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Break","ranges":[{"startOffset":32,"endOffset":145,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1631","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":151,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":150,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Continue","ranges":[{"startOffset":32,"endOffset":148,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1632","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":213,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"AST_If","ranges":[{"startOffset":32,"endOffset":210,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1633","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Switch","ranges":[{"startOffset":32,"endOffset":216,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1634","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":190,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SwitchBranch","ranges":[{"startOffset":32,"endOffset":187,"count":2},{"startOffset":77,"endOffset":186,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1635","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":184,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Default","ranges":[{"startOffset":32,"endOffset":182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1636","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":216,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Case","ranges":[{"startOffset":32,"endOffset":214,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1637","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":239,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Try","ranges":[{"startOffset":32,"endOffset":236,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1638","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Catch","ranges":[{"startOffset":32,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1639","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":185,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":184,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Finally","ranges":[{"startOffset":32,"endOffset":182,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1640","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":166,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Definitions","ranges":[{"startOffset":32,"endOffset":163,"count":3},{"startOffset":76,"endOffset":162,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1641","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":157,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Var","ranges":[{"startOffset":32,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1642","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":157,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Let","ranges":[{"startOffset":32,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1643","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":160,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Const","ranges":[{"startOffset":32,"endOffset":157,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1644","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":190,"count":1}],"isBlockCoverage":true},{"functionName":"AST_NameMapping","ranges":[{"startOffset":32,"endOffset":188,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1645","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":244,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Import","ranges":[{"startOffset":32,"endOffset":242,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1646","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":335,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":334,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Export","ranges":[{"startOffset":32,"endOffset":332,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1647","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":172,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"AST_VarDef","ranges":[{"startOffset":32,"endOffset":169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1648","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Call","ranges":[{"startOffset":32,"endOffset":177,"count":1},{"startOffset":69,"endOffset":176,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1649","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"AST_New","ranges":[{"startOffset":32,"endOffset":176,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1650","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Sequence","ranges":[{"startOffset":32,"endOffset":160,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1651","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":193,"count":1}],"isBlockCoverage":true},{"functionName":"AST_PropAccess","ranges":[{"startOffset":32,"endOffset":191,"count":2},{"startOffset":75,"endOffset":190,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1652","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Dot","ranges":[{"startOffset":32,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1653","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Sub","ranges":[{"startOffset":32,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1654","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Unary","ranges":[{"startOffset":32,"endOffset":186,"count":2},{"startOffset":70,"endOffset":185,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1655","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"AST_UnaryPrefix","ranges":[{"startOffset":32,"endOffset":192,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1656","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"AST_UnaryPostfix","ranges":[{"startOffset":32,"endOffset":193,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1657","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":202,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Binary","ranges":[{"startOffset":32,"endOffset":200,"count":2},{"startOffset":71,"endOffset":199,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1658","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":234,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Conditional","ranges":[{"startOffset":32,"endOffset":231,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1659","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":202,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Assign","ranges":[{"startOffset":32,"endOffset":200,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1660","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":209,"count":1}],"isBlockCoverage":true},{"functionName":"AST_DefaultAssign","ranges":[{"startOffset":32,"endOffset":207,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1661","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":153,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Array","ranges":[{"startOffset":32,"endOffset":151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1662","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Object","ranges":[{"startOffset":32,"endOffset":156,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1663","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ObjectProperty","ranges":[{"startOffset":32,"endOffset":175,"count":4},{"startOffset":79,"endOffset":174,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1664","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ObjectKeyVal","ranges":[{"startOffset":32,"endOffset":198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1665","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ObjectSetter","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1666","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ObjectGetter","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1667","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":293,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":292,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ConciseMethod","ranges":[{"startOffset":32,"endOffset":290,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1668","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":526,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":525,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Class","ranges":[{"startOffset":32,"endOffset":523,"count":2},{"startOffset":70,"endOffset":522,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1669","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":529,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":528,"count":1}],"isBlockCoverage":true},{"functionName":"AST_DefClass","ranges":[{"startOffset":32,"endOffset":526,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1670","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"AST_ClassExpression","ranges":[{"startOffset":32,"endOffset":533,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1671","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":199,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Symbol","ranges":[{"startOffset":32,"endOffset":196,"count":8},{"startOffset":71,"endOffset":195,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1672","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"AST_NewTarget","ranges":[{"startOffset":32,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1673","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":233,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":232,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolDeclaration","ranges":[{"startOffset":32,"endOffset":230,"count":5},{"startOffset":82,"endOffset":229,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1674","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolVar","ranges":[{"startOffset":32,"endOffset":222,"count":1},{"startOffset":74,"endOffset":221,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1675","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":238,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":237,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolBlockDeclaration","ranges":[{"startOffset":32,"endOffset":235,"count":5},{"startOffset":87,"endOffset":234,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1676","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolConst","ranges":[{"startOffset":32,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1677","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolLet","ranges":[{"startOffset":32,"endOffset":222,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1678","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolFunarg","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1679","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolDefun","ranges":[{"startOffset":32,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1680","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolMethod","ranges":[{"startOffset":32,"endOffset":202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1681","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolLambda","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1682","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":230,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolDefClass","ranges":[{"startOffset":32,"endOffset":227,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1683","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolClass","ranges":[{"startOffset":32,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1684","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolCatch","ranges":[{"startOffset":32,"endOffset":224,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1685","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":227,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolImport","ranges":[{"startOffset":32,"endOffset":225,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1686","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolImportForeign","ranges":[{"startOffset":32,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1687","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Label","ranges":[{"startOffset":32,"endOffset":248,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1688","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":202,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolRef","ranges":[{"startOffset":32,"endOffset":199,"count":1},{"startOffset":74,"endOffset":198,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1689","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":205,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":204,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolExport","ranges":[{"startOffset":32,"endOffset":202,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1690","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"AST_SymbolExportForeign","ranges":[{"startOffset":32,"endOffset":209,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1691","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":201,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":200,"count":1}],"isBlockCoverage":true},{"functionName":"AST_LabelRef","ranges":[{"startOffset":32,"endOffset":198,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1692","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"AST_This","ranges":[{"startOffset":32,"endOffset":194,"count":1},{"startOffset":69,"endOffset":193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1693","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Super","ranges":[{"startOffset":32,"endOffset":195,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1694","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Constant","ranges":[{"startOffset":32,"endOffset":123,"count":4},{"startOffset":73,"endOffset":122,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1695","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":173,"count":1}],"isBlockCoverage":true},{"functionName":"AST_String","ranges":[{"startOffset":32,"endOffset":171,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1696","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":178,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":177,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Number","ranges":[{"startOffset":32,"endOffset":175,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1697","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":149,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":148,"count":1}],"isBlockCoverage":true},{"functionName":"AST_RegExp","ranges":[{"startOffset":32,"endOffset":146,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1698","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Atom","ranges":[{"startOffset":32,"endOffset":119,"count":6},{"startOffset":69,"endOffset":118,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1699","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Null","ranges":[{"startOffset":32,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1700","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"AST_NaN","ranges":[{"startOffset":32,"endOffset":118,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1701","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":127,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Undefined","ranges":[{"startOffset":32,"endOffset":124,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1702","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Hole","ranges":[{"startOffset":32,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1703","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":126,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Infinity","ranges":[{"startOffset":32,"endOffset":123,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1704","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":125,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":124,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Boolean","ranges":[{"startOffset":32,"endOffset":122,"count":2},{"startOffset":72,"endOffset":121,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1705","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":123,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"AST_False","ranges":[{"startOffset":32,"endOffset":120,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1706","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":122,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":121,"count":1}],"isBlockCoverage":true},{"functionName":"AST_True","ranges":[{"startOffset":32,"endOffset":119,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1707","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":158,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":157,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Await","ranges":[{"startOffset":32,"endOffset":155,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1708","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"AST_Yield","ranges":[{"startOffset":32,"endOffset":184,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1709","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1046,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1045,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1710","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":112,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":111,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1711","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":115,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":114,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1712","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":161,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1713","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":87,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1714","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":102,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":101,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1715","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":300,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":299,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1716","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":117,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1717","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":118,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":117,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1718","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":279,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1719","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":182,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":181,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1720","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":591,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":590,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1721","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":56,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":55,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1722","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":266,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":265,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1723","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":97,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":96,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1724","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":360,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":359,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1725","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":60,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1726","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":116,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":115,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1727","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":103,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":102,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1728","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":110,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":109,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1729","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":294,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":293,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1730","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":162,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1731","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":757,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":756,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1732","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":146,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":145,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1733","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_EmptyStatement","ranges":[{"startOffset":71,"endOffset":194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1734","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":138,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":137,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_EmptyStatement","ranges":[{"startOffset":64,"endOffset":134,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1735","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":226,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":225,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_BlockStatement","ranges":[{"startOffset":71,"endOffset":222,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1736","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":164,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":163,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_BlockStatement","ranges":[{"startOffset":64,"endOffset":160,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1737","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":278,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":277,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_IfStatement","ranges":[{"startOffset":71,"endOffset":274,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1738","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_IfStatement","ranges":[{"startOffset":64,"endOffset":217,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1739","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_LabeledStatement","ranges":[{"startOffset":71,"endOffset":248,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1740","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_LabeledStatement","ranges":[{"startOffset":64,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1741","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":215,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":214,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_BreakStatement","ranges":[{"startOffset":71,"endOffset":211,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1742","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":162,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":161,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_BreakStatement","ranges":[{"startOffset":64,"endOffset":158,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1743","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":221,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ContinueStatement","ranges":[{"startOffset":71,"endOffset":217,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1744","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":167,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ContinueStatement","ranges":[{"startOffset":64,"endOffset":164,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1745","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":243,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":242,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_WithStatement","ranges":[{"startOffset":71,"endOffset":239,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1746","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_WithStatement","ranges":[{"startOffset":64,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1747","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":258,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":257,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_SwitchStatement","ranges":[{"startOffset":71,"endOffset":254,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1748","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":203,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":202,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_SwitchStatement","ranges":[{"startOffset":64,"endOffset":199,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1749","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":220,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":219,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ReturnStatement","ranges":[{"startOffset":71,"endOffset":216,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1750","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":167,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":166,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ReturnStatement","ranges":[{"startOffset":64,"endOffset":163,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1751","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ThrowStatement","ranges":[{"startOffset":71,"endOffset":214,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1752","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":165,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":164,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ThrowStatement","ranges":[{"startOffset":64,"endOffset":161,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1753","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":242,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_WhileStatement","ranges":[{"startOffset":71,"endOffset":238,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1754","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":186,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_WhileStatement","ranges":[{"startOffset":64,"endOffset":183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1755","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":240,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_DoWhileStatement","ranges":[{"startOffset":71,"endOffset":237,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1756","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":191,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":190,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_DoWhileStatement","ranges":[{"startOffset":64,"endOffset":187,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1757","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":288,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":287,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ForStatement","ranges":[{"startOffset":71,"endOffset":284,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1758","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":229,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":228,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ForStatement","ranges":[{"startOffset":64,"endOffset":225,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1759","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ForInStatement","ranges":[{"startOffset":71,"endOffset":260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1760","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":207,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":206,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ForInStatement","ranges":[{"startOffset":64,"endOffset":203,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1761","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":280,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":279,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ForOfStatement","ranges":[{"startOffset":71,"endOffset":276,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1762","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":222,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ForOfStatement","ranges":[{"startOffset":64,"endOffset":219,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1763","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":224,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":223,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_AwaitExpression","ranges":[{"startOffset":71,"endOffset":220,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1764","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":172,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":171,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_AwaitExpression","ranges":[{"startOffset":64,"endOffset":168,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1765","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":245,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":244,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_YieldExpression","ranges":[{"startOffset":71,"endOffset":241,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1766","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":193,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":192,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_YieldExpression","ranges":[{"startOffset":64,"endOffset":189,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1767","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":195,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":194,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_DebuggerStatement","ranges":[{"startOffset":71,"endOffset":191,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1768","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":144,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":143,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_DebuggerStatement","ranges":[{"startOffset":64,"endOffset":140,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1769","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":241,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":240,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_VariableDeclarator","ranges":[{"startOffset":71,"endOffset":237,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1770","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":189,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_VariableDeclarator","ranges":[{"startOffset":64,"endOffset":185,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1771","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":243,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":242,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_CatchClause","ranges":[{"startOffset":71,"endOffset":239,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1772","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":181,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":180,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_CatchClause","ranges":[{"startOffset":64,"endOffset":177,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1773","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":188,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":187,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ThisExpression","ranges":[{"startOffset":71,"endOffset":184,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1774","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":138,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":137,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ThisExpression","ranges":[{"startOffset":64,"endOffset":134,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1775","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":180,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":179,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_Super","ranges":[{"startOffset":71,"endOffset":176,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1776","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":120,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":119,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_Super","ranges":[{"startOffset":64,"endOffset":116,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1777","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":263,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_BinaryExpression","ranges":[{"startOffset":71,"endOffset":260,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1778","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":210,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":209,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_BinaryExpression","ranges":[{"startOffset":64,"endOffset":206,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1779","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":265,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":264,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_LogicalExpression","ranges":[{"startOffset":71,"endOffset":261,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1780","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":212,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":211,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_LogicalExpression","ranges":[{"startOffset":64,"endOffset":208,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1781","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":268,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":267,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_AssignmentExpression","ranges":[{"startOffset":71,"endOffset":264,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1782","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":218,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":217,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_AssignmentExpression","ranges":[{"startOffset":64,"endOffset":214,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1783","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":303,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":302,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_ConditionalExpression","ranges":[{"startOffset":71,"endOffset":299,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1784","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":247,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":246,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_ConditionalExpression","ranges":[{"startOffset":64,"endOffset":243,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1785","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":251,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":250,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_NewExpression","ranges":[{"startOffset":71,"endOffset":247,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1786","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":196,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_NewExpression","ranges":[{"startOffset":64,"endOffset":193,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1787","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":253,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":252,"count":1}],"isBlockCoverage":true},{"functionName":"From_Moz_CallExpression","ranges":[{"startOffset":71,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1788","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":199,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":198,"count":1}],"isBlockCoverage":true},{"functionName":"To_Moz_CallExpression","ranges":[{"startOffset":64,"endOffset":195,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1789","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/scope-hoisting/hoist.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":18623,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":18621,"count":1}],"isBlockCoverage":true},{"functionName":"hasSideEffects","ranges":[{"startOffset":1022,"endOffset":1487,"count":0}],"isBlockCoverage":false},{"functionName":"enter","ranges":[{"startOffset":1525,"endOffset":3720,"count":0}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":3727,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"DirectiveLiteral","ranges":[{"startOffset":5117,"endOffset":5386,"count":0}],"isBlockCoverage":false},{"functionName":"MemberExpression","ranges":[{"startOffset":5391,"endOffset":6174,"count":0}],"isBlockCoverage":false},{"functionName":"ReferencedIdentifier","ranges":[{"startOffset":6179,"endOffset":6873,"count":0}],"isBlockCoverage":false},{"functionName":"ThisExpression","ranges":[{"startOffset":6878,"endOffset":7078,"count":0}],"isBlockCoverage":false},{"functionName":"AssignmentExpression","ranges":[{"startOffset":7083,"endOffset":9318,"count":0}],"isBlockCoverage":false},{"functionName":"UnaryExpression","ranges":[{"startOffset":9323,"endOffset":9715,"count":0}],"isBlockCoverage":false},{"functionName":"CallExpression","ranges":[{"startOffset":9720,"endOffset":11421,"count":0}],"isBlockCoverage":false},{"functionName":"ImportDeclaration","ranges":[{"startOffset":11426,"endOffset":12321,"count":0}],"isBlockCoverage":false},{"functionName":"ExportDefaultDeclaration","ranges":[{"startOffset":12326,"endOffset":13971,"count":0}],"isBlockCoverage":false},{"functionName":"ExportNamedDeclaration","ranges":[{"startOffset":13976,"endOffset":15671,"count":0}],"isBlockCoverage":false},{"functionName":"ExportAllDeclaration","ranges":[{"startOffset":15676,"endOffset":16024,"count":0}],"isBlockCoverage":false},{"functionName":"addImport","ranges":[{"startOffset":16029,"endOffset":16603,"count":0}],"isBlockCoverage":false},{"functionName":"addExport","ranges":[{"startOffset":16605,"endOffset":17653,"count":0}],"isBlockCoverage":false},{"functionName":"hasExport","ranges":[{"startOffset":17655,"endOffset":17793,"count":0}],"isBlockCoverage":false},{"functionName":"safeRename","ranges":[{"startOffset":17795,"endOffset":18428,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsIdentifier","ranges":[{"startOffset":18430,"endOffset":18618,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1790","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/loadSourceMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2352,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2350,"count":1}],"isBlockCoverage":true},{"functionName":"loadSourceMap","ranges":[{"startOffset":328,"endOffset":2314,"count":2},{"startOffset":490,"endOffset":2292,"count":1},{"startOffset":688,"endOffset":794,"count":0},{"startOffset":1177,"endOffset":1225,"count":0},{"startOffset":1361,"endOffset":2135,"count":0},{"startOffset":2142,"endOffset":2288,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1434,"endOffset":2036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1791","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/utils/isAccessedVarChanged.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":354,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":352,"count":1}],"isBlockCoverage":true},{"functionName":"isAccessedVarChanged","ranges":[{"startOffset":133,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1792","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/distributable/library/asset.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":784,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":782,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":178,"endOffset":273,"count":1},{"startOffset":246,"endOffset":251,"count":0}],"isBlockCoverage":true},{"functionName":"Asset","ranges":[{"startOffset":320,"endOffset":398,"count":2}],"isBlockCoverage":true},{"functionName":"generate","ranges":[{"startOffset":402,"endOffset":718,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1793","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/sortBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1734,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1732,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1300,"endOffset":1701,"count":1},{"startOffset":1360,"endOffset":1380,"count":0},{"startOffset":1431,"endOffset":1488,"count":0},{"startOffset":1490,"endOffset":1515,"count":0},{"startOffset":1536,"endOffset":1595,"count":0},{"startOffset":1597,"endOffset":1634,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1794","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseOrderBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1260,"count":1}],"isBlockCoverage":true},{"functionName":"baseOrderBy","ranges":[{"startOffset":703,"endOffset":1226,"count":1},{"startOffset":827,"endOffset":839,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":903,"endOffset":1110,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":977,"endOffset":1033,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1142,"endOffset":1222,"count":2}],"isBlockCoverage":true}]},{"scriptId":"1795","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIteratee.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":961,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":959,"count":1}],"isBlockCoverage":true},{"functionName":"baseIteratee","ranges":[{"startOffset":463,"endOffset":924,"count":1},{"startOffset":708,"endOffset":923,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1796","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseMatches.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":776,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":774,"count":1}],"isBlockCoverage":true},{"functionName":"baseMatches","ranges":[{"startOffset":439,"endOffset":740,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1797","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsMatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1831,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1829,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsMatch","ranges":[{"startOffset":712,"endOffset":1795,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1798","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsEqual.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1085,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1083,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsEqual","ranges":[{"startOffset":715,"endOffset":1049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1799","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseIsEqualDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3076,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3074,"count":1}],"isBlockCoverage":true},{"functionName":"baseIsEqualDeep","ranges":[{"startOffset":1506,"endOffset":3036,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1800","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_equalArrays.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2661,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2659,"count":1}],"isBlockCoverage":true},{"functionName":"equalArrays","ranges":[{"startOffset":909,"endOffset":2625,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1801","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_arraySome.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":660,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":658,"count":1}],"isBlockCoverage":true},{"functionName":"arraySome","ranges":[{"startOffset":395,"endOffset":626,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1802","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_equalByTag.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3812,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":3810,"count":1},{"startOffset":944,"endOffset":955,"count":0},{"startOffset":1011,"endOffset":1022,"count":0}],"isBlockCoverage":true},{"functionName":"equalByTag","ranges":[{"startOffset":1842,"endOffset":3777,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1803","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_mapToArray.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":427,"count":1}],"isBlockCoverage":true},{"functionName":"mapToArray","ranges":[{"startOffset":219,"endOffset":394,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1804","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_equalObjects.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2969,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":2967,"count":1}],"isBlockCoverage":true},{"functionName":"equalObjects","ranges":[{"startOffset":989,"endOffset":2932,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1805","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_getMatchData.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":639,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":637,"count":1}],"isBlockCoverage":true},{"functionName":"getMatchData","ranges":[{"startOffset":345,"endOffset":602,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1806","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_isStrictComparable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":480,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":478,"count":1}],"isBlockCoverage":true},{"functionName":"isStrictComparable","ranges":[{"startOffset":353,"endOffset":437,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1807","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_matchesStrictComparable.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":640,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":638,"count":1}],"isBlockCoverage":true},{"functionName":"matchesStrictComparable","ranges":[{"startOffset":358,"endOffset":592,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1808","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseMatchesProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1195,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1193,"count":1}],"isBlockCoverage":true},{"functionName":"baseMatchesProperty","ranges":[{"startOffset":739,"endOffset":1151,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1809","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/get.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":950,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":948,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":756,"endOffset":922,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1810","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseGet.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":682,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":680,"count":1}],"isBlockCoverage":true},{"functionName":"baseGet","ranges":[{"startOffset":386,"endOffset":650,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1811","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/hasIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":819,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":817,"count":1}],"isBlockCoverage":true},{"functionName":"hasIn","ranges":[{"startOffset":696,"endOffset":789,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1812","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseHasIn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":440,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":438,"count":1}],"isBlockCoverage":true},{"functionName":"baseHasIn","ranges":[{"startOffset":321,"endOffset":406,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1813","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/property.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":857,"count":1}],"isBlockCoverage":true},{"functionName":"property","ranges":[{"startOffset":724,"endOffset":826,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1814","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseProperty.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":426,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":424,"count":1}],"isBlockCoverage":true},{"functionName":"baseProperty","ranges":[{"startOffset":273,"endOffset":389,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1815","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_basePropertyDeep.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":455,"count":1}],"isBlockCoverage":true},{"functionName":"basePropertyDeep","ranges":[{"startOffset":314,"endOffset":416,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1816","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseMap.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":734,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":732,"count":1}],"isBlockCoverage":true},{"functionName":"baseMap","ranges":[{"startOffset":432,"endOffset":702,"count":1},{"startOffset":557,"endOffset":561,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":587,"endOffset":681,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1817","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":521,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":519,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1818","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseForOwn.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":522,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":520,"count":1}],"isBlockCoverage":true},{"functionName":"baseForOwn","ranges":[{"startOffset":394,"endOffset":487,"count":0}],"isBlockCoverage":false}]},{"scriptId":"1819","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_createBaseEach.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":952,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":950,"count":1}],"isBlockCoverage":true},{"functionName":"createBaseEach","ranges":[{"startOffset":380,"endOffset":913,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":436,"endOffset":910,"count":1},{"startOffset":497,"endOffset":529,"count":0},{"startOffset":564,"endOffset":616,"count":0},{"startOffset":679,"endOffset":687,"count":0},{"startOffset":756,"endOffset":765,"count":0},{"startOffset":766,"endOffset":784,"count":4},{"startOffset":787,"endOffset":883,"count":3},{"startOffset":853,"endOffset":877,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1820","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_baseSortBy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":609,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":607,"count":1}],"isBlockCoverage":true},{"functionName":"baseSortBy","ranges":[{"startOffset":398,"endOffset":574,"count":1},{"startOffset":510,"endOffset":556,"count":3}],"isBlockCoverage":true}]},{"scriptId":"1821","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_compareMultiple.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1665,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1663,"count":1}],"isBlockCoverage":true},{"functionName":"compareMultiple","ranges":[{"startOffset":685,"endOffset":1625,"count":2},{"startOffset":1018,"endOffset":1174,"count":1},{"startOffset":1085,"endOffset":1162,"count":0},{"startOffset":1163,"endOffset":1166,"count":0},{"startOffset":1178,"endOffset":1624,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1822","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/node_modules/lodash/_compareAscending.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1409,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1407,"count":1}],"isBlockCoverage":true},{"functionName":"compareAscending","ranges":[{"startOffset":333,"endOffset":1368,"count":2},{"startOffset":398,"endOffset":1354,"count":1},{"startOffset":794,"endOffset":882,"count":0},{"startOffset":883,"endOffset":939,"count":0},{"startOffset":940,"endOffset":984,"count":0},{"startOffset":985,"endOffset":1011,"count":0},{"startOffset":1036,"endOffset":1072,"count":0},{"startOffset":1073,"endOffset":1088,"count":0},{"startOffset":1089,"endOffset":1105,"count":0},{"startOffset":1107,"endOffset":1195,"count":0},{"startOffset":1196,"endOffset":1252,"count":0},{"startOffset":1253,"endOffset":1297,"count":0},{"startOffset":1298,"endOffset":1324,"count":0},{"startOffset":1326,"endOffset":1350,"count":0},{"startOffset":1354,"endOffset":1367,"count":1}],"isBlockCoverage":true}]},{"scriptId":"1823","url":"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared%20Projects/parcel-plugin-pug/distributable/test/library/target/target.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7352,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":7350,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":338,"endOffset":3532,"count":1},{"startOffset":511,"endOffset":527,"count":0},{"startOffset":2628,"endOffset":2742,"count":0},{"startOffset":3113,"endOffset":3320,"count":0},{"startOffset":3422,"endOffset":3508,"count":0}],"isBlockCoverage":true},{"functionName":"newRequire","ranges":[{"startOffset":594,"endOffset":2097,"count":3},{"startOffset":652,"endOffset":1902,"count":2},{"startOffset":680,"endOffset":1673,"count":0}],"isBlockCoverage":true},{"functionName":"localRequire","ranges":[{"startOffset":1941,"endOffset":2022,"count":1}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":2028,"endOffset":2093,"count":1},{"startOffset":2082,"endOffset":2086,"count":0}],"isBlockCoverage":true},{"functionName":"Module","ranges":[{"startOffset":2101,"endOffset":2213,"count":2}],"isBlockCoverage":true},{"functionName":"newRequire.register","ranges":[{"startOffset":2405,"endOffset":2525,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3181,"endOffset":3228,"count":0}],"isBlockCoverage":false},{"functionName":"parcelRequire.source.pug","ranges":[{"startOffset":3549,"endOffset":6832,"count":1}],"isBlockCoverage":true},{"functionName":"_default","ranges":[{"startOffset":3693,"endOffset":6830,"count":1}],"isBlockCoverage":true},{"functionName":"pug_escape","ranges":[{"startOffset":3723,"endOffset":4356,"count":1},{"startOffset":3825,"endOffset":4347,"count":0},{"startOffset":4348,"endOffset":4351,"count":0}],"isBlockCoverage":true},{"functionName":"pug_rethrow","ranges":[{"startOffset":4394,"endOffset":5078,"count":0}],"isBlockCoverage":false},{"functionName":"templateFn","ranges":[{"startOffset":5082,"endOffset":6798,"count":1},{"startOffset":5278,"endOffset":5283,"count":0},{"startOffset":6622,"endOffset":6670,"count":0},{"startOffset":6687,"endOffset":6766,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5292,"endOffset":6560,"count":1},{"startOffset":6226,"endOffset":6230,"count":0}],"isBlockCoverage":true},{"functionName":"parcelRequire.source.js../source.pug","ranges":[{"startOffset":6850,"endOffset":7256,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7036,"endOffset":7081,"count":1}],"isBlockCoverage":true},{"functionName":"_interopRequireDefault","ranges":[{"startOffset":7151,"endOffset":7254,"count":1},{"startOffset":7227,"endOffset":7251,"count":0}],"isBlockCoverage":true}]},{"scriptId":"1824","url":"","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1579,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":1578,"count":1}],"isBlockCoverage":true},{"functionName":"template","ranges":[{"startOffset":28,"endOffset":1559,"count":1},{"startOffset":182,"endOffset":187,"count":0},{"startOffset":1407,"endOffset":1463,"count":0},{"startOffset":1474,"endOffset":1541,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":200,"endOffset":1338,"count":1},{"startOffset":1039,"endOffset":1043,"count":0}],"isBlockCoverage":true}]}],"timestamp":9672.158819,"source-map-cache":{"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/distributable/test/library/asset.test.js":{"lineLengths":[13,0,71,0,50,0,50,0,63,0,95,0,186,0,743,0,83,83,19,36,27,21,19,17,5,37,25,7,29,119,0,92,0,14,17,4,60,3,38],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/source/test/library/asset.test.js"],"names":["test","bundler","Bundler","require","resolve","__dirname","bundle","default","bundledContentFn","unbundledContentFn","Pug","compileFile","data","is"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,kBAAK,gDAAL,EAAuD,MAAOA,IAAP,IAAgB;AAErE,MAAIC,OAAO,GAAG,IAAIC,sBAAJ,CAAYC,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAAZ,EAAmD;AAC/D,aAAS,KADsD;AAE/D,cAAW,GAAEC,SAAU,SAFwC;AAG/D,eAAW,WAHoD;AAI/D,cAAU,MAJqD;AAK/D,aAAS,KALsD;AAM/D,gBAAY;AANmD,GAAnD,CAAd;AASA,QAAM,oBAAOJ,OAAP,CAAN;AACA,QAAMA,OAAO,CAACK,MAAR,EAAN;AAEA,MAAI;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAAgC,yBAAaL,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAAb,kDAApC;;AACA,MAAIK,kBAAkB,GAAGC,aAAIC,WAAJ,CAAgBR,OAAO,CAACC,OAAR,CAAgB,qBAAhB,CAAhB,CAAzB;;AACA,MAAIQ,IAAI,GAAG;AAAE,YAAQ;AAAV,GAAX;AAEAZ,EAAAA,IAAI,CAACa,EAAL,CAAQL,gBAAgB,CAACI,IAAD,CAAxB,EAAgCH,kBAAkB,CAACG,IAAD,CAAlD;AAED,CApBD","sourcesContent":["import Bundler from 'parcel-bundler'\nimport Pug from 'pug'\nimport Test from 'ava'\n\nimport Plugin from '../../index.js'\n\nTest('import(require.resolve(\\'./target/target.js\\')', async (test) => {\n\n  let bundler = new Bundler(require.resolve('./source/source.js'), {\n    'cache': false,\n    'outDir': `${__dirname}/target`,\n    'outFile': 'target.js',\n    'target': 'node',\n    'watch': false,\n    'logLevel': 0\n  })\n\n  await Plugin(bundler)\n  await bundler.bundle()\n\n  let { default: bundledContentFn } = await import(require.resolve('./target/target.js'))\n  let unbundledContentFn = Pug.compileFile(require.resolve('./source/source.pug'))\n  let data = { 'name': 'Bob' }\n\n  test.is(bundledContentFn(data), unbundledContentFn(data))\n\n})\n"],"file":"asset.test.js","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/JSConcatPackager.js":{"lineLengths":[39,29,51,44,52,37,41,34,68,0,28,54,49,2,0,28,53,48,2,0,41,17,33,28,36,37,18,30,25,36,0,43,94,66,65,74,9,0,10,20,44,37,59,9,39,33,7,0,39,0,49,12,41,48,11,35,16,9,7,5,0,33,51,5,0,28,10,33,63,9,56,7,5,0,33,3,0,17,48,3,0,13,21,3,0,26,28,13,5,0,34,0,53,63,68,0,16,27,36,9,0,33,7,5,3,0,23,51,30,0,15,13,5,0,42,29,67,43,5,0,30,30,3,0,30,39,33,52,5,0,14,3,0,25,38,13,5,32,31,0,88,79,8,46,58,7,13,5,0,45,24,60,31,58,11,9,0,58,14,94,92,75,12,41,39,54,46,11,40,54,9,7,5,0,79,15,37,25,12,11,8,0,29,27,3,0,21,17,19,5,0,45,40,5,0,51,39,0,73,65,83,54,48,12,25,66,6,0,44,22,3,0,28,64,16,5,0,24,0,28,52,35,54,38,7,5,0,19,8,46,58,7,22,12,62,5,0,33,54,5,0,24,43,43,7,42,28,75,9,5,0,37,49,36,47,67,48,46,11,9,7,5,0,62,34,76,55,5,0,41,69,5,0,22,3,0,33,18,19,17,34,59,66,42,45,72,79,53,13,28,24,38,65,17,16,13,18,54,28,24,38,41,24,47,29,19,17,16,13,11,9,49,89,23,46,80,61,69,18,32,35,18,41,34,13,11,10,14,24,7,5,0,46,15,75,6,0,37,35,9,24,67,30,33,16,35,34,11,10,15,8,6,0,63,3,0,25,35,31,38,7,0,28,3,0,28,20,22,28,45,0,38,17,9,0,48,22,70,12,9,7,7,0,18,3,0,30,74,28,42,5,0,16,3,0,33,40,13,5,37,32,30,39,5,0,35,49,54,5,0,31,3,0,59,56,18,13,5,0,53,50,6,36,67,5,0,23,75,48,12,13,5,0,69,60,41,35,32,50,44,30,14,77,20,50,8,0,41,5,3,0,15,29,43,61,5,0,68,40,55,52,8,0,23,45,65,77,21,61,9,7,0,46,20,43,35,40,7,0,19,24,5,0,22,31,55,8,21,64,7,18,75,21,43,64,22,30,35,13,12,29,21,21,73,10,16,9,9,5,0,28,23,29,42,38,29,63,12,9,0,66,7,0,18,35,39,9,5,0,9,51,45,0,33,38,7,0,80,30,72,14,53,7,0,32,0,38,23,52,65,24,31,35,41,12,55,9,7,0,32,17,14,15,24,5,3,0,27,37,63,3,0,44,36,13,14,73,39,15,0,56,29,47,65,5,0,69,58,55,58,37,49,66,27,19,9,7,5,0,67,32,38,5,0,48,34,5,0,12,22,11,8,6,3,1,0,34,0],"data":null,"url":"${mapUrl}`;"},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/lib/index.js":{"lineLengths":[13,0,62,0,24,24,20,22,20,21,17,33,23,32,40,40,52,32,36,32,34,56,30,3,0,1,27,0,44,25,45,28,15,1,0,35,30,15,9,5,1,0,15,29,14,5,35,14,5,35,14,5,35,14,5,31,14,5,28,32,15,14,5,37,15,14,5,36,15,14,5,31,35,30,15,14,5,34,15,14,5,35,15,14,5,29,33,30,15,14,5,29,29,14,5,28,14,5,29,14,5,36,14,5,26,32,14,5,35,30,14,5,38,34,14,5,33,14,5,37,15,14,5,25,28,14,5,47,26,15,12,5,31,15,12,5,34,11,12,14,5,28,15,11,14,5,29,15,11,14,5,33,42,34,35,33,34,34,44,42,40,33,15,13,11,14,5,30,15,14,14,5,29,30,33,15,14,26,5,33,32,14,5,33,39,39,38,14,5,28,11,14,5,32,14,5,37,30,10,5,40,14,5,27,36,14,5,35,34,15,11,14,5,29,29,33,34,10,5,31,30,15,14,5,32,14,5,34,14,5,34,14,5,38,14,5,35,36,14,5,32,14,5,32,14,5,34,14,5,28,15,12,5,44,15,12,5,36,15,11,14,5,32,15,11,14,5,36,15,11,14,4,2,0,31,33,34,31,38,31,38,31,35,67,38,37,37,41,42,38,39,41,47,48,92,66,58,68,68,48,96,62,46,63,67,64,40,40,40,90,90,90,64,64,30,0,43,53,26,17,12,12,14,14,18,0,12,19,3,1,55,29,17,16,16,16,12,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,12,19,3,1,0,16,26,21,22,3,0,1,22,27,23,19,3,0,1,37,15,20,12,27,0,68,11,37,3,0,48,1,0,18,17,35,45,3,0,19,34,3,0,33,70,3,0,1,0,22,33,1,0,41,23,60,46,45,3,0,69,50,13,5,0,27,28,0,43,34,5,0,31,13,5,0,65,83,48,12,7,5,0,35,0,65,59,0,42,49,0,31,50,14,9,14,50,37,9,0,51,7,5,0,57,0,41,57,60,40,5,3,0,24,64,42,54,0,49,61,55,41,14,47,7,34,38,0,94,56,44,7,5,0,62,31,5,0,65,30,5,0,57,0,21,26,32,71,16,0,29,77,16,0,30,70,16,0,31,69,16,0,28,75,16,7,242,84,5,0,20,38,126,59,43,16,71,65,80,20,13,11,9,7,55,63,45,67,89,54,18,13,11,9,0,52,60,42,9,14,65,63,18,11,9,0,71,0,37,49,9,0,63,0,44,34,9,7,5,0,42,0,27,121,46,14,105,0,44,84,84,16,51,9,7,5,0,21,3,0,1,0,37,92,115,87,86,83,63,66,82,76,92,68,63,61,70,188,106,139,71,64,127,66,72,90,55,60,56,55,97,85,106,41,108,48,95,50,64,61,85,91,48,47,46,57,71,62,45,45,60,34,56,77,67,61,97,67,55,101,58,47,87,68,114,83,93,94,54,55,51,54,55,129,109,83,90,35,70,59,122,99,102,85,96,132,127,57,176,180,182,68,68,140,74,57,58,60,103,77,38,165,65,70,174,178,180,67,126,64,83,47,91,98,66,87,180,58,73,43,121,69,83,106,74,74,84,98,137,46,56,53,48,64,81,67,80,3,0,42,31,12,303,15,3,0,40,72,3,0,54,49,107,38,10,9,23,3,0,33,41,37,0,37,57,17,12,16,5,3,0,1,0,33,99,1,0,54,28,12,9,6,21,0,9,41,18,0,48,18,14,11,6,16,3,0,35,72,49,46,16,3,0,29,47,3,0,30,45,72,92,46,48,111,61,92,3,0,31,38,28,3,0,26,33,40,12,35,5,3,0,35,24,51,29,0,50,34,56,14,56,7,84,62,5,3,0,98,24,27,41,150,11,14,0,14,97,5,3,0,61,22,13,5,0,68,3,0,26,30,0,239,3,0,25,50,40,34,21,3,0,56,63,82,54,27,3,0,94,106,0,32,58,35,5,0,32,3,0,38,30,21,24,57,0,24,63,0,24,63,0,23,45,0,23,45,0,24,46,0,14,56,5,3,0,49,69,30,22,16,3,0,62,61,58,3,0,104,36,30,118,41,25,26,62,39,3,0,73,93,0,15,29,53,29,5,0,16,3,0,81,101,0,15,25,29,5,0,16,3,0,22,33,36,18,5,0,36,3,0,50,53,73,29,71,12,59,5,3,0,40,47,0,40,37,38,28,25,48,28,5,0,16,3,0,55,20,13,5,0,62,3,0,21,28,0,24,34,29,14,0,36,101,45,54,33,9,0,14,5,0,16,3,0,27,47,0,43,28,5,0,16,3,0,3,0,18,55,23,27,41,29,3,0,1,17,45,45,45,45,45,68,55,54,2,0,71,40,34,11,3,0,37,0,81,35,3,0,39,2,0,48,22,0,31,183,21,5,3,0,35,0,30,34,3,2,0,50,106,32,2,0,48,49,32,2,0,50,133,94,32,2,0,44,0,82,364,56,10,55,3,0,33,2,0,45,47,29,10,46,3,0,33,2,0,40,33,2,0,4315,2645,85,106,62,1815,929,0,35,20,0,60,18,33,22,33,3,0,15,1,0,34,36,30,36,31,0,23,83,3,0,57,1,33,36,29,30,30,36,31,0,23,78,3,0,103,1,0,23,329,109,35,2,50,61,69,41,57,1,47,76,1,45,46,1,51,84,1,26,30,1,0,52,41,39,1,0,178,34,110,198,58,81,102,80,137,127,207,126,145,123,111,156,148,108,155,207,99,100,66,128,133,89,78,107,59,140,91,107,56,88,94,90,82,104,89,106,54,3,0,38,248,1,0,34,68,1,0,38,87,1,0,27,30,28,22,31,2,0,32,19,19,0,41,59,3,0,24,1,0,51,52,31,26,32,3,0,22,77,3,0,22,51,3,0,26,94,42,31,7,5,0,40,3,0,23,40,60,0,55,33,43,35,14,50,7,5,0,37,3,0,33,40,29,36,38,34,16,3,0,24,34,42,39,30,42,36,0,89,75,5,0,33,42,32,56,12,56,5,3,0,42,40,29,29,20,25,0,35,36,44,12,34,36,0,37,46,7,5,0,29,3,0,31,16,43,49,3,0,34,16,48,38,43,0,33,73,12,37,5,0,30,51,33,29,30,88,87,73,30,21,52,3,0,40,35,46,45,49,40,49,46,34,56,14,27,78,9,0,49,7,43,50,45,51,48,50,43,72,12,30,5,3,0,34,16,60,66,21,52,3,0,32,34,0,35,37,12,39,5,0,50,36,30,0,39,38,0,38,20,0,71,94,9,0,35,14,89,57,7,0,26,5,0,22,30,48,20,32,33,40,34,79,9,0,20,63,30,82,9,0,28,79,9,0,26,31,7,7,35,50,3,0,57,31,0,35,68,67,14,48,25,7,0,26,63,12,135,39,52,103,7,0,125,69,31,67,166,40,0,55,44,33,35,11,0,44,22,9,5,0,28,3,0,39,16,37,57,21,57,3,0,35,16,34,35,16,3,0,36,16,41,36,16,3,0,35,16,37,53,3,0,48,65,96,0,33,69,12,33,5,0,22,25,21,0,35,10,60,50,5,0,38,18,0,10,59,38,5,0,42,18,0,10,63,38,5,0,42,27,24,25,26,25,7,3,0,31,34,54,0,33,71,12,33,5,0,53,3,0,28,37,57,3,0,28,23,76,5,3,0,50,41,112,3,0,55,76,41,3,0,28,62,70,0,33,69,12,33,5,0,57,21,46,3,0,38,34,61,70,0,33,69,12,33,5,0,26,0,34,66,5,0,25,0,19,62,5,0,21,47,3,0,50,39,34,46,60,27,29,38,0,31,25,42,12,27,66,7,5,0,50,3,0,39,40,34,21,29,0,66,18,12,24,5,0,32,0,8,73,38,0,34,31,7,0,36,33,7,38,0,31,34,61,3,0,41,34,40,21,29,31,64,42,0,37,45,0,36,33,7,5,0,58,31,34,63,3,0,50,34,40,21,29,31,0,37,68,0,36,33,7,5,0,31,34,63,3,0,28,34,39,22,0,35,10,60,38,5,0,42,25,24,25,24,25,7,60,3,0,32,113,3,0,56,27,0,48,50,49,12,21,38,5,0,32,49,29,54,3,0,51,27,48,32,32,0,61,25,28,99,12,26,0,37,29,7,0,51,5,0,59,3,0,38,21,21,31,0,33,69,5,0,30,0,70,58,0,38,33,7,5,0,35,52,5,0,30,54,59,3,0,51,39,27,62,59,3,0,23,16,15,16,15,16,6,40,29,39,34,30,28,33,17,14,24,0,52,35,33,19,12,32,30,20,5,0,28,0,35,27,28,30,36,0,53,43,0,82,22,40,30,9,7,0,55,43,0,82,22,26,9,7,0,48,0,37,33,38,9,0,39,25,44,11,0,93,16,93,9,70,33,38,9,0,23,42,9,0,92,14,26,0,67,45,0,113,36,24,11,9,0,166,0,37,25,49,16,51,9,7,0,37,0,86,79,7,5,0,26,0,22,34,5,0,67,34,15,3,0,102,35,138,0,27,27,81,35,77,9,0,23,65,9,0,20,7,0,25,77,7,0,31,36,7,0,21,62,7,0,43,63,12,51,29,38,23,27,0,63,27,0,33,38,9,0,23,42,9,0,101,0,47,49,9,14,47,28,0,39,26,9,0,53,33,7,0,31,57,5,3,0,41,55,33,80,0,32,36,56,14,56,7,5,0,57,62,5,3,0,29,119,24,5,3,0,60,44,47,62,0,33,57,33,58,63,5,0,16,3,0,48,54,31,76,0,33,71,5,0,58,3,0,25,34,31,48,57,3,0,24,34,20,32,0,73,44,44,31,5,0,32,56,3,0,32,20,25,30,34,32,0,64,36,0,37,24,7,0,55,12,44,5,0,21,29,41,54,3,0,44,62,21,26,31,54,3,0,44,20,0,70,53,0,38,33,7,5,0,35,47,5,0,12,13,10,6,3,0,59,22,17,58,0,18,21,62,0,19,60,0,19,60,0,20,61,0,20,61,0,20,61,0,14,41,65,5,3,0,26,38,41,34,12,13,30,64,0,30,22,45,47,9,0,96,0,24,41,29,28,28,28,28,11,0,27,41,29,27,28,28,29,11,0,26,46,41,62,20,0,28,39,73,36,51,35,31,36,35,49,65,9,0,14,0,24,20,0,71,39,48,78,18,33,11,9,0,28,48,38,64,0,145,38,24,18,34,11,9,0,19,98,16,51,9,0,33,29,34,33,47,35,63,0,24,82,0,23,24,45,20,69,0,25,39,22,0,38,115,11,0,41,115,11,0,86,9,0,32,0,21,82,0,24,82,0,23,20,59,0,23,20,66,0,23,20,59,0,22,20,61,0,14,51,44,45,46,22,53,9,0,5,0,28,3,0,26,38,41,43,0,70,56,30,34,34,58,5,0,16,3,0,25,34,0,35,55,61,12,41,5,3,0,40,45,0,66,66,69,23,45,33,61,5,0,17,3,0,31,34,31,59,24,0,40,65,5,0,96,3,0,24,34,30,50,24,0,39,56,5,0,89,3,0,19,40,29,43,34,85,16,3,0,42,69,40,43,42,65,12,34,5,3,0,29,34,58,51,3,0,62,105,0,34,60,35,5,0,17,3,0,29,57,97,27,3,0,23,24,0,36,34,0,37,31,14,32,7,0,18,44,5,0,20,3,0,66,30,110,5,0,58,3,0,60,34,40,94,101,5,0,59,3,0,37,90,36,18,43,70,36,18,49,12,59,0,74,31,7,0,18,5,3,0,40,37,36,151,45,9,42,40,47,42,47,44,55,9,7,5,0,54,3,0,34,198,3,0,30,193,19,5,0,44,3,0,34,63,36,18,49,5,0,48,3,0,70,49,0,27,97,0,25,70,20,7,0,54,25,5,0,32,37,51,54,9,17,12,45,68,0,39,47,0,31,27,41,0,50,43,9,0,10,21,16,50,68,7,0,39,70,7,0,41,27,64,10,21,16,50,7,5,0,51,45,29,21,33,133,58,3,0,35,64,47,44,47,12,17,12,6,3,0,50,25,22,0,32,31,0,52,54,43,16,28,9,0,30,57,36,35,7,5,0,26,63,26,5,0,97,3,0,31,20,0,112,51,41,22,3,0,49,15,0,74,66,23,49,12,23,5,0,18,3,0,44,58,0,35,27,34,5,0,34,64,37,67,65,5,0,16,3,0,33,250,13,5,0,40,3,0,21,41,0,89,51,5,0,16,3,0,32,36,31,47,18,0,37,55,35,20,14,56,7,45,31,47,18,62,48,31,47,18,54,70,32,47,18,60,12,48,5,3,0,23,55,0,76,31,18,18,18,5,0,17,3,0,44,33,72,0,53,27,5,0,24,3,0,47,54,0,33,69,5,3,0,70,33,0,39,65,15,7,0,28,5,0,77,0,25,86,56,32,80,7,5,3,0,26,59,0,39,47,67,48,45,35,30,12,42,5,3,0,33,24,24,27,26,31,20,0,30,9,50,53,124,13,9,0,28,45,0,27,48,0,29,74,0,34,37,0,37,32,50,0,30,38,26,0,14,21,5,3,0,22,45,64,12,38,5,3,0,48,47,31,0,73,53,7,5,0,62,3,0,51,47,22,0,31,0,182,76,7,5,0,20,3,0,78,45,82,5,3,0,28,34,59,5,0,42,3,0,35,34,59,5,0,49,3,0,19,59,3,0,21,62,3,0,34,76,3,0,94,26,45,5,0,27,0,33,71,5,0,101,3,0,67,26,45,5,0,27,0,33,71,5,0,74,3,0,25,32,0,52,76,5,0,42,18,47,0,10,38,59,0,37,75,16,37,9,0,67,38,5,3,0,49,46,68,29,15,3,0,114,24,43,5,0,25,23,0,33,64,55,5,0,121,0,25,59,5,3,0,39,35,40,67,7,0,28,5,0,34,60,5,0,33,17,3,0,47,67,0,115,78,5,0,16,3,0,34,35,50,5,0,44,3,0,72,120,81,59,3,0,42,30,20,0,36,22,43,20,5,0,15,34,0,54,34,7,0,91,20,31,7,5,0,56,3,0,30,39,43,50,33,0,37,33,46,35,5,0,26,0,71,50,0,94,38,49,45,14,40,36,49,7,99,54,47,0,37,49,14,25,55,7,12,23,38,34,53,5,0,53,63,0,52,80,5,0,52,80,5,0,67,80,5,0,81,72,3,0,45,27,0,69,69,5,0,52,3,0,26,33,0,34,62,37,5,3,0,49,34,66,43,55,60,5,0,63,3,0,27,68,3,0,81,13,0,21,12,0,93,33,124,38,13,15,21,0,59,28,66,28,7,5,0,81,36,0,42,25,41,66,177,56,73,31,16,145,66,0,56,35,24,7,0,28,37,31,7,0,73,42,91,5,0,95,3,0,20,34,42,68,45,42,96,62,57,56,24,9,37,54,107,5,0,34,3,0,22,63,3,0,44,74,27,12,53,5,3,0,55,93,13,5,0,43,3,0,50,121,3,0,54,111,18,56,25,78,53,95,39,121,60,106,59,0,23,37,26,7,0,24,38,27,7,0,40,5,0,68,3,0,69,75,48,0,20,35,20,7,0,18,56,25,70,32,78,27,51,79,56,25,42,81,34,80,70,83,9,0,24,56,27,7,5,0,83,3,0,27,21,0,60,92,5,0,31,34,3,0,57,54,35,39,60,3,0,31,59,0,66,40,26,23,13,5,0,38,3,0,28,59,0,39,40,13,5,0,35,3,0,32,56,0,36,69,5,0,20,3,0,22,67,38,60,7,0,38,47,39,13,5,0,36,65,0,23,80,7,0,31,13,5,0,29,3,0,21,11,9,19,38,0,86,34,5,0,71,75,0,35,43,5,0,117,44,5,0,35,39,5,0,17,3,0,30,57,0,21,74,5,3,0,49,13,14,6,86,3,0,39,13,14,6,73,88,3,0,41,13,14,6,78,3,0,46,12,6,71,3,0,41,13,16,6,163,3,0,46,13,17,14,6,23,0,27,21,20,20,69,14,0,20,68,14,0,14,69,5,0,72,3,0,48,13,14,6,85,3,0,59,12,6,84,3,0,24,38,0,80,0,30,21,9,80,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,24,9,79,0,28,20,29,33,28,14,11,0,18,28,25,12,9,0,23,24,9,53,0,28,20,30,33,28,14,11,0,18,28,25,12,9,0,14,16,26,23,10,5,3,0,23,33,42,67,19,9,6,12,9,10,6,3,0,65,11,18,16,0,32,13,5,0,40,63,5,3,0,19,13,16,6,32,21,25,24,24,26,6,0,39,42,13,11,12,35,33,0,30,17,7,0,38,55,19,20,11,7,0,38,57,19,20,11,7,0,32,23,17,21,18,8,25,0,26,23,11,81,41,90,18,11,0,22,11,80,41,88,18,11,0,22,11,80,41,88,18,11,0,23,11,80,11,0,20,11,35,29,81,22,0,28,80,22,0,22,98,13,11,7,0,38,33,7,5,0,19,3,0,63,12,6,42,30,47,32,69,62,46,79,18,11,7,0,30,12,63,45,79,18,11,7,0,32,5,3,0,29,12,6,35,36,71,19,28,11,7,0,13,13,21,18,0,98,65,19,29,11,7,0,19,5,0,16,3,0,22,13,11,6,57,14,7,30,42,15,18,7,0,27,21,33,46,34,56,0,20,33,45,34,55,0,20,33,100,18,11,34,55,0,20,48,34,55,0,14,9,31,30,38,59,12,0,36,57,55,55,63,0,67,27,45,104,22,15,38,59,72,124,56,75,25,42,17,13,0,50,38,60,72,126,57,74,25,42,17,13,0,49,38,59,18,65,22,15,27,11,9,5,3,0,34,38,17,53,24,23,7,52,3,0,27,173,37,12,36,5,3,0,3,0,18,17,11,17,10,10,17,18,17,18,19,16,19,17,16,17,17,18,16,16,16,17,16,19,17,17,18,18,17,19,18,17,17,18,19,19,19,19,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,18,19,19,19,18,17,19,18,18,19,19,18,19,17,18,18,19,19,19,18,17,19,19,18,17,16,19,19,19,18,19,17,19,19,19,19,18,17,19,18,17,18,18,19,19,17,17,17,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,18,16,20,16,16,16,18,18,17,18,18,20,17,16,18,17,18,19,15,15,15,20,15,16,19,18,16,20,16,16,16,18,21,18,16,17,17,19,17,16,16,16,18,18,18,18,18,18,18,18,19,19,17,19,19,18,18,19,19,18,18,17,18,19,17,18,20,17,17,17,17,17,18,17,17,17,17,17,19,17,18,18,18,17,18,15,17,16,18,19,18,17,18,16,16,15,16,16,16,19,16,17,18,15,18,15,15,16,16,17,17,17,18,19,17,17,18,18,19,19,17,17,16,19,18,19,17,2,0,35,31,33,82,77,78,87,54,130,3,47,48,62,41,42,18,3,50,18,3,45,0,47,42,42,33,2,0,53,39,0,85,29,66,10,34,3,2,0,29,103,1,0,38,40,23,3,0,44,58,3,0,46,91,3,0,62,1,0,51,18,17,36,0,14,42,77,7,0,55,0,19,16,17,52,54,31,57,13,0,46,11,0,62,54,0,16,62,38,38,16,0,16,30,64,45,40,18,29,11,0,7,5,3,0,33,53,12,21,0,68,23,42,12,36,5,0,25,42,15,3,0,24,17,38,0,14,42,77,7,0,55,30,0,22,60,36,36,33,60,42,36,14,25,7,5,0,58,47,3,0,19,17,18,15,40,38,0,58,40,0,23,29,31,32,0,39,63,13,18,32,0,43,63,13,11,16,33,9,0,14,7,0,16,5,0,18,32,17,5,0,18,3,0,17,11,33,0,8,51,48,0,84,3,0,24,34,0,36,35,41,42,12,24,5,0,16,50,3,0,28,38,41,43,44,54,26,42,54,3,0,25,38,41,45,0,44,18,5,0,33,59,28,51,61,5,0,16,3,0,28,13,0,30,24,32,20,54,0,60,61,9,0,20,0,29,24,36,0,14,74,5,3,0,29,83,96,3,0,29,16,45,30,51,3,0,37,35,55,12,47,5,0,30,59,3,0,23,34,0,33,34,46,32,57,5,0,46,75,49,3,0,48,54,0,38,35,57,5,0,43,54,3,0,41,26,0,70,48,5,0,33,45,33,54,3,0,48,54,0,38,35,57,5,0,43,33,54,3,0,41,54,24,77,30,0,38,26,34,33,40,43,24,0,40,81,29,13,0,70,18,0,29,48,18,0,28,13,44,26,0,47,62,22,70,15,0,20,13,0,18,36,9,7,0,70,78,77,119,78,100,121,9,7,5,0,37,44,44,12,43,43,5,0,29,0,33,81,5,0,115,3,0,21,38,41,16,54,3,0,38,36,60,47,36,88,42,36,12,54,5,3,0,26,71,38,0,37,33,5,0,67,36,34,7,0,24,25,49,7,0,71,40,7,5,0,100,23,49,5,0,40,3,0,27,35,43,0,42,57,49,55,14,38,7,0,36,75,37,46,37,12,43,5,3,0,3,0,13,22,18,22,24,23,3,0,1,20,32,25,38,43,23,29,3,0,20,63,3,0,20,61,3,0,26,68,3,0,17,61,3,0,28,64,3,0,29,64,3,0,22,28,3,0,16,50,3,0,10,26,3,0,37,93,3,0,39,36,0,80,68,0,46,35,14,33,7,0,45,45,7,46,61,35,70,29,45,43,7,5,0,55,41,5,3,0,35,55,41,5,3,0,60,61,60,5,3,0,49,55,0,43,116,5,0,44,121,5,0,193,3,0,24,167,51,5,3,0,18,55,3,0,21,52,39,0,36,21,7,5,3,0,22,52,39,0,99,21,7,5,3,0,1,0,37,24,19,20,20,25,22,33,3,0,1,0,51,22,38,3,0,39,38,0,50,43,42,13,5,0,36,0,39,45,70,45,7,0,29,5,0,65,76,65,3,0,49,41,45,67,61,36,7,0,18,5,0,77,45,49,14,21,7,5,0,73,18,5,0,51,3,0,24,124,33,5,3,0,1,0,20,26,26,27,34,17,21,3,0,16,28,3,0,10,22,3,0,18,47,3,0,18,51,3,0,18,51,3,0,19,52,3,0,1,46,71,1,0,21,18,46,3,0,11,1,0,20,11,35,3,1,0,32,76,78,87,48,56,84,98,80,86,102,85,98,85,144,101,69,79,86,104,127,3,0,37,18,15,28,0,19,32,0,18,31,0,17,30,0,18,31,0,18,31,0,18,31,0,18,31,0,21,34,0,19,32,0,12,23,3,1,0,58,21,34,3,0,20,34,3,0,34,16,210,3,0,37,34,23,5,0,38,0,117,22,5,0,21,3,0,48,14,40,62,27,0,59,67,7,0,32,5,3,0,28,19,25,25,40,0,35,40,0,31,42,0,39,38,5,0,35,3,0,35,22,0,44,34,5,0,18,3,0,44,78,3,0,65,22,0,14,42,14,7,0,37,0,28,25,7,0,27,0,34,17,7,0,42,14,7,0,26,33,7,0,23,5,0,18,3,0,69,26,20,36,14,35,7,5,0,65,0,18,34,12,33,5,0,18,3,0,23,34,31,30,0,36,75,5,0,41,30,0,30,52,5,0,33,56,5,0,49,3,0,41,40,0,33,48,25,60,56,5,0,18,3,0,26,34,50,0,66,56,5,0,52,3,0,33,16,43,29,60,52,3,0,25,34,16,47,3,0,22,34,31,0,36,47,12,51,5,0,48,3,0,26,34,53,62,53,52,3,0,30,33,42,5,3,0,27,34,0,66,18,12,24,5,0,124,63,3,0,35,49,18,41,5,0,16,3,0,43,60,63,30,65,0,30,88,41,88,5,3,0,36,67,147,92,7,0,21,7,3,0,32,33,23,5,3,0,38,44,38,39,3,0,37,16,59,3,0,34,109,23,5,0,32,38,53,30,32,27,49,41,38,53,3,0,52,55,25,0,76,29,48,40,58,12,31,45,51,47,40,62,5,3,0,23,34,0,61,77,5,0,33,34,18,0,63,84,14,52,66,7,5,0,58,52,0,14,41,17,5,0,40,65,3,0,24,34,51,50,3,0,30,30,87,30,19,3,0,27,16,0,34,43,5,0,40,18,5,0,38,19,5,0,16,0,33,19,5,0,16,33,3,0,32,34,53,60,52,3,0,23,34,30,0,36,39,18,40,48,27,5,0,32,59,32,0,36,39,18,34,42,27,5,0,48,21,30,49,3,0,22,34,125,36,46,50,35,76,75,7,7,48,3,0,29,37,40,18,51,0,71,48,7,0,53,5,0,36,0,35,58,45,65,5,0,16,3,0,30,34,30,45,30,56,3,0,42,34,0,39,30,5,0,44,39,3,0,28,34,0,27,32,23,26,26,25,26,38,0,16,34,7,9,0,50,3,0,32,34,51,0,46,90,5,0,32,50,3,0,40,51,0,67,56,12,25,5,3,0,25,30,22,23,23,9,149,0,70,42,24,47,11,0,45,9,0,24,21,24,23,24,45,0,25,39,40,45,0,80,36,11,0,48,56,9,0,14,0,23,57,0,25,39,0,25,40,0,24,126,0,26,39,0,24,47,0,27,49,5,0,28,3,0,30,42,0,71,39,48,32,36,52,14,48,31,44,36,60,7,5,0,16,3,0,33,34,36,29,61,0,34,50,5,0,51,3,0,42,39,25,25,15,0,14,60,5,3,0,22,34,35,43,71,75,48,3,0,33,87,146,3,0,72,23,38,0,31,27,0,34,43,7,0,46,25,41,5,0,16,3,0,37,132,3,0,30,128,3,0,29,33,18,5,0,110,3,0,26,60,18,18,5,0,35,32,18,0,37,39,30,46,30,9,0,20,7,0,18,5,0,37,32,18,0,37,41,30,48,30,9,0,20,7,0,18,5,0,17,3,0,42,16,0,65,18,5,0,38,117,20,7,0,37,20,0,38,22,9,7,5,0,17,3,0,53,32,33,31,83,0,47,74,0,54,47,49,30,71,16,43,9,0,45,54,7,0,121,0,35,23,54,9,0,45,52,31,68,54,7,0,53,43,49,33,29,66,52,7,3,0,45,104,3,0,30,78,3,0,20,48,3,0,32,38,0,67,18,16,5,3,0,33,100,19,5,0,47,16,0,62,19,5,0,22,95,5,0,16,3,0,64,25,45,44,7,50,3,0,17,30,50,0,68,18,5,0,44,26,56,32,39,29,40,54,3,0,31,41,69,5,0,33,72,5,0,43,3,0,26,34,0,56,0,63,31,45,52,3,0,37,43,129,0,32,78,5,0,25,3,0,40,34,52,0,33,56,5,0,66,3,0,37,37,94,58,0,35,59,5,0,34,72,57,59,3,0,37,37,78,58,63,21,59,3,0,21,42,41,0,9,18,15,38,5,3,0,16,40,29,0,9,18,15,36,5,3,0,29,71,3,0,32,60,3,0,25,53,3,0,25,32,11,32,7,3,0,23,34,91,0,29,49,5,0,49,3,0,41,35,37,115,30,95,30,54,3,0,24,34,34,30,84,22,50,3,0,61,37,0,18,90,5,0,30,37,60,24,12,40,34,44,28,24,5,0,56,3,0,49,38,25,39,42,37,12,24,5,0,35,40,34,44,28,24,12,23,5,0,56,3,0,50,38,37,82,26,57,21,62,3,0,33,75,3,0,28,118,3,0,36,34,37,30,0,36,30,5,0,43,30,62,3,0,18,37,20,23,15,3,0,25,58,57,52,23,3,0,17,37,23,0,51,20,12,25,23,5,3,0,27,34,13,5,0,36,13,0,35,29,19,5,0,24,27,62,0,24,28,50,0,24,77,36,40,57,9,0,22,40,50,0,22,9,41,0,35,70,18,62,11,9,5,3,0,33,77,3,0,42,24,21,9,59,0,28,39,31,11,0,16,9,0,20,39,44,38,27,28,24,47,28,32,61,9,0,14,0,14,63,5,3,0,41,20,22,69,27,30,0,21,24,0,44,50,13,11,0,51,9,0,14,0,18,45,32,58,9,0,14,0,23,67,32,56,9,0,14,0,20,30,0,39,68,74,64,9,0,14,0,23,67,32,64,9,0,14,0,18,67,32,56,9,0,14,5,3,0,50,71,3,0,59,34,23,5,0,72,44,44,45,29,29,47,56,57,38,71,31,18,7,66,38,38,0,15,23,5,0,54,3,0,26,34,64,33,97,8,35,31,65,3,0,26,33,33,24,23,20,25,22,25,20,22,7,5,0,17,3,0,30,50,44,3,0,55,38,41,22,25,0,25,49,54,5,0,42,44,73,0,36,54,0,30,35,7,0,58,43,0,74,72,7,0,25,56,5,0,28,35,5,0,15,3,0,60,34,79,5,0,135,0,79,42,13,5,0,59,3,0,37,32,70,12,54,5,3,0,60,66,37,18,69,42,71,5,0,33,52,58,92,0,29,32,11,9,0,58,27,58,0,28,51,84,48,78,51,102,11,9,0,26,9,32,5,0,74,3,0,27,33,60,49,57,20,9,0,27,45,7,5,0,34,3,0,64,105,64,29,0,58,0,19,37,14,57,7,0,46,79,5,0,78,3,0,64,0,28,0,21,87,37,0,62,57,7,0,126,33,20,14,34,7,5,0,47,0,141,119,5,0,22,3,0,21,36,33,61,36,26,49,23,59,42,24,41,39,23,67,12,80,20,33,14,34,7,0,37,5,3,0,21,83,3,0,34,33,35,18,39,26,17,5,0,43,87,32,5,0,48,3,0,44,43,37,0,64,38,34,38,55,7,5,0,58,3,0,25,68,3,0,70,47,53,60,47,77,3,0,92,71,54,0,14,31,0,28,69,7,0,21,67,7,0,33,96,7,0,13,5,0,99,3,0,46,46,47,0,60,70,5,0,59,69,5,3,0,40,102,62,3,0,34,49,48,3,0,70,59,86,5,0,95,0,23,68,18,5,0,52,23,3,0,44,58,0,35,27,34,5,0,34,64,37,65,67,5,0,16,3,0,32,38,41,52,20,0,33,55,5,0,23,55,5,0,135,31,5,0,35,63,33,5,0,23,3,0,47,74,13,5,0,99,59,61,3,0,38,49,27,5,0,49,41,3,0,28,44,0,50,77,5,0,42,3,0,35,24,65,5,0,29,90,5,0,44,49,3,0,94,59,63,101,3,0,67,59,63,74,3,0,25,32,0,52,61,5,0,43,65,5,3,0,36,59,61,43,3,0,45,59,61,52,3,0,26,33,0,64,27,5,0,49,0,15,36,37,5,3,0,49,34,53,5,0,63,3,0,29,69,0,14,12,17,0,40,33,72,38,13,15,21,0,59,28,66,28,7,5,0,83,45,5,0,23,40,42,26,0,52,51,0,94,16,7,0,104,62,7,0,43,18,14,58,0,15,37,77,48,5,0,54,33,22,5,0,21,35,24,5,0,67,38,27,5,0,71,40,91,137,3,0,40,59,41,12,56,5,3,0,20,34,45,82,75,26,9,33,0,27,56,38,7,5,0,34,3,0,39,35,40,60,7,0,28,5,0,49,42,33,17,3,0,22,24,34,66,0,33,40,0,28,33,29,61,20,0,14,40,5,3,0,78,24,34,15,0,33,88,15,0,28,33,29,87,15,0,14,77,15,5,3,0,22,30,23,42,0,14,40,5,3,0,38,33,56,0,37,62,44,20,7,0,54,5,0,52,3,0,19,59,3,0,21,88,3,0,30,50,0,115,80,5,0,16,3,0,26,60,48,12,42,5,3,0,30,47,31,26,0,26,36,55,16,0,30,31,51,57,18,75,11,0,16,7,5,0,48,3,0,29,57,97,27,3,0,42,47,31,0,75,66,7,5,0,20,3,0,22,63,3,0,27,68,3,0,29,69,3,0,41,33,87,61,5,0,55,3,0,45,70,40,105,55,3,0,3,0,41,18,3,60,34,40,36,18,61,46,61,37,56,5,3,0,41,76,37,68,3,0,26,74,49,5,0,48,3,0,19,84,3,0,21,86,3,0,27,66,3,0,22,84,3,0,19,67,3,0,22,84,36,18,5,0,44,3,0,29,64,44,3,0,40,80,58,5,0,34,24,62,18,47,55,5,0,21,26,53,3,0,16,85,3,0,21,86,3,0,45,70,16,30,60,0,22,100,30,46,23,69,43,14,58,7,12,55,5,0,31,93,39,3,0,21,60,61,0,65,27,25,76,61,5,0,43,39,37,77,35,3,0,30,37,41,0,52,97,22,9,7,5,0,44,3,0,42,56,18,5,0,64,3,0,21,11,16,13,0,58,88,5,0,28,33,3,0,21,60,61,25,0,65,73,23,56,5,0,56,34,57,36,0,32,69,64,5,0,34,43,21,54,3,0,23,91,3,0,3,0,59,22,35,48,36,29,0,35,64,61,50,0,39,28,9,7,0,40,5,3,0,19,72,3,0,3,0,35,33,32,32,12,29,5,5,1,49,41,32,32,12,29,5,5,0,40,29,3,0,14,1,58,54,35,41,50,89,5,0,100,0,41,296,61,69,5,3,0,71,67,3,0,80,76,3,0,137,151,3,0,47,103,0,60,184,5,3,0,146,162,3,1,22,9,6,7,13,14,14,2,51,0,24,23,28,15,35,36,37,33,32,14,19,16,16,40,22,2,27,21,0,96,33,79,3,0,17,1,0,13,17,21,31,24,40,30,40,39,28,24,36,32,32,28,25,34,25,6,27,44,21,31,23,23,23,31,30,27,36,17,23,26,22,19,17,30,32,26,24,44,28,29,29,34,26,3,0,17,89,37,53,3,0,17,65,3,0,21,30,35,0,60,26,26,0,46,26,7,0,23,5,0,17,3,0,1,0,39,34,2,66,43,48,24,2,43,47,103,87,130,13,22,27,29,29,25,64,3,0,1,37,31,12,21,29,29,23,31,29,3,0,20,49,28,30,3,0,10,28,33,0,32,46,7,5,0,43,47,49,53,21,3,0,13,27,18,18,12,19,5,3,0,15,36,3,0,15,27,33,28,16,29,28,21,16,3,0,20,52,3,0,28,35,49,32,3,0,23,56,3,0,21,31,68,38,0,51,88,27,5,0,21,3,0,16,61,3,0,15,41,84,35,38,51,0,40,34,13,5,0,71,0,19,21,12,68,5,3,0,58,21,51,18,19,15,47,6,53,38,29,3,0,22,46,33,61,79,29,33,14,0,83,27,59,5,0,33,120,3,0,30,33,46,64,0,39,64,51,7,5,0,33,140,3,0,15,48,55,0,19,16,17,15,27,16,0,16,65,29,11,0,16,18,18,27,31,48,16,0,16,62,20,38,20,0,20,38,20,0,20,25,11,0,16,0,16,33,29,18,23,11,0,7,5,3,0,26,36,49,37,27,27,56,3,0,26,63,13,5,0,39,48,0,35,79,5,0,74,42,0,76,176,7,0,25,43,14,45,7,0,26,12,35,5,3,0,19,59,0,35,28,13,5,0,74,26,39,12,23,34,5,3,0,21,55,23,24,13,5,0,59,0,22,37,12,36,5,3,0,27,62,55,32,33,24,0,62,49,5,0,62,56,16,3,0,31,55,18,57,47,0,37,14,55,28,5,0,38,14,26,5,0,31,3,0,28,59,0,24,61,39,14,76,7,0,13,5,0,23,24,41,15,7,0,61,77,100,9,0,42,15,7,0,60,77,99,9,0,44,15,7,5,0,22,37,13,5,0,72,3,0,21,59,0,22,37,12,41,5,3,0,28,59,0,24,202,32,25,25,15,7,0,37,13,5,0,22,37,12,38,5,3,0,25,59,17,0,24,85,0,64,46,15,7,0,42,13,5,0,159,30,23,23,13,5,0,22,15,5,0,42,3,0,27,59,0,22,94,13,5,0,37,26,36,13,5,0,58,3,0,24,59,60,0,44,25,39,14,50,7,62,26,42,12,23,39,5,3,0,26,19,14,29,15,0,14,25,39,15,0,14,25,39,15,0,14,25,37,15,0,14,25,38,15,0,14,100,79,103,11,0,46,30,16,27,43,9,0,15,0,14,25,41,15,0,15,100,79,104,11,0,44,30,16,27,41,9,0,15,0,15,25,39,15,0,14,97,46,16,27,40,9,0,15,0,14,34,15,0,14,25,42,15,0,14,9,65,0,44,37,19,11,0,44,36,19,11,0,43,36,19,11,9,0,14,14,14,14,14,14,14,14,14,31,15,0,14,14,30,15,0,14,31,15,0,14,14,41,15,0,15,14,38,15,0,14,31,15,0,14,14,38,15,0,14,14,35,15,0,14,14,37,15,0,15,38,15,0,14,25,35,15,0,14,36,15,0,14,24,15,0,14,38,26,17,9,0,5,0,105,3,0,24,72,27,32,3,0,16,33,25,0,14,42,66,7,0,51,0,31,66,7,0,20,24,14,25,25,43,26,44,16,9,0,30,7,0,23,5,0,60,21,18,0,42,46,62,0,40,38,77,9,65,75,14,14,7,0,23,19,5,0,36,23,17,7,3,0,59,33,129,222,24,18,0,67,57,14,0,47,26,65,65,0,53,81,122,81,11,0,35,87,11,0,27,19,9,7,0,23,29,30,29,34,24,14,23,7,0,25,53,18,82,30,18,25,16,16,9,7,0,23,34,5,0,95,18,5,0,17,3,0,26,33,25,24,36,0,22,74,5,0,55,0,22,60,5,0,23,23,22,5,0,68,71,5,0,19,79,42,13,5,0,37,3,0,29,33,24,25,37,0,54,53,5,0,83,0,16,30,60,7,0,65,22,36,7,5,0,53,0,32,23,23,21,51,5,0,50,53,0,39,25,7,0,84,21,51,5,0,80,81,0,30,83,7,5,0,22,60,5,0,23,53,62,7,0,23,22,5,0,68,71,5,0,77,0,19,42,13,5,0,59,37,3,0,33,53,13,0,21,39,110,23,0,45,29,62,16,22,9,7,12,56,5,0,16,3,0,21,17,38,0,14,42,77,7,0,55,30,0,22,60,43,36,46,25,29,46,33,77,14,25,7,5,0,58,40,3,0,19,17,36,32,0,14,42,79,7,0,55,0,88,80,26,32,49,19,18,29,46,19,11,9,0,60,71,15,7,0,22,60,51,0,31,33,16,25,9,0,36,33,60,25,0,21,18,63,31,13,0,18,24,18,0,18,43,18,9,0,29,46,36,14,25,7,5,3,0,31,39,55,21,0,17,15,20,0,15,20,0,15,9,66,66,9,0,15,9,58,67,9,0,15,20,0,14,20,0,15,24,0,15,20,0,14,59,27,9,0,14,46,29,0,16,16,18,0,14,14,25,22,9,0,14,35,45,82,34,44,0,28,45,42,11,0,48,61,0,63,29,26,43,68,20,54,13,11,0,44,9,0,39,5,3,0,46,35,53,0,21,27,65,14,37,7,5,0,13,3,0,15,18,35,33,36,0,42,56,0,33,47,54,25,29,38,61,40,96,0,62,73,19,9,0,25,45,0,27,38,75,11,0,44,9,0,36,14,14,7,5,0,63,3,0,20,63,3,0,14,34,50,0,82,72,5,0,33,3,0,25,39,0,39,81,5,3,0,26,37,0,88,18,5,0,112,28,5,0,90,87,5,0,145,18,5,0,36,47,5,0,90,19,5,0,40,18,5,0,35,3,0,27,33,15,0,85,37,45,34,12,47,5,3,0,1,0,36,28,22,48,21,3,0,20,67,3,0,29,39,0,41,43,20,7,0,56,64,5,0,17,3,0,24,32,18,12,46,5,3,0,22,90,3,0,41,44,145,3,0,31,39,49,3,0,23,59,3,0,35,66,3,0,24,93,3,0,27,85,3,0,22,61,3,0,15,68,3,0,21,49,3,0,48,51,49,5,3,0,55,44,76,5,0,74,3,0,27,32,70,29,84,5,0,16,3,0,31,46,70,28,116,5,3,0,36,114,76,5,0,37,76,5,3,0,47,25,16,6,0,9,40,32,26,9,0,62,37,30,16,15,58,24,25,19,10,7,0,14,13,20,22,23,23,8,21,35,28,0,41,16,21,16,23,25,19,10,7,0,34,16,33,22,24,24,19,10,7,0,18,5,3,0,56,43,11,22,17,28,67,0,31,39,5,0,27,60,5,3,0,27,144,3,0,1,24,17,30,26,3,0,1,0,12,33,19,21,17,39,79,87,3,0,13,31,35,0,60,26,0,95,33,7,5,0,19,3,0,1,0,36,15,65,3,0,25,36,3,0,25,56,3,0,26,90,3,0,38,0,21,19,23,49,30,16,3,0,45,23,30,51,3,0,90,19,26,49,3,0,50,78,3,0,1,0,47,105,2,0,36,22,34,0,34,0,127,58,0,93,77,7,5,0,24,24,27,26,31,14,0,30,36,0,94,27,0,42,36,62,0,133,60,11,9,0,14,0,28,38,14,0,27,9,43,36,36,33,16,9,0,29,35,120,14,0,34,36,73,9,0,40,29,37,14,0,37,41,14,5,0,16,3,0,50,39,131,40,58,40,12,30,5,3,0,48,30,0,14,37,0,66,14,75,34,34,31,0,138,37,9,0,31,61,9,0,14,7,5,0,35,30,0,16,31,0,41,43,9,7,5,0,20,3,0,51,20,3,0,55,57,0,50,32,0,70,49,7,5,3,0,54,34,16,99,50,3,0,22,34,16,44,48,3,0,22,30,26,9,40,22,74,55,9,0,24,49,5,0,34,3,0,70,20,21,0,30,18,22,14,33,7,0,50,24,35,14,46,78,48,27,14,14,30,0,67,84,9,0,38,49,9,0,76,7,5,0,16,3,0,55,42,44,73,0,28,35,5,0,15,3,0,39,17,3,0,47,47,44,43,41,54,21,41,54,3,0,125,24,24,150,150,9,0,27,38,0,34,60,18,37,11,9,0,56,68,9,0,41,69,9,0,14,0,30,40,78,9,0,14,0,27,101,43,112,110,9,0,14,0,26,95,43,0,21,111,11,9,0,14,0,31,83,14,0,25,81,14,0,37,95,14,0,14,9,141,9,5,3,0,31,91,82,5,3,0,30,34,47,59,14,48,7,5,3,0,25,58,3,0,36,53,3,0,1,0,43,61,107,13,5,0,25,66,0,31,21,59,15,7,0,26,34,55,56,11,16,62,9,7,0,27,5,3,0,19,27,0,59,32,5,0,36,37,21,40,0,33,24,5,0,40,36,16,3,0,46,38,41,66,0,34,56,32,0,37,80,7,0,46,57,5,0,16,3,0,81,38,41,0,37,36,41,0,29,69,9,0,20,14,39,7,5,0,28,0,30,34,12,51,33,5,0,61,53,5,0,87,0,25,65,5,0,35,56,40,31,0,31,47,7,0,53,47,7,0,33,44,45,14,25,7,0,67,49,7,0,74,18,47,59,37,60,5,0,16,3,0,70,38,41,57,62,0,85,18,5,0,76,83,3,0,70,35,56,23,48,31,51,60,5,0,16,3,0,43,38,41,57,59,0,85,18,5,0,65,18,5,0,64,3,0,64,37,0,60,27,42,0,73,22,9,0,66,25,33,0,161,92,9,0,35,74,56,0,36,48,39,64,30,40,9,0,20,0,106,98,95,11,9,0,63,94,39,0,135,86,9,0,81,7,5,0,16,3,0,40,38,41,0,17,26,71,23,58,116,15,0,24,62,62,15,9,0,14,61,5,3,0,44,38,41,117,3,0,40,62,31,40,36,46,39,25,0,38,46,7,0,18,45,60,0,19,80,67,34,0,40,61,137,67,9,7,0,84,5,0,38,41,61,76,0,67,56,39,26,27,70,18,55,5,0,16,3,0,44,38,41,57,57,0,85,18,5,0,58,3,0,54,19,33,55,17,6,0,8,72,0,34,48,7,0,75,36,66,26,0,16,3,0,60,50,56,25,43,24,104,5,0,25,0,40,50,0,55,26,20,7,0,18,5,0,46,0,115,56,25,91,31,0,49,43,64,9,0,83,7,0,21,36,7,0,38,33,65,14,57,7,54,74,46,46,47,31,31,18,54,25,0,21,29,80,14,149,7,0,65,0,79,26,98,46,42,42,14,50,66,0,89,44,9,7,0,68,18,45,81,12,24,18,5,3,0,81,54,20,42,59,0,36,69,5,0,61,3,0,30,208,3,0,40,40,40,46,7,0,69,140,14,95,42,0,45,74,11,9,7,5,0,89,3,0,106,20,24,21,80,50,0,30,18,22,14,33,0,32,69,95,11,0,29,82,11,0,22,16,9,7,0,57,43,7,0,125,16,40,5,0,80,24,5,0,74,16,3,0,27,65,3,0,49,20,0,29,131,16,3,0,21,38,41,80,3,0,38,59,72,13,0,30,24,32,20,0,112,64,85,64,9,0,97,65,9,0,46,0,25,32,20,0,36,52,9,0,40,79,9,0,47,0,23,32,20,55,0,22,9,34,53,44,0,113,55,0,73,48,13,0,66,24,61,129,80,78,52,52,53,52,37,37,52,37,50,74,72,46,46,58,24,11,0,84,24,57,24,11,0,20,9,0,21,9,45,40,22,46,33,40,40,55,9,0,24,9,41,65,39,35,22,9,0,21,69,0,24,68,0,24,68,0,23,32,20,52,0,23,24,42,0,24,67,0,29,30,9,46,86,99,56,34,22,86,80,58,9,0,26,9,86,56,34,22,94,0,51,49,11,0,80,58,9,0,27,28,9,46,86,93,56,77,80,21,9,0,24,9,86,56,85,80,21,9,0,27,46,0,20,31,0,24,32,34,44,0,22,31,0,27,41,0,29,9,34,22,29,62,0,51,59,18,74,11,9,0,22,9,38,36,0,83,86,13,0,24,0,78,75,13,0,42,74,11,0,64,0,59,43,52,0,40,45,71,53,92,20,43,13,0,24,11,9,0,28,9,41,70,11,9,0,14,32,5,3,0,25,34,41,16,51,3,0,47,45,0,20,78,0,34,73,7,0,36,18,70,43,50,12,40,5,3,0,29,34,32,16,51,0,57,56,5,0,36,3,0,47,21,0,62,44,42,51,26,7,5,0,47,47,0,61,102,5,0,49,3,0,33,75,27,0,36,27,38,57,50,7,0,36,5,0,52,3,0,49,44,47,54,43,75,23,16,39,3,0,50,38,41,12,30,72,44,44,80,45,29,29,50,43,46,24,55,30,14,6,21,20,27,0,39,18,22,14,65,0,39,48,16,9,7,0,39,52,55,39,108,37,14,14,112,7,5,0,41,44,30,66,74,57,0,92,72,42,7,0,44,40,40,0,55,36,0,55,50,9,7,0,60,23,5,0,62,62,0,27,47,5,0,64,50,58,72,46,0,30,59,33,77,12,24,5,0,55,48,49,17,5,0,65,37,64,27,3,0,22,38,3,0,20,32,18,5,3,0,44,16,3,0,14,34,32,16,46,0,30,68,0,66,54,0,48,42,9,0,42,7,0,22,5,0,41,0,40,78,114,77,45,72,5,0,33,50,3,0,27,33,52,34,28,12,26,5,3,0,34,34,0,36,22,86,7,5,0,18,86,30,6,16,44,52,3,0,27,34,16,26,53,27,0,26,38,52,32,69,5,0,16,52,3,0,61,41,21,34,25,16,0,30,18,22,14,33,0,32,72,22,16,9,7,0,74,0,23,71,7,0,88,68,7,0,27,47,7,0,33,5,0,34,0,20,29,26,32,5,0,39,3,0,21,212,3,0,53,24,0,31,41,81,7,0,36,47,7,5,0,34,28,24,17,17,0,37,47,0,22,20,47,38,52,7,0,32,5,0,28,35,22,5,0,24,0,43,34,37,5,0,21,41,5,0,47,40,0,79,21,41,42,12,22,5,0,120,16,3,0,43,194,3,0,45,41,3,0,35,70,31,0,46,34,56,14,56,7,5,0,98,62,5,3,0,73,61,39,27,25,88,5,0,71,52,32,42,73,41,18,5,3,0,81,27,0,32,145,53,5,0,59,72,0,22,84,63,57,65,9,0,84,14,40,7,0,28,53,5,3,0,114,178,33,16,3,0,49,35,27,41,34,12,58,39,169,0,44,30,7,0,52,5,0,20,3,0,31,19,27,27,3,0,104,44,44,29,29,37,35,41,132,65,51,54,26,22,38,38,16,3,0,65,51,56,37,72,44,44,0,17,47,70,5,0,46,29,29,39,26,22,66,38,38,60,3,0,62,66,3,0,60,50,32,3,0,62,70,52,36,0,23,42,60,12,42,42,29,73,74,63,0,50,125,75,9,0,66,134,0,43,106,9,9,28,36,5,0,46,3,0,29,56,56,5,0,16,3,0,81,41,0,50,139,5,3,0,71,20,21,0,30,18,22,14,33,0,32,29,82,11,0,22,16,9,7,0,73,5,0,16,3,0,90,12,0,34,24,71,7,0,17,44,50,53,129,44,46,0,30,82,7,0,36,18,57,12,101,5,0,15,3,0,28,34,63,45,3,0,32,21,35,47,3,0,37,13,0,33,30,41,37,41,0,106,22,7,12,30,5,0,18,35,12,87,5,0,16,16,3,0,63,54,65,13,5,0,27,36,67,15,7,0,102,47,7,5,0,87,75,13,5,0,43,66,13,5,0,123,0,44,57,68,14,73,7,5,3,0,20,62,60,0,42,54,5,0,17,3,0,16,34,16,0,34,75,44,39,5,0,31,62,5,0,76,275,48,14,38,7,5,0,32,45,5,0,52,3,0,20,34,0,34,61,44,39,5,0,16,0,123,28,27,12,43,50,5,0,52,3,0,52,75,47,79,7,5,3,0,63,76,85,98,3,0,79,34,76,110,73,5,3,0,85,58,0,28,34,42,14,0,37,49,14,0,41,51,14,0,37,65,66,9,0,46,14,0,14,99,5,0,52,3,0,43,30,14,103,5,3,0,33,30,30,81,0,24,20,0,14,21,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,40,59,31,34,25,6,0,9,24,15,55,5,3,0,44,60,32,0,9,24,15,56,5,3,0,28,46,3,0,57,65,3,0,48,103,3,0,39,38,41,51,80,49,89,74,15,3,0,1,0,19,14,2,21,16,2,28,29,37,31,48,32,49,59,56,0,104,110,39,58,67,7,5,0,55,40,55,41,3,0,25,33,74,67,55,58,48,53,102,77,3,0,31,50,18,5,0,34,34,16,57,3,0,18,36,19,5,0,39,47,35,30,36,0,36,25,0,60,14,7,0,48,62,5,0,17,3,0,37,31,33,5,0,57,3,0,44,36,34,13,0,30,29,19,5,0,24,24,27,73,0,27,49,0,21,43,0,22,44,0,27,51,0,22,34,71,63,71,11,9,0,66,0,24,39,43,0,21,43,0,25,47,0,25,47,0,24,46,0,22,44,0,24,22,40,0,40,83,9,0,50,0,24,46,0,23,45,0,24,33,0,22,46,0,25,25,9,61,0,69,18,11,0,71,79,11,0,22,21,0,44,44,0,111,44,13,18,44,0,261,44,13,11,0,45,24,9,0,14,9,39,26,96,13,0,24,69,11,9,5,0,39,40,0,90,72,12,55,5,3,0,33,70,38,55,44,5,3,0,24,87,0,28,35,59,75,5,3,0,29,36,3,0,32,101,0,34,46,47,5,0,36,25,26,7,0,106,73,7,49,83,5,3,0,20,62,34,16,0,39,41,40,43,15,0,35,38,34,14,43,0,37,60,29,53,32,59,9,7,0,64,38,12,51,5,0,46,3,0,38,33,46,25,78,44,53,5,0,16,3,0,46,40,16,0,34,24,12,42,23,5,0,44,83,3,0,38,40,10,0,52,39,0,63,72,41,7,5,0,41,74,5,3,0,32,16,21,54,3,0,27,30,39,30,15,3,0,26,16,38,81,28,30,45,25,53,3,0,27,16,38,21,0,63,40,5,0,34,30,0,33,25,33,7,0,39,5,0,31,0,70,36,52,18,38,51,0,97,52,7,0,25,33,7,0,39,5,0,55,65,0,59,30,92,62,50,12,60,5,0,23,31,5,0,37,3,0,62,16,114,3,0,26,16,45,48,78,48,3,0,30,80,64,5,0,16,0,34,27,12,45,23,5,0,52,3,0,30,16,53,34,30,40,34,12,0,54,66,47,52,43,28,20,0,21,44,16,27,88,11,0,28,26,9,0,33,14,18,57,16,28,9,7,5,0,22,48,16,28,52,3,0,29,16,0,84,73,5,0,43,21,51,3,0,27,16,35,24,0,35,38,18,0,37,34,47,58,58,73,34,14,28,38,7,0,89,24,60,5,0,73,0,43,61,5,0,49,3,0,33,16,37,21,56,3,0,29,16,45,38,84,28,51,3,0,28,28,61,5,0,16,47,83,50,3,0,29,16,51,3,0,57,103,44,0,37,76,7,5,0,95,0,61,41,0,48,48,26,14,14,7,5,0,28,22,17,38,7,119,28,22,53,3,0,40,27,21,56,3,0,86,34,30,0,32,36,5,0,85,0,32,24,5,0,51,3,0,26,131,3,0,73,32,44,117,3,0,81,30,40,39,35,0,30,68,58,7,0,55,0,77,53,35,0,80,40,31,9,0,17,7,0,32,22,5,0,53,61,40,58,7,5,0,26,57,5,0,21,28,5,0,16,3,0,24,21,28,71,28,75,30,82,22,28,49,3,0,35,42,16,0,18,49,12,32,5,0,190,98,51,67,5,0,21,76,30,82,22,28,80,3,0,31,48,54,21,0,14,36,34,0,31,49,14,86,30,30,11,117,117,9,0,25,7,0,69,40,5,0,16,3,0,26,38,121,3,0,67,51,66,71,37,0,55,84,5,0,42,0,22,48,5,0,72,44,44,46,29,29,37,65,0,23,39,5,0,35,43,104,7,26,22,0,45,45,5,0,66,38,38,16,3,0,30,79,3,0,45,52,35,30,81,46,42,3,0,37,25,182,3,0,45,16,30,40,29,53,31,66,34,87,3,0,21,86,3,0,19,36,3,0,34,123,3,0,53,28,19,27,6,24,39,24,30,43,41,35,38,86,11,0,19,9,0,35,49,19,9,0,40,0,32,41,65,26,9,0,80,0,97,71,9,7,7,0,21,32,5,0,16,0,28,74,5,0,27,51,3,0,51,47,43,0,31,28,29,30,23,28,74,18,40,26,28,21,26,57,18,29,30,5,0,17,3,0,70,49,0,75,13,5,0,98,3,0,92,32,33,30,31,32,38,29,0,31,29,42,0,46,75,15,7,0,54,81,7,0,79,13,5,0,47,52,49,47,53,52,0,31,29,0,22,76,15,7,0,70,36,0,26,42,0,68,68,9,0,36,51,7,0,100,40,22,62,14,54,7,94,47,0,34,49,7,0,29,42,54,0,46,81,14,56,79,9,0,87,7,144,29,48,0,46,76,14,56,82,9,0,82,7,0,49,41,22,62,14,54,7,12,24,5,3,0,34,53,0,103,59,5,0,70,72,5,0,15,3,0,38,98,70,5,0,55,3,0,45,64,54,30,94,3,0,94,127,3,0,67,63,106,30,233,79,3,0,47,0,25,21,3,0,35,48,32,69,21,26,22,57,3,0,28,31,43,5,0,48,32,0,31,43,18,43,12,24,5,0,21,26,22,50,3,0,73,33,39,0,24,70,7,12,39,23,14,62,7,5,3,0,25,83,3,0,21,67,67,66,82,94,49,0,35,40,39,59,5,0,69,0,129,48,5,0,23,0,42,29,49,12,62,5,0,60,57,61,5,0,35,61,41,63,5,0,46,3,0,23,32,3,0,42,42,45,41,54,79,18,5,0,17,3,0,44,34,49,94,18,54,83,18,5,0,17,3,0,41,35,49,60,25,30,18,5,0,17,3,0,37,46,39,43,0,59,49,9,7,0,27,25,59,18,5,0,17,3,0,21,50,39,114,3,0,34,34,43,0,49,18,0,20,20,7,0,82,42,47,38,105,74,7,0,34,47,84,81,12,42,23,17,5,3,0,32,37,3,0,30,33,37,0,49,21,7,0,83,35,0,85,55,23,9,7,45,19,5,0,39,60,0,82,18,5,0,48,86,58,5,0,17,3,0,33,37,45,29,12,19,26,14,27,7,5,0,21,3,0,34,31,64,0,41,75,81,16,22,9,7,5,0,207,3,0,52,21,22,52,0,50,33,0,47,0,225,87,11,9,61,101,50,73,0,43,93,57,11,9,36,110,41,56,52,69,127,59,50,11,9,7,5,0,101,0,42,136,0,42,79,7,0,44,5,3,0,26,37,50,47,99,43,36,7,46,93,41,0,19,38,9,7,48,40,45,43,51,39,5,3,0,37,60,126,5,0,46,3,0,27,21,21,30,0,37,18,22,14,33,42,7,0,36,46,99,59,5,0,17,3,0,21,25,0,36,69,61,76,71,36,5,0,43,57,0,21,35,5,0,21,54,3,0,23,53,32,3,0,34,34,3,0,72,45,81,59,3,0,32,67,44,18,12,56,18,5,0,21,33,0,8,36,44,0,37,98,7,0,42,99,7,0,36,31,0,38,91,7,0,72,47,23,36,0,17,3,0,42,46,115,18,5,0,17,3,0,39,33,41,18,34,112,18,5,0,17,3,0,36,21,30,0,37,18,22,14,36,83,9,0,33,42,7,0,38,5,3,0,30,39,52,0,35,47,12,83,53,5,0,81,72,3,0,1,0,18,17,34,35,43,3,0,1,25,22,20,43,23,3,0,13,45,3,0,11,38,3,0,10,43,35,0,116,42,0,20,55,55,9,14,75,7,5,3,0,46,38,54,0,52,71,0,21,63,66,63,66,67,62,30,56,7,5,0,20,68,5,0,38,50,3,0,29,19,0,82,36,52,5,0,21,54,12,73,5,3,0,1,0,38,31,34,26,48,27,57,72,54,67,52,43,3,0,21,24,3,0,11,27,0,59,32,5,0,36,37,34,37,21,23,38,36,16,3,0,1,0,30,30,0,47,31,74,65,3,0,19,1,0,32,15,0,88,41,0,9,36,47,33,0,37,19,7,0,47,13,40,51,28,14,42,7,0,17,27,11,38,49,27,0,24,5,10,45,3,1,42,43,0,34,31,3,0,32,1,0,36,19,0,51,37,42,3,0,33,1,0,28,0,45,90,35,34,0,13,17,0,52,36,38,5,0,32,3,0,13,1,0,22,42,25,33,0],"data":{"version":3,"file":"index.js","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/tokenizer/types.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/scopeflags.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/whitespace.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/location.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/base.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/comments.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/error-message.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/error.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/estree.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/tokenizer/context.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/babel-helper-validator-identifier/src/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/babel-helper-validator-identifier/src/keyword.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/identifier.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/flow.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/jsx/xhtml.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/jsx/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/typescript/scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/production-parameter.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/typescript/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/placeholders.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugins/v8intrinsic.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/plugin-utils.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/options.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/tokenizer/state.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/tokenizer/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/util.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/node.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/lval.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/expression.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/statement.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/util/class-scope.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/parser/index.js","file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/@babel/parser/src/index.js"],"sourcesContent":["// @flow\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(prevType: TokenType) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  star: createBinop(\"*\", 10),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b00000000,\n             SCOPE_PROGRAM      = 0b00000001,\n             SCOPE_FUNCTION     = 0b00000010,\n             SCOPE_ARROW        = 0b00000100,\n             SCOPE_SIMPLE_CATCH = 0b00001000,\n             SCOPE_SUPER        = 0b00010000,\n             SCOPE_DIRECT_SUPER = 0b00100000,\n             SCOPE_CLASS        = 0b01000000,\n             SCOPE_TS_MODULE    = 0b10000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE           = 0b00000_0000_01,\n             BIND_KIND_TYPE            = 0b00000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR            = 0b00000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL        = 0b00000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION       = 0b00000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE        = 0b00000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE           = 0b00001_0000_00,\n             BIND_FLAGS_CLASS          = 0b00010_0000_00,\n             BIND_FLAGS_TS_ENUM        = 0b00100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM  = 0b01000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY = 0b10000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  options: Options;\n  inModule: boolean;\n  scope: ScopeHandler<*>;\n  classScope: ClassScopeHandler;\n  prodParam: ProductionParameterHandler;\n  plugins: PluginsMap;\n  filename: ?string;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  input: string;\n  length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n/* eslint sort-keys: \"error\" */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = Object.freeze({\n  ArgumentsDisallowedInInitializer:\n    \"'arguments' is not allowed in class field initializer\",\n  AsyncFunctionInSingleStatementContext:\n    \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier:\n    \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter:\n    \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncFunction:\n    \"Can not use keyword 'await' outside an async function\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter:\n    \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField:\n    \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport:\n    \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor:\n    \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass:\n    \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport:\n    \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport:\n    \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportDefaultFromAsIdentifier:\n    \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer:\n    \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext:\n    \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective:\n    \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportCallArgumentTrailingComma:\n    \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty:\n    \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding:\n    \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment:\n    \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical:\n    \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType:\n    \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue:\n    \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys:\n    'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence:\n    \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar:\n    \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew:\n    \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate:\n    \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow:\n    'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression:\n    \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression:\n    \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused:\n    \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed:\n    \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline:\n    \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn:\n    \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType:\n    \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType:\n    \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType:\n    \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction:\n    \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction:\n    \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed:\n    \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType:\n    \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType:\n    \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody:\n    'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport:\n    \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator:\n    \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration:\n    \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator:\n    \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField:\n    \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation:\n    \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport:\n    \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport:\n    \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator:\n    \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator:\n    \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper:\n    \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier:\n    \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"yield is not allowed in generator parameters\",\n  ZeroDigitNumericSeparator:\n    \"Numeric separator can not be used after leading 0\",\n});\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n};\n\nexport { ErrorMessages as Errors } from \"./error-message.js\";\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(pos: number, errorTemplate: string, ...params: any): Error | empty {\n    return this.raiseWithData(pos, undefined, errorTemplate, ...params);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nfunction isSimpleProperty(node: N.Node): boolean {\n  return (\n    node != null &&\n    node.type === \"Property\" &&\n    node.kind === \"init\" &&\n    node.method === false\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    estreeParseRegExpLiteral({ pattern, flags }: N.RegExpLiteral): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    estreeParseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      // $FlowIgnore\n      const bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n      const node = this.estreeParseLiteral(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral(value: any): N.Node {\n      return this.parseLiteral(value, \"Literal\");\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.value;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (isSimpleProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      const prop = ((method: any): N.EstreeProperty | N.EstreeMethodDefinition);\n      const paramCount = prop.kind === \"get\" ? 0 : 1;\n      const start = prop.start;\n      if (prop.value.params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      } else if (\n        prop.kind === \"set\" &&\n        prop.value.params[0].type === \"RestElement\"\n      ) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n      disallowLetBinding?: boolean,\n    ): void {\n      switch (expr.type) {\n        case \"ObjectPattern\":\n          expr.properties.forEach(prop => {\n            this.checkLVal(\n              prop.type === \"Property\" ? prop.value : prop,\n              bindingType,\n              checkClashes,\n              \"object destructuring pattern\",\n              disallowLetBinding,\n            );\n          });\n          break;\n        default:\n          super.checkLVal(\n            expr,\n            bindingType,\n            checkClashes,\n            contextDescription,\n            disallowLetBinding,\n          );\n      }\n    }\n\n    checkProto(\n      prop: N.ObjectMember | N.SpreadElement,\n      isRecord: boolean,\n      protoRef: { used: boolean },\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      // $FlowIgnore: check prop.method and fallback to super method\n      if (prop.method) {\n        return;\n      }\n      super.checkProto(prop, isRecord, protoRef, refExpressionErrors);\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Reset value to the actual value as in estree mode we want\n      // the stmt to have the real value and not the raw value\n      directive.value.value = value;\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      allowDirectives: ?boolean,\n      topLevel: boolean,\n      end: TokenType,\n    ): void {\n      super.parseBlockBody(node, allowDirectives, topLevel, end);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      switch (this.state.type) {\n        case tt.num:\n        case tt.string:\n          return this.estreeParseLiteral(this.state.value);\n\n        case tt.regexp:\n          return this.estreeParseRegExpLiteral(this.state.value);\n\n        case tt.bigint:\n          return this.estreeParseBigIntLiteral(this.state.value);\n\n        case tt._null:\n          return this.estreeParseLiteral(null);\n\n        case tt._true:\n          return this.estreeParseLiteral(true);\n\n        case tt._false:\n          return this.estreeParseLiteral(false);\n\n        default:\n          return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    parseLiteral<T: N.Literal>(\n      value: any,\n      type: /*T[\"kind\"]*/ string,\n      startPos?: number,\n      startLoc?: Position,\n    ): T {\n      const node = super.parseLiteral(value, type, startPos, startLoc);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n\n      type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n      return this.finishNode(node, type);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      containsEsc: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (isSimpleProperty(node)) {\n        this.toAssignable(node.value);\n\n        return node;\n      }\n\n      return super.toAssignable(node);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, isLast: boolean) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        throw this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        throw this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, isLast);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      } else if (node.type === \"CallExpression\") {\n        (node: N.Node).optional = false;\n      }\n\n      return node;\n    }\n\n    toReferencedListDeep(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): void {\n      // ImportExpressions do not have an arguments array.\n      if (!exprList) {\n        return;\n      }\n\n      super.toReferencedListDeep(exprList, isParenthesizedExpr);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(...args) {\n      const node = super.parseSubscript(...args);\n\n      if (node.type === \"MemberExpression\") {\n        node.optional = false;\n      }\n\n      return node;\n    }\n  };\n","// @flow\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport { types as tt } from \"./types\";\nimport { lineBreak } from \"../util/whitespace\";\n\nexport class TokContext {\n  constructor(\n    token: string,\n    isExpr?: boolean,\n    preserveSpace?: boolean,\n    override?: ?Function, // Takes a Tokenizer as a this-parameter, and returns void.\n  ) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n  }\n\n  token: string;\n  isExpr: boolean;\n  preserveSpace: boolean;\n  override: ?Function;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false),\n};\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  let out = this.state.context.pop();\n  if (out === types.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntt.name.updateContext = function (prevType) {\n  let allowed = false;\n  if (prevType !== tt.dot) {\n    if (\n      (this.state.value === \"of\" &&\n        !this.state.exprAllowed &&\n        prevType !== tt._function &&\n        prevType !== tt._class) ||\n      (this.state.value === \"yield\" && this.prodParam.hasYield)\n    ) {\n      allowed = true;\n    }\n  }\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntt.braceL.updateContext = function (prevType) {\n  this.state.context.push(\n    this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.dollarBraceL.updateContext = function () {\n  this.state.context.push(types.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntt.parenL.updateContext = function (prevType) {\n  const statementParens =\n    prevType === tt._if ||\n    prevType === tt._for ||\n    prevType === tt._with ||\n    prevType === tt._while;\n  this.state.context.push(\n    statementParens ? types.parenStatement : types.parenExpression,\n  );\n  this.state.exprAllowed = true;\n};\n\ntt.incDec.updateContext = function () {\n  // tokExprAllowed stays unchanged\n};\n\ntt._function.updateContext = tt._class.updateContext = function (prevType) {\n  if (prevType === tt.dot || prevType === tt.questionDot) {\n    // when function/class follows dot/questionDot, it is part of\n    // (optional)MemberExpression, then we don't need to push new token context\n  } else if (\n    prevType.beforeExpr &&\n    prevType !== tt.semi &&\n    prevType !== tt._else &&\n    !(\n      prevType === tt._return &&\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) &&\n    !(\n      (prevType === tt.colon || prevType === tt.braceL) &&\n      this.curContext() === types.b_stat\n    )\n  ) {\n    this.state.context.push(types.functionExpression);\n  } else {\n    this.state.context.push(types.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntt.backQuote.updateContext = function () {\n  if (this.curContext() === types.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types.template);\n  }\n  this.state.exprAllowed = false;\n};\n\ntt.star.updateContext = function () {\n  this.state.exprAllowed = false;\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: $ReadOnlyArray<number>): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (const char of Array.from(name)) {\n    const cp = char.codePointAt(0);\n    if (isFirst) {\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n      isFirst = false;\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","// @flow\n\nconst reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../parser\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport type { Options } from \"../options\";\nimport type { Pos, Position } from \"../util/location\";\nimport type State from \"../tokenizer/state\";\nimport { types as tc } from \"../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart } from \"../util/identifier\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../util/scopeflags\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport { Errors } from \"../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow:\n    \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind:\n    \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement:\n    \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer:\n    \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized:\n    \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName:\n    \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues:\n    \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType:\n    \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied:\n    \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType:\n    \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType:\n    \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType:\n    \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName:\n    \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized:\n    \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized:\n    \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport:\n    \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact:\n    \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject:\n    \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule:\n    \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault:\n    \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule:\n    \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern:\n    \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject:\n    \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore:\n    \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks:\n    \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType:\n    \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand:\n    'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter:\n    \"Expected an arrow function after this type parameter declaration\",\n  UnsupportedDeclareExportKind:\n    \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule:\n    \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\",\n});\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: State): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\";\n\n    constructor(options: ?Options, input: string) {\n      super(options, input);\n      this.flowPragma = undefined;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloLoc = this.state.startLoc;\n      const moduloPos = this.state.start;\n      this.expect(tt.modulo);\n      const checksLoc = this.state.startLoc;\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (\n        moduloLoc.line !== checksLoc.line ||\n        moduloLoc.column !== checksLoc.column - 1\n      ) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam();\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in objec types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        name = this.parseIdentifier();\n        if (this.eat(tt.question)) {\n          optional = true;\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(\n      params: N.FlowFunctionTypeParam[] = [],\n    ): { params: N.FlowFunctionTypeParam[], rest: ?N.FlowFunctionTypeParam } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam());\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam();\n      }\n      return { params, rest };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteral(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node.start,\n                node.loc.start,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start,\n        startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      while (this.match(tt.bracketL) && !this.canInsertSemicolon()) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.elementType = type;\n        this.expect(tt.bracketL);\n        this.expect(tt.bracketR);\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      // Ensure that a brace after a function generic type annotation is a\n      // statement, except in arrow functions (noAnonFunctionType)\n      this.state.exprAllowed =\n        this.state.exprAllowed || this.state.noAnonFunctionType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      } else {\n        const stmt = super.parseStatement(context, topLevel);\n        // We will parse a flow pragma in any comment before the first statement.\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n        return stmt;\n      }\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (refNeedsArrowPos) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, noIn, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          // $FlowIgnore\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(noIn, undefined, undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssign();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\"\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.isIterator = true;\n        return super.readWord();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node));\n      } else {\n        return super.toAssignable(node);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(\n          expr,\n          bindingType,\n          checkClashes,\n          contextDescription,\n        );\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n      containsEsc: boolean,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\")) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        refExpressionErrors,\n        containsEsc,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        contextDescription,\n      );\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentLoc = this.state.start;\n      const firstIdent = this.parseIdentifier(true);\n\n      let specifierTypeKind = null;\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          firstIdentLoc,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(\n        specifier.local,\n        BIND_LEXICAL,\n        undefined,\n        \"import specifier\",\n      );\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      noIn?: ?boolean,\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () =>\n            super.parseMaybeAssign(\n              noIn,\n              refExpressionErrors,\n              afterLeftParse,\n              refNeedsArrowPos,\n            ),\n          state,\n        );\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === tc.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(() => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () =>\n              super.parseMaybeAssign(\n                noIn,\n                refExpressionErrors,\n                afterLeftParse,\n                refNeedsArrowPos,\n              ),\n          );\n          arrowExpression.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(arrowExpression, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        const arrowExpression: ?N.ArrowFunctionExpression =\n          arrow.node?.type === \"ArrowFunctionExpression\" ? arrow.node : null;\n\n        if (!arrow.error && arrowExpression) return arrowExpression;\n\n        // If we are here, both JSX and Flow parsing attemps failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(\n        noIn,\n        refExpressionErrors,\n        afterLeftParse,\n        refNeedsArrowPos,\n      );\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadRelational(\"<\")) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral();\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      booleanMembers: Array<N.Node>,\n      numberMembers: Array<N.Node>,\n      stringMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      while (!this.match(tt.braceR)) {\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return members;\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const members = this.flowEnumMembers({ enumName, explicitType });\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (\n        this.match(tt.name) &&\n        this.state.value === \"of\" &&\n        prevType === tt.name &&\n        this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) ===\n          \"interface\"\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors } from \"../../parser/error\";\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\nconst JsxErrors = Object.freeze({\n  AttributeIsEmpty:\n    \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue:\n    \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements:\n    \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n});\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\", false);\ntc.j_cTag = new TokContext(\"</tag\", false);\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = function () {\n  this.state.context.push(tc.j_expr); // treat as beginning of JSX expression\n  this.state.context.push(tc.j_oTag); // start opening tag context\n  this.state.exprAllowed = false;\n};\n\ntt.jsxTagEnd.updateContext = function (prevType) {\n  const out = this.state.context.pop();\n  if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === tc.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        node.expression = this.parseExpression();\n      }\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      if (this.match(tt.braceL)) {\n        const curContext = this.curContext();\n        if (curContext === tc.j_oTag) {\n          this.state.context.push(tc.braceExpression);\n        } else if (curContext === tc.j_expr) {\n          this.state.context.push(tc.templateQuasi);\n        } else {\n          super.updateContext(prevType);\n        }\n        this.state.exprAllowed = true;\n      } else if (this.match(tt.slash) && prevType === tt.jsxTagStart) {\n        this.state.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.state.context.push(tc.j_cTag); // reconsider as closing tag context\n        this.state.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  flags: ScopeFlags;\n  // A list of var-declared names in the current lexical scope\n  var: string[] = [];\n  // A list of lexically-declared names in the current lexical scope\n  lexical: string[] = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: string[] = [];\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  raise: raiseFunction;\n  inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.push(name);\n      } else {\n        scope.lexical.push(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.push(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        scope.functions.indexOf(name) > -1 ||\n        scope.var.indexOf(name) > -1\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.indexOf(name) > -1 ||\n        (!this.treatFunctionsAsVarInScope(scope) &&\n          scope.var.indexOf(name) > -1)\n      );\n    }\n\n    return (\n      (scope.lexical.indexOf(name) > -1 &&\n        !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name)) ||\n      (!this.treatFunctionsAsVarInScope(scope) &&\n        scope.functions.indexOf(name) > -1)\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1 &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      this.scopeStack[0].functions.indexOf(id.name) === -1\n    ) {\n      this.undefinedExports.set(id.name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) {\n        return scope;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScope(): IScope {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const scope = this.scopeStack[i];\n      if (\n        (scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) &&\n        !(scope.flags & SCOPE_ARROW)\n      ) {\n        return scope;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: string[] = [];\n\n  // enums (which are also in .types)\n  enums: string[] = [];\n\n  // const enums (which are also in .enums and .types)\n  constEnums: string[] = [];\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: string[] = [];\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: string[] = [];\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.push(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.push(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.indexOf(name) > -1) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.indexOf(name) > -1;\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n      if (scope.lexical.indexOf(name) > -1) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (\n      this.scopeStack[0].types.indexOf(id.name) === -1 &&\n      this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b000, // Initial Parameter flags\n  PARAM_YIELD = 0b001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b010, // track [Await] production parameter\n  PARAM_RETURN = 0b100; // track [Return] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above. Note that the [In] parameter is\n// tracked in `noIn` argument of `parseExpression`.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind = typeof PARAM | typeof PARAM_AWAIT | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Pos, Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  BIND_NONE,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport { Errors } from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"public\"\n  | \"private\"\n  | \"protected\";\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\nconst TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  DeclareClassFieldHasInitializer:\n    \"'declare' class fields cannot have an initializer\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  IndexSignatureHasAbstract:\n    \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility:\n    \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  OptionalTypeBeforeRequired:\n    \"A required element cannot follow an optional element.\",\n  PatternIsOptional:\n    \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract:\n    \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility:\n    \"Private elements cannot have an accessibility modifier ('%0')\",\n  TemplateTypeHasSubstitution:\n    \"Template literal types cannot have any substitution\",\n  TypeAnnotationAfterAssign:\n    \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedReadonly:\n    \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument:\n    \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind:\n    \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind:\n    \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\",\n});\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return (\n        !this.hasPrecedingLineBreak() &&\n        !this.match(tt.parenL) &&\n        !this.match(tt.parenR) &&\n        !this.match(tt.colon) &&\n        !this.match(tt.eq) &&\n        !this.match(tt.question) &&\n        !this.match(tt.bang)\n      );\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers<T: TsModifier>(\n      modified: { [key: TsModifier]: ?true },\n      allowedModifiers: T[],\n    ): void {\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?T = this.tsParseModifier(allowedModifiers);\n\n        if (!modifier) break;\n\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        }\n        modified[modifier] = true;\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(\n          returnToken,\n        );\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma)) {\n        this.semicolon();\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (!readonly && (this.match(tt.parenL) || this.isRelational(\"<\"))) {\n        const method: N.TsMethodSignature = nodeAny;\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      const readonly = !!this.tsParseModifier([\"readonly\"]);\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        if (readonly) node.readonly = true;\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      return this.tsParsePropertyOrMethodSignature(node, readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure:\n      //   No mandatory elements may follow optional elements\n      //   If there's a rest element, it must be at the end of the tuple\n      let seenOptionalElement = false;\n      node.elementTypes.forEach(elementNode => {\n        if (elementNode.type === \"TSOptionalType\") {\n          seenOptionalElement = true;\n        } else if (seenOptionalElement && elementNode.type !== \"TSRestType\") {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType {\n      // parses `...TsType[]`\n      if (this.match(tt.ellipsis)) {\n        const restNode: N.TsRestType = this.startNode();\n        this.next(); // skips ellipsis\n        restNode.typeAnnotation = this.tsParseType();\n        if (\n          this.match(tt.comma) &&\n          this.lookaheadCharCode() !== charCodes.rightSquareBracket\n        ) {\n          this.raiseRestNotLast(this.state.start);\n        }\n        return this.finishNode(restNode, \"TSRestType\");\n      }\n\n      const type = this.tsParseType();\n      // parses `TsType?`\n      if (this.eat(tt.question)) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        return this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        this.expect(tt._new);\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      const templateNode = this.parseTemplate(false);\n      if (templateNode.expressions.length > 0) {\n        this.raise(\n          templateNode.expressions[0].start,\n          TSErrors.TemplateTypeHasSubstitution,\n        );\n      }\n      node.literal = templateNode;\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      this.eat(operator);\n      let type = parseConstituentType();\n      if (this.match(operator)) {\n        const types = [type];\n        while (this.eat(operator)) {\n          types.push(parseConstituentType());\n        }\n        const node: N.TsUnionType | N.TsIntersectionType = this.startNodeAtNode(\n          type,\n        );\n        node.types = types;\n        type = this.finishNode(node, kind);\n      }\n      return type;\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const asserts = this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            const node: N.TsTypePredicate = this.startNodeAtNode(t);\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          const node: N.TsTypePredicate = this.startNodeAtNode(t);\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        const node = this.startNodeAtNode(t);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_TS_INTERFACE,\n        undefined,\n        \"typescript interface declaration\",\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, BIND_TS_TYPE, undefined, \"typescript type alias\");\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsExpectThenParseType(tt.eq);\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssign();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n        undefined,\n        \"typescript enum declaration\",\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          BIND_TS_NAMESPACE,\n          null,\n          \"module or namespace declaration\",\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        BIND_LEXICAL,\n        undefined,\n        \"import equals declaration\",\n      );\n      this.expect(tt.eq);\n      node.moduleReference = this.tsParseModuleReference();\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case tt._function:\n          return this.parseFunctionStatement(\n            nany,\n            /* async */ false,\n            /* declarationPosition */ true,\n          );\n        case tt._class:\n          // While this is also set by tsParseExpressionStatement, we need to set it\n          // before parsing the class declaration to now how to register it in the scope.\n          nany.declare = true;\n          return this.parseClass(\n            nany,\n            /* isStatement */ true,\n            /* optionalId */ false,\n          );\n        case tt._const:\n          if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n            // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n            this.expect(tt._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n          }\n        // falls through\n        case tt._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n        case tt.name: {\n          const value = this.state.value;\n          if (value === \"global\") {\n            return this.tsParseAmbientExternalModuleDeclaration(nany);\n          } else {\n            return this.tsParseDeclaration(nany, value, /* next */ true);\n          }\n        }\n      }\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      switch (value) {\n        case \"abstract\":\n          if (this.tsCheckLineTerminatorAndMatch(tt._class, next)) {\n            const cls: N.ClassDeclaration = node;\n            cls.abstract = true;\n            if (next) {\n              this.next();\n              if (!this.match(tt._class)) {\n                this.unexpected(null, tt._class);\n              }\n            }\n            return this.parseClass(\n              cls,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (next) this.next();\n          if (this.match(tt.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminatorAndMatch(tt.name, next)) {\n            if (next) this.next();\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminatorAndMatch(tokenType: TokenType, next: boolean) {\n      return (next || this.match(tokenType)) && !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      // This reads the next token after the `>` too, so do this in the enclosing context.\n      // But be sure not to parse a regex in the jsx expression `<C<number> />`, so set exprAllowed = false\n      this.state.exprAllowed = false;\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      if (allowModifiers) {\n        accessibility = this.parseAccessModifier();\n        readonly = !!this.tsParseModifier([\"readonly\"]);\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, BIND_TS_AMBIENT, null, \"function name\");\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n              node.typeParameters = typeArguments;\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              return this.parseTaggedTemplateExpression(\n                startPos,\n                startLoc,\n                base,\n                state,\n                typeArguments,\n              );\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n      noIn: ?boolean,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec, noIn);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        const ahead = this.lookahead();\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\")\n        ) {\n          node.importKind = \"type\";\n          this.next();\n        } else {\n          node.importKind = \"value\";\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          \"A type-only import can specify a default import or named bindings, but not both.\",\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.expect(tt._import);\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        this.parseClass(cls, true, true);\n        cls.abstract = true;\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: { hadConstructor: boolean },\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"declare\"]);\n      const accessibility = this.parseAccessModifier();\n      if (accessibility) member.accessibility = accessibility;\n      this.tsParseModifiers(member, [\"declare\"]);\n\n      super.parseClassMember(classBody, member, state, constructorAllowsSuper);\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: { hadConstructor: boolean },\n      isStatic: boolean,\n      constructorAllowsSuper: boolean,\n    ): void {\n      this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if (isStatic) {\n          this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n\n        return;\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(\n        classBody,\n        member,\n        state,\n        isStatic,\n        constructorAllowsSuper,\n      );\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      noIn: ?boolean,\n      startPos: number,\n      startLoc: Position,\n      refNeedsArrowPos?: ?Pos,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!refNeedsArrowPos || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          noIn,\n          startPos,\n          startLoc,\n          refNeedsArrowPos,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, noIn, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        // $FlowIgnore\n        refNeedsArrowPos.start = result.error.pos || this.state.start;\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (node.declare && this.match(tt.equal)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (this.match(tt.jsxTagStart)) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!jsx.aborted) */\n\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          (expr.extra && expr.extra.parenthesized)\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node));\n        case \"TSParameterProperty\":\n          return super.toAssignable(node);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression);\n          return node;\n        default:\n          return super.toAssignable(node);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      bindingType: BindingTypes = BIND_NONE,\n      checkClashes: ?{ [key: string]: boolean },\n      contextDescription: string,\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(\n            expr.parameter,\n            bindingType,\n            checkClashes,\n            \"parameter property\",\n          );\n          return;\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          this.checkLVal(\n            expr.expression,\n            bindingType,\n            checkClashes,\n            contextDescription,\n          );\n          return;\n        default:\n          super.checkLVal(expr, bindingType, checkClashes, contextDescription);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (this.state.inType && (code === 62 || code === 60)) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TSTypeCastExpression\") {\n          this.raise(expr.start, TSErrors.UnexpectedTypeAnnotation);\n        }\n      }\n\n      return exprList;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const firstParam = method.params[0];\n      const hasContextParam =\n        firstParam &&\n        firstParam.type === \"Identifier\" &&\n        firstParam.name === \"this\";\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, \"A class name is required\");\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    const moduleAttributesVerionPluginOption = getPluginOption(\n      plugins,\n      \"moduleAttributes\",\n      \"version\",\n    );\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\n        \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n          \" representing the last proposal update. Currently, the\" +\n          \" only supported value is 'may-2020'.\",\n      );\n    }\n  }\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> = Object.keys(\n  mixinPlugins,\n);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: SyntaxError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  inParameters: boolean = false;\n  maybeInArrowParameters: boolean = false;\n  // This flag is used to track async arrow head across function declarations.\n  // e.g. async (foo = function (await) {}) => {}\n  // When parsing `await` in this expression, `maybeInAsyncArrowHead` is true\n  // but `maybeInArrowParameters` is false\n  maybeInAsyncArrowHead: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isIterator: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  yieldPos: number = -1;\n  awaitPos: number = -1;\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  context: Array<TokContext> = [ct.braceStatement];\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to throw an error for\n  // an octal literal in a directive that occurs prior\n  // to a \"use strict\" directive.\n  octalPositions: number[] = [];\n\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  exportedIdentifiers: Array<string> = [];\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreak,\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  type: TokenType;\n  value: any;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +unexpected: (pos?: ?number, messageOrType?: string | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    if (!this.isLookahead) {\n      this.checkKeywordEscapes();\n      if (this.options.tokens) {\n        this.pushToken(new Token(this.state));\n      }\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  // TODO\n\n  lookahead(): State {\n    const old = this.state;\n    this.state = old.clone(true);\n\n    this.isLookahead = true;\n    this.next();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (!this.match(tt.num) && !this.match(tt.string)) return;\n    this.state.pos = this.state.start;\n    while (this.state.pos < this.state.lineStart) {\n      this.state.lineStart =\n        this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n      --this.state.curLine;\n    }\n    this.nextToken();\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext?.preserveSpace) this.skipSpace();\n\n    this.state.octalPositions = [];\n    this.state.start = this.state.pos;\n    this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    const override = curContext?.override;\n    if (override) {\n      override(this);\n    } else {\n      this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    const startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) this.updateContext(prevType);\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.input.charCodeAt(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n      this.state.pos += 2;\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    // '/'\n    if (this.state.exprAllowed && !this.state.inType) {\n      ++this.state.pos;\n      this.readRegexp();\n      return;\n    }\n\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    const exprAllowed = this.state.exprAllowed;\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !exprAllowed) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n\n        this.finishOp(tt.bracketBarR, 2);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 ||\n          lineBreak.test(\n            this.input.slice(this.state.lastTokEnd, this.state.pos),\n          ))\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark && !this.state.inType) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.finishToken(tt.bracketBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.finishToken(tt.braceBarL);\n          this.state.pos += 2;\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord();\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.pos;\n    let escaped, inClass;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charAt(this.state.pos);\n      if (lineBreak.test(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === \"[\") {\n          inClass = true;\n        } else if (ch === \"]\" && inClass) {\n          inClass = false;\n        } else if (ch === \"/\" && !inClass) {\n          break;\n        }\n        escaped = ch === \"\\\\\";\n      }\n      ++this.state.pos;\n    }\n    const content = this.input.slice(start, this.state.pos);\n    ++this.state.pos;\n\n    let mods = \"\";\n\n    while (this.state.pos < this.length) {\n      const char = this.input[this.state.pos];\n      const charCode = this.input.codePointAt(this.state.pos);\n\n      if (VALID_REGEX_FLAGS.has(char)) {\n        if (mods.indexOf(char) > -1) {\n          this.raise(this.state.pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (\n        isIdentifierChar(charCode) ||\n        charCode === charCodes.backslash\n      ) {\n        this.raise(this.state.pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++this.state.pos;\n      mods += char;\n    }\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (this.hasPlugin(\"numericSeparator\")) {\n        if (code === charCodes.underscore) {\n          const prev = this.input.charCodeAt(this.state.pos - 1);\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          } else if (\n            forbiddenSiblings.indexOf(prev) > -1 ||\n            forbiddenSiblings.indexOf(next) > -1 ||\n            Number.isNaN(next)\n          ) {\n            this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n          }\n\n          // Ignore this _ character\n          ++this.state.pos;\n          continue;\n        }\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.underscore) {\n      this.expectPlugin(\"numericSeparator\", this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isNonOctalDecimalInt = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    let octal =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n    if (octal) {\n      if (this.state.strict) {\n        this.raise(start, Errors.StrictOctalLiteral);\n      }\n      if (/[89]/.test(this.input.slice(start, this.state.pos))) {\n        octal = false;\n        isNonOctalDecimalInt = true;\n      }\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !octal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !octal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) this.raise(start, Errors.InvalidNumber);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    // disallow numeric separators in non octal decimals and legacy octal likes\n    if (this.hasPlugin(\"numericSeparator\") && (octal || isNonOctalDecimalInt)) {\n      const underscorePos = this.input\n        .slice(start, this.state.pos)\n        .indexOf(\"_\");\n      if (underscorePos > 0) {\n        this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n      }\n    }\n\n    if (next === charCodes.underscore) {\n      this.expectPlugin(\"numericSeparator\", this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || octal || isNonOctalDecimalInt) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and \"n\" for BigInts\n    const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    const val = octal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  // Used to read escaped characters\n\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else if (this.state.strict) {\n              this.raise(codePos, Errors.StrictOctalLiteral);\n            } else {\n              // This property is used to throw an error for\n              // an octal literal in a directive that occurs prior\n              // to a \"use strict\" directive.\n              this.state.octalPositions.push(codePos);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  readWord1(): string {\n    let word = \"\";\n    this.state.containsEsc = false;\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    while (this.state.pos < this.length) {\n      const ch = this.input.codePointAt(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (this.state.isIterator && ch === charCodes.atSign) {\n        ++this.state.pos;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  isIterator(word: string): boolean {\n    return word === \"@@iterator\" || word === \"@@asyncIterator\";\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(): void {\n    const word = this.readWord1();\n    const type = keywordTypes.get(word) || tt.name;\n\n    // Allow @@iterator and @@asyncIterator as a identifier only inside type\n    if (\n      this.state.isIterator &&\n      (!this.isIterator(word) || !this.state.inType)\n    ) {\n      this.raise(this.state.pos, Errors.InvalidIdentifier, word);\n    }\n\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  braceIsBlock(prevType: TokenType): boolean {\n    const parent = this.curContext();\n    if (parent === ct.functionExpression || parent === ct.functionStatement) {\n      return true;\n    }\n    if (\n      prevType === tt.colon &&\n      (parent === ct.braceStatement || parent === ct.braceExpression)\n    ) {\n      return !parent.isExpr;\n    }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (\n      prevType === tt._return ||\n      (prevType === tt.name && this.state.exprAllowed)\n    ) {\n      return lineBreak.test(\n        this.input.slice(this.state.lastTokEnd, this.state.start),\n      );\n    }\n\n    if (\n      prevType === tt._else ||\n      prevType === tt.semi ||\n      prevType === tt.eof ||\n      prevType === tt.parenR ||\n      prevType === tt.arrow\n    ) {\n      return true;\n    }\n\n    if (prevType === tt.braceL) {\n      return parent === ct.braceStatement;\n    }\n\n    if (\n      prevType === tt._var ||\n      prevType === tt._const ||\n      prevType === tt.name\n    ) {\n      return false;\n    }\n\n    if (prevType === tt.relational) {\n      // `class C<T> { ... }`\n      return true;\n    }\n\n    return !this.state.exprAllowed;\n  }\n\n  updateContext(prevType: TokenType): void {\n    const type = this.state.type;\n    let update;\n\n    if (type.keyword && (prevType === tt.dot || prevType === tt.questionDot)) {\n      this.state.exprAllowed = false;\n    } else if ((update = type.updateContext)) {\n      update.call(this, prevType);\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n}\n","// @flow\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport * as charCodes from \"charcodes\";\nimport { Errors } from \"./error\";\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  isLookaheadRelational(op: \"<\" | \">\"): boolean {\n    const next = this.nextTokenStart();\n    if (this.input.charAt(next) === op) {\n      if (next + 1 === this.input.length) {\n        return true;\n      }\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== op.charCodeAt(0) && afterNext !== charCodes.equalsTo;\n    }\n    return false;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    return (\n      this.input.slice(nameStart, nameEnd) === name &&\n      (nameEnd === this.input.length ||\n        !isIdentifierChar(this.input.charCodeAt(nameEnd)))\n    );\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, message?: string): void {\n    if (!this.eatContextual(name)) this.unexpected(null, message);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(): void {\n    if (!this.isLineTerminator()) this.unexpected(null, tt.semi);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, message);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: string | TokenType = \"Unexpected token\",\n  ): empty {\n    if (typeof messageOrType !== \"string\") {\n      messageOrType = `Unexpected token, expected \"${messageOrType.label}\"`;\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  checkYieldAwaitInDefaultParams() {\n    if (\n      this.state.yieldPos !== -1 &&\n      (this.state.awaitPos === -1 || this.state.yieldPos < this.state.awaitPos)\n    ) {\n      this.raise(this.state.yieldPos, Errors.YieldBindingIdentifier);\n    }\n    if (this.state.awaitPos !== -1) {\n      this.raise(this.state.awaitPos, Errors.AwaitBindingIdentifier);\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, SyntaxError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: SyntaxError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto } = refExpressionErrors;\n    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint)\n    );\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track\n * - **shorthandAssign**: track initializer `=` position when parsing ambiguous\n *   patterns. When we are sure the parsed pattern is a RHS, which means it is\n *   not a pattern, we will throw on this position on invalid assign syntax,\n *   otherwise it will be reset to -1\n * - **doubleProto**: track the duplicate `__proto__` key position when parsing\n *   ambiguous object patterns. When we are sure the parsed pattern is a RHS,\n *   which means it is an object literal, we will throw on this position for\n *   __proto__ redefinition, otherwise it will be reset to -1\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node) => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssign: (\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObj: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n  // NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n  // When this one is updated, please check if also that one needs to be updated.\n\n  toAssignable(node: Node): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (\n        parenthesized.type !== \"Identifier\" &&\n        parenthesized.type !== \"MemberExpression\"\n      ) {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(((parenthesized: any): Expression));\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop: Node, isLast: boolean) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        const arg = last.argument;\n        this.toAssignable(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(\n      false,\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObj(tt.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc || this.state.startLoc;\n    startPos = startPos || this.state.start;\n    left = left || this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  // Verify that a node is an lval — something that can be assigned\n  // to.\n\n  checkLVal(\n    expr: Expression,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?{ [key: string]: boolean },\n    contextDescription: string,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\":\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(expr.name, this.inModule)\n            : isStrictBindOnlyReservedWord(expr.name))\n        ) {\n          /* eslint-disable @babel/development-internal/dry-error-messages */\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            expr.name,\n          );\n          /* eslint-enable @babel/development-internal/dry-error-messages */\n        }\n\n        if (checkClashes) {\n          // we need to prefix this with an underscore for the cases where we have a key of\n          // `__proto__`. there's a bug in old V8 where the following wouldn't work:\n          //\n          //   > var obj = Object.create(null);\n          //   undefined\n          //   > obj.__proto__\n          //   null\n          //   > obj.__proto__ = true;\n          //   true\n          //   > obj.__proto__\n          //   null\n          const key = `_${expr.name}`;\n\n          if (checkClashes[key]) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes[key] = true;\n          }\n        }\n        if (disallowLetBinding && expr.name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(expr.name, bindingType, expr.start);\n        }\n        break;\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (prop.type === \"ObjectProperty\") prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (prop.type === \"ObjectMethod\") continue;\n\n          this.checkLVal(\n            prop,\n            bindingType,\n            checkClashes,\n            \"object destructuring pattern\",\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              bindingType,\n              checkClashes,\n              \"array destructuring pattern\",\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          bindingType,\n          checkClashes,\n          \"assignment pattern\",\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          bindingType,\n          checkClashes,\n          \"rest element\",\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          bindingType,\n          checkClashes,\n          \"parenthesized expression\",\n        );\n        break;\n\n      default: {\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport { types as ct } from \"../tokenizer/context\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n} from \"../util/identifier\";\nimport type { Pos, Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport { Errors } from \"./error\";\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      prop.type === \"ObjectMethod\" ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `noIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `noIn` is true, the production parameter [In] is not present.\n  //   Whenever [?In] appears in the right-hand sides of a production, we pass\n  //   `noIn` to the subroutine calls.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    noIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(noIn, refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(noIn, refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  parseMaybeAssign(\n    noIn?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield(noIn);\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      } else {\n        // The tokenizer will assume an expression is allowed after\n        // `yield`, but this isn't that kind of yield\n        this.state.exprAllowed = false;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(\n      noIn,\n      refExpressionErrors,\n      refNeedsArrowPos,\n    );\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (operator === \"??=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (operator === \"||=\" || operator === \"&&=\") {\n        this.expectPlugin(\"logicalAssignment\");\n      }\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, undefined, undefined, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  parseMaybeConditional(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(noIn, refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    return this.parseConditional(\n      expr,\n      noIn,\n      startPos,\n      startLoc,\n      refNeedsArrowPos,\n    );\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    noIn: ?boolean,\n    startPos: number,\n    startLoc: Position,\n    // FIXME: Disabling this for now since can't seem to get it to play nicely\n    // eslint-disable-next-line no-unused-vars\n    refNeedsArrowPos?: ?Pos,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n\n  parseExprOps(\n    noIn: ?boolean,\n    refExpressionErrors: ExpressionErrors,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n    if (this.checkExpressionErrors(refExpressionErrors, false)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1, noIn);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (!noIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const operator = this.state.value;\n        if (operator === \"|>\" && this.state.inFSharpPipelineDirectBody) {\n          return left;\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = operator;\n        if (\n          operator === \"**\" &&\n          left.type === \"UnaryExpression\" &&\n          (this.options.createParenthesizedExpressions ||\n            !(left.extra && left.extra.parenthesized))\n        ) {\n          this.raise(\n            left.argument.start,\n            Errors.UnexpectedTokenUnaryExponentiation,\n          );\n        }\n\n        const op = this.state.type;\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        } else if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec, noIn);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(\n          node,\n          leftStartPos,\n          leftStartLoc,\n          minPrec,\n          noIn,\n        );\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec, noIn),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec, noIn);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec, noIn);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(\n    op: TokenType,\n    prec: number,\n    noIn: ?boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n      noIn,\n    );\n  }\n\n  // Parse unary operators, both prefix and postfix.\n\n  parseMaybeUnary(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n      return this.parseAwait();\n    } else if (this.state.type.prefix) {\n      const node = this.startNode();\n      const update = this.match(tt.incDec);\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (node.operator === \"throw\") {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      this.next();\n\n      node.argument = this.parseMaybeUnary();\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (update) {\n        this.checkLVal(node.argument, undefined, undefined, \"prefix operation\");\n      } else if (this.state.strict && node.operator === \"delete\") {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (\n          (arg.type === \"MemberExpression\" ||\n            arg.type === \"OptionalMemberExpression\") &&\n          arg.property.type === \"PrivateName\"\n        ) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      return this.finishNode(\n        node,\n        update ? \"UpdateExpression\" : \"UnaryExpression\",\n      );\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, undefined, undefined, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (\n      expr.type === \"ArrowFunctionExpression\" &&\n      expr.start === potentialArrowAt\n    ) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n      if (state.maybeAsyncArrow) {\n        this.state.maybeInAsyncArrowHead = true;\n      }\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n      this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(\n        this.finishNode(node, \"BindExpression\"),\n        startPos,\n        startLoc,\n        noCalls,\n      );\n    }\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      state.optionalChainMember = optional = true;\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        state.stop = true;\n        return base;\n      }\n      this.next();\n    }\n    const computed = this.eat(tt.bracketL);\n    if (\n      (optional && !this.match(tt.parenL) && !this.match(tt.backQuote)) ||\n      computed ||\n      this.eat(tt.dot)\n    ) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed\n        ? this.parseExpression()\n        : this.parseMaybePrivateName(true);\n      node.computed = computed;\n\n      if (node.property.type === \"PrivateName\") {\n        if (node.object.type === \"Super\") {\n          this.raise(startPos, Errors.SuperPrivateField);\n        }\n        this.classScope.usePrivateName(\n          node.property.id.name,\n          node.property.start,\n        );\n      }\n\n      if (computed) {\n        this.expect(tt.bracketR);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    } else if (!noCalls && this.match(tt.parenL)) {\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      const oldYieldPos = this.state.yieldPos;\n      const oldAwaitPos = this.state.awaitPos;\n      this.state.maybeInArrowParameters = true;\n      this.state.yieldPos = -1;\n      this.state.awaitPos = -1;\n\n      this.next();\n\n      let node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (optional) {\n        node.optional = true;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(\n          tt.parenR,\n          state.maybeAsyncArrow,\n          base.type === \"Import\",\n          base.type !== \"Super\",\n          node,\n        );\n      }\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n\n        node = this.parseAsyncArrowFromCallExpression(\n          this.startNodeAt(startPos, startLoc),\n          node,\n        );\n        this.checkYieldAwaitInDefaultParams();\n        this.state.yieldPos = oldYieldPos;\n        this.state.awaitPos = oldAwaitPos;\n      } else {\n        this.toReferencedListDeep(node.arguments);\n\n        // We keep the old value if it isn't null, for cases like\n        //   (x = async(yield)) => {}\n        //\n        // Hi developer of the future :) If you are implementing generator\n        // arrow functions, please read the note below about \"await\" and\n        // verify if the same logic is needed for yield.\n        if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n\n        // Await is trickier than yield. When parsing a possible arrow function\n        // (e.g. something starting with `async(`) we don't know if its possible\n        // parameters will actually be inside an async arrow function or if it is\n        // a normal call expression.\n        // If it ended up being a call expression, if we are in a context where\n        // await expression are disallowed (and thus \"await\" is an identifier)\n        // we must be careful not to leak this.state.awaitPos to an even outer\n        // context, where \"await\" could not be an identifier.\n        // For example, this code is valid because \"await\" isn't directly inside\n        // an async function:\n        //\n        //     async function a() {\n        //       function b(param = async (await)) {\n        //       }\n        //     }\n        //\n        if (\n          (!this.isAwaitAllowed() && !oldMaybeInArrowParameters) ||\n          oldAwaitPos !== -1\n        ) {\n          this.state.awaitPos = oldAwaitPos;\n        }\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      return node;\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        startPos,\n        startLoc,\n        base,\n        state,\n      );\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseTaggedTemplateExpression(\n    startPos: number,\n    startLoc: Position,\n    base: N.Expression,\n    state: N.ParseSubscriptState,\n    typeArguments?: ?N.TsTypeParameterInstantiation,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (typeArguments) node.typeParameters = typeArguments;\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        this.expectPlugin(\"moduleAttributes\");\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    possibleAsyncArrow: boolean,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let innerParenStart;\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      // we need to make sure that if this is an async arrow functions,\n      // that we don't allow inner parens inside the params\n      if (this.match(tt.parenL) && !innerParenStart) {\n        innerParenStart = this.state.start;\n      }\n\n      elts.push(\n        this.parseExprListItem(\n          false,\n          possibleAsyncArrow ? new ExpressionErrors() : undefined,\n          possibleAsyncArrow ? { start: 0 } : undefined,\n          allowPlaceholder,\n        ),\n      );\n    }\n\n    // we found an async arrow function so let's not allow any inner parens\n    if (possibleAsyncArrow && innerParenStart && this.shouldParseAsyncArrow()) {\n      this.unexpected();\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.state.type === tt.slash) this.readRegexp();\n\n    const canBeArrow = this.state.potentialArrowAt === this.state.start;\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        node = this.startNode();\n        this.next();\n        if (\n          this.match(tt.parenL) &&\n          !this.scope.allowDirectSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.SuperNotAllowed);\n        } else if (\n          !this.scope.allowSuper &&\n          !this.options.allowSuperOutsideMethod\n        ) {\n          this.raise(node.start, Errors.UnexpectedSuper);\n        }\n\n        if (\n          !this.match(tt.parenL) &&\n          !this.match(tt.bracketL) &&\n          !this.match(tt.dot)\n        ) {\n          this.raise(node.start, Errors.UnsupportedSuper);\n        }\n\n        return this.finishNode(node, \"Super\");\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        node = this.startNode();\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt._function) &&\n          !this.canInsertSemicolon()\n        ) {\n          const last = this.state.context.length - 1;\n          if (this.state.context[last] !== ct.functionStatement) {\n            // Since \"async\" is an identifier and normally identifiers\n            // can't be followed by expression, the tokenizer assumes\n            // that \"function\" starts a statement.\n            // Fixing it in the tokenizer would mean tracking not only the\n            // previous token (\"async\"), but also the one before to know\n            // its beforeExpr value.\n            // It's easier and more efficient to adjust the context here.\n            throw new Error(\"Internal error\");\n          }\n          this.state.context[last] = ct.functionExpression;\n\n          this.next();\n          return this.parseFunction(node, undefined, true);\n        } else if (\n          canBeArrow &&\n          !containsEsc &&\n          id.name === \"async\" &&\n          this.match(tt.name) &&\n          !this.canInsertSemicolon()\n        ) {\n          const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n          const oldMaybeInAsyncArrowHead = this.state.maybeInAsyncArrowHead;\n          const oldYieldPos = this.state.yieldPos;\n          const oldAwaitPos = this.state.awaitPos;\n          this.state.maybeInArrowParameters = true;\n          this.state.maybeInAsyncArrowHead = true;\n          this.state.yieldPos = -1;\n          this.state.awaitPos = -1;\n          const params = [this.parseIdentifier()];\n          this.expect(tt.arrow);\n          this.checkYieldAwaitInDefaultParams();\n          this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n          this.state.maybeInAsyncArrowHead = oldMaybeInAsyncArrowHead;\n          this.state.yieldPos = oldYieldPos;\n          this.state.awaitPos = oldAwaitPos;\n          // let foo = async bar => {};\n          this.parseArrowExpression(node, params, true);\n          return node;\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          this.parseArrowExpression(node, [id], false);\n          return node;\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        this.expectPlugin(\"doExpressions\");\n        const node = this.startNode();\n        this.next();\n        const oldLabels = this.state.labels;\n        this.state.labels = [];\n        node.body = this.parseBlock();\n        this.state.labels = oldLabels;\n        return this.finishNode(node, \"DoExpression\");\n      }\n\n      case tt.regexp: {\n        const value = this.state.value;\n        node = this.parseLiteral(value.value, \"RegExpLiteral\");\n        node.pattern = value.pattern;\n        node.flags = value.flags;\n        return node;\n      }\n\n      case tt.num:\n        return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n      case tt.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n      case tt.string:\n        return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n      case tt._null:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"NullLiteral\");\n\n      case tt._true:\n      case tt._false:\n        return this.parseBooleanLiteral();\n\n      case tt.parenL:\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          close,\n          false,\n          refExpressionErrors,\n          node,\n        );\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"TupleExpression\");\n      }\n      case tt.bracketL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        node = this.startNode();\n        this.next();\n        node.elements = this.parseExprList(\n          tt.bracketR,\n          true,\n          refExpressionErrors,\n          node,\n        );\n        if (!this.state.maybeInArrowParameters) {\n          // This could be an array pattern:\n          //   ([a: string, b: string]) => {}\n          // In this case, we don't have to call toReferencedList. We will\n          // call it, if needed, when we are sure that it is a parenthesized\n          // expression by calling toReferencedListDeep.\n          this.toReferencedList(node.elements);\n        }\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return this.finishNode(node, \"ArrayExpression\");\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        this.expectPlugin(\"recordAndTuple\");\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        const close =\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(close, false, true, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt.braceL: {\n        const oldInFSharpPipelineDirectBody = this.state\n          .inFSharpPipelineDirectBody;\n        this.state.inFSharpPipelineDirectBody = false;\n        const ret = this.parseObj(tt.braceR, false, false, refExpressionErrors);\n        this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n        return ret;\n      }\n      case tt._function:\n        return this.parseFunctionExpression();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNew();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n\n        const nextCh = this.input.codePointAt(this.state.end);\n        if (isIdentifierStart(nextCh) || nextCh === charCodes.backslash) {\n          const start = this.state.start;\n          // $FlowIgnore It'll either parse a PrivateName or throw.\n          node = (this.parseMaybePrivateName(true): N.PrivateName);\n          if (this.match(tt._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(node.id.name, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(\n              this.state.start,\n              Errors.PrivateInExpectedIn,\n              node.id.name,\n            );\n          } else {\n            throw this.unexpected(start);\n          }\n          return node;\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          throw this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseBooleanLiteral(): N.BooleanLiteral {\n    const node = this.startNode();\n    node.value = this.match(tt._true);\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.hash);\n\n    if (isPrivate) {\n      this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.pos, Errors.UnexpectedPrivateField);\n      }\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space between # and identifier\");\n      node.id = this.parseIdentifier(true);\n      return this.finishNode(node, \"PrivateName\");\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parseFunctionExpression(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionExpression\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"function\");\n\n    if (this.prodParam.hasYield && this.eat(tt.dot)) {\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.expect(tt.dot);\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raiseWithData(\n          id.start,\n          { code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\" },\n          Errors.ImportMetaOutsideModule,\n        );\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteral<T: N.Literal>(\n    value: any,\n    type: /*T[\"kind\"]*/ string,\n    startPos?: number,\n    startLoc?: Position,\n  ): T {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.expect(tt.parenL);\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    const refNeedsArrowPos = { start: 0 };\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma, refNeedsArrowPos.start || null);\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssign(\n            false,\n            refExpressionErrors,\n            this.parseParenItem,\n            refNeedsArrowPos,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.start;\n    const innerEndLoc = this.state.startLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      if (!this.isAwaitAllowed() && !this.state.maybeInAsyncArrowHead) {\n        this.state.awaitPos = oldAwaitPos;\n      }\n      this.checkYieldAwaitInDefaultParams();\n      this.state.yieldPos = oldYieldPos;\n      this.state.awaitPos = oldAwaitPos;\n      for (const param of exprList) {\n        if (param.extra && param.extra.parenthesized) {\n          this.unexpected(param.extra.parenStart);\n        }\n      }\n\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    // We keep the old value if it isn't null, for cases like\n    //   (x = (yield)) => {}\n    if (oldYieldPos !== -1) this.state.yieldPos = oldYieldPos;\n    if (oldAwaitPos !== -1) this.state.awaitPos = oldAwaitPos;\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  parseNew(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    let meta = this.startNode();\n    this.next();\n    meta = this.createIdentifier(meta, \"new\");\n\n    if (this.eat(tt.dot)) {\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        let error = Errors.UnexpectedNewTarget;\n\n        if (this.hasPlugin(\"classProperties\")) {\n          error += \" or class properties\";\n        }\n\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(metaProp.start, error);\n        /* eslint-enable @babel/development-internal/dry-error-messages */\n      }\n\n      return metaProp;\n    }\n\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (\n      node.callee.type === \"OptionalMemberExpression\" ||\n      node.callee.type === \"OptionalCallExpression\"\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObj<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          this.next();\n          break;\n        }\n      }\n\n      const prop = this.parseObjectMember(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        prop.type !== \"ObjectProperty\" &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  isAsyncProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      prop.key.name === \"async\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star)) &&\n      !this.hasPrecedingLineBreak()\n    );\n  }\n\n  parseObjectMember(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (!isPattern && !containsEsc && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.eat(tt.star);\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n    } else {\n      isAsync = false;\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      refExpressionErrors,\n      containsEsc,\n    );\n\n    return prop;\n  }\n\n  isGetterOrSetterMethod(prop: N.ObjectMethod, isPattern: boolean): boolean {\n    return (\n      !isPattern &&\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n      (this.isLiteralPropertyName() || // get foo() {}\n        this.match(tt.bracketL)) // get [\"string\"]() {}\n    );\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const start = method.start;\n    if (method.params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      method.params[method.params.length - 1].type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    containsEsc: boolean,\n  ): ?N.ObjectMethod {\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n\n    if (!containsEsc && this.isGetterOrSetterMethod(prop, isPattern)) {\n      if (isGenerator || isAsync) this.unexpected();\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      this.parseMethod(\n        prop,\n        /* isGenerator */ false,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n  }\n\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssign(false, refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, true);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    containsEsc: boolean,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        containsEsc,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      (prop: $FlowFixMe).key =\n        this.match(tt.num) || this.match(tt.string) || this.match(tt.bigint)\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (prop.key.type !== \"PrivateName\") {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    this.prodParam.enter(functionFlags(isAsync, false));\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              BIND_OUTSIDE,\n              undefined,\n              \"function name\",\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.state.inParameters = oldInParameters;\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    // $FlowIssue\n    const nameHash: {} = Object.create(null);\n    for (let i = 0; i < node.params.length; i++) {\n      this.checkLVal(\n        node.params[i],\n        BIND_VAR,\n        allowDuplicates ? null : nameHash,\n        \"function parameter list\",\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    refNeedsArrowPos: ?Pos,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors, refNeedsArrowPos),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssign(\n        false,\n        refExpressionErrors,\n        this.parseParenItem,\n        refNeedsArrowPos,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    if (this.match(tt.name)) {\n      name = this.state.value;\n    } else if (this.state.type.keyword) {\n      name = this.state.type.keyword;\n\n      // `class` and `function` keywords push function-type token context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed\n      // as an identifier such as a property name.\n      const context = this.state.context;\n      if (\n        (name === \"class\" || name === \"function\") &&\n        context[context.length - 1].token === \"function\"\n      ) {\n        context.pop();\n      }\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(\n        name,\n        this.state.start,\n        !!this.state.type.keyword,\n        false,\n      );\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    if (this.prodParam.hasYield && word === \"yield\") {\n      this.raise(startLoc, Errors.YieldBindingIdentifier);\n      return;\n    }\n\n    if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      }\n      if (\n        this.state.awaitPos === -1 &&\n        (this.state.maybeInAsyncArrowHead || this.isAwaitAllowed())\n      ) {\n        this.state.awaitPos = this.state.start;\n      }\n    }\n\n    if (\n      this.scope.inClass &&\n      !this.scope.inNonArrowFunction &&\n      word === \"arguments\"\n    ) {\n      this.raise(startLoc, Errors.ArgumentsDisallowedInInitializer);\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      if (!this.prodParam.hasAwait && word === \"await\") {\n        this.raise(startLoc, Errors.AwaitNotInAsyncFunction);\n      } else {\n        this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n      }\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.scope.inFunction) return this.prodParam.hasAwait;\n    if (this.options.allowAwaitOutsideFunction) return true;\n    if (this.hasPlugin(\"topLevelAwait\")) {\n      return this.inModule && this.prodParam.hasAwait;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(): N.AwaitExpression {\n    const node = this.startNode();\n\n    this.next();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.AwaitExpressionFormalParameter);\n    } else if (this.state.awaitPos === -1) {\n      this.state.awaitPos = node.start;\n    }\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (\n        this.hasPrecedingLineBreak() ||\n        // All the following expressions are ambiguous:\n        //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n        this.match(tt.plusMin) ||\n        this.match(tt.parenL) ||\n        this.match(tt.bracketL) ||\n        this.match(tt.backQuote) ||\n        // Sometimes the tokenizer generates tt.slash for regexps, and this is\n        // handler by parseExprAtom\n        this.match(tt.regexp) ||\n        this.match(tt.slash) ||\n        // This code could be parsed both as a modulo operator or as an intrinsic:\n        //   await %x(0)\n        (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n      ) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary();\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(noIn?: ?boolean): N.YieldExpression {\n    const node = this.startNode();\n\n    if (this.state.inParameters) {\n      this.raise(node.start, Errors.YieldInParameter);\n    } else if (this.state.yieldPos === -1) {\n      this.state.yieldPos = node.start;\n    }\n\n    this.next();\n    if (\n      this.match(tt.semi) ||\n      (!this.match(tt.star) && !this.state.type.startsExpr) ||\n      this.hasPrecedingLineBreak()\n    ) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tt.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const pipelineStyle = this.checkSmartPipelineBodyStyle(childExpression);\n\n    this.checkSmartPipelineBodyEarlyErrors(\n      childExpression,\n      pipelineStyle,\n      startPos,\n    );\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      pipelineStyle,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (\n      pipelineStyle === \"PipelineTopicExpression\" &&\n      childExpression.type === \"SequenceExpression\"\n    ) {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    pipelineStyle: N.PipelineStyle,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    switch (pipelineStyle) {\n      case \"PipelineBareFunction\":\n        bodyNode.callee = childExpression;\n        break;\n      case \"PipelineBareConstructor\":\n        bodyNode.callee = childExpression.callee;\n        break;\n      case \"PipelineBareAwaitedFunction\":\n        bodyNode.callee = childExpression.argument;\n        break;\n      case \"PipelineTopicExpression\":\n        if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n          this.raise(startPos, Errors.PipelineTopicUnused);\n        }\n        bodyNode.expression = childExpression;\n        break;\n      default:\n        throw new Error(\n          `Internal @babel/parser error: Unknown pipeline style (${pipelineStyle})`,\n        );\n    }\n    return this.finishNode(bodyNode, pipelineStyle);\n  }\n\n  checkSmartPipelineBodyStyle(expression: N.Expression): N.PipelineStyle {\n    switch (expression.type) {\n      default:\n        return this.isSimpleReference(expression)\n          ? \"PipelineBareFunction\"\n          : \"PipelineTopicExpression\";\n    }\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number, noIn: ?boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n      noIn,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors } from \"./error\";\nimport {\n  isIdentifierChar,\n  isIdentifierStart,\n  keywordRelationalOperator,\n} from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    program.sourceType = this.options.sourceType;\n\n    program.interpreter = this.parseInterpreterDirective();\n\n    this.parseBlockBody(program, true, true, tt.eof);\n\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n\n    file.program = this.finishNode(program, \"Program\");\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = this.tokens;\n\n    return this.finishNode(file, \"File\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === charCodes.leftSquareBracket) return true;\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      let pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos))) {\n        ++pos;\n      }\n      const ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._export:\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis ||\n          nextTokenCharCode === charCodes.dot\n        ) {\n          break;\n        }\n\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next();\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raiseWithData(\n        node.start,\n        {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n        },\n        Errors.ImportOutsideModule,\n      );\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const isLet = this.isLet();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    if (this.match(tt._in) || this.isContextual(\"of\")) {\n      this.toAssignable(init);\n      const description = this.isContextual(\"of\")\n        ? \"for-of statement\"\n        : \"for-in statement\";\n      this.checkLVal(init, undefined, undefined, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (\n      lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start))\n    ) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseBindingAtom();\n        const simple = clause.param.type === \"Identifier\";\n        this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, BIND_LEXICAL, null, \"catch clause\");\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const octalPositions = [];\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      // Track octal literals that occur before a \"use strict\" directive.\n      if (!parsedNonDirective && this.state.octalPositions.length) {\n        octalPositions.push(...this.state.octalPositions);\n      }\n\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n        const directive = this.stmtToDirective(stmt);\n        directives.push(directive);\n\n        if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n          hasStrictModeDirective = true;\n          this.setStrict(true);\n        }\n\n        continue;\n      }\n\n      parsedNonDirective = true;\n      body.push(stmt);\n    }\n\n    // Throw an error for any octal literals found before a\n    // \"use strict\" directive. Strict mode will be set at parse\n    // time for any literals that occur after the directive.\n    if (this.state.strict && octalPositions.length) {\n      for (const pos of octalPositions) {\n        this.raise(pos, Errors.StrictOctalLiteral);\n      }\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.expect(tt.semi);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.expect(tt.semi);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.unexpected();\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      \"variable declaration\",\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldYieldPos = this.state.yieldPos;\n    const oldAwaitPos = this.state.awaitPos;\n    this.state.maybeInArrowParameters = false;\n    this.state.yieldPos = -1;\n    this.state.awaitPos = -1;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.yieldPos = oldYieldPos;\n    this.state.awaitPos = oldAwaitPos;\n\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    const oldInParameters = this.state.inParameters;\n    this.state.inParameters = true;\n\n    this.expect(tt.parenL);\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.state.inParameters = oldInParameters;\n    this.checkYieldAwaitInDefaultParams();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    this.state.strict = oldStrict;\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  parseClassBody(\n    constructorAllowsSuper: boolean,\n    oldStrict?: boolean,\n  ): N.ClassBody {\n    this.classScope.enter();\n\n    const state = { hadConstructor: false };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state, constructorAllowsSuper);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    if (!oldStrict) {\n      this.state.strict = false;\n    }\n\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    } else if (containsEsc) {\n      throw this.unexpected();\n    }\n\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    constructorAllowsSuper: boolean,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic && this.parseClassMemberFromModifier(classBody, member)) {\n      // a class element named 'static'\n      return;\n    }\n\n    this.parseClassMemberWithIsStatic(\n      classBody,\n      member,\n      state,\n      isStatic,\n      constructorAllowsSuper,\n    );\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: { hadConstructor: boolean },\n    isStatic: boolean,\n    constructorAllowsSuper: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      this.parseClassPropertyName(method);\n\n      if (method.key.type === \"PrivateName\") {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parseClassPropertyName(member);\n    const isPrivate = key.type === \"PrivateName\";\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = constructorAllowsSuper;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      this.parseClassPropertyName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (method.key.type === \"PrivateName\") {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      this.parseClassPropertyName(publicMethod);\n\n      if (method.key.type === \"PrivateName\") {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassPropertyName(member: N.ClassMember): N.Expression | N.Identifier {\n    const key = this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n\n    if (\n      !member.computed &&\n      member.static &&\n      ((key: $FlowSubtype<N.Identifier>).name === \"prototype\" ||\n        (key: $FlowSubtype<N.StringLiteral>).value === \"prototype\")\n    ) {\n      this.raise(key.start, Errors.StaticPrototype);\n    }\n\n    if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n      this.raise(key.start, Errors.ConstructorClassPrivateField);\n    }\n\n    return key;\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      node.key.id.name,\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    this.expectPlugin(\"classPrivateMethods\", method.key.start);\n\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // Overridden in typescript.js\n  parseAccessModifier(): ?N.Accessibility {\n    return undefined;\n  }\n\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssign() : null;\n    this.semicolon();\n    this.prodParam.exit();\n\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    if (!node.typeAnnotation) {\n      this.expectPlugin(\"classProperties\");\n    }\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    // [In] production parameter is tracked in parseMaybeAssign\n    this.prodParam.enter(PARAM);\n\n    if (this.match(tt.eq)) {\n      this.expectPlugin(\"classProperties\");\n      this.next();\n      node.value = this.parseMaybeAssign();\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, bindingType, undefined, \"class name\");\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      if (this.isContextual(\"async\")) {\n        const next = this.nextTokenStart();\n\n        // export async;\n        if (!this.isUnparsedContextual(next, \"function\")) {\n          this.unexpected(next, tt._function);\n        }\n      }\n\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssign();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if (value === \"async\" || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          this.checkDuplicateExports(specifier, specifier.exported.name);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            // check for keywords used as local names\n            this.checkReservedWord(\n              specifier.local.name,\n              specifier.local.start,\n              true,\n              false,\n            );\n            // check if export is defined\n            // $FlowIgnore\n            this.scope.checkLocalExport(specifier.local);\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[\n      this.state.decoratorStack.length - 1\n    ];\n    if (currentContextDecorators.length) {\n      const isClass =\n        node.declaration &&\n        (node.declaration.type === \"ClassDeclaration\" ||\n          node.declaration.type === \"ClassExpression\");\n      if (!node.declaration || !isClass) {\n        throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n      }\n      this.takeDecorators(node.declaration);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n    this.state.exportedIdentifiers.push(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseIdentifier(true);\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseIdentifier(true)\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // Parses import declaration.\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-module-attributes\n    // parse module attributes if the next token is `with` or ignore and finish the ImportDeclaration node.\n    const attributes = this.maybeParseModuleAttributes();\n    if (attributes) {\n      node.attributes = attributes;\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      contextDescription,\n    );\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      // we are trying to parse a node which has the following syntax\n      // with type: \"json\"\n      // [with -> keyword], [type -> Identifier], [\":\" -> token for colon], [\"json\" -> StringLiteral]\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      // for now we are only allowing `type` as the only allowed module attribute\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      // check if the value set to the module attribute is a string as we only allow string literals\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    specifier.imported = this.parseIdentifier(true);\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      this.checkReservedWord(\n        specifier.imported.name,\n        specifier.start,\n        true,\n        true,\n      );\n      specifier.local = specifier.imported.__clone();\n    }\n    this.checkLVal(\n      specifier.local,\n      BIND_LEXICAL,\n      undefined,\n      \"import specifier\",\n    );\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\ntype raiseFunction = (number, string, ...any) => void;\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ScopeHandler from \"../util/scope\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    const ScopeHandler = this.getScopeHandler();\n\n    this.options = options;\n    this.inModule = this.options.sourceType === \"module\";\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    this.prodParam = new ProductionParameterHandler();\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n"],"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","TokenType","constructor","label","conf","keyword","rightAssociative","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_FUNCTION","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_SCOPE_OUTSIDE","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_CLASS","BIND_LEXICAL","BIND_VAR","BIND_FUNCTION","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_NONE","BIND_OUTSIDE","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","getLineInfo","input","offset","lineStart","match","lastIndex","exec","index","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","plugins","has","getPluginOption","plugin","get","last","stack","length","CommentsParser","addComment","comment","filename","loc","state","trailingComments","push","leadingComments","adjustCommentsAfterTrailingComma","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","leadingComment","undefined","processComment","type","body","commentStack","firstChild","lastChild","lastInStack","pop","properties","arguments","slice","innerComments","firstTrailingCommentIndex","findIndex","ErrorMessages","Object","freeze","ArgumentsDisallowedInInitializer","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","getLocationForPosition","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","raise","errorTemplate","params","raiseWithData","data","message","replace","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","superClass","estreeParseRegExpLiteral","pattern","flags","regex","e","estreeParseLiteral","estreeParseBigIntLiteral","value","bigInt","BigInt","String","parseLiteral","directiveToStmt","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","initFunction","isAsync","checkDeclaration","checkGetterSetterParams","prop","paramCount","Errors","checkLVal","expr","bindingType","checkClashes","contextDescription","disallowLetBinding","forEach","checkProto","isRecord","protoRef","refExpressionErrors","isValidDirective","parenthesized","stmtToDirective","parseBlockBody","allowDirectives","topLevel","directiveStatements","directives","map","d","concat","pushClassMethod","classBody","isGenerator","isConstructor","allowsDirectSuper","parseMethod","typeParameters","parseExprAtom","tt","startPos","parseFunctionBody","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","parseObjectMethod","isPattern","containsEsc","shorthand","parseObjectProperty","toAssignable","toAssignableObjectExpressionProp","isLast","key","finishCallExpression","optional","callee","toReferencedListDeep","exprList","isParenthesizedExpr","parseExport","exported","specifiers","parseSubscript","args","TokContext","isExpr","preserveSpace","override","braceStatement","braceExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","exprAllowed","out","curContext","prevType","allowed","prodParam","hasYield","isIterator","braceIsBlock","statementParens","test","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","fromCharCode","isIdentifierChar","reservedWords","strict","strictBind","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","isIteratorStart","current","next","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","declaration","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","shouldParseTypes","shouldParseEnums","finishToken","val","matches","Error","flowParseTypeInitialiser","tok","oldInType","inType","expect","flowParseType","flowParsePredicate","moduloLoc","moduloPos","checksLoc","expectContextual","eat","parseExpression","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","id","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","returnType","typeAnnotation","resetEndLocation","semicolon","flowParseDeclare","insideModule","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","unexpected","flowParseTypeAnnotatableIdentifier","scope","declareName","enter","bodyNode","parseImport","exit","hasModuleExport","default","isLet","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","right","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","argument","proto","flowCheckGetterSetterParams","property","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","createIdentifier","flowParsePostfixType","canInsertSemicolon","elementType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","param","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatement","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","noIn","refNeedsArrowPos","result","tryParse","error","failState","clone","originalNoArrowAt","noArrowAt","consequent","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","toAssignableList","trailingComma","checkParams","parse","indexOf","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","constructorAllowsSuper","parseClassMemberFromModifier","getTokenFromCode","charCodeAt","finishOp","readWord","isBinding","element","operator","trailingCommaPos","toReferencedList","parseClassProperty","parseClassPrivateProperty","isClassMethod","isClassProperty","isNonstaticConstructor","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","parsePropertyName","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","parseMaybeDefault","left","shouldParseDefaultImport","parseImportSpecifierLocal","specifier","local","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentLoc","firstIdent","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","parseFunctionParams","allowModifiers","parseVarId","parseAsyncArrowFromCallExpression","call","shouldParseAsyncArrow","afterLeftParse","jsx","tc","j_oTag","j_expr","arrowExpression","resetStartLocationFromNode","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","base","noCalls","parseCallExpressionArguments","abort","parseAsyncArrowWithTypeParameters","aborted","subscriptState","isLookaheadRelational","optionalChainMember","stop","typeArguments","parseNewArguments","targs","parseArrowExpression","readToken_mult_modulo","hasFlowComment","nextToken","readToken_pipe_amp","parseTopLevel","file","program","fileNode","skipBlockComment","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","toUpperCase","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","parseBooleanLiteral","flowEnumMemberRaw","init","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","add","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","empty","boolsLen","numsLen","strsLen","defaultedLen","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","object","getQualifiedJSXName","namespace","jsxReadToken","chunkStart","ch","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","jsxReadString","quote","str","count","entity","substr","fromCodePoint","parseInt","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","attributes","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","inPropertyName","Scope","var","lexical","functions","ScopeHandler","scopeStack","undefinedExports","undefinedPrivateNames","inFunction","currentVarScope","allowSuper","currentThisScope","inClass","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","currentScope","createScope","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","checkLocalExport","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasReturn","functionFlags","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","DeclareClassFieldHasInitializer","DuplicateModifier","EmptyHeritageClauseType","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TemplateTypeHasSubstitution","TypeAnnotationAfterAssign","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","getScopeHandler","tsIsIdentifier","tsNextTokenCanFollowModifier","hasPrecedingLineBreak","tsParseModifier","allowedModifiers","modifier","tsTryParse","bind","tsParseModifiers","modified","hasOwnProperty","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","startNodeAtNode","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","elementNode","restNode","tsParseType","lookaheadCharCode","raiseRestNotLast","optionalTypeNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","tsParseLiteralTypeNode","tsParseTemplateLiteralType","templateNode","parseTemplate","expressions","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","tsParseArrayTypeOrHigher","objectType","indexType","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","kw","tsParseUnionOrIntersectionType","parseConstituentType","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","asserts","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","tsTryParseAndCatch","tsTryParseDeclare","nany","isLineTerminator","starttype","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tokenType","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","maybeInArrowParameters","oldYieldPos","yieldPos","oldAwaitPos","awaitPos","tsIsDeclarationStart","parseAssignableListItem","decorators","accessibility","parseAccessModifier","elt","pp","parameter","bodilessType","registerFunctionStatementId","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","parseExprOp","leftStartPos","leftStartLoc","minPrec","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","parseClassMemberWithIsStatic","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","equal","typeCast","ct","parseBindingAtom","parseMaybeDecoratorArguments","isInParens","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","placeholder","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseBlock","parseFunctionId","takeDecorators","parseClassBody","expectPlugin","nextTokenStart","isUnparsedContextual","startsWith","nextTokenStartSince","maybeParseExportDefaultSpecifier","checkExport","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","some","Array","isArray","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","join","moduleAttributesVerionPluginOption","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","getOptions","opts","State","potentialArrowAt","inParameters","maybeInAsyncArrowHead","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Token","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","skip","setStrict","lastIndexOf","skipSpace","codePointAt","pushComment","block","text","skipLineComment","startSkip","loop","readToken_numberSign","readToken_interpreter","nextPos","readToken_dot","readNumber","readToken_slash","readRegexp","width","readToken_caret","readToken_plus_min","readToken_lt_gt","size","readToken_eq_excl","readToken_question","next2","readRadixNumber","readString","escaped","charAt","content","mods","char","charCode","readInt","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","startsWithDot","isFloat","isNonOctalDecimalInt","octal","underscorePos","parseFloat","readCodePoint","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","octalStr","n","readWord1","escStart","identifierCheck","esc","keywordTypes","parent","update","UtilParser","addExtra","op","afterNext","nameStart","nameEnd","messageOrType","missingPlugin","expectOnePlugin","names","checkYieldAwaitInDefaultParams","fn","oldState","abortSignal","checkExpressionErrors","andThrow","shorthandAssign","doubleProto","isLiteralPropertyName","ExpressionErrors","Node","parser","range","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","checkToRestConversion","arg","raiseTrailingCommaAfterRest","parseSpread","parseRestBinding","parseObj","close","closeCharCode","allowEmpty","elts","first","checkCommaAfterRest","parseDecorator","strictModeChanged","elem","ExpressionParser","computed","used","getExpression","paramFlags","parseYield","ownExpressionErrors","parseMaybeConditional","parseExprOps","prec","logical","coalesce","checkPipelineAtInfixOperator","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","isAwaitAllowed","parseAwait","parseExprSubscripts","maybeAsyncArrow","oldMaybeInAsyncArrowHead","parseNoCallExpr","parseMaybePrivateName","classScope","usePrivateName","tag","quasi","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","innerParenStart","oldInFSharpPipelineDirectBody","parseExprListItem","parseImportMetaProperty","parseFunction","oldLabels","parseExprList","ret","parseFunctionExpression","parseDecorators","parseNew","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","nextCh","isPrivate","meta","parseMetaProperty","propertyName","innerStartPos","innerStartLoc","spreadStart","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","innerEndPos","innerEndLoc","arrowNode","parenStart","metaProp","parseTemplateElement","isTagged","cooked","tail","curElt","quasis","propHash","create","parseObjectMember","isAsyncProp","isGetterOrSetterMethod","oldInPropertyName","generator","async","isExpression","oldInParameters","oldStrict","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","nameHash","identifierName","reservedTest","delegate","childExpression","pipelineStyle","checkSmartPipelineBodyStyle","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","topicReferenceWasUsedInCurrentTopicContext","isSimpleReference","callback","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","loopLabel","switchLabel","FUNC_NO_FLAGS","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","FUNC_NULLABLE_ID","StatementParser","interpreter","parseInterpreterDirective","from","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","allowExport","currentContextDecorators","decorator","isBreak","lab","parseHeaderExpression","awaitAt","parseFor","parseVar","declarations","parseForIn","description","declarationPosition","discriminant","cases","cur","sawDefault","isCase","handler","clause","simple","finalizer","statementStart","createNewLexicalScope","afterBlockParse","parsedNonDirective","isForIn","await","isFor","isTypescript","statement","isHangingStatement","requireId","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassPropertyName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","declarePrivateName","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","l","hasFrom","nextAfterFrom","checkNames","isDefault","isFrom","nodes","parseNext","maybeParseModuleAttributes","attrs","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","Parser","pluginsMap","pluginMap","getParser","ast","moduleError","getParserClass","parserClassCache","pluginsFromOptions","pluginList"],"mappings":"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","sourceRoot":""},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/JSPackager.js":{"lineLengths":[29,39,52,44,52,50,0,28,53,48,2,0,35,17,22,28,35,37,0,78,45,19,32,30,52,34,27,5,41,47,3,0,25,92,115,64,63,72,7,0,21,38,33,15,7,0,78,30,39,7,5,0,18,45,90,24,66,60,31,57,47,11,9,0,29,33,41,14,72,0,94,92,75,43,40,14,40,35,50,13,45,11,9,7,5,0,50,27,15,25,11,25,6,3,0,30,74,28,42,5,0,16,3,0,20,78,78,47,76,50,3,0,47,40,14,26,48,20,13,36,19,0,23,30,0,70,77,37,3,0,33,40,13,5,32,30,39,5,0,35,49,41,5,0,31,3,0,30,40,19,5,0,53,50,6,57,67,5,0,23,48,12,13,5,0,71,74,48,58,19,73,64,43,16,25,38,23,36,16,7,5,0,68,40,23,45,65,77,21,61,9,7,0,57,35,60,35,16,7,0,19,5,0,61,41,16,3,0,15,19,0,37,27,46,50,8,41,27,5,0,42,20,5,0,68,44,5,0,21,15,31,14,53,11,6,34,50,63,22,29,33,60,10,61,7,5,22,3,1,0,28,0],"data":null,"url":"${mapUrl}`);"},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/parcel-bundler/src/packagers/CSSPackager.js":{"lineLengths":[29,39,52,44,0,36,17,24,26,3,0,25,40,0,65,73,19,39,23,73,25,14,14,30,7,5,0,38,23,63,5,0,35,39,0,27,73,30,40,14,38,37,59,39,16,32,63,61,39,9,37,7,12,28,5,3,0,15,34,50,63,22,29,33,39,10,64,7,5,22,3,1,0,29,0],"data":null,"url":"${mapUrl}"},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/lib/index.js":{"lineLengths":[13,97,33,89,29,33,17,4,96,72,21,21,3,66,42,20,112,36,18,2,72,62,2,62,42,43,48,56,22,37,38,2,3,54,2,50,45,64,3,42,58,19,58,19,12,9,48,5,15,85,29,28,11,5,15,9,51,5,15,92,29,28,11,5,32,20,15,19,56,7,47,37,44,24,19,26,34,34,35,20,5,10,58,25,9,50,5,56,22,5,18,15,74,23,57,6,54,13,19,23,48,23,32,25,1,26,54,33,56,6,34,31,23,28,62,9,50,6,3,3,83,41,2,74,60,3,42,36,19,25,22,51,10,28,53,40,10,6,38,12,58,33,79,6,1,25,33,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/src/index.ts"],"names":[],"mappings":"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"},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/babel-walk/lib/index.js":{"lineLengths":[13,97,33,89,29,33,17,4,96,72,21,21,3,66,42,20,112,36,18,2,72,62,2,62,63,48,56,36,21,55,39,80,59,66,83,1,27,44,29,33,22,23,43,82,48,35,17,13,62,42,45,55,44,21,17,22,37,17,13,81,47,35,17,13,17,6,1,24,29,44,29,29,33,22,23,43,67,22,37,82,48,46,17,13,62,42,45,55,44,21,17,22,37,17,13,81,47,46,17,13,22,32,17,6,1,28,30,44,29,33,22,23,43,82,48,44,17,13,18,66,46,49,59,48,25,21,26,41,21,17,13,17,6,1,30,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/babel-walk/src/index.ts"],"names":[],"mappings":"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"},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/babel-walk/lib/explode.js":{"lineLengths":[13,97,33,89,29,33,17,4,96,72,21,21,3,66,42,20,112,36,18,2,62,48,31,51,76,1,28,24,31,27,55,45,92,59,72,89,1,3,30,2,73,87,86,3,25,23,30,48,22,48,45,59,68,21,26,45,78,44,76,21,17,22,59,48,48,37,26,21,26,48,78,75,26,21,17,13,9,34,33,55,56,17,22,41,66,40,64,17,13,18,55,36,44,33,22,17,22,36,74,71,22,17,13,9,5,19,1,26,35],"data":{"version":3,"file":"explode.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/babel-walk/src/explode.ts"],"names":[],"mappings":"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"},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/lib/globals.js":{"lineLengths":[13,97,33,89,29,33,17,4,96,72,21,21,3,66,42,20,112,36,18,2,72,62,2,62,64,43,48,60,72,73,93,39,39,48,89,63,13,32,38,36,5,23,13,32,5,1,39,24,26,40,18,29,49,36,39,62,30,42,59,30,28,53,30,17,13,18,28,50,28,52,13,18,27,50,18,33,46,18,31,16,71,5,1,56,51,34,50,19,9,5,1,41,48,55,35,48,45,62,63,17,23,13,9,6,48,22,59,42,55,27,17,13,9,6,30,45,55,38,51,23,13,9,6,24,34,19,40,19,57,6,51,44,53,3,14,42,38,15,31,33,19,55,25,55,23,43,72,27,17,97,27,17,13,9,33,6,42,39,39,23,13,9,33,6,3,27,23,25,25,60,5,30,33,37,33,73,50,23,32,9,14,45,9,5,30,50,52,1,30,35],"data":{"version":3,"file":"globals.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/src/globals.ts"],"names":[],"mappings":"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"},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/lib/reference.js":{"lineLengths":[13,97,33,89,29,33,17,4,96,72,21,21,3,66,42,20,112,36,18,2,62,48,37,26,30,24,27,30,60,26,29,30,33,25,28,29,36,24,5,40,1,31,37],"data":{"version":3,"file":"reference.js","sourceRoot":"","sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/node_modules/with/src/reference.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,gDAAkC;AAElC,SAAwB,YAAY,CAAC,IAAY,EAAE,MAAc;IAC/D,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,sBAAsB;QACtB,gBAAgB;QAChB,mBAAmB;QACnB,KAAK,gBAAgB;YACnB,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC;QAElD,kBAAkB;QAClB,qBAAqB;QACrB,KAAK,gBAAgB,CAAC;QACtB,KAAK,mBAAmB;YACtB,OAAO,KAAK,CAAC;QAEf,oBAAoB;QACpB,qBAAqB;QACrB,KAAK,sBAAsB;YACzB,OAAO,IAAI,CAAC;KACf;IAED,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AArBD,+BAqBC"},"url":null},"file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/distributable/index.js":{"lineLengths":[13,0,37,69,2,33],"data":{"version":3,"sources":["file:///Volumes/DUMBLEDORE1/Users/fficnar/Projects/Shared Projects/parcel-plugin-pug/source/index.js"],"names":["module","exports","bundler","addAssetType","require","resolve"],"mappings":";;AACAA,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AACjCA,EAAAA,OAAO,CAACC,YAAR,CAAqB,KAArB,EAA4BC,OAAO,CAACC,OAAR,CAAgB,oBAAhB,CAA5B;AACD,CAFD","sourcesContent":["\nmodule.exports = function(bundler) {\n  bundler.addAssetType('pug', require.resolve('./library/asset.js'))\n}\n"],"file":"index.js","sourceRoot":""},"url":null}}}