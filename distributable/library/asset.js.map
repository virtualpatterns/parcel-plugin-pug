{"version":3,"sources":["../../source/library/asset.js"],"names":["Asset","BaseAsset","constructor","parameter","type","generate","compiledFnSource","Pug","compileFileClient","name","value","module","exports"],"mappings":";;AAAA;;AACA;;;;AAEA,MAAMA,KAAN,SAAoBC,oBAApB,CAA8B;AAE5BC,EAAAA,WAAW,CAAC,GAAGC,SAAJ,EAAe;AACxB,UAAM,GAAGA,SAAT;AACA,SAAKC,IAAL,GAAY,IAAZ;AACD;;AAED,QAAMC,QAAN,GAAiB;AAEf;AAEA,QAAIC,gBAAgB,GAAGC,aAAIC,iBAAJ,CAAsB,KAAKC,IAA3B,EAAiC;AAAE,cAAQ;AAAV,KAAjC,CAAvB;;AAEA,WAAO,CAAC;AACNL,MAAAA,IAAI,EAAE,IADA;AAENM,MAAAA,KAAK,EAAG,qCAAoCJ,gBAAiB;AAFvD,KAAD,CAAP;AAKD;;AAlB2B;;AAsB9BK,MAAM,CAACC,OAAP,GAAiBZ,KAAjB","sourcesContent":["import { Asset as BaseAsset } from 'parcel-bundler'\nimport Pug from 'pug'\n\nclass Asset extends BaseAsset {\n\n  constructor(...parameter) {\n    super(...parameter)\n    this.type = 'js'\n  }\n\n  async generate() {\n\n    // let configuration = await this.getConfig()\n\n    let compiledFnSource = Pug.compileFileClient(this.name, { 'name': 'templateFn' })\n\n    return [{\n      type: 'js',\n      value: `export default function(locals) { ${compiledFnSource} return templateFn(locals) }`\n    }] \n  \n  }\n\n}\n\nmodule.exports = Asset"],"file":"asset.js"}